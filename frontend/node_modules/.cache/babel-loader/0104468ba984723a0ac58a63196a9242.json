{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acit\\\\Desktop\\\\FYP Code\\\\FYP Code\\\\frontend\\\\src\\\\App.js\";\nimport React, { useState, useCallback } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport WelcomePage from './components/WelcomePage/WelcomePage';\nimport GenerateSch from './components/GenerateSchedulePage/GenerateSchedulePage';\nimport UploadPage from './components/UploadPage/UploadPage';\nimport ArraySchedule from './components/RandomSchedule/arraySchedule';\nimport Dataset from './components/GetDataset/getDataset';\nimport HeuristicApproach from './components/RandomSchedule/heuristicalgo';\nimport { AuthContext } from './components/contexts/auth-context';\nimport ArrayScheduleElective from './components/GenerateSchedulePage/GenerateScheduleElective';\nimport Combine from './components/GenerateSchedulePage/combine';\nimport ElectiveFullCode from './components/GenerateSchedulePage/electivefullcode';\nimport './App.css';\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userId, setUserId] = useState(false);\n  const login = useCallback(uid => {\n    setIsLoggedIn(true);\n    setUserId(uid);\n  }, []);\n  const logout = useCallback(() => {\n    setIsLoggedIn(false);\n    setUserId(null);\n  }, []);\n  let routes;\n\n  if (isLoggedIn) {\n    routes = /*#__PURE__*/React.createElement(Routes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/UploadPage\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(UploadPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/GenerateSchedule/:userId\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(GenerateSch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/Dataset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Dataset, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/ArraySchedule\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ArraySchedule, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      userId: userId,\n      login: login,\n      logout: logout\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(WelcomePage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, routes)), \"// \");\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/acit/Desktop/FYP Code/FYP Code/frontend/src/App.js"],"names":["React","useState","useCallback","BrowserRouter","Router","Route","Routes","WelcomePage","GenerateSch","UploadPage","ArraySchedule","Dataset","HeuristicApproach","AuthContext","ArrayScheduleElective","Combine","ElectiveFullCode","App","isLoggedIn","setIsLoggedIn","userId","setUserId","login","uid","logout","routes"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,QAA4C,OAA5C;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,KAFF,EAGEC,MAHF,QAIO,kBAJP;AAMA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,WAAP,MAAwB,wDAAxB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,aAAP,MAA0B,2CAA1B;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,iBAAP,MAA8B,2CAA9B;AACA,SAASC,WAAT,QAA4B,oCAA5B;AACA,OAAOC,qBAAP,MAAkC,4DAAlC;AACA,OAAOC,OAAP,MAAoB,2CAApB;AACA,OAAOC,gBAAP,MAA6B,oDAA7B;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,MAAK;AAEf,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAMqB,KAAK,GAAGpB,WAAW,CAACqB,GAAG,IAAI;AAC/BJ,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,IAAAA,SAAS,CAACE,GAAD,CAAT;AACD,GAHwB,EAGtB,EAHsB,CAAzB;AAKA,QAAMC,MAAM,GAAGtB,WAAW,CAAC,MAAM;AAC/BiB,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAHyB,EAGvB,EAHuB,CAA1B;AAKA,MAAII,MAAJ;;AAEA,MAAIP,UAAJ,EAAgB;AACdO,IAAAA,MAAM,gBACJ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,KAAK,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,eAOE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,2BAAZ;AAAwC,MAAA,KAAK,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,eAUE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAVF,eAaE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,gBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAbF,CADF;AAuBD;;AACD,sBACE,oBAAC,WAAD,CAAa,QAAb;AACA,IAAA,KAAK,EAAE;AACLP,MAAAA,UAAU,EAAEA,UADP;AAELE,MAAAA,MAAM,EAAEA,MAFH;AAGLE,MAAAA,KAAK,EAAEA,KAHF;AAILE,MAAAA,MAAM,EAAEA;AAJH,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,MAAP,CAFJ,CARA,QADF;AA4BD,CAtED;;AAwEA,eAAeR,GAAf","sourcesContent":["import React,{ useState, useCallback } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes\n} from 'react-router-dom';\n\nimport WelcomePage from './components/WelcomePage/WelcomePage'\nimport GenerateSch from './components/GenerateSchedulePage/GenerateSchedulePage';\nimport UploadPage from './components/UploadPage/UploadPage';\nimport ArraySchedule from './components/RandomSchedule/arraySchedule';\nimport Dataset from './components/GetDataset/getDataset';\nimport HeuristicApproach from './components/RandomSchedule/heuristicalgo';\nimport { AuthContext } from './components/contexts/auth-context';\nimport ArrayScheduleElective from './components/GenerateSchedulePage/GenerateScheduleElective';\nimport Combine from './components/GenerateSchedulePage/combine';\nimport ElectiveFullCode from './components/GenerateSchedulePage/electivefullcode'\n\nimport './App.css';\n\nconst App = () =>{\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback(uid => {\n    setIsLoggedIn(true);\n    setUserId(uid);\n  }, []);\n\n  const logout = useCallback(() => {\n    setIsLoggedIn(false);\n    setUserId(null);\n  }, []);\n\n  let routes;\n\n  if (isLoggedIn) {\n    routes = (\n      <Routes>\n        {/* <Route path=\"/\" exact>\n          <WelcomePage />\n        </Route> */}\n        <Route path=\"/UploadPage\" exact>\n          <UploadPage />\n        </Route>\n        <Route path=\"/GenerateSchedule/:userId\" exact>\n          <GenerateSch />\n        </Route>\n        <Route path=\"/Dataset\">\n          <Dataset />\n        </Route>\n        <Route path=\"/ArraySchedule\">\n          <ArraySchedule />\n        </Route>\n        {/* <Route path=\"/UploadPage\" exact element ={<UploadPage />} />\n        <Route path=\"/GenerateSchedule\" exact element={<GenerateSch />} />\n        <Route path=\"/Dataset\" exact element={<Dataset />} />\n        <Route path=\"/ArraySchedule\" exact element={<ArraySchedule />} />     */}\n      </Routes>\n    );\n  }\n  return (\n    <AuthContext.Provider\n    value={{\n      isLoggedIn: isLoggedIn,\n      userId: userId,\n      login: login,\n      logout: logout\n    }}\n  >\n    <Router>\n      <WelcomePage />\n        <main>{routes}</main>\n    </Router>\n      {/* <Router>\n        <Routes>\n          <Route path=\"/\" exact element ={<WelcomePage />} />\n         <Route path=\"/UploadPage\" exact element ={<UploadPage />} />\n         <Route path=\"/GenerateSchedule/:userId\" exact element={<GenerateSch />} />\n         <Route path=\"/Dataset\" exact element={<Dataset />} />\n         <Route path=\"/ArraySchedule\" exact element={<ArraySchedule />} />    \n         <Route path=\"/ArrayScheduleElective\" exact element={<ArrayScheduleElective />} />    \n         <Route path=\"/Heuristic\" exact element={<HeuristicApproach />} />    \n         <Route path=\"/Combine\" exact element={<Combine />} />\n         <Route path=\"/Elective\" exact element={<ElectiveFullCode />} />\n         </Routes>\n      </Router> */}\n      // </AuthContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}