{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acit\\\\Desktop\\\\FYP Code\\\\FYP Code\\\\frontend\\\\src\\\\components\\\\RandomSchedule\\\\arraySchedule.js\";\nimport { find, forEach, indexOf } from \"lodash\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport _ from 'lodash';\nimport { CSVLink } from \"react-csv\";\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\nlet finalData = [];\n\nconst ArraySchedule = props => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedFile, setLoaadedFile] = useState(false);\n  const [roomData, setroomData] = useState();\n  const [courseData, setcourseData] = useState();\n  const [CsvData, setCsvData] = useState(); // const [Keys, setKeys] = useState();\n  //const [uploadedData, setUploadedData] = useState([]);\n  //console.log(\"props dataset:\"+ props.test)\n\n  const userId = useParams().userId;\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        // const response = await fetch('http://localhost:5000/api/user/');\n        //const response = await fetch('http://localhost:5000/api/files/users/624278b29a90a9077e2f65e4');\n        const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875'); //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\n        //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\n\n        const responsedata = await response.json();\n        let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset); // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\n\n        const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Room'], Dataset['Size']]); //Extract Room\n\n        setroomData([ertRoom]);\n        const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'], Dataset['Course Code'], Dataset['Course Name'], Dataset['Year'], Dataset['Semester'], Dataset['Lecturer'], Dataset['Group'], Dataset['HMS'], Dataset['Programme Code'], Dataset['Slot1'], Dataset['Slot2']]); //Extract Enrollment Quota\n\n        setcourseData([ertCourse]);\n\n        if (!response.ok) {\n          throw new Error(responsedata.message);\n        }\n\n        setLoaadedFile(stringifyData);\n        setIsLoading(true);\n      } catch (err) {\n        console.log(err.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, [userId]);\n\n  if (!isLoading && loadedFile) {\n    const testData = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const EnrollmentQuota = [];\n    const CourseCode = [];\n    const HMS = [];\n    const roomName = [];\n    const roomSize = [];\n    const filterData50 = [];\n    const filterData100 = [];\n    const filterData200 = [];\n    const filterData500 = [];\n    const dupeData = [];\n    const room = [];\n    room.push(roomData[0]);\n    let hardConstraintViolated = 0;\n    let softConstraintViolated = 0; //console.log(courseData[0][0][1]);\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      let enrollment = [courseData[0][i][0]];\n      let code = [courseData[0][i][1]];\n      let hms = [courseData[0][i][7]];\n      enrollment.reduce(function (results, item, index, array) {\n        results[index] = item;\n        EnrollmentQuota.push(item); //console.log(results)\n      }, {});\n      code.reduce(function (results, item, index, array) {\n        results[index] = item;\n        CourseCode.push(item); //console.log(results)\n      }, {});\n      hms.reduce(function (results, item, index, array) {\n        results[index] = item;\n        HMS.push(item); //console.log(results)\n      }, {});\n    }\n\n    for (let i = 0; i < roomData[0].length; i++) {\n      let name = [roomData[0][i][0]];\n      let size = [roomData[0][i][1]];\n      name.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomName.push(item); //console.log(results)\n      }, {});\n      size.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomSize.push(item); //console.log(results)\n      }, {});\n    }\n\n    const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      if (courseData[0][i][0] < 50) {\n        //for(let j = 0; j <courseData[0][i][7]; j++){\n        filterData50.push(courseData[0][i]); //}\n      }\n\n      if (courseData[0][i][0] >= 50 && courseData[0][i][0] < 100) {\n        //for(let j = 0; j <courseData[0][i][7]; j++){\n        filterData100.push(courseData[0][i]); //}\n      }\n\n      if (courseData[0][i][0] >= 100 && courseData[0][i][0] < 200) {\n        //for(let j = 0; j <courseData[0][i][7]; j++){\n        filterData200.push(courseData[0][i]); //}\n      }\n\n      if (courseData[0][i][0] >= 200 && courseData[0][i][0] < 500) {\n        //for(let j = 0; j <courseData[0][i][7]; j++){\n        filterData500.push(courseData[0][i]); //}\n      } //filterData.push(courseData[0][i]);\n\n    }\n\n    let roomUnder50 = [];\n    let roomUnder100 = [];\n    let roomUnder200 = [];\n    let roomUnder500 = [];\n\n    const checkNumberofRoom = () => {\n      for (let i = 0; i < roomData[0].length; i++) {\n        let room = roomData[0][i][1]; //console.log(roomData[0][i][1]);\n\n        if (room < 50) {\n          roomUnder50.push(room);\n        } else if (room > 50 && room < 100) {\n          roomUnder100.push(room);\n        } else if (room > 100 && room < 200) {\n          roomUnder200.push(room);\n        } else if (room > 200) {\n          roomUnder500.push(room);\n        }\n      }\n    };\n\n    checkNumberofRoom();\n\n    const createArray = data => {\n      var result = [];\n\n      for (let i = 0; i < data; i++) {\n        result[i] = [];\n      }\n\n      return result;\n    };\n\n    let DataArray50 = roomUnder50.length * 38;\n    let DataArray100 = roomUnder100.length * 38;\n    let DataArray200 = roomUnder200.length * 38;\n    let DataArray500 = roomUnder500.length * 38;\n    var ground50Array = createArray(DataArray50);\n    var ground100Array = createArray(DataArray100);\n    var ground200Array = createArray(DataArray200);\n    var ground500Array = createArray(DataArray500);\n    let Column50 = roomUnder50.length;\n    let Column100 = roomUnder100.length;\n    let Column200 = roomUnder200.length;\n    let Column500 = roomUnder500.length;\n    let Row = 38; //----------------------------------------------------------------------------------------------------------------------------------------\n\n    const antSystem = () => {\n      //create 1d array for dataset 50\n      const array1D50 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr50 = array1D50(DataArray50);\n      let extraData50_Slot2_2 = [];\n      let extraData50_Slot2_1 = [];\n      let insertedData50_Slot2_2 = [];\n      let insertedData50_Slot2_1 = [];\n\n      const AntAlgoInsert50 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterData50.length; x++) {\n          test.push(filterData50[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let slot1 = test[k][9];\n            let slot2 = test[k][10];\n\n            if (hourMS == 4) {\n              let b = 1;\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                //slot in slot1 = 2\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const z = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[z];\n                      array[i - 1] = array[z - 1];\n                      array[i] = test[k];\n                      array[i - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[z];\n                      array[i + 1] = array[z + 1];\n                      array[z] = test[k];\n                      array[z + 1] = test[k];\n                    } else {\n                      remainderArray.push(test[k]);\n                    }\n                  } else {\n                    remainderArray.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } //slot in slot1 = 2\n                else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const v = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[v];\n                      array[i - 1] = array[v - 1];\n                      array[v] = test[k];\n                      array[v - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[v];\n                      array[i + 1] = array[v + 1];\n                      array[v] = test[k];\n                      array[v + 1] = test[k];\n                    } else {\n                      remainderArray.push(test[k]);\n                    }\n                  } else {\n                    remainderArray.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  array[j + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  insertedData50_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  insertedData50_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = array[j];\n                  array[j] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x - 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x - 1] = array[q - 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q - 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData50_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData50_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x - 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const z = Math.floor(Math.random() * (x + 1));\n              array[x] = array[z];\n              array[x - 1] = array[z - 1];\n              array[z] = remainderArray[k2];\n              array[z - 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData50_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData50_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const z = Math.floor(Math.random() * (x + 1));\n              array[x] = array[z];\n              array[x + 1] = array[z + 1];\n              array[z] = remainderArray[k2];\n              array[z + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData50_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData50_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        }\n\n        return array;\n      };\n\n      var AntArrIns50 = AntAlgoInsert50(AntArr50);\n\n      const checkAmountData50B = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmountB = checkAmountData50B(AntArrIns50); //    console.log(AntArrIns50);\n      //    console.log(checkAmountB)\n\n      const slot2Equal1for50 = array => {\n        let k = 0;\n        let test2 = []; //console.log(insertedData50_Slot2_1)\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedData50_Slot2_1.length) {\n              array[x] = insertedData50_Slot2_1[k];\n            }\n\n            k++;\n          }\n        } //console.log(test2)\n\n\n        return array;\n      };\n\n      slot2Equal1for50(AntArr50);\n\n      const slot2Equal2for50 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x - 1] == 100) {\n            if (k < insertedData50_Slot2_2.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x - 1] = array[q - 1];\n              array[q] = insertedData50_Slot2_2[k];\n              array[q - 1] = insertedData50_Slot2_2[k];\n            } else {\n              if (insertedData50_Slot2_2[k] != undefined) {\n                extraData50_Slot2_2.push(insertedData50_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = array.length; x > 0; x--) {\n          if (array[x] == 100 && array[x - 1] == 100) {\n            if (k < extraData50_Slot2_2.length) {\n              array[x] = extraData50_Slot2_2[k];\n              array[x - 1] = extraData50_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2for50(AntArr50);\n\n      const checkAmountData50 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount = checkAmountData50(AntArrIns50);\n      console.log(AntArrIns50);\n      console.log(checkAmount); // console.log(extraData50_Slot2_2)\n      // console.log(extraData50_Slot2_1)\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Data is more than or equal to 50 but less than 100\n      //create 1d array for dataset 100\n\n      const array1D100 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr100 = array1D100(DataArray100); //console.log(AntArr200);\n\n      let extraData100_Slot2_2 = [];\n      let extraData100_Slot2_1 = [];\n      let insertedData100_Slot2_2 = [];\n      let insertedData100_Slot2_1 = [];\n\n      const AntAlgoInsert100 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterData100.length; x++) {\n          test.push(filterData100[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n\n            if (hourMS == 4) {\n              let indexLoop = 1;\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n\n                  if (indexLoop < totalRoom) {\n                    let loop38 = indexLoop * 38;\n\n                    if (array[i + loop38 - 2] == 100 && array[i + loop38 - 3] == 100) {\n                      array[i + loop38 - 2] = test[k];\n                      array[i + loop38 - 3] = test[k];\n                    } else if (array[i + loop38 + 1] == 100 && array[i + loop38 + 2] == 100) {\n                      array[i + loop38 + 1] = test[k];\n                      array[i + loop38 + 2] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  }\n\n                  indexLoop++;\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n\n                  if (indexLoop < totalRoom) {\n                    let loop38 = indexLoop * 38;\n\n                    if (array[i + loop38 - 2] == 100 && array[i + loop38 - 3] == 100) {\n                      array[i + loop38 - 2] = test[k];\n                      array[i + loop38 - 3] = test[k];\n                    } else if (array[i + loop38 + 1] == 100 && array[i + loop38 + 2] == 100) {\n                      array[i + loop38 + 1] = test[k];\n                      array[i + loop38 + 2] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  }\n\n                  indexLoop++;\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  array[j + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  insertedData100_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  insertedData100_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = array[j];\n                  array[j] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x - 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x - 1] = array[q - 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q - 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData100_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData100_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x - 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const z = Math.floor(Math.random() * (x + 1));\n              array[x] = array[z];\n              array[x - 1] = array[z - 1];\n              array[z] = remainderArray[k2];\n              array[z - 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData100_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData100_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const z = Math.floor(Math.random() * (x + 1));\n              array[x] = array[z];\n              array[x + 1] = array[z + 1];\n              array[z] = remainderArray[k2];\n              array[z + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData100_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData100_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        }\n\n        return array;\n      };\n\n      var AntArrIns100 = AntAlgoInsert100(AntArr100); //console.log(AntArrIns100);\n\n      const slot2Equal1for100 = array => {\n        let k = 0;\n        let test2 = []; //console.log(insertedData50_Slot2_1)\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedData100_Slot2_1.length) {\n              array[x] = insertedData100_Slot2_1[k];\n            }\n\n            k++;\n          }\n        } //console.log(test2)\n\n\n        return array;\n      };\n\n      slot2Equal1for100(AntArr100);\n\n      const slot2Equal2for100 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x - 1] == 100) {\n            if (k < insertedData100_Slot2_2.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x - 1] = array[q - 1];\n              array[q] = insertedData100_Slot2_2[k];\n              array[q - 1] = insertedData100_Slot2_2[k];\n            } else {\n              if (insertedData100_Slot2_2[k] != undefined) {\n                extraData100_Slot2_2.push(insertedData100_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = array.length; x > 0; x--) {\n          if (array[x] == 100 && array[x - 1] == 100) {\n            if (k < extraData100_Slot2_2.length) {\n              array[x] = extraData100_Slot2_2[k];\n              array[x - 1] = extraData100_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2for100(AntArr100);\n\n      const checkAmountData100 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount = checkAmountData100(AntArrIns100);\n      console.log(AntArrIns100);\n      console.log(checkAmount); // console.log(extraData100_Slot2_2)\n      // console.log(extraData100_Slot2_1)\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Data is more than or equal to 100 but less than 200\n      //create 1d array for dataset 200\n\n      const array1D200 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr200 = array1D200(DataArray200); //console.log(AntArr200);\n\n      let extraData200_Slot2_2 = [];\n      let extraData200_Slot2_1 = [];\n      let insertedData200_Slot2_2 = [];\n      let insertedData200_Slot2_1 = [];\n\n      const AntAlgoInsert200 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterData200.length; x++) {\n          test.push(filterData200[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n\n            if (hourMS == 4) {\n              let indexLoop = 1;\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n\n                  if (indexLoop < totalRoom) {\n                    let loop38 = indexLoop * 38;\n\n                    if (array[i + loop38 - 2] == 100 && array[i + loop38 - 3] == 100) {\n                      array[i + loop38 - 2] = test[k];\n                      array[i + loop38 - 3] = test[k];\n                    } else if (array[i + loop38 + 1] == 100 && array[i + loop38 + 2] == 100) {\n                      array[i + loop38 + 1] = test[k];\n                      array[i + loop38 + 2] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  }\n\n                  indexLoop++;\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n\n                  if (indexLoop < totalRoom) {\n                    let loop38 = indexLoop * 38;\n\n                    if (array[i + loop38 - 2] == 100 && array[i + loop38 - 3] == 100) {\n                      array[i + loop38 - 2] = test[k];\n                      array[i + loop38 - 3] = test[k];\n                    } else if (array[i + loop38 + 1] == 100 && array[i + loop38 + 2] == 100) {\n                      array[i + loop38 + 1] = test[k];\n                      array[i + loop38 + 2] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  }\n\n                  indexLoop++;\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  array[j + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  insertedData200_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  insertedData200_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = array[j];\n                  array[j] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x - 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x - 1] = array[q - 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q - 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData200_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData200_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x - 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const z = Math.floor(Math.random() * (x + 1));\n              array[x] = array[z];\n              array[x - 1] = array[z - 1];\n              array[z] = remainderArray[k2];\n              array[z - 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData200_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData200_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const z = Math.floor(Math.random() * (x + 1));\n              array[x] = array[z];\n              array[x + 1] = array[z + 1];\n              array[z] = remainderArray[k2];\n              array[z + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData200_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData200_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        }\n\n        return array;\n      };\n\n      var AntArrIns200 = AntAlgoInsert200(AntArr200); //console.log(AntArrIns200);\n\n      const slot2Equal1for200 = array => {\n        let k = 0;\n        let test2 = []; //console.log(insertedData50_Slot2_1)\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedData200_Slot2_1.length) {\n              array[x] = insertedData200_Slot2_1[k];\n            }\n\n            k++;\n          }\n        } //console.log(test2)\n\n\n        return array;\n      };\n\n      slot2Equal1for200(AntArr200);\n\n      const slot2Equal2for200 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x - 1] == 100) {\n            if (k < insertedData200_Slot2_2.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x - 1] = array[q - 1];\n              array[q] = insertedData200_Slot2_2[k];\n              array[q - 1] = insertedData200_Slot2_2[k];\n            } else {\n              if (insertedData200_Slot2_2[k] != undefined) {\n                extraData200_Slot2_2.push(insertedData200_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = array.length; x > 0; x--) {\n          if (array[x] == 100 && array[x - 1] == 100) {\n            if (k < extraData200_Slot2_2.length) {\n              array[x] = extraData200_Slot2_2[k];\n              array[x - 1] = extraData200_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2for200(AntArr200);\n\n      const checkAmountData200 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount = checkAmountData200(AntArrIns200);\n      console.log(AntArrIns200);\n      console.log(checkAmount); // console.log(extraData200_Slot2_2)\n      // console.log(extraData200_Slot2_1)\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Data is more than or equal to 200 \n      //create 1d array for dataset 500\n\n      const array1D500 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr500 = array1D500(DataArray500); //console.log(AntArr200);\n\n      let extraData500_Slot2_2 = [];\n      let extraData500_Slot2_1 = [];\n      let insertedData500_Slot2_2 = [];\n      let insertedData500_Slot2_1 = [];\n\n      const AntAlgoInsert500 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0; //CHECK HMS 2\n\n        let slotin2_2_1 = [];\n        let slotin2_2_2 = [];\n        let slotin0_2_1 = [];\n        let slotin0_2_2 = []; //CHECK HMS 3\n\n        let slotin3_3_1 = [];\n        let slotin2_3_1 = [];\n        let slotin1_3_1 = [];\n        let slotin0_3_1 = []; //CHECK HMS 4\n\n        let slotin2_4_1 = [];\n        let slotin2_4_2 = [];\n        let slotin0_4_1 = [];\n        let slotin0_4_2 = [];\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n\n        for (let x = 0; x < filterData500.length; x++) {\n          test.push(filterData500[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let slot1 = test[k][9];\n            let slot2 = test[k][10];\n\n            if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  slotin2_2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  slotin2_2_2.push(test[k]);\n                } else {\n                  remainderArray.push(test[k]);\n                  slotin0_2_1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n                slotin0_2_2.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  array[j + 1] = test[k];\n                  slotin3_3_1.push(test[k]);\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  insertedData500_Slot2_1.push(test[k]);\n                  slotin2_3_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  insertedData500_Slot2_1.push(test[k]);\n                  slotin2_3_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = array[j];\n                  array[j] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                  slotin1_3_1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n                slotin0_3_1.push(test[k]);\n              }\n            } else if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  slotin2_4_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  slotin2_4_2.push(test[k]);\n                } else {\n                  remainderArray.push(test[k]);\n                  slotin0_4_1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n                slotin0_4_2.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //  let totalHMS2 = []\n        //  totalHMS2.push(slotin2_2_1)\n        //  totalHMS2.push(slotin2_2_2)\n        //  totalHMS2.push(slotin0_2_1)\n        //  totalHMS2.push(slotin0_2_2)\n        //   console.log(totalHMS2);\n        //  let totalHMS3 = []\n        //  totalHMS3.push(slotin3_3_1)\n        //  totalHMS3.push(slotin2_3_1)\n        //  totalHMS3.push(slotin1_3_1)\n        //  totalHMS3.push(slotin0_3_1)\n        //   console.log(totalHMS3);\n        //  let totalHMS4 = []\n        //  totalHMS4.push(slotin2_4_1)\n        //  totalHMS4.push(slotin2_4_2)\n        //  totalHMS4.push(slotin0_4_1)\n        //  totalHMS4.push(slotin0_4_2)\n        //   console.log(totalHMS4);\n        //  console.log(array);\n        // let count = 0\n        // for(let i = 0; i < array.length; i++){\n        //     if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined){\n        //         count += 1\n        //     }\n        // }\n        // console.log(count);\n        //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              array[x] = remainderArraySlot1[k3];\n              array[x + 1] = remainderArraySlot1[k3];\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              array[x] = remainderArray[k2];\n              array[x + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData500_Slot2_1.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        }\n\n        return array;\n      };\n\n      var AntArrIns500 = AntAlgoInsert500(AntArr500); //console.log(AntArrIns100);\n\n      const slot2Equal1for500 = array => {\n        let k = 0;\n        let test2 = []; //console.log(insertedData50_Slot2_1)\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedData500_Slot2_1.length) {\n              array[x] = insertedData500_Slot2_1[k];\n            }\n\n            k++;\n          }\n        } //console.log(test2)\n\n\n        return array;\n      };\n\n      slot2Equal1for500(AntArr500);\n\n      const slot2Equal2for500 = array => {\n        let k = 0;\n        let test2 = [];\n\n        for (let x = 0; x < filterData500.length; x++) {\n          if (filterData500[x][10] == 2) {\n            insertedData500_Slot2_2.push(filterData500[x]);\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedData500_Slot2_2.length) {\n              array[x] = insertedData500_Slot2_2[k];\n              array[x + 1] = insertedData500_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2for500(AntArr500);\n\n      const checkAmountData500 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount = checkAmountData500(AntArrIns500);\n      console.log(AntArrIns500);\n      console.log(checkAmount); // console.log(extraData500_Slot2_2)\n      // console.log(extraData500_Slot2_1)\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------------\n      //Combine all dataset\n\n      let combineData = [];\n\n      const combine = (data1, data2, data3, data4) => {\n        for (let i = 0; i < data1.length; i++) {\n          combineData.push(data1[i]);\n        }\n\n        for (let i = 0; i < data2.length; i++) {\n          combineData.push(data2[i]);\n        }\n\n        for (let i = 0; i < data3.length; i++) {\n          combineData.push(data3[i]);\n        }\n\n        for (let i = 0; i < data4.length; i++) {\n          combineData.push(data4[i]);\n        }\n\n        return combineData;\n      };\n\n      let dataCombine = combine(AntArr50, AntArr100, AntArr200, AntArr500); //console.log(dataCombine);\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n      // Hard Constraint \n      // H1: No student attend more than one class/ event at the same time\n      // H2: The room is large enough to accomodate all of the student in attendace while also meeting the requirement \n      // H3: At any given time, each room can onle have one course booked\n      // H4: No student attend class during 12:00 pm -2:00 due to solat jumaat\n      // H5: One teacher can only teach one class at one time.\n      //Check for the H1 violation: same group attend more than 1 class at 1 time\n\n      const check1Group = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n        }\n\n        for (let i = 0; i < array.length; i++) {\n          try {\n            for (let x = 1; x <= totalRoom; x++) {\n              indexArray = x * 38;\n\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined) {\n                try {\n                  if (array[i][6] == array[i + indexArray][6] && array[i + 1][6] == array[i + indexArray + 1][6] && array[i][3] == array[i + indexArray][3] && array[i + 1][3] == array[i + indexArray + 1][3]) {\n                    try {\n                      // console.log(array[i][6])\n                      // console.log(array[i+indexArray][6])\n                      count += 1;\n                    } catch {}\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH1_50 = check1Group(AntArr50);\n      var checkH1_100 = check1Group(AntArr100);\n      var checkH1_200 = check1Group(AntArr200);\n      var checkH1_500 = check1Group(AntArr500);\n      var checkH1_ALL = check1Group(dataCombine);\n      console.log(\"Hard Constraint 1 violation dataset50: \" + checkH1_50);\n      console.log(\"Hard Constraint 1 violation dataset100: \" + checkH1_100);\n      console.log(\"Hard Constraint 1 violation dataset200: \" + checkH1_200);\n      console.log(\"Hard Constraint 1 violation dataset 500: \" + checkH1_500);\n      console.log(\"Hard Constraint 1 violation All combine: \" + checkH1_ALL); //Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\n\n      const checkRoomQuota = array => {\n        let count = 0;\n        return count;\n      }; // var checkH5_50 = checkRoomQuota(AntArr50)\n      // var checkH5_100 = checkRoomQuota(AntArr100)\n      // var checkH5_200 = checkRoomQuota(AntArr200)\n      // var checkH5_500 = checkRoomQuota(AntArr500)\n      //Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\n\n\n      const checkSolatJummat = array => {\n        let count = 0;\n        return count;\n      }; // var checkH5_50 = checkSolatJummat(AntArr50)\n      // var checkH5_100 = checkSolatJummat(AntArr100)\n      // var checkH5_200 = checkSolatJummat(AntArr200)\n      // var checkH5_500 = checkSolatJummat(AntArr500)\n      //Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\n\n\n      const check1Teacher = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n        }\n\n        for (let i = 0; i < array.length; i++) {\n          try {\n            for (let x = 1; x <= totalRoom; x++) {\n              indexArray = x * 38;\n\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined) {\n                try {\n                  if (array[i][5] == array[i + indexArray][5] && array[i + 1][5] == array[i + indexArray + 1][5]) {\n                    count += 1;\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH5_50 = check1Teacher(AntArr50);\n      var checkH5_100 = check1Teacher(AntArr100);\n      var checkH5_200 = check1Teacher(AntArr200);\n      var checkH5_500 = check1Teacher(AntArr500);\n      var checkH5_ALL = check1Teacher(dataCombine);\n      console.log(\"Hard Constraint 5 violation dataset50: \" + checkH5_50);\n      console.log(\"Hard Constraint 5 violation dataset100: \" + checkH5_100);\n      console.log(\"Hard Constraint 5 violation dataset200: \" + checkH5_200);\n      console.log(\"Hard Constraint 5 violation dataset500: \" + checkH5_500);\n      console.log(\"Hard Constraint 5 violation Combine All: \" + checkH5_ALL); //----------------------------------------------------------------------------------------------------------------------------------------\n      // Soft Constraint \n      // S1: A student has a class schedule toward the end of the day\n      // S2: A student have more than two class in a row\n      //Check for the S1 violation: student have class at the end of the day\n\n      const checkEndOfClass = array => {\n        let count = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          let indexArray = x * 38 - 1;\n\n          if (array[indexArray] != 100) {\n            count = 1;\n          }\n        }\n\n        return count;\n      }; // var checkS1_50 = checkEndOfClass(AntArr50)\n      // var checkS1_100 = checkEndOfClass(AntArr100)\n      // var checkS1_200 = checkEndOfClass(AntArr200)\n      // var checkS1_500 = checkEndOfClass(AntArr500)\n      // console.log(\"Soft Constraint 1 violation: \"+ checkS1_50);\n      // console.log(\"Soft Constraint 1 violation: \"+ checkS1_100);\n      // console.log(\"Soft Constraint 1 violation: \"+ checkS1_200);\n      // console.log(\"Soft Constraint 1 violation: \"+ checkS1_500);\n      //Check for the S2 violation: student have 2 class in a row\n\n\n      const check2ClassInARow = array => {\n        let count = 0;\n\n        for (let i = 0; i < array[i].length; i++) {\n          if (array[i + 2] != 100) {\n            count = 1;\n          }\n        }\n\n        return count;\n      }; // var checkS2_50 = check2ClassInARow(AntArr50)\n      // var checkS2_100 = check2ClassInARow(AntArr100)\n      // var checkS2_200 = check2ClassInARow(AntArr200)\n      // var checkS2_500 = check2ClassInARow(AntArr500)\n      // console.log(\"Soft Constraint 2 violation: \"+ checkS2_50);\n      // console.log(\"Soft Constraint 2 violation: \"+ checkS2_100);\n      // console.log(\"Soft Constraint 2 violation: \"+ checkS2_200);\n      // console.log(\"Soft Constraint 2 violation: \"+ checkS2_500);\n      //----------------------------------------------------------------------------------------------------------------------------------------------\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n      //Check total Hard Constraint\n\n\n      const checkTotalHardContraint = () => {\n        let count = 0;\n        let totalH1 = checkH1_50 + checkH1_100 + checkH1_200 + checkH1_500;\n        let totalH2 = checkH5_50 + checkH5_100 + checkH5_200 + checkH5_500;\n\n        if (totalH1 != 0) {\n          count += 1;\n        }\n\n        if (totalH2 != 0) {\n          count += 1;\n        }\n\n        return count;\n      }; // console.log(AntArrIns50)\n      // console.log(AntArrIns100)\n      // console.log(AntArrIns200)\n      // console.log(AntArrIns500)\n\n\n      var checkTotalHardContraints = checkTotalHardContraint();\n      console.log(\"Total Hard Constraint: \" + checkTotalHardContraints); //----------------------------------------------------------------------------------------------------------------------------------------\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n      // const checkTotalSoftContraint = () => {\n      //     let count =0\n      //     let totalS1 = checkS1_50 + checkS1_100 + checkS1_200 + checkS1_500\n      //     let totalS2 = checkS2_50 + checkS2_100 + checkS2_200 + checkS2_500\n      //     if(totalS1 != 0){\n      //         count +=1\n      //     }\n      //     if(totalS2 != 0){\n      //         count +=1\n      //     }   \n      //     return count\n      // }\n      // var checkTotalSoftContraints = checkTotalSoftContraint()\n      // console.log(\"Total Soft Constraint: \"+checkTotalSoftContraints)\n\n      const HS0 = () => {\n        if (checkTotalHardContraints == 0) {\n          //    console.log(Slot2_1_50)\n          //    console.log(Slot2_1_100)\n          //    console.log(Slot2_1_200)\n          //    console.log(Slot2_1_500)\n          console.log(checkTotalHardContraints); //console.log(checkTotalSoftContraints)\n        } // return {Slot2_1_50,Slot2_1_100,Slot2_1_200,Slot2_1_500,checkTotalHardContraints, checkTotalSoftContraints}\n\n      };\n\n      return HS0(); //  return {Slot2_1_50,Slot2_1_100,Slot2_1_200,Slot2_1_500,checkTotalHardContraints, checkTotalSoftContraints}\n    }; // -------------------------------------------------------------------------------------------------------------------------------------------\n\n\n    let returnData50 = [];\n    let returnData100 = [];\n    let returnData200 = [];\n    let returnData500 = [];\n\n    for (let i = 1; i <= 1; i++) {\n      console.log(\"iterantion: \" + i); //  if(antSystem().checkTotalHardContraints == 0){\n      //     // console.log(antSystem().Slot2_1_50)\n      //     // console.log(antSystem().Slot2_1_100)\n      //     // console.log(antSystem().Slot2_1_200)\n      //     // console.log(antSystem().Slot2_1_500)\n      //     returnData50.push(antSystem().Slot2_1_50)\n      //     returnData100.push(antSystem().Slot2_1_100)\n      //     returnData200.push(antSystem().Slot2_1_200)\n      //     returnData500.push(antSystem().Slot2_1_500)\n      // //     console.log( antSystem().checkTotalHardContraints)\n      // //     console.log( antSystem().checkTotalSoftContraints)\n      // //     console.log(\"iterantion: \" + i)\n      // //     //return true;\n      //      break\n      //  }\n\n      antSystem();\n    } // console.log(returnData50[0])\n    // console.log(returnData100[0])\n    // console.log(returnData200[0])\n    // console.log(returnData500[0])\n    // let weekday = ['Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday',\n    // 'Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday',\n    // 'Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday',\n    // 'Friday','Friday','Friday','Friday','Friday','Friday','Friday','Friday']\n    // const create2dArray = (weekdayArray,partDay,array50, part50,array100, part100,array200, part200,array500, part500) => {\n    //     var tmp = [];\n    //     for(var i = 0; i < weekdayArray.length; i += partDay) {\n    //         tmp.push(weekdayArray.slice(i, i + partDay));\n    //     }\n    //     for(var i = 0; i < array50.length; i += part50) {\n    //         tmp.push(array50.slice(i, i + part50));\n    //     }\n    //     for(var i = 0; i < array100.length; i += part100) {\n    //         tmp.push(array100.slice(i, i + part100));\n    //     }\n    //     for(var i = 0; i < array200.length; i += part200) {\n    //         tmp.push(array200.slice(i, i + part200));\n    //     }\n    //     for(var i = 0; i < array500.length; i += part500) {\n    //         tmp.push(array500.slice(i, i + part500));\n    //     }\n    //     return tmp;\n    // }\n    // console.log(create2dArray50(returnData50[0], 38));\n    // console.log(create2dArray100(returnData100[0], 38));\n    // console.log(create2dArray200(returnData200[0], 38));\n    // console.log(create2dArray500(returnData500[0], 38));\n    // let dataset50 = create2dArray50(returnData50[0], 38)\n    // let dataset100 = create2dArray100(returnData100[0], 38)\n    // let dataset200 = create2dArray200(returnData200[0], 38)\n    // let dataset500 = create2dArray500(returnData500[0], 38)\n    //let dataset = create2dArray(weekday,38,returnData50[0], 38, returnData100[0], 38,returnData200[0], 38,returnData500[0], 38)\n    //console.log(dataset);\n    // let completeDataset = []\n    // completeDataset.push(dataset50)\n    // completeDataset.push(dataset100)\n    // completeDataset.push(dataset200)\n    // completeDataset.push(dataset500)\n    // console.log(completeDataset);\n    //finalData.push(dataset);\n    //----------------------------------------------------------------------------------------------------------------------------------------\n\n  } // let headers = [\n  //     { label: \"Monday\", key:\"Monday\"  },\n  //     { label: \"Tuesday\", key:\"Tuesday\" },\n  //     { label: \"Thursday\", key:\"Thursday\"  },\n  //     { label: \"Friday\", key:\"Friday\"  },\n  //     // { label: \"Room\", key: \"Room\" },\n  //     // { label: \"Size\", key: \"Size\" },\n  //     // { label: \"Slot\", key: \"Slot\" }\n  //   ];\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1787,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1790,\n      columnNumber: 13\n    }\n  }, \"Generate Schedule Page\"));\n};\n\nexport default ArraySchedule; //result[i][j]=Course.splice(Math.floor(Math.random()* Course.length),1)[0] // create random placement of Course Value\n//const Schedule = new Array(10).fill(Array(5).fill(null));\n//console.log(Schedule);\n// const Course = [['TE1',4],['TE1',4],['TE1',4],['TE1',3],['TE1',4],['TE1',2],['TE1',4],['TE1',4],['TE1',4],['TE1',3]];\n//const Course = [['TE1',2],['TE2',2],['TE3',3],['TE4',4],['TE5',3],['TE6',4],['TE7',4],['TE8',2],['TE9',4]];\n//const Course = ['TE1','TE2','TE3','TE4','TE5','TE6','TE7','TE8','TE9'];","map":{"version":3,"sources":["C:/Users/acit/Desktop/FYP Code/FYP Code/frontend/src/components/RandomSchedule/arraySchedule.js"],"names":["find","forEach","indexOf","React","useEffect","useState","useContext","useParams","_","CSVLink","LoadingSpinner","finalData","ArraySchedule","props","isLoading","setIsLoading","loadedFile","setLoaadedFile","roomData","setroomData","courseData","setcourseData","CsvData","setCsvData","userId","sendRequest","response","fetch","responsedata","json","stringifyData","JSON","stringify","userWithFiles","Dataset","ertRoom","map","ertCourse","ok","Error","message","err","console","log","testData","EnrollmentQuota","CourseCode","HMS","roomName","roomSize","filterData50","filterData100","filterData200","filterData500","dupeData","room","push","hardConstraintViolated","softConstraintViolated","i","length","enrollment","code","hms","reduce","results","item","index","array","name","size","notDuplicatesRoom","filter","roomUnder50","roomUnder100","roomUnder200","roomUnder500","checkNumberofRoom","createArray","data","result","DataArray50","DataArray100","DataArray200","DataArray500","ground50Array","ground100Array","ground200Array","ground500Array","Column50","Column100","Column200","Column500","Row","antSystem","array1D50","AntArr50","extraData50_Slot2_2","extraData50_Slot2_1","insertedData50_Slot2_2","insertedData50_Slot2_1","AntAlgoInsert50","test","k","k2","k3","remainderArray","remainderArraySlot1","totalRoom","x","hourMS","slot1","slot2","b","j","Math","floor","random","z","v","q","undefined","AntArrIns50","checkAmountData50B","count","checkAmountB","slot2Equal1for50","test2","slot2Equal2for50","checkAmountData50","checkAmount","array1D100","AntArr100","extraData100_Slot2_2","extraData100_Slot2_1","insertedData100_Slot2_2","insertedData100_Slot2_1","AntAlgoInsert100","indexLoop","loop38","AntArrIns100","slot2Equal1for100","slot2Equal2for100","checkAmountData100","array1D200","AntArr200","extraData200_Slot2_2","extraData200_Slot2_1","insertedData200_Slot2_2","insertedData200_Slot2_1","AntAlgoInsert200","AntArrIns200","slot2Equal1for200","slot2Equal2for200","checkAmountData200","array1D500","AntArr500","extraData500_Slot2_2","extraData500_Slot2_1","insertedData500_Slot2_2","insertedData500_Slot2_1","AntAlgoInsert500","slotin2_2_1","slotin2_2_2","slotin0_2_1","slotin0_2_2","slotin3_3_1","slotin2_3_1","slotin1_3_1","slotin0_3_1","slotin2_4_1","slotin2_4_2","slotin0_4_1","slotin0_4_2","AntArrIns500","slot2Equal1for500","slot2Equal2for500","checkAmountData500","combineData","combine","data1","data2","data3","data4","dataCombine","check1Group","indexArray","checkH1_50","checkH1_100","checkH1_200","checkH1_500","checkH1_ALL","checkRoomQuota","checkSolatJummat","check1Teacher","checkH5_50","checkH5_100","checkH5_200","checkH5_500","checkH5_ALL","checkEndOfClass","check2ClassInARow","checkTotalHardContraint","totalH1","totalH2","checkTotalHardContraints","HS0","returnData50","returnData100","returnData200","returnData500"],"mappings":"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","sourcesContent":["import { find, forEach, indexOf } from \"lodash\";\r\nimport React,{ useEffect,useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport _ from 'lodash';\r\nimport { CSVLink } from \"react-csv\";\r\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\r\n\r\n\r\nlet finalData = [];\r\n\r\nconst ArraySchedule = (props) => {\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [loadedFile, setLoaadedFile] = useState(false);\r\n    const [roomData, setroomData] = useState();\r\n    const [courseData, setcourseData] = useState();\r\n    const [CsvData, setCsvData] = useState();\r\n    // const [Keys, setKeys] = useState();\r\n    //const [uploadedData, setUploadedData] = useState([]);\r\n    //console.log(\"props dataset:\"+ props.test)\r\n\r\n    const userId = useParams().userId;\r\n    useEffect(()=>{\r\n        const sendRequest = async () =>{\r\n            setIsLoading(true);\r\n            try{\r\n            // const response = await fetch('http://localhost:5000/api/user/');\r\n            //const response = await fetch('http://localhost:5000/api/files/users/624278b29a90a9077e2f65e4');\r\n            const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875');\r\n            //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\r\n            //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\r\n            const responsedata = await response.json();\r\n            let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset);\r\n\r\n            // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\r\n            const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset =>[Dataset['Room'],Dataset['Size']]); //Extract Room\r\n            setroomData([ertRoom]);\r\n\r\n            const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'],Dataset['Course Code'],Dataset['Course Name'],Dataset['Year'],Dataset['Semester'],Dataset['Lecturer'],Dataset['Group'],Dataset['HMS'],Dataset['Programme Code'],Dataset['Slot1'],Dataset['Slot2']]); //Extract Enrollment Quota\r\n            setcourseData([ertCourse]);\r\n\r\n            if (!response.ok){\r\n                throw new Error(responsedata.message);\r\n            }\r\n            setLoaadedFile(stringifyData);\r\n            setIsLoading(true);\r\n            }catch(err){\r\n                console.log(err.message);\r\n            }\r\n            setIsLoading(false);\r\n            \r\n        };\r\n        sendRequest();\r\n    },[userId]);\r\n\r\n        if(!isLoading && loadedFile){\r\n            const testData = [1,2,3,4,5,6,7,8,9];\r\n            const EnrollmentQuota = [];\r\n            const CourseCode = [];\r\n            const HMS = [];\r\n            const roomName = [];\r\n            const roomSize = [];\r\n            const filterData50  = [];\r\n            const filterData100  = [];\r\n            const filterData200  = [];\r\n            const filterData500  = [];\r\n            const dupeData  = [];\r\n            const room = []\r\n            room.push(roomData[0])\r\n            \r\n            let hardConstraintViolated = 0;\r\n            let softConstraintViolated = 0;\r\n            //console.log(courseData[0][0][1]);\r\n            for(let i = 0; i <courseData[0].length; i++){\r\n                let enrollment = [courseData[0][i][0]];\r\n                let code = [courseData[0][i][1]];\r\n                let hms = [courseData[0][i][7]];\r\n                enrollment.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    EnrollmentQuota.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                code.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    CourseCode.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                hms.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    HMS.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n            }\r\n\r\n            for(let i = 0; i <roomData[0].length; i++){\r\n                let name = [roomData[0][i][0]];\r\n                let size = [roomData[0][i][1]];\r\n                name.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomName.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                size.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomSize.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n            }\r\n \r\n            \r\n            const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\r\n\r\n\r\n                for(let i = 0; i< courseData[0].length;i++){\r\n                    if (courseData[0][i][0] < 50) {\r\n                        //for(let j = 0; j <courseData[0][i][7]; j++){\r\n                            filterData50.push(courseData[0][i]);\r\n                        //}\r\n                    }\r\n                    if (courseData[0][i][0] >= 50 && courseData[0][i][0] < 100) {\r\n                        //for(let j = 0; j <courseData[0][i][7]; j++){\r\n                            filterData100.push(courseData[0][i]);\r\n                        //}\r\n                    }\r\n                    if (courseData[0][i][0] >= 100 && courseData[0][i][0] < 200) {\r\n                        //for(let j = 0; j <courseData[0][i][7]; j++){\r\n                            filterData200.push(courseData[0][i]);\r\n                        //}\r\n                    }\r\n                    if (courseData[0][i][0] >= 200 && courseData[0][i][0] < 500) {\r\n                        //for(let j = 0; j <courseData[0][i][7]; j++){\r\n                            filterData500.push(courseData[0][i]);\r\n                        //}\r\n                    }\r\n                    //filterData.push(courseData[0][i]);\r\n                }\r\n\r\n\r\n            let roomUnder50 = []\r\n            let roomUnder100 = []\r\n            let roomUnder200 = []\r\n            let roomUnder500 = []\r\n            const checkNumberofRoom = () => {\r\n                for(let i = 0; i < roomData[0].length; i++){\r\n                    let room = roomData[0][i][1]\r\n                    //console.log(roomData[0][i][1]);\r\n                    if(room < 50){\r\n                        roomUnder50.push(room)\r\n                    }else if(room > 50 && room < 100){\r\n                        roomUnder100.push(room)\r\n\r\n                    }else if(room > 100 && room < 200){\r\n                        roomUnder200.push(room)\r\n\r\n                    }else if(room > 200){\r\n                        roomUnder500.push(room)\r\n                    }\r\n                }\r\n            }\r\n            checkNumberofRoom();\r\n\r\n\r\n            const createArray = (data) => {\r\n                var result = []\r\n\r\n                    for(let i = 0; i<data; i++){\r\n                        result[i] = []\r\n                    }\r\n                return result;\r\n            }\r\n\r\n            let DataArray50 = roomUnder50.length * 38;\r\n            let DataArray100 = roomUnder100.length * 38;\r\n            let DataArray200 = roomUnder200.length * 38;\r\n            let DataArray500 = roomUnder500.length * 38;\r\n\r\n            var ground50Array = createArray(DataArray50);\r\n            var ground100Array = createArray(DataArray100);\r\n            var ground200Array = createArray(DataArray200);\r\n            var ground500Array = createArray(DataArray500);\r\n\r\n\r\n            let Column50 = roomUnder50.length\r\n            let Column100 = roomUnder100.length\r\n            let Column200 = roomUnder200.length\r\n            let Column500 = roomUnder500.length\r\n            let Row = 38\r\n\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\nconst antSystem = () => {\r\n    //create 1d array for dataset 50\r\n    const array1D50 = (data) => {\r\n       var result = []\r\n\r\n       for(let i = 0; i< data; i++){\r\n           result[i]= 100;\r\n       }\r\n       return result;\r\n   }\r\n   var AntArr50 = array1D50(DataArray50);\r\n\r\n   let extraData50_Slot2_2 = []\r\n   let extraData50_Slot2_1 = []\r\n   let insertedData50_Slot2_2 = []\r\n   let insertedData50_Slot2_1= []\r\n\r\n   const AntAlgoInsert50 = (array) => {\r\n       let test = []\r\n       let k = 0;\r\n       let k2 =0\r\n       let k3 =0\r\n\r\n       let remainderArray = []\r\n       let remainderArraySlot1 = []\r\n\r\n       let totalRoom = array.length / 38\r\n\r\n       for(let x=0; x<filterData50.length;x++){\r\n           test.push(filterData50[x]);\r\n       }\r\n\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k < test.length){\r\n            let hourMS = test[k][7]\r\n            let slot1 = test[k][9]\r\n            let slot2 = test[k][10]\r\n\r\n            if(hourMS == 4){\r\n               let b = 1\r\n               const j = Math.floor(Math.random()*(i+1));\r\n               if(array[i] == 100){\r\n                   //slot in slot1 = 2\r\n                   if(array[i-1] == 100){\r\n                       array[i] = array[j];\r\n                       array[i-1] = array[j-1];\r\n                       array[j] = test[k];\r\n                       array[j-1] = test[k];\r\n                       \r\n                       // make stack become 0\r\n                       for(let b = 1; b <= totalRoom; b++){\r\n                        if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                            array[j+38*b] = 0         \r\n                            array[j+38*b-1] = 0\r\n                        }\r\n                        if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                            array[j-38*b] = 0         \r\n                            array[j-38*b-1] = 0\r\n                        }\r\n                       }\r\n                       const z = Math.floor(Math.random()*(i+1));\r\n                       if(array[i] == 100){\r\n                           //slot in slot1 = 2\r\n                           if(array[i-1] == 100){\r\n                               array[i] = array[z];\r\n                               array[i-1] = array[z-1];\r\n                               array[i] = test[k];\r\n                               array[i-1] = test[k];\r\n                           }\r\n                           else if(array[i+1] == 100){\r\n                                array[i] = array[z];\r\n                                array[i+1] = array[z+1];\r\n                                array[z] = test[k];\r\n                                array[z+1] = test[k];\r\n                           }\r\n                           else{\r\n                            remainderArray.push(test[k]);\r\n                            }\r\n                        }\r\n                        else{\r\n                            remainderArray.push(test[k]);\r\n                        }\r\n                        //revert back to 100\r\n                        for(let x =0; x<array.length; x++){\r\n                            if(array[x] == 0){\r\n                                array[x] = 100\r\n                            }\r\n                        }\r\n                   }\r\n                   //slot in slot1 = 2\r\n                   else if(array[i+1] == 100 ){\r\n                       array[i] = array[j];\r\n                       array[i+1] = array[j+1];\r\n                       array[j] = test[k];\r\n                       array[j+1] = test[k];\r\n                       \r\n                        // make stack become 0\r\n                       for(let b = 1; b <= totalRoom; b++){\r\n                        if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                            array[j+38*b] = 0         \r\n                            array[j+38*b-1] = 0\r\n                        }\r\n                        if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                            array[j-38*b] = 0         \r\n                            array[j-38*b-1] = 0\r\n                        }\r\n                       }\r\n                       const v = Math.floor(Math.random()*(i+1));\r\n                       if(array[i] == 100){\r\n                           //slot in slot1 = 2\r\n                           if(array[i-1] == 100){\r\n                               array[i] = array[v];\r\n                               array[i-1] = array[v-1];\r\n                               array[v] = test[k];\r\n                               array[v-1] = test[k];\r\n                           }\r\n                           else if(array[i+1] == 100){\r\n                                array[i] = array[v];\r\n                                array[i+1] = array[v+1];\r\n                                array[v] = test[k];\r\n                                array[v+1] = test[k];\r\n                           }\r\n                           else{\r\n                            remainderArray.push(test[k]);\r\n                            }\r\n                        }\r\n                        else{\r\n                            remainderArray.push(test[k]);\r\n                        }\r\n                        //revert back to 100\r\n                        for(let x =0; x<array.length; x++){\r\n                            if(array[x] == 0){\r\n                                array[x] = 100\r\n                            }\r\n                        }\r\n                   }\r\n                   else{\r\n                       remainderArray.push(test[k]);\r\n                   }\r\n               }else{\r\n                   remainderArray.push(test[k]);\r\n                   \r\n               }\r\n            }\r\n\r\n            else if(hourMS == 3){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        array[j+1] = test[k];\r\n                        \r\n                    }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        insertedData50_Slot2_1.push(test[k])\r\n                        \r\n                    }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        insertedData50_Slot2_1.push(test[k])\r\n                        \r\n                    }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                        array[i] = array[j];\r\n                        array[j] = test[k];\r\n                        remainderArraySlot1.push(test[k])\r\n                        \r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                    \r\n                }\r\n                }\r\n\r\n             else if(hourMS == 2){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    if(array[i-1] == 100){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        \r\n                    }else if(array[i+1] == 100){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        \r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                        \r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                }\r\n                }\r\n            }\r\n            k++  \r\n        }\r\n\r\n        //fullfill the slot 3\r\n        for(let x = 0; x< array.length; x++){\r\n            if(array[x] == 100 && array[x-1] ==100){\r\n                if(k3 < remainderArraySlot1.length){\r\n                    const q = Math.floor(Math.random()*(x+1));\r\n                        array[x] = array[q]\r\n                        array[x-1] = array[q-1]\r\n                        array[q] = remainderArraySlot1[k3]\r\n                        array[q-1] = remainderArraySlot1[k3]\r\n                }else{\r\n                    if(remainderArraySlot1[k3] != undefined){\r\n                        insertedData50_Slot2_2.push(remainderArraySlot1[k3])\r\n                    }\r\n                }\r\n                k3++   \r\n            }else if(array[x] == 100 && array[x+1] ==100){\r\n                if(k3 < remainderArraySlot1.length){\r\n                    const q = Math.floor(Math.random()*(x+1));\r\n                        array[x] = array[q]\r\n                        array[x+1] = array[q+1]\r\n                        array[q] = remainderArraySlot1[k3]\r\n                        array[q+1] = remainderArraySlot1[k3]\r\n                }else{\r\n                    if(remainderArraySlot1[k3] != undefined){\r\n                        insertedData50_Slot2_2.push(remainderArraySlot1[k3])\r\n                    }\r\n                }\r\n                k3++   \r\n            }\r\n        }\r\n\r\n\r\n        //console.log(remainderArray);\r\n        for(let x = 0; x< array.length; x++){\r\n                if(array[x] == 100 && array[x-1] ==100){\r\n                    if(k2 < remainderArray.length){\r\n                        const z = Math.floor(Math.random()*(x+1));\r\n                        array[x] = array[z]\r\n                        array[x-1] = array[z-1]\r\n                        array[z] = remainderArray[k2]\r\n                        array[z-1] = remainderArray[k2]\r\n                    }\r\n                    try{\r\n                        let slot2 = remainderArray[k2][10]\r\n                        if(slot2 == 1){\r\n                            insertedData50_Slot2_1.push(remainderArray[k2])\r\n                        }\r\n                        if(slot2 == 2){\r\n                            insertedData50_Slot2_2.push(remainderArray[k2])\r\n                        }\r\n                    }catch{}\r\n                k2++   \r\n            }else if(array[x] == 100 && array[x+1] ==100){\r\n                if(k2 < remainderArray.length){\r\n                    const z = Math.floor(Math.random()*(x+1));\r\n                    array[x] = array[z]\r\n                    array[x+1] = array[z+1]\r\n                    array[z] = remainderArray[k2]\r\n                    array[z+1] = remainderArray[k2]\r\n                }\r\n                try{\r\n                    let slot2 = remainderArray[k2][10]\r\n                    if(slot2 == 1){\r\n                        insertedData50_Slot2_1.push(remainderArray[k2])\r\n                    }\r\n                    if(slot2 == 2){\r\n                        insertedData50_Slot2_2.push(remainderArray[k2])\r\n                    }\r\n                }catch{}\r\n            k2++   \r\n        }\r\n        }\r\n\r\n       return array;\r\n   }\r\n\r\n\r\n   var AntArrIns50 = AntAlgoInsert50(AntArr50);\r\n   const checkAmountData50B = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n    }\r\n    var checkAmountB = checkAmountData50B(AntArrIns50)\r\n//    console.log(AntArrIns50);\r\n//    console.log(checkAmountB)\r\n\r\n    const slot2Equal1for50 = (array) => {\r\n        let k = 0;\r\n        let test2 = []\r\n        //console.log(insertedData50_Slot2_1)\r\n        \r\n        for(let x = 0; x< array.length; x++){\r\n            if(array[x] == 100){\r\n                if(k < insertedData50_Slot2_1.length){\r\n                    array[x] = insertedData50_Slot2_1[k]\r\n                }\r\n            k++   \r\n            }\r\n        }\r\n        //console.log(test2)\r\n        return array;\r\n    }\r\n    slot2Equal1for50(AntArr50);\r\n \r\n\r\n    const slot2Equal2for50 = (array) => {\r\n        let k = 0;\r\n        for(let x = 0; x< array.length; x++){\r\n            if(array[x] == 100 && array[x-1] ==100){\r\n                if(k < insertedData50_Slot2_2.length){\r\n                    const q = Math.floor(Math.random()*(x+1));\r\n                        array[x] = array[q]\r\n                        array[x-1] = array[q-1]\r\n                        array[q] = insertedData50_Slot2_2[k]\r\n                        array[q-1] = insertedData50_Slot2_2[k]\r\n                }else{\r\n                    if(insertedData50_Slot2_2[k] != undefined){\r\n                        extraData50_Slot2_2.push(insertedData50_Slot2_2[k])\r\n                    }\r\n                }\r\n                k++   \r\n            }\r\n        }\r\n\r\n        for(let x = array.length; x> 0; x--){\r\n            if(array[x] == 100 && array[x-1] ==100){\r\n                if(k < extraData50_Slot2_2.length){\r\n                    array[x] = extraData50_Slot2_2[k]\r\n                    array[x-1] = extraData50_Slot2_2[k]\r\n                }\r\n            k++   \r\n            }\r\n        }\r\n        return array;\r\n}\r\n    slot2Equal2for50(AntArr50);\r\n\r\n\r\n   const checkAmountData50 = (array) => {\r\n       let count = 0\r\n       for(let i = 0; i < array.length; i++){\r\n               if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined){\r\n                   count += 1\r\n               }\r\n       }\r\n       return count\r\n   }\r\n   var checkAmount = checkAmountData50(AntArrIns50)\r\n   console.log(AntArrIns50)\r\n   console.log(checkAmount);\r\n   // console.log(extraData50_Slot2_2)\r\n   // console.log(extraData50_Slot2_1)\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 50 but less than 100\r\n\r\n            //create 1d array for dataset 100\r\n            const array1D100 = (data) => {\r\n               var result = []\r\n\r\n               for(let i = 0; i< data; i++){\r\n                   result[i]= 100;\r\n               }\r\n               return result;\r\n           }\r\n           var AntArr100 = array1D100(DataArray100);\r\n           //console.log(AntArr200);\r\n\r\n           let extraData100_Slot2_2 = []\r\n           let extraData100_Slot2_1 = []\r\n           let insertedData100_Slot2_2 = []\r\n           let insertedData100_Slot2_1= []\r\n           \r\n           const AntAlgoInsert100 = (array) => {\r\n            let test = []\r\n            let k = 0;\r\n            let k2 =0\r\n            let k3 =0\r\n     \r\n            let remainderArray = []\r\n            let remainderArraySlot1 = []\r\n\r\n            let totalRoom = array.length / 38\r\n\r\n            for(let x=0; x<filterData100.length;x++){\r\n                test.push(filterData100[x]);\r\n            }\r\n     \r\n             for(let i = array.length-1;i>0;i--){\r\n                if(k < test.length){\r\n                    let hourMS = test[k][7]\r\n        \r\n                    if(hourMS == 4){\r\n                        let indexLoop = 1\r\n                       const j = Math.floor(Math.random()*(i+1));\r\n                       if(array[i] == 100){\r\n                           if(array[i-1] == 100){\r\n                               array[i] = array[j];\r\n                               array[i-1] = array[j-1];\r\n                               array[j] = test[k];\r\n                               array[j-1] = test[k];\r\n                               \r\n                               if(indexLoop < totalRoom){\r\n                                   let loop38 = indexLoop*38\r\n                                   if( array[i+loop38-2]==100 && array[i+loop38-3]==100){\r\n                                       array[i+loop38-2] = test[k]         \r\n                                       array[i+loop38-3] = test[k]\r\n                                   }\r\n                                   else if( array[i+loop38+1]==100 && array[i+loop38+2]==100){\r\n                                       array[i+loop38+1] = test[k]         \r\n                                       array[i+loop38+2] = test[k]\r\n                                   }\r\n                                   else{\r\n                                       remainderArraySlot1.push(test[k])\r\n                                   }\r\n                               }indexLoop++\r\n        \r\n                           }\r\n                           else if(array[i+1] == 100 ){\r\n                               array[i] = array[j];\r\n                               array[i+1] = array[j+1];\r\n                               array[j] = test[k];\r\n                               array[j+1] = test[k];\r\n                               \r\n                               if(indexLoop < totalRoom){\r\n                                   let loop38 = indexLoop*38\r\n                                   if( array[i+loop38-2]==100 && array[i+loop38-3]==100){\r\n                                       array[i+loop38-2] = test[k]         \r\n                                       array[i+loop38-3] = test[k]\r\n                                   }\r\n                                   else if( array[i+loop38+1]==100 && array[i+loop38+2]==100){\r\n                                       array[i+loop38+1] = test[k]         \r\n                                       array[i+loop38+2] = test[k]\r\n                                   }\r\n                                   else{\r\n                                       remainderArraySlot1.push(test[k])\r\n                                   }\r\n                               }indexLoop++\r\n                           }\r\n                           else{\r\n                               remainderArray.push(test[k]);\r\n                               \r\n                           }\r\n                       }else{\r\n                           remainderArray.push(test[k]);\r\n                           \r\n                       }\r\n                        }\r\n        \r\n                    else if(hourMS == 3){\r\n                        const j = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                                array[i] = array[j];\r\n                                array[i-1] = array[j-1];\r\n                                array[i+1] = array[j+1];\r\n                                array[j] = test[k];\r\n                                array[j-1] = test[k];\r\n                                array[j+1] = test[k];\r\n                                \r\n                            }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                                array[i] = array[j];\r\n                                array[i-1] = array[j-1];\r\n                                array[j] = test[k];\r\n                                array[j-1] = test[k];\r\n                                insertedData100_Slot2_1.push(test[k])\r\n                                \r\n                            }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                                array[i] = array[j];\r\n                                array[i+1] = array[j+1];\r\n                                array[j] = test[k];\r\n                                array[j+1] = test[k];\r\n                                insertedData100_Slot2_1.push(test[k])\r\n                                \r\n                            }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                                array[i] = array[j];\r\n                                array[j] = test[k];\r\n                                remainderArraySlot1.push(test[k])\r\n                                \r\n                            }\r\n                        }else{\r\n                            remainderArray.push(test[k]);\r\n                            \r\n                        }\r\n                        }\r\n        \r\n                     else if(hourMS == 2){\r\n                        const j = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            if(array[i-1] == 100){\r\n                                array[i] = array[j];\r\n                                array[i-1] = array[j-1];\r\n                                array[j] = test[k];\r\n                                array[j-1] = test[k];\r\n                                \r\n                            }else if(array[i+1] == 100){\r\n                                array[i] = array[j];\r\n                                array[i+1] = array[j+1];\r\n                                array[j] = test[k];\r\n                                array[j+1] = test[k];\r\n                                \r\n                            }\r\n                            else{\r\n                                remainderArray.push(test[k]);\r\n                                \r\n                            }\r\n                        }else{\r\n                            remainderArray.push(test[k]);\r\n                        }\r\n                        }\r\n                    }\r\n                    k++  \r\n         }\r\n\r\n         //fullfill the slot 3\r\n        for(let x = 0; x< array.length; x++){\r\n            if(array[x] == 100 && array[x-1] ==100){\r\n                if(k3 < remainderArraySlot1.length){\r\n                    const q = Math.floor(Math.random()*(x+1));\r\n                        array[x] = array[q]\r\n                        array[x-1] = array[q-1]\r\n                        array[q] = remainderArraySlot1[k3]\r\n                        array[q-1] = remainderArraySlot1[k3]\r\n                }else{\r\n                    if(remainderArraySlot1[k3] != undefined){\r\n                        insertedData100_Slot2_2.push(remainderArraySlot1[k3])\r\n                    }\r\n                }\r\n                k3++   \r\n            }else if(array[x] == 100 && array[x+1] ==100){\r\n                if(k3 < remainderArraySlot1.length){\r\n                    const q = Math.floor(Math.random()*(x+1));\r\n                        array[x] = array[q]\r\n                        array[x+1] = array[q+1]\r\n                        array[q] = remainderArraySlot1[k3]\r\n                        array[q+1] = remainderArraySlot1[k3]\r\n                }else{\r\n                    if(remainderArraySlot1[k3] != undefined){\r\n                        insertedData100_Slot2_2.push(remainderArraySlot1[k3])\r\n                    }\r\n                }\r\n                k3++   \r\n            }\r\n        }\r\n     \r\n        //console.log(remainderArray);\r\n        for(let x = 0; x< array.length; x++){\r\n                if(array[x] == 100 && array[x-1] ==100){\r\n                    if(k2 < remainderArray.length){\r\n                        const z = Math.floor(Math.random()*(x+1));\r\n                        array[x] = array[z]\r\n                        array[x-1] = array[z-1]\r\n                        array[z] = remainderArray[k2]\r\n                        array[z-1] = remainderArray[k2]\r\n                    }\r\n                    try{\r\n                        let slot2 = remainderArray[k2][10]\r\n                        if(slot2 == 1){\r\n                            insertedData100_Slot2_1.push(remainderArray[k2])\r\n                        }\r\n                        if(slot2 == 2){\r\n                            insertedData100_Slot2_2.push(remainderArray[k2])\r\n                        }\r\n                    }catch{}\r\n                k2++   \r\n            }else if(array[x] == 100 && array[x+1] ==100){\r\n                if(k2 < remainderArray.length){\r\n                    const z = Math.floor(Math.random()*(x+1));\r\n                    array[x] = array[z]\r\n                    array[x+1] = array[z+1]\r\n                    array[z] = remainderArray[k2]\r\n                    array[z+1] = remainderArray[k2]\r\n                }\r\n                try{\r\n                    let slot2 = remainderArray[k2][10]\r\n                    if(slot2 == 1){\r\n                        insertedData100_Slot2_1.push(remainderArray[k2])\r\n                    }\r\n                    if(slot2 == 2){\r\n                        insertedData100_Slot2_2.push(remainderArray[k2])\r\n                    }\r\n                }catch{}\r\n            k2++   \r\n        }\r\n        }\r\n     \r\n            return array;\r\n            }\r\n     \r\n            var AntArrIns100 = AntAlgoInsert100(AntArr100);\r\n            //console.log(AntArrIns100);\r\n\r\n            const slot2Equal1for100= (array) => {\r\n                let k = 0;\r\n                let test2 = []\r\n                //console.log(insertedData50_Slot2_1)\r\n                \r\n                for(let x = 0; x< array.length; x++){\r\n                    if(array[x] == 100){\r\n                        if(k < insertedData100_Slot2_1.length){\r\n                            array[x] = insertedData100_Slot2_1[k]\r\n                        }\r\n                    k++   \r\n                    }\r\n                }\r\n                //console.log(test2)\r\n                return array;\r\n            }\r\n            slot2Equal1for100(AntArr100);\r\n\r\n            const slot2Equal2for100 = (array) => {\r\n                let k = 0;\r\n                for(let x = 0; x< array.length; x++){\r\n                    if(array[x] == 100 && array[x-1] ==100){\r\n                        if(k < insertedData100_Slot2_2.length){\r\n                            const q = Math.floor(Math.random()*(x+1));\r\n                                array[x] = array[q]\r\n                                array[x-1] = array[q-1]\r\n                                array[q] = insertedData100_Slot2_2[k]\r\n                                array[q-1] = insertedData100_Slot2_2[k]\r\n                        }else{\r\n                            if(insertedData100_Slot2_2[k] != undefined){\r\n                                extraData100_Slot2_2.push(insertedData100_Slot2_2[k])\r\n                            }\r\n                        }\r\n                        k++   \r\n                    }\r\n                }\r\n        \r\n                for(let x = array.length; x> 0; x--){\r\n                    if(array[x] == 100 && array[x-1] ==100){\r\n                        if(k < extraData100_Slot2_2.length){\r\n                            array[x] = extraData100_Slot2_2[k]\r\n                            array[x-1] = extraData100_Slot2_2[k]\r\n                        }\r\n                    k++   \r\n                    }\r\n                }\r\n                return array;\r\n            }\r\n            slot2Equal2for100(AntArr100);\r\n\r\n           const checkAmountData100 = (array) => {\r\n               let count = 0\r\n               for(let i = 0; i < array.length; i++){\r\n                       if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined){\r\n                           count += 1\r\n                       }\r\n               }\r\n               return count\r\n           }\r\n           var checkAmount = checkAmountData100(AntArrIns100)\r\n             console.log(AntArrIns100)\r\n             console.log(checkAmount);\r\n           // console.log(extraData100_Slot2_2)\r\n           // console.log(extraData100_Slot2_1)\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 100 but less than 200\r\n\r\n            //create 1d array for dataset 200\r\n            const array1D200 = (data) => {\r\n                var result = []\r\n            \r\n                for(let i = 0; i< data; i++){\r\n                    result[i]= 100;\r\n                }\r\n                return result;\r\n            }\r\n            var AntArr200 = array1D200(DataArray200);\r\n            //console.log(AntArr200);\r\n            \r\n            let extraData200_Slot2_2 = []\r\n            let extraData200_Slot2_1 = []\r\n            let insertedData200_Slot2_2 = []\r\n            let insertedData200_Slot2_1= []\r\n            \r\n            const AntAlgoInsert200 = (array) => {\r\n             let test = []\r\n             let k = 0;\r\n             let k2 =0\r\n             let k3 =0\r\n            \r\n             let remainderArray = []\r\n             let remainderArraySlot1 = []\r\n            \r\n             let totalRoom = array.length / 38\r\n            \r\n             for(let x=0; x<filterData200.length;x++){\r\n                 test.push(filterData200[x]);\r\n             }\r\n            \r\n              for(let i = array.length-1;i>0;i--){\r\n                 if(k < test.length){\r\n                     let hourMS = test[k][7]\r\n            \r\n                     if(hourMS == 4){\r\n                         let indexLoop = 1\r\n                        const j = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            if(array[i-1] == 100){\r\n                                array[i] = array[j];\r\n                                array[i-1] = array[j-1];\r\n                                array[j] = test[k];\r\n                                array[j-1] = test[k];\r\n                                \r\n                                if(indexLoop < totalRoom){\r\n                                    let loop38 = indexLoop*38\r\n                                    if( array[i+loop38-2]==100 && array[i+loop38-3]==100){\r\n                                        array[i+loop38-2] = test[k]         \r\n                                        array[i+loop38-3] = test[k]\r\n                                    }\r\n                                    else if( array[i+loop38+1]==100 && array[i+loop38+2]==100){\r\n                                        array[i+loop38+1] = test[k]         \r\n                                        array[i+loop38+2] = test[k]\r\n                                    }\r\n                                    else{\r\n                                        remainderArraySlot1.push(test[k])\r\n                                    }\r\n                                }indexLoop++\r\n            \r\n                            }\r\n                            else if(array[i+1] == 100 ){\r\n                                array[i] = array[j];\r\n                                array[i+1] = array[j+1];\r\n                                array[j] = test[k];\r\n                                array[j+1] = test[k];\r\n                                \r\n                                if(indexLoop < totalRoom){\r\n                                    let loop38 = indexLoop*38\r\n                                    if( array[i+loop38-2]==100 && array[i+loop38-3]==100){\r\n                                        array[i+loop38-2] = test[k]         \r\n                                        array[i+loop38-3] = test[k]\r\n                                    }\r\n                                    else if( array[i+loop38+1]==100 && array[i+loop38+2]==100){\r\n                                        array[i+loop38+1] = test[k]         \r\n                                        array[i+loop38+2] = test[k]\r\n                                    }\r\n                                    else{\r\n                                        remainderArraySlot1.push(test[k])\r\n                                    }\r\n                                }indexLoop++\r\n                            }\r\n                            else{\r\n                                remainderArray.push(test[k]);\r\n                                \r\n                            }\r\n                        }else{\r\n                            remainderArray.push(test[k]);\r\n                            \r\n                        }\r\n                         }\r\n            \r\n                     else if(hourMS == 3){\r\n                         const j = Math.floor(Math.random()*(i+1));\r\n                         if(array[i] == 100){\r\n                             if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                                 array[i] = array[j];\r\n                                 array[i-1] = array[j-1];\r\n                                 array[i+1] = array[j+1];\r\n                                 array[j] = test[k];\r\n                                 array[j-1] = test[k];\r\n                                 array[j+1] = test[k];\r\n                                 \r\n                             }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                                 array[i] = array[j];\r\n                                 array[i-1] = array[j-1];\r\n                                 array[j] = test[k];\r\n                                 array[j-1] = test[k];\r\n                                 insertedData200_Slot2_1.push(test[k])\r\n                                 \r\n                             }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                                 array[i] = array[j];\r\n                                 array[i+1] = array[j+1];\r\n                                 array[j] = test[k];\r\n                                 array[j+1] = test[k];\r\n                                 insertedData200_Slot2_1.push(test[k])\r\n                                 \r\n                             }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                                 array[i] = array[j];\r\n                                 array[j] = test[k];\r\n                                 remainderArraySlot1.push(test[k])\r\n                                 \r\n                             }\r\n                         }else{\r\n                             remainderArray.push(test[k]);\r\n                             \r\n                         }\r\n                         }\r\n            \r\n                      else if(hourMS == 2){\r\n                         const j = Math.floor(Math.random()*(i+1));\r\n                         if(array[i] == 100){\r\n                             if(array[i-1] == 100){\r\n                                 array[i] = array[j];\r\n                                 array[i-1] = array[j-1];\r\n                                 array[j] = test[k];\r\n                                 array[j-1] = test[k];\r\n                                 \r\n                             }else if(array[i+1] == 100){\r\n                                 array[i] = array[j];\r\n                                 array[i+1] = array[j+1];\r\n                                 array[j] = test[k];\r\n                                 array[j+1] = test[k];\r\n                                 \r\n                             }\r\n                             else{\r\n                                 remainderArray.push(test[k]);\r\n                                 \r\n                             }\r\n                         }else{\r\n                             remainderArray.push(test[k]);\r\n                         }\r\n                         }\r\n                     }\r\n                     k++  \r\n            }\r\n            \r\n            //fullfill the slot 3\r\n            for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x-1] ==100){\r\n                 if(k3 < remainderArraySlot1.length){\r\n                     const q = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[q]\r\n                         array[x-1] = array[q-1]\r\n                         array[q] = remainderArraySlot1[k3]\r\n                         array[q-1] = remainderArraySlot1[k3]\r\n                 }else{\r\n                     if(remainderArraySlot1[k3] != undefined){\r\n                         insertedData200_Slot2_2.push(remainderArraySlot1[k3])\r\n                     }\r\n                 }\r\n                 k3++   \r\n             }else if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k3 < remainderArraySlot1.length){\r\n                     const q = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[q]\r\n                         array[x+1] = array[q+1]\r\n                         array[q] = remainderArraySlot1[k3]\r\n                         array[q+1] = remainderArraySlot1[k3]\r\n                 }else{\r\n                     if(remainderArraySlot1[k3] != undefined){\r\n                         insertedData200_Slot2_2.push(remainderArraySlot1[k3])\r\n                     }\r\n                 }\r\n                 k3++   \r\n             }\r\n            }\r\n            \r\n            //console.log(remainderArray);\r\n            for(let x = 0; x< array.length; x++){\r\n                 if(array[x] == 100 && array[x-1] ==100){\r\n                     if(k2 < remainderArray.length){\r\n                         const z = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[z]\r\n                         array[x-1] = array[z-1]\r\n                         array[z] = remainderArray[k2]\r\n                         array[z-1] = remainderArray[k2]\r\n                     }\r\n                     try{\r\n                         let slot2 = remainderArray[k2][10]\r\n                         if(slot2 == 1){\r\n                             insertedData200_Slot2_1.push(remainderArray[k2])\r\n                         }\r\n                         if(slot2 == 2){\r\n                             insertedData200_Slot2_2.push(remainderArray[k2])\r\n                         }\r\n                     }catch{}\r\n                 k2++   \r\n             }else if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k2 < remainderArray.length){\r\n                     const z = Math.floor(Math.random()*(x+1));\r\n                     array[x] = array[z]\r\n                     array[x+1] = array[z+1]\r\n                     array[z] = remainderArray[k2]\r\n                     array[z+1] = remainderArray[k2]\r\n                 }\r\n                 try{\r\n                     let slot2 = remainderArray[k2][10]\r\n                     if(slot2 == 1){\r\n                         insertedData200_Slot2_1.push(remainderArray[k2])\r\n                     }\r\n                     if(slot2 == 2){\r\n                         insertedData200_Slot2_2.push(remainderArray[k2])\r\n                     }\r\n                 }catch{}\r\n             k2++   \r\n            }\r\n            }\r\n            \r\n             return array;\r\n             }\r\n            \r\n             var AntArrIns200 = AntAlgoInsert200(AntArr200);\r\n             //console.log(AntArrIns200);\r\n            \r\n             const slot2Equal1for200= (array) => {\r\n                 let k = 0;\r\n                 let test2 = []\r\n                 //console.log(insertedData50_Slot2_1)\r\n                 \r\n                 for(let x = 0; x< array.length; x++){\r\n                     if(array[x] == 100){\r\n                         if(k < insertedData200_Slot2_1.length){\r\n                             array[x] = insertedData200_Slot2_1[k]\r\n                         }\r\n                     k++   \r\n                     }\r\n                 }\r\n                 //console.log(test2)\r\n                 return array;\r\n             }\r\n             slot2Equal1for200(AntArr200);\r\n            \r\n             const slot2Equal2for200 = (array) => {\r\n                 let k = 0;\r\n                 for(let x = 0; x< array.length; x++){\r\n                     if(array[x] == 100 && array[x-1] ==100){\r\n                         if(k < insertedData200_Slot2_2.length){\r\n                             const q = Math.floor(Math.random()*(x+1));\r\n                                 array[x] = array[q]\r\n                                 array[x-1] = array[q-1]\r\n                                 array[q] = insertedData200_Slot2_2[k]\r\n                                 array[q-1] = insertedData200_Slot2_2[k]\r\n                         }else{\r\n                             if(insertedData200_Slot2_2[k] != undefined){\r\n                                 extraData200_Slot2_2.push(insertedData200_Slot2_2[k])\r\n                             }\r\n                         }\r\n                         k++   \r\n                     }\r\n                 }\r\n            \r\n                 for(let x = array.length; x> 0; x--){\r\n                     if(array[x] == 100 && array[x-1] ==100){\r\n                         if(k < extraData200_Slot2_2.length){\r\n                             array[x] = extraData200_Slot2_2[k]\r\n                             array[x-1] = extraData200_Slot2_2[k]\r\n                         }\r\n                     k++   \r\n                     }\r\n                 }\r\n                 return array;\r\n             }\r\n             slot2Equal2for200(AntArr200);\r\n            \r\n            const checkAmountData200 = (array) => {\r\n                let count = 0\r\n                for(let i = 0; i < array.length; i++){\r\n                        if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined){\r\n                            count += 1\r\n                        }\r\n                }\r\n                return count\r\n            }\r\n            var checkAmount = checkAmountData200(AntArrIns200)\r\n              console.log(AntArrIns200)\r\n              console.log(checkAmount);\r\n            // console.log(extraData200_Slot2_2)\r\n            // console.log(extraData200_Slot2_1)\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n   \r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 200 \r\n\r\n           //create 1d array for dataset 500\r\n           const array1D500 = (data) => {\r\n            var result = []\r\n\r\n            for(let i = 0; i< data; i++){\r\n                result[i]= 100;\r\n            }\r\n            return result;\r\n        }\r\n        var AntArr500 = array1D500(DataArray500);\r\n        //console.log(AntArr200);\r\n\r\n        let extraData500_Slot2_2 = []\r\n        let extraData500_Slot2_1 = []\r\n        let insertedData500_Slot2_2 = []\r\n        let insertedData500_Slot2_1= []\r\n        \r\n        const AntAlgoInsert500 = (array) => {\r\n         let test = []\r\n         let k = 0;\r\n         let k2 =0\r\n         let k3 =0\r\n         \r\n         //CHECK HMS 2\r\n         let slotin2_2_1 = []\r\n         let slotin2_2_2 = []\r\n         let slotin0_2_1 = []\r\n         let slotin0_2_2 = []\r\n  \r\n         //CHECK HMS 3\r\n         let slotin3_3_1 = []\r\n         let slotin2_3_1 = []\r\n         let slotin1_3_1 = []\r\n         let slotin0_3_1 = []\r\n  \r\n         \r\n          //CHECK HMS 4\r\n         let slotin2_4_1 = []\r\n         let slotin2_4_2 = []\r\n         let slotin0_4_1 = []\r\n         let slotin0_4_2 = []\r\n  \r\n         let remainderArray = []\r\n         let remainderArraySlot1 = []\r\n         for(let x=0; x<filterData500.length;x++){\r\n             test.push(filterData500[x]);\r\n         }\r\n  \r\n          for(let i = array.length-1;i>0;i--){\r\n              if(k < test.length){\r\n              let hourMS = test[k][7]\r\n              let slot1 = test[k][9]\r\n              let slot2 = test[k][10]\r\n              if(hourMS == 2){\r\n                  const j = Math.floor(Math.random()*(i+1));\r\n                  if(array[i] == 100){\r\n                      if(array[i-1] == 100){\r\n                          array[i] = array[j];\r\n                          array[i-1] = array[j-1];\r\n                          array[j] = test[k];\r\n                          array[j-1] = test[k];\r\n                          slotin2_2_1.push(test[k])\r\n                      }else if(array[i+1] == 100){\r\n                          array[i] = array[j];\r\n                          array[i+1] = array[j+1];\r\n                          array[j] = test[k];\r\n                          array[j+1] = test[k];\r\n                          slotin2_2_2.push(test[k])\r\n                      }\r\n                      else{\r\n                          remainderArray.push(test[k]);\r\n                          slotin0_2_1.push(test[k])\r\n                      }\r\n                  }else{\r\n                      remainderArray.push(test[k]);\r\n                      slotin0_2_2.push(test[k])\r\n                  }\r\n              }\r\n  \r\n              else if(hourMS == 3){\r\n                  const j = Math.floor(Math.random()*(i+1));\r\n                  if(array[i] == 100){\r\n                      if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                          array[i] = array[j];\r\n                          array[i-1] = array[j-1];\r\n                          array[i+1] = array[j+1];\r\n                          array[j] = test[k];\r\n                          array[j-1] = test[k];\r\n                          array[j+1] = test[k];\r\n                          slotin3_3_1.push(test[k])\r\n                      }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                          array[i] = array[j];\r\n                          array[i-1] = array[j-1];\r\n                          array[j] = test[k];\r\n                          array[j-1] = test[k];\r\n                          insertedData500_Slot2_1.push(test[k])\r\n                          slotin2_3_1.push(test[k])\r\n                      }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                          array[i] = array[j];\r\n                          array[i+1] = array[j+1];\r\n                          array[j] = test[k];\r\n                          array[j+1] = test[k];\r\n                          insertedData500_Slot2_1.push(test[k])\r\n                          slotin2_3_1.push(test[k])\r\n                      }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                          array[i] = array[j];\r\n                          array[j] = test[k];\r\n                          remainderArraySlot1.push(test[k])\r\n                          slotin1_3_1.push(test[k])\r\n                      }\r\n                  }else{\r\n                      remainderArray.push(test[k]);\r\n                      slotin0_3_1.push(test[k])\r\n                  }\r\n              }\r\n  \r\n               else if(hourMS == 4){\r\n                  const j = Math.floor(Math.random()*(i+1));\r\n                  if(array[i] == 100){\r\n                      if(array[i-1] == 100){\r\n                          array[i] = array[j];\r\n                          array[i-1] = array[j-1];\r\n                          array[j] = test[k];\r\n                          array[j-1] = test[k];\r\n                          slotin2_4_1.push(test[k])\r\n                      }else if(array[i+1] == 100 ){\r\n                          array[i] = array[j];\r\n                          array[i+1] = array[j+1];\r\n                          array[j] = test[k];\r\n                          array[j+1] = test[k];\r\n                          slotin2_4_2.push(test[k])\r\n                      }\r\n                      else{\r\n                          remainderArray.push(test[k]);\r\n                          slotin0_4_1.push(test[k])\r\n                      }\r\n                  }else{\r\n                      remainderArray.push(test[k]);\r\n                      slotin0_4_2.push(test[k])\r\n                  }\r\n              }\r\n          }\r\n          k++  \r\n      }\r\n  \r\n     //  let totalHMS2 = []\r\n     //  totalHMS2.push(slotin2_2_1)\r\n     //  totalHMS2.push(slotin2_2_2)\r\n     //  totalHMS2.push(slotin0_2_1)\r\n     //  totalHMS2.push(slotin0_2_2)\r\n     //   console.log(totalHMS2);\r\n  \r\n     //  let totalHMS3 = []\r\n     //  totalHMS3.push(slotin3_3_1)\r\n     //  totalHMS3.push(slotin2_3_1)\r\n     //  totalHMS3.push(slotin1_3_1)\r\n     //  totalHMS3.push(slotin0_3_1)\r\n     //   console.log(totalHMS3);\r\n  \r\n     //  let totalHMS4 = []\r\n     //  totalHMS4.push(slotin2_4_1)\r\n     //  totalHMS4.push(slotin2_4_2)\r\n     //  totalHMS4.push(slotin0_4_1)\r\n     //  totalHMS4.push(slotin0_4_2)\r\n     //   console.log(totalHMS4);\r\n  \r\n  \r\n      //  console.log(array);\r\n      // let count = 0\r\n      // for(let i = 0; i < array.length; i++){\r\n      //     if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined){\r\n      //         count += 1\r\n      //     }\r\n      // }\r\n      // console.log(count);\r\n  \r\n      //fullfill the slot 3\r\n      for(let x = 0; x< array.length; x++){\r\n          if(array[x] == 100 && array[x+1] ==100){\r\n              if(k3 < remainderArraySlot1.length){\r\n                  array[x] = remainderArraySlot1[k3]\r\n                  array[x+1] = remainderArraySlot1[k3]\r\n              }\r\n              k3++   \r\n          }\r\n      }\r\n  \r\n      //console.log(remainderArray);\r\n      for(let x = 0; x< array.length; x++){\r\n              if(array[x] == 100 && array[x+1] ==100){\r\n                  if(k2 < remainderArray.length){\r\n                      array[x] = remainderArray[k2]\r\n                      array[x+1] = remainderArray[k2]\r\n                  }\r\n                  try{\r\n                      let slot2 = remainderArray[k2][10]\r\n                      if(slot2 == 1){\r\n                          insertedData500_Slot2_1.push(remainderArray[k2])\r\n                      }\r\n                  }catch{}\r\n              k2++   \r\n          }\r\n      }\r\n  \r\n         return array;\r\n         }\r\n  \r\n         var AntArrIns500 = AntAlgoInsert500(AntArr500);\r\n         //console.log(AntArrIns100);\r\n\r\n         const slot2Equal1for500= (array) => {\r\n             let k = 0;\r\n             let test2 = []\r\n             //console.log(insertedData50_Slot2_1)\r\n             \r\n             for(let x = 0; x< array.length; x++){\r\n                 if(array[x] == 100){\r\n                     if(k < insertedData500_Slot2_1.length){\r\n                         array[x] = insertedData500_Slot2_1[k]\r\n                     }\r\n                 k++   \r\n                 }\r\n             }\r\n             //console.log(test2)\r\n             return array;\r\n         }\r\n         slot2Equal1for500(AntArr500);\r\n\r\n         const slot2Equal2for500 = (array) => {\r\n             let k = 0;\r\n             let test2 = []\r\n     \r\n             for(let x=0; x<filterData500.length;x++){\r\n                 if(filterData500[x][10] == 2){\r\n                     insertedData500_Slot2_2.push(filterData500[x]);\r\n                 }\r\n             }\r\n             for(let x = 0; x< array.length; x++){\r\n                 if(array[x] == 100 && array[x+1] ==100){\r\n                     if(k < insertedData500_Slot2_2.length){\r\n                         array[x] = insertedData500_Slot2_2[k]\r\n                         array[x+1] = insertedData500_Slot2_2[k]\r\n                     }\r\n                 k++   \r\n                 }\r\n             }\r\n             return array;\r\n         }\r\n         slot2Equal2for500(AntArr500);\r\n\r\n        const checkAmountData500 = (array) => {\r\n            let count = 0\r\n            for(let i = 0; i < array.length; i++){\r\n                    if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined){\r\n                        count += 1\r\n                    }\r\n            }\r\n            return count\r\n        }\r\n        var checkAmount = checkAmountData500(AntArrIns500)\r\n          console.log(AntArrIns500)\r\n          console.log(checkAmount);\r\n        // console.log(extraData500_Slot2_2)\r\n        // console.log(extraData500_Slot2_1)\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------------\r\n//Combine all dataset\r\nlet combineData = []\r\nconst combine = (data1,data2,data3,data4)  => {\r\n    for(let i = 0; i < data1.length; i++){\r\n        combineData.push(data1[i])\r\n    }\r\n    for(let i = 0; i < data2.length; i++){\r\n        combineData.push(data2[i])\r\n    }\r\n    for(let i = 0; i < data3.length; i++){\r\n        combineData.push(data3[i])\r\n    }\r\n    for(let i = 0; i < data4.length; i++){\r\n        combineData.push(data4[i])\r\n    }\r\n    return combineData;\r\n}\r\nlet dataCombine = combine(AntArr50,AntArr100,AntArr200,AntArr500)\r\n//console.log(dataCombine);\r\n\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n// Hard Constraint \r\n// H1: No student attend more than one class/ event at the same time\r\n// H2: The room is large enough to accomodate all of the student in attendace while also meeting the requirement \r\n// H3: At any given time, each room can onle have one course booked\r\n// H4: No student attend class during 12:00 pm -2:00 due to solat jumaat\r\n// H5: One teacher can only teach one class at one time.\r\n\r\n//Check for the H1 violation: same group attend more than 1 class at 1 time\r\n\r\nconst check1Group = (array) => {\r\n   let count =0\r\n   let indexArray = 0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       indexArray = (x * 38)\r\n   }\r\n   for(let i = 0; i<array.length ; i++){\r\n       try{\r\n           for(let x= 1 ; x <= totalRoom ; x++){\r\n               indexArray = (x * 38)\r\n               if(array[i+indexArray] != 100 && array[i+indexArray] != undefined ){\r\n                   try{\r\n                       if(array[i][6] == array[i+indexArray][6] && array[i+1][6] == array[i+indexArray+1][6] && array[i][3] == array[i+indexArray][3] && array[i+1][3] == array[i+indexArray+1][3] ){\r\n                            try{\r\n                                // console.log(array[i][6])\r\n                                // console.log(array[i+indexArray][6])\r\n                                count +=1\r\n                            }catch{}\r\n                       }\r\n                   }catch{}\r\n               }   \r\n           }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n}\r\nvar checkH1_50 = check1Group(AntArr50)\r\nvar checkH1_100 = check1Group(AntArr100)\r\nvar checkH1_200 = check1Group(AntArr200)\r\nvar checkH1_500 = check1Group(AntArr500)\r\nvar checkH1_ALL = check1Group(dataCombine)\r\nconsole.log(\"Hard Constraint 1 violation dataset50: \"+ checkH1_50);\r\nconsole.log(\"Hard Constraint 1 violation dataset100: \"+ checkH1_100);\r\nconsole.log(\"Hard Constraint 1 violation dataset200: \"+ checkH1_200);\r\nconsole.log(\"Hard Constraint 1 violation dataset 500: \"+ checkH1_500);\r\nconsole.log(\"Hard Constraint 1 violation All combine: \"+ checkH1_ALL);\r\n\r\n\r\n\r\n//Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\r\n\r\nconst checkRoomQuota = (array) => {\r\n   let count = 0\r\n   return count \r\n}\r\n// var checkH5_50 = checkRoomQuota(AntArr50)\r\n// var checkH5_100 = checkRoomQuota(AntArr100)\r\n// var checkH5_200 = checkRoomQuota(AntArr200)\r\n// var checkH5_500 = checkRoomQuota(AntArr500)\r\n\r\n\r\n//Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\r\nconst checkSolatJummat = (array) => {\r\n   let count = 0\r\n   return count \r\n}\r\n// var checkH5_50 = checkSolatJummat(AntArr50)\r\n// var checkH5_100 = checkSolatJummat(AntArr100)\r\n// var checkH5_200 = checkSolatJummat(AntArr200)\r\n// var checkH5_500 = checkSolatJummat(AntArr500)\r\n\r\n//Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\r\n\r\nconst check1Teacher = (array) => {\r\n   let count =0\r\n   let indexArray = 0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       indexArray = (x * 38)\r\n   }\r\n   for(let i = 0; i<array.length ; i++){\r\n       try{\r\n           for(let x= 1 ; x <= totalRoom ; x++){\r\n               indexArray = (x * 38)\r\n               if(array[i+indexArray] != 100 && array[i+indexArray] != undefined ){\r\n                   try{\r\n                       if(array[i][5] == array[i+indexArray][5] && array[i+1][5] == array[i+indexArray+1][5] ){\r\n                           count +=1\r\n                       }\r\n                   }catch{}\r\n               }    \r\n           }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n}\r\nvar checkH5_50 = check1Teacher(AntArr50)\r\nvar checkH5_100 = check1Teacher(AntArr100)\r\nvar checkH5_200 = check1Teacher(AntArr200)\r\nvar checkH5_500 = check1Teacher(AntArr500)\r\nvar checkH5_ALL = check1Teacher(dataCombine)\r\nconsole.log(\"Hard Constraint 5 violation dataset50: \"+ checkH5_50);\r\nconsole.log(\"Hard Constraint 5 violation dataset100: \"+ checkH5_100);\r\nconsole.log(\"Hard Constraint 5 violation dataset200: \"+ checkH5_200);\r\nconsole.log(\"Hard Constraint 5 violation dataset500: \"+ checkH5_500);\r\nconsole.log(\"Hard Constraint 5 violation Combine All: \"+ checkH5_ALL);\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n// Soft Constraint \r\n// S1: A student has a class schedule toward the end of the day\r\n// S2: A student have more than two class in a row\r\n\r\n\r\n//Check for the S1 violation: student have class at the end of the day\r\nconst checkEndOfClass = (array) => {\r\n   let count =0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       let indexArray = (x * 38)-1\r\n       if(array[indexArray] != 100 ){\r\n           count = 1\r\n       }\r\n   }\r\n   return count\r\n\r\n}\r\n// var checkS1_50 = checkEndOfClass(AntArr50)\r\n// var checkS1_100 = checkEndOfClass(AntArr100)\r\n// var checkS1_200 = checkEndOfClass(AntArr200)\r\n// var checkS1_500 = checkEndOfClass(AntArr500)\r\n// console.log(\"Soft Constraint 1 violation: \"+ checkS1_50);\r\n// console.log(\"Soft Constraint 1 violation: \"+ checkS1_100);\r\n// console.log(\"Soft Constraint 1 violation: \"+ checkS1_200);\r\n// console.log(\"Soft Constraint 1 violation: \"+ checkS1_500);\r\n\r\n//Check for the S2 violation: student have 2 class in a row\r\n\r\nconst check2ClassInARow = (array) => {\r\n   let count =0\r\n   for(let i = 0; i < array[i].length; i++){\r\n       if(array[i+2] != 100){\r\n           count = 1\r\n       }\r\n   }\r\n   return count\r\n\r\n}\r\n// var checkS2_50 = check2ClassInARow(AntArr50)\r\n// var checkS2_100 = check2ClassInARow(AntArr100)\r\n// var checkS2_200 = check2ClassInARow(AntArr200)\r\n// var checkS2_500 = check2ClassInARow(AntArr500)\r\n// console.log(\"Soft Constraint 2 violation: \"+ checkS2_50);\r\n// console.log(\"Soft Constraint 2 violation: \"+ checkS2_100);\r\n// console.log(\"Soft Constraint 2 violation: \"+ checkS2_200);\r\n// console.log(\"Soft Constraint 2 violation: \"+ checkS2_500);\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n//Check total Hard Constraint\r\n\r\nconst checkTotalHardContraint = () => {\r\n   let count =0\r\n   let totalH1 = checkH1_50 + checkH1_100 + checkH1_200 + checkH1_500\r\n   let totalH2 = checkH5_50 + checkH5_100 + checkH5_200 + checkH5_500\r\n   if(totalH1 != 0){\r\n       count +=1\r\n   }\r\n   if(totalH2 != 0){\r\n       count +=1\r\n   }   \r\n   return count\r\n}\r\n// console.log(AntArrIns50)\r\n// console.log(AntArrIns100)\r\n// console.log(AntArrIns200)\r\n// console.log(AntArrIns500)\r\nvar checkTotalHardContraints = checkTotalHardContraint()\r\nconsole.log(\"Total Hard Constraint: \"+checkTotalHardContraints)\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n// const checkTotalSoftContraint = () => {\r\n//     let count =0\r\n//     let totalS1 = checkS1_50 + checkS1_100 + checkS1_200 + checkS1_500\r\n//     let totalS2 = checkS2_50 + checkS2_100 + checkS2_200 + checkS2_500\r\n//     if(totalS1 != 0){\r\n//         count +=1\r\n//     }\r\n//     if(totalS2 != 0){\r\n//         count +=1\r\n//     }   \r\n//     return count\r\n// }\r\n// var checkTotalSoftContraints = checkTotalSoftContraint()\r\n// console.log(\"Total Soft Constraint: \"+checkTotalSoftContraints)\r\n\r\nconst HS0 = () => {\r\n   if(checkTotalHardContraints == 0){\r\n    //    console.log(Slot2_1_50)\r\n    //    console.log(Slot2_1_100)\r\n    //    console.log(Slot2_1_200)\r\n    //    console.log(Slot2_1_500)\r\n       console.log(checkTotalHardContraints)\r\n       //console.log(checkTotalSoftContraints)\r\n   }\r\n   // return {Slot2_1_50,Slot2_1_100,Slot2_1_200,Slot2_1_500,checkTotalHardContraints, checkTotalSoftContraints}\r\n}\r\n    return HS0()\r\n   //  return {Slot2_1_50,Slot2_1_100,Slot2_1_200,Slot2_1_500,checkTotalHardContraints, checkTotalSoftContraints}\r\n}\r\n// -------------------------------------------------------------------------------------------------------------------------------------------\r\nlet returnData50 = []\r\nlet returnData100 = []\r\nlet returnData200 = []\r\nlet returnData500 = []\r\n\r\nfor(let i= 1; i <= 1; i++){\r\n    console.log(\"iterantion: \" + i)\r\n    //  if(antSystem().checkTotalHardContraints == 0){\r\n    //     // console.log(antSystem().Slot2_1_50)\r\n    //     // console.log(antSystem().Slot2_1_100)\r\n    //     // console.log(antSystem().Slot2_1_200)\r\n    //     // console.log(antSystem().Slot2_1_500)\r\n    //     returnData50.push(antSystem().Slot2_1_50)\r\n    //     returnData100.push(antSystem().Slot2_1_100)\r\n    //     returnData200.push(antSystem().Slot2_1_200)\r\n    //     returnData500.push(antSystem().Slot2_1_500)\r\n\r\n    // //     console.log( antSystem().checkTotalHardContraints)\r\n    // //     console.log( antSystem().checkTotalSoftContraints)\r\n    // //     console.log(\"iterantion: \" + i)\r\n    // //     //return true;\r\n    //      break\r\n    //  }\r\n    antSystem();\r\n}\r\n\r\n// console.log(returnData50[0])\r\n// console.log(returnData100[0])\r\n// console.log(returnData200[0])\r\n// console.log(returnData500[0])\r\n\r\n// let weekday = ['Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday',\r\n// 'Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday',\r\n// 'Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday',\r\n// 'Friday','Friday','Friday','Friday','Friday','Friday','Friday','Friday']\r\n\r\n\r\n\r\n\r\n// const create2dArray = (weekdayArray,partDay,array50, part50,array100, part100,array200, part200,array500, part500) => {\r\n//     var tmp = [];\r\n\r\n//     for(var i = 0; i < weekdayArray.length; i += partDay) {\r\n//         tmp.push(weekdayArray.slice(i, i + partDay));\r\n//     }\r\n//     for(var i = 0; i < array50.length; i += part50) {\r\n//         tmp.push(array50.slice(i, i + part50));\r\n//     }\r\n//     for(var i = 0; i < array100.length; i += part100) {\r\n//         tmp.push(array100.slice(i, i + part100));\r\n//     }\r\n//     for(var i = 0; i < array200.length; i += part200) {\r\n//         tmp.push(array200.slice(i, i + part200));\r\n//     }\r\n//     for(var i = 0; i < array500.length; i += part500) {\r\n//         tmp.push(array500.slice(i, i + part500));\r\n//     }\r\n//     return tmp;\r\n// }\r\n// console.log(create2dArray50(returnData50[0], 38));\r\n// console.log(create2dArray100(returnData100[0], 38));\r\n// console.log(create2dArray200(returnData200[0], 38));\r\n// console.log(create2dArray500(returnData500[0], 38));\r\n\r\n// let dataset50 = create2dArray50(returnData50[0], 38)\r\n// let dataset100 = create2dArray100(returnData100[0], 38)\r\n// let dataset200 = create2dArray200(returnData200[0], 38)\r\n// let dataset500 = create2dArray500(returnData500[0], 38)\r\n\r\n//let dataset = create2dArray(weekday,38,returnData50[0], 38, returnData100[0], 38,returnData200[0], 38,returnData500[0], 38)\r\n//console.log(dataset);\r\n\r\n// let completeDataset = []\r\n\r\n// completeDataset.push(dataset50)\r\n// completeDataset.push(dataset100)\r\n// completeDataset.push(dataset200)\r\n// completeDataset.push(dataset500)\r\n// console.log(completeDataset);\r\n\r\n//finalData.push(dataset);\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n        }\r\n        // let headers = [\r\n        //     { label: \"Monday\", key:\"Monday\"  },\r\n        //     { label: \"Tuesday\", key:\"Tuesday\" },\r\n        //     { label: \"Thursday\", key:\"Thursday\"  },\r\n        //     { label: \"Friday\", key:\"Friday\"  },\r\n        //     // { label: \"Room\", key: \"Room\" },\r\n        //     // { label: \"Size\", key: \"Size\" },\r\n        //     // { label: \"Slot\", key: \"Slot\" }\r\n        //   ];\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {/* <Dataset  ertCourse={Course}/> */}\r\n            {/* {!isLoading && loadedFile} */}\r\n            <h1>\r\n                Generate Schedule Page\r\n                {/* { CsvData && CsvData.map((Dataset) =>(<CSVLink data = {Dataset} headers={headers}>Download me</CSVLink>))} */}\r\n                {/* {isLoading && <div className=\"center\"><LoadingSpinner/></div>} */}\r\n                {/* <CSVLink data={finalData} filename={\"my-file.csv\"}  headers={headers}> Download me </CSVLink>; */}\r\n            </h1>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default ArraySchedule;\r\n\r\n\r\n//result[i][j]=Course.splice(Math.floor(Math.random()* Course.length),1)[0] // create random placement of Course Value\r\n//const Schedule = new Array(10).fill(Array(5).fill(null));\r\n//console.log(Schedule);\r\n// const Course = [['TE1',4],['TE1',4],['TE1',4],['TE1',3],['TE1',4],['TE1',2],['TE1',4],['TE1',4],['TE1',4],['TE1',3]];\r\n//const Course = [['TE1',2],['TE2',2],['TE3',3],['TE4',4],['TE5',3],['TE6',4],['TE7',4],['TE8',2],['TE9',4]];\r\n//const Course = ['TE1','TE2','TE3','TE4','TE5','TE6','TE7','TE8','TE9'];"]},"metadata":{},"sourceType":"module"}