{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acit\\\\Desktop\\\\FYP Code\\\\FYP Code\\\\frontend\\\\src\\\\components\\\\UploadPage\\\\UploadFile.js\";\nimport React, { useCallback } from \"react\";\nimport { parse } from \"papaparse\";\nimport { useDropzone } from 'react-dropzone';\nimport './UploadFile.css';\n\nconst UploadFile = () => {\n  const onDrop = useCallback(acceptedFiles => {\n    Array.from(acceptedFiles.files).filter(file => file.type === \"text/csv\").forEach(async file => {\n      const text = await file.text();\n      const result = parse(text, {\n        header: true\n      });\n      setContacts(existing => [...existing, ...result.data]);\n    });\n    console.log(acceptedFiles);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  })), isDragActive ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"Drop the files here ...\") : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Drag 'n' drop some files here, or click to select files\"));\n};\n\nexport default UploadFile;","map":{"version":3,"sources":["C:/Users/acit/Desktop/FYP Code/FYP Code/frontend/src/components/UploadPage/UploadFile.js"],"names":["React","useCallback","parse","useDropzone","UploadFile","onDrop","acceptedFiles","Array","from","files","filter","file","type","forEach","text","result","header","setContacts","existing","data","console","log","getRootProps","getInputProps","isDragActive"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAAQC,KAAR,QAAoB,WAApB;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AAEA,OAAO,kBAAP;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,MAAM,GAAGJ,WAAW,CAACK,aAAa,IAAI;AAC1CC,IAAAA,KAAK,CAACC,IAAN,CAAWF,aAAa,CAACG,KAAzB,EAAgCC,MAAhC,CAAwCC,IAAD,IAAQA,IAAI,CAACC,IAAL,KAAa,UAA5D,EAAwEC,OAAxE,CAAgF,MAAOF,IAAP,IAAc;AAC5F,YAAMG,IAAI,GAAG,MAAMH,IAAI,CAACG,IAAL,EAAnB;AACA,YAAMC,MAAM,GAAGb,KAAK,CAACY,IAAD,EAAO;AAACE,QAAAA,MAAM,EAAC;AAAR,OAAP,CAApB;AACAC,MAAAA,WAAW,CAAEC,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAc,GAAGH,MAAM,CAACI,IAAxB,CAAf,CAAX;AACD,KAJD;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYf,aAAZ;AACD,GAPyB,EAOvB,EAPuB,CAA1B;AASA,QAAM;AAACgB,IAAAA,YAAD;AAAeC,IAAAA,aAAf;AAA8BC,IAAAA;AAA9B,MAA8CrB,WAAW,CAAC;AAACE,IAAAA;AAAD,GAAD,CAA/D;AAEA,sBACE,6CAASiB,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAGIC,YAAY,gBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADU,gBAEV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DALN,CADF;AAUD,CAtBD;;AAwBA,eAAepB,UAAf","sourcesContent":["import React, { useCallback } from \"react\";\r\nimport {parse} from \"papaparse\";\r\nimport {useDropzone} from 'react-dropzone';\r\n\r\nimport './UploadFile.css';\r\n\r\nconst UploadFile = () => {\r\n  const onDrop = useCallback(acceptedFiles => { \r\n    Array.from(acceptedFiles.files).filter((file)=>file.type ===\"text/csv\").forEach(async (file)=>{\r\n      const text = await file.text();\r\n      const result = parse(text, {header:true});\r\n      setContacts((existing) => [...existing, ...result.data]);\r\n    })\r\n    console.log(acceptedFiles);\r\n  }, [])\r\n\r\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop});\r\n\r\n  return (\r\n    <div {...getRootProps()}>\r\n      <input {...getInputProps()} />\r\n      {\r\n        isDragActive ?\r\n          <p>Drop the files here ...</p> :\r\n          <p>Drag 'n' drop some files here, or click to select files</p>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UploadFile;"]},"metadata":{},"sourceType":"module"}