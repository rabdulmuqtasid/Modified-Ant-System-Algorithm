{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acit\\\\Desktop\\\\FYP Code\\\\FYP Code\\\\frontend\\\\src\\\\components\\\\GenerateSchedulePage\\\\GenerateScheduleElective.js\";\nimport { concat, create, find, forEach, indexOf } from \"lodash\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport _ from 'lodash';\nimport { CSVLink } from \"react-csv\";\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\nlet finalDataAll = [];\nlet finalDataAllElective = [];\nlet checkHardConstraintOutsite = 0;\nlet checkSoftConstraintOutsite = 0;\n\nconst ArrayScheduleElective = props => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedFile, setLoaadedFile] = useState(false);\n  const [roomData, setroomData] = useState();\n  const [courseData, setcourseData] = useState();\n  const [CsvData, setCsvData] = useState(); // const [Keys, setKeys] = useState();\n  //const [uploadedData, setUploadedData] = useState([]);\n  //console.log(\"props dataset:\"+ props.test)\n\n  const userId = useParams().userId;\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875'); //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\n        //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\n\n        const responsedata = await response.json();\n        let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset); // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\n\n        const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Room'], Dataset['Size']]); //Extract Room\n\n        setroomData([ertRoom]);\n        const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'], Dataset['Course Code'], Dataset['Course Name'], Dataset['Year'], Dataset['Semester'], Dataset['Lecturer'], Dataset['Group'], Dataset['HMS'], Dataset['Programme Code'], Dataset['Slot1'], Dataset['Slot2']]); //Extract Enrollment Quota\n\n        setcourseData([ertCourse]);\n\n        if (!response.ok) {\n          throw new Error(responsedata.message);\n        }\n\n        setLoaadedFile(stringifyData);\n        setIsLoading(true);\n      } catch (err) {\n        console.log(err.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, [userId]);\n\n  if (!isLoading && loadedFile) {\n    const testData = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const EnrollmentQuota = [];\n    const CourseCode = [];\n    const HMS = [];\n    const lecturerData = [];\n    const roomName = [];\n    const roomSize = [];\n    const filterData50 = [];\n    const filterData100 = [];\n    const filterData200 = [];\n    const filterData500 = [];\n    const filterDataElective50 = [];\n    const filterDataElective100 = [];\n    const filterDataElective200 = [];\n    const filterDataElective500 = [];\n    const dupeData = [];\n    const room = [];\n    room.push(roomData[0]);\n    let hardConstraintViolated = 0;\n    let softConstraintViolated = 0; //console.log(courseData[0][0][1]);\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      let enrollment = [courseData[0][i][0]];\n      let code = [courseData[0][i][1]];\n      let hms = [courseData[0][i][7]];\n      let lecturer = [courseData[0][i][5]];\n      enrollment.reduce(function (results, item, index, array) {\n        results[index] = item;\n        EnrollmentQuota.push(item); //console.log(results)\n      }, {});\n      code.reduce(function (results, item, index, array) {\n        results[index] = item;\n        CourseCode.push(item); //console.log(results)\n      }, {});\n      hms.reduce(function (results, item, index, array) {\n        results[index] = item;\n        HMS.push(item); //console.log(results)\n      }, {});\n      lecturer.reduce(function (results, item, index, array) {\n        results[index] = item;\n        lecturerData.push(item); //console.log(results)\n      }, {});\n    }\n\n    for (let i = 0; i < roomData[0].length; i++) {\n      let name = [roomData[0][i][0]];\n      let size = [roomData[0][i][1]];\n      name.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomName.push(item); //console.log(results)\n      }, {});\n      size.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomSize.push(item); //console.log(results)\n      }, {});\n    }\n\n    const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\n    const notDuplicatesLecturer = lecturerData.filter((item, index) => index == lecturerData.indexOf(item));\n    notDuplicatesLecturer.pop(); //console.log(notDuplicatesLecturer)\n\n    let courseDataXElective = [];\n    let courseDataWithElective = [];\n    courseData[0].pop(); //saparate faculty course with the elective course\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      if (courseData[0][i][1].slice(0, 3) != 'TMU') {\n        courseData[0][i].splice();\n\n        if (courseData[0][i][1].slice(0, 3) != 'TMX') {\n          courseData[0][i].splice();\n          courseDataXElective.push(courseData[0][i]);\n        }\n      }\n    } //saparate elective course with the faculty course\n\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      if (courseData[0][i][1].slice(0, 3) == 'TMU' || courseData[0][i][1].slice(0, 3) == 'TMX') {\n        courseDataWithElective.push(courseData[0][i]);\n      }\n    } //insert data without elective courses into correct room capacity\n\n\n    for (let i = 0; i < courseDataXElective.length; i++) {\n      if (courseDataXElective[i][0] < 50) {\n        filterData50.push(courseDataXElective[i]);\n      }\n\n      if (courseDataXElective[i][0] >= 50 && courseDataXElective[i][0] < 100) {\n        filterData100.push(courseDataXElective[i]);\n      }\n\n      if (courseDataXElective[i][0] >= 100 && courseDataXElective[i][0] < 200) {\n        filterData200.push(courseDataXElective[i]);\n      }\n\n      if (courseDataXElective[i][0] >= 200 && courseDataXElective[i][0] < 500) {\n        filterData500.push(courseDataXElective[i]);\n      }\n    } //console.log(filterData50)\n    //insert data without faculty courses into correct room capacity\n\n\n    for (let i = 0; i < courseDataWithElective.length; i++) {\n      if (courseDataWithElective[i][0] < 50) {\n        filterDataElective50.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 50 && courseDataWithElective[i][0] < 100) {\n        filterDataElective100.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 100 && courseDataWithElective[i][0] < 200) {\n        filterDataElective200.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 200 && courseDataWithElective[i][0] < 500) {\n        filterDataElective500.push(courseDataWithElective[i]);\n      }\n    } // console.log(filterDataElective50);\n    // console.log(filterDataElective100);\n    // console.log(filterDataElective200);\n    // console.log(filterDataElective500);\n\n\n    let roomUnder50 = [];\n    let roomUnder100 = [];\n    let roomUnder200 = [];\n    let roomUnder500 = [];\n\n    const checkNumberofRoom = () => {\n      for (let i = 0; i < roomData[0].length; i++) {\n        let room = roomData[0][i][1]; //console.log(roomData[0][i][1]);\n\n        if (room < 50) {\n          roomUnder50.push(room);\n        } else if (room > 50 && room < 100) {\n          roomUnder100.push(room);\n        } else if (room > 100 && room < 200) {\n          roomUnder200.push(room);\n        } else if (room > 200) {\n          roomUnder500.push(room);\n        }\n      }\n    };\n\n    checkNumberofRoom();\n\n    const createArray = data => {\n      var result = [];\n\n      for (let i = 0; i < data; i++) {\n        result[i] = [];\n      }\n\n      return result;\n    };\n\n    let DataArray50 = roomUnder50.length * 38;\n    let DataArray100 = roomUnder100.length * 38;\n    let DataArray200 = roomUnder200.length * 38;\n    let DataArray500 = roomUnder500.length * 38;\n    let combineArray = DataArray50 + DataArray100 + DataArray200 + DataArray500;\n    let startIndex100 = DataArray50 - 1;\n    let startIndex200 = DataArray50 + DataArray100 - 1;\n    let startIndex500 = DataArray50 + DataArray100 + DataArray200 - 1;\n    let DataArrayElective50 = roomUnder50.length * 10;\n    let DataArrayElective100 = roomUnder100.length * 10;\n    let DataArrayElective200 = roomUnder200.length * 10;\n    let DataArrayElective500 = roomUnder500.length * 10;\n    let combineArrayElective = DataArrayElective50 + DataArrayElective100 + DataArrayElective200 + DataArrayElective500; //----------------------------------------------------------------------------------------------------------------------------------------\n\n    var checkTotalHardContraintsAll = 0;\n    var checkTotalSoftContraintsAll = 0;\n\n    const antSystem = () => {\n      const checking_minus_1 = (array, array2, data) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u-1] != 100 && array[u-1][5] == data[5]){\n            if (array[u] != 100 && data[5] != array[u][5] || data[6] == array[u][6] && array[u - 1] != 100 && data[5] == array[u - 1][5] || data[6] == array[u - 1][6]) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray - 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray - 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray - 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray - 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            //if( array2[u] != 100 && array2[u][5] == data[5] && array2[u-1] != 100 && array2[u-1][5] == data[5]){\n            if (array2[u] != 100 && data[5] != array2[u][5] || data[6] == array2[u][6] && array2[u - 1] != 100 && data[5] == array2[u - 1][5] || data[6] == array2[u - 1][6]) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray2 = b * 38;\n\n                if (array2[u + indexArray2] == 100 && array2[u + indexArray2 - 1] == 100) {\n                  array2[u + indexArray2] = 0;\n                  array2[u + indexArray2 - 1] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100 && array2[u - indexArray2 - 1] == 100) {\n                  array2[u - indexArray2] = 0;\n                  array2[u - indexArray2 - 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const checking_plus_1 = (array, array2, data) => {\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\n            if (array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6] && array[u + 1] != 100 && data[5] == array[u + 1][5] || data[6] == array[u + 1][6]) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray + 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray + 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray + 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            //if( array2[u] != 100 && array2[u][5] == data[5] && array2[u+1] != 100 && array2[u+1][5] == data[5]){\n            if (array2[u] != 100 && data[5] == array2[u][5] || data[6] == array2[u][6] && array2[u + 1] != 100 && data[5] == array2[u + 1][5] || data[6] == array2[u + 1][6]) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray2 = b * 38;\n\n                if (array2[u + indexArray2] == 100 && array2[u + indexArray2 + 1] == 100) {\n                  array2[u + indexArray2] = 0;\n                  array2[u + indexArray2 + 1] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100 && array2[u - indexArray2 + 1] == 100) {\n                  array2[u - indexArray2] = 0;\n                  array2[u - indexArray2 + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const checking_3 = (array, array2, data) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u-1] != 100 && array[u-1][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\n            if (array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6] && array[u - 1] != 100 && data[5] == array[u - 1][5] && array[u + 1] != 100 && data[5] == array[u + 1][5] || data[6] == array[u - 1][6] && array[u + 1] != 100 && data[6] == array[u + 1][6]) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray - 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray - 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray - 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray - 1] = 0;\n                }\n\n                if (array[u + indexArray] == 100 && array[u + indexArray + 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray + 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray + 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            //if( array2[u] != 100 && array2[u][5] == data[5] && array2[u-1] != 100 && array2[u-1][5] == data[5] && array2[u+1] != 100 && array2[u+1][5] == data[5]){\n            if (array2[u] != 100 && data[5] == array2[u][5] || data[6] == array2[u][6] && array2[u - 1] != 100 && data[5] == array2[u - 1][5] && array2[u + 1] != 100 && data[5] == array2[u + 1][5] || data[6] == array2[u - 1][6] && array2[u + 1] != 100 && data[6] == array2[u + 1][6]) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray2 = b * 38;\n\n                if (array2[u + indexArray2] == 100 && array2[u + indexArray2 - 1] == 100) {\n                  array2[u + indexArray2] = 0;\n                  array2[u + indexArray2 - 1] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100 && array2[u - indexArray2 - 1] == 100) {\n                  array2[u - indexArray2] = 0;\n                  array2[u - indexArray2 - 1] = 0;\n                }\n\n                if (array2[u + indexArray2] == 100 && array2[u + indexArray2 + 1] == 100) {\n                  array2[u + indexArray2] = 0;\n                  array2[u + indexArray2 + 1] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100 && array2[u - indexArray2 + 1] == 100) {\n                  array2[u - indexArray2] = 0;\n                  array2[u - indexArray2 + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const checking_only_1 = (array, array2, data) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            if (array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]) {\n              for (let b = 0; b < totalRoom; b++) {\n                if (array[u + 38 * b] == 100) {\n                  array[u + 38 * b] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            if (array2[u] != 100 && data[5] == array2[u][5] || data[6] == array2[u][6]) {\n              for (let b = 0; b < totalRoom2; b++) {\n                if (array2[u + 38 * b] == 100) {\n                  array2[u + 38 * b] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const changeRowtoZero_minus_1 = (array, array2, index1, index2) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray - 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray - 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray - 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray - 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray2 = b * 38;\n\n                if (array2[u + indexArray2] == 100 && array2[u + indexArray2 - 1] == 100) {\n                  array2[u + indexArray2] = 0;\n                  array2[u + indexArray2 - 1] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100 && array2[u - indexArray2 - 1] == 100) {\n                  array2[u - indexArray2] = 0;\n                  array2[u - indexArray2 - 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const changeRowtoZero_plus_1 = (array, array2, index1, index2) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray + 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray + 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray + 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray2 = b * 38;\n\n                if (array2[u + indexArray2] == 100 && array2[u + indexArray2 + 1] == 100) {\n                  array2[u + indexArray2] = 0;\n                  array2[u + indexArray2 + 1] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100 && array2[u - indexArray2 + 1] == 100) {\n                  array2[u - indexArray2] = 0;\n                  array2[u - indexArray2 + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const changeRowtoZero_1 = (array, array2, index1) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            if (u == index1) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100) {\n                  array[u + indexArray] = 0;\n                }\n\n                if (array[u - indexArray] == 100) {\n                  array[u - indexArray] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            if (u == index1) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray2 = b * 38;\n\n                if (array2[u + indexArray2] == 100) {\n                  array2[u + indexArray2] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100) {\n                  array2[u - indexArray2] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const changeRowtoZero_3_ = (array, array2, index1, index2, index3) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2 && u + 1 == index3) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray - 1] == 100 && array[u + indexArray + 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray - 1] = 0;\n                  array[u + indexArray + 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray - 1] == 100 && array[u - indexArray + 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray - 1] = 0;\n                  array[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2 && u + 1 == index3) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray = b * 38;\n\n                if (array2[u + indexArray] == 100 && array2[u + indexArray - 1] == 100 && array2[u + indexArray + 1] == 100) {\n                  array2[u + indexArray] = 0;\n                  array2[u + indexArray - 1] = 0;\n                  array2[u + indexArray + 1] = 0;\n                }\n\n                if (array2[u - indexArray] == 100 && array2[u - indexArray - 1] == 100 && array2[u - indexArray + 1] == 100) {\n                  array2[u - indexArray] = 0;\n                  array2[u - indexArray - 1] = 0;\n                  array2[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const changeToZero = array => {\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            array[i] = 100;\n          }\n        }\n\n        return array;\n      };\n\n      const checkTest = (array, array2, data1) => {\n        let count = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          let indexArray = x * 38;\n\n          try {\n            for (let i = 1; i < array.length; i++) {\n              //if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 1 && array[i+indexArray] != 0 ){\n              try {\n                if (data1 == array[i][5]) {\n                  if (array[i + indexArray] == 100) {\n                    array[i + indexArray] = 0;\n                  }\n                }\n              } catch {} //}    \n\n            }\n          } catch {}\n        }\n\n        for (let x = 1; x <= totalRoom2; x++) {\n          let indexArray2 = x * 38;\n\n          try {\n            for (let i = 1; i < array2.length; i++) {\n              //if(array2[i+indexArray2] != 100 && array2[i+indexArray2] != undefined && array2[i+indexArray2] != 1 && array2[i+indexArray2] != 0 ){\n              try {\n                if (data1 == array2[i][5]) {\n                  if (array2[i + indexArray2] == 100) {\n                    array2[i + indexArray2] = 0;\n                  }\n                }\n              } catch {} //}    \n\n            }\n          } catch {}\n        }\n\n        return array;\n      }; //___________________________________________________________________________________________________________________________________\n\n\n      const array1DElectiveCombine = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrCombine = array1DElectiveCombine(combineArrayElective);\n\n      const array1DElective50 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective50 = array1DElective50(DataArrayElective50);\n      let insertedDataElective50_Slot2_2 = [];\n      let insertedDataElective50_Slot2_1 = [];\n\n      const AntAlgoInsertElective50 = (array, combine) => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let k4 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let remainderArray3 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterDataElective50.length; x++) {\n          test.push(filterDataElective50[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            changeToZero(array);\n            changeToZero(combine);\n\n            if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n              checking_3(combine, array, test[k]);\n\n              if (array[i] == 100 && array[i - 1] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i - 1] = array[j - 1];\n                array[i + 1] = array[j + 1];\n                array[j] = test[k];\n                array[j - 1] = test[k];\n                array[j + 1] = test[k];\n                combine[j] = test[k];\n                combine[j - 1] = test[k];\n                combine[j + 1] = test[k];\n                changeRowtoZero_3_(combine, array, i, i - 1, i + 1);\n              } else {\n                remainderArray3.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              checking_minus_1(combine, array, test[k]);\n              checking_plus_1(combine, array, test[k]);\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  combine[j] = test[k];\n                  combine[j - 1] = test[k];\n                  changeRowtoZero_minus_1(combine, array, i, i - 1);\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  combine[j] = test[k];\n                  combine[j + 1] = test[k];\n                  changeRowtoZero_plus_1(combine, i, i + 1);\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 4) {\n              checking_minus_1(combine, array, test[k]);\n              checking_plus_1(combine, array, test[k]);\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100 && array[i - 1] == 100) {\n                array[i] = array[j];\n                array[i - 1] = array[j - 1];\n                array[j] = test[k];\n                array[j - 1] = test[k];\n                combine[j] = test[k];\n                combine[j - 1] = test[k];\n                changeRowtoZero_minus_1(combine, array, j, j - 1);\n\n                if (array[i] == 100 && array[i - 1] == 100) {\n                  //checking_minus_1(array,test[k]);\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  combine[j] = test[k];\n                  combine[j - 1] = test[k];\n                  changeRowtoZero_minus_1(combine, array, j, j - 1);\n                } else if (array[i] == 100 && array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  combine[j] = test[k];\n                  combine[j + 1] = test[k];\n                  changeRowtoZero_plus_1(combine, array, j, j - 1);\n                } else {\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else if (array[i] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i + 1] = array[j + 1];\n                array[j] = test[k];\n                array[j + 1] = test[k];\n                combine[j] = test[k];\n                combine[j + 1] = test[k];\n                changeRowtoZero_plus_1(combine, array, i, i - 1);\n\n                if (array[i] == 100 && array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  combine[j] = test[k];\n                  combine[j - 1] = test[k];\n                  changeRowtoZero_minus_1(combine, array, j, j - 1);\n                } else if (array[i] == 100 && array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  combine[j] = test[k];\n                  combine[j + 1] = test[k];\n                  changeRowtoZero_plus_1(combine, array, j, j - 1);\n                } else {\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (k3 < remainderArraySlot1.length) {\n            checking_plus_1(combine, array, remainderArraySlot1[k3]);\n\n            if (array[x] == 100 && array[x + 1] == 100) {\n              array[x] = remainderArraySlot1[k3];\n              array[x + 1] = remainderArraySlot1[k3];\n              combine[x] = remainderArraySlot1[k3];\n              combine[x + 1] = remainderArraySlot1[k3];\n              changeRowtoZero_plus_1(combine, array, x, x + 1);\n            } else {\n              insertedDataElective50_Slot2_2.push(remainderArraySlot1[k3]);\n            }\n          }\n\n          k3++;\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n\n        for (let x = 0; x < array.length; x++) {\n          if (k2 < remainderArray.length) {\n            //checkTest(AntArr50,remainderArray[k2])\n            checking_plus_1(combine, array, remainderArray[k2]);\n\n            if (array[x] == 100 && array[x + 1] == 100) {\n              //if(k2 < remainderArray.length){\n              //changeRowtoZero_plus_1(array,remainderArraySlot1[k2])\n              array[x] = remainderArray[k2];\n              array[x + 1] = remainderArray[k2];\n              combine[x] = remainderArray[k2];\n              combine[x + 1] = remainderArray[k2];\n              changeRowtoZero_plus_1(combine, array, x, x + 1);\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedDataElective50_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedDataElective50_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n          }\n\n          k2++;\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n\n        if (array[-1] != undefined) {\n          insertedDataElective50_Slot2_1.push(array[-1]);\n        }\n\n        return array;\n      };\n\n      var AntArrInsElective50 = AntAlgoInsertElective50(AntArrElective50, AntArrCombine);\n\n      const slot2Equal1forElective50 = (array, combine) => {\n        let k = 0;\n        let test2 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedDataElective50_Slot2_1.length) {\n              checking_only_1(combine, array, insertedDataElective50_Slot2_1[k]);\n              array[x] = insertedDataElective50_Slot2_1[k];\n              combine[x] = insertedDataElective50_Slot2_1[k];\n            }\n\n            k++;\n          }\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n        return array;\n      };\n\n      slot2Equal1forElective50(AntArrElective50, AntArrCombine);\n\n      const slot2Equal2forElective50 = (array, combine) => {\n        let k = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedDataElective50_Slot2_2.length) {\n              checking_plus_1(combine, array, insertedDataElective50_Slot2_2[k]);\n              array[x] = insertedDataElective50_Slot2_2[k];\n              array[x + 1] = insertedDataElective50_Slot2_2[k];\n              combine[x] = insertedDataElective50_Slot2_2[k];\n              combine[x + 1] = insertedDataElective50_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n\n        if (array[-1] != undefined) {\n          insertedDataElective50_Slot2_1.push(array[-1]);\n        }\n\n        return array;\n      };\n\n      slot2Equal2forElective50(AntArrElective50, AntArrCombine); //___________________________________________________________________________________________________________________________________\n      //___________________________________________________________________________________________________________________________________\n\n      const array1DElective100 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective100 = array1DElective100(DataArrayElective100);\n      let insertedDataElective100_Slot2_2 = [];\n      let insertedDataElective100_Slot2_1 = [];\n\n      const AntAlgoInsertElective100 = (array, combine) => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let k4 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let remainderArray3 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterDataElective100.length; x++) {\n          test.push(filterDataElective100[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            changeToZero(array);\n            changeToZero(combine);\n\n            if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n              checking_3(combine, array, test[k]);\n\n              if (array[i] == 100 && array[i - 1] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i - 1] = array[j - 1];\n                array[i + 1] = array[j + 1];\n                array[j] = test[k];\n                array[j - 1] = test[k];\n                array[j + 1] = test[k];\n                combine[j] = test[k];\n                combine[j - 1] = test[k];\n                combine[j + 1] = test[k];\n                changeRowtoZero_3_(combine, array, i, i - 1, i + 1);\n              } else {\n                remainderArray3.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              checking_minus_1(combine, array, test[k]);\n              checking_plus_1(combine, array, test[k]);\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  combine[j] = test[k];\n                  combine[j - 1] = test[k];\n                  changeRowtoZero_minus_1(combine, array, i, i - 1);\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  combine[j] = test[k];\n                  combine[j + 1] = test[k];\n                  changeRowtoZero_plus_1(combine, i, i + 1);\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 4) {\n              checking_minus_1(combine, array, test[k]);\n              checking_plus_1(combine, array, test[k]);\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100 && array[i - 1] == 100) {\n                array[i] = array[j];\n                array[i - 1] = array[j - 1];\n                array[j] = test[k];\n                array[j - 1] = test[k];\n                combine[j] = test[k];\n                combine[j - 1] = test[k];\n                changeRowtoZero_minus_1(combine, array, j, j - 1);\n\n                if (array[i] == 100 && array[i - 1] == 100) {\n                  //checking_minus_1(array,test[k]);\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  combine[j] = test[k];\n                  combine[j - 1] = test[k];\n                  changeRowtoZero_minus_1(combine, array, j, j - 1);\n                } else if (array[i] == 100 && array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  combine[j] = test[k];\n                  combine[j + 1] = test[k];\n                  changeRowtoZero_plus_1(combine, array, j, j - 1);\n                } else {\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else if (array[i] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i + 1] = array[j + 1];\n                array[j] = test[k];\n                array[j + 1] = test[k];\n                combine[j] = test[k];\n                combine[j + 1] = test[k];\n                changeRowtoZero_plus_1(combine, array, i, i - 1);\n\n                if (array[i] == 100 && array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  combine[j] = test[k];\n                  combine[j - 1] = test[k];\n                  changeRowtoZero_minus_1(combine, array, j, j - 1);\n                } else if (array[i] == 100 && array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  combine[j] = test[k];\n                  combine[j + 1] = test[k];\n                  changeRowtoZero_plus_1(combine, array, j, j - 1);\n                } else {\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (k3 < remainderArraySlot1.length) {\n            checking_plus_1(combine, array, remainderArraySlot1[k3]);\n\n            if (array[x] == 100 && array[x + 1] == 100) {\n              array[x] = remainderArraySlot1[k3];\n              array[x + 1] = remainderArraySlot1[k3];\n              combine[x] = remainderArraySlot1[k3];\n              combine[x + 1] = remainderArraySlot1[k3];\n              changeRowtoZero_plus_1(combine, array, x, x + 1);\n            } else {\n              insertedDataElective100_Slot2_2.push(remainderArraySlot1[k3]);\n            }\n          }\n\n          k3++;\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n\n        for (let x = 0; x < array.length; x++) {\n          if (k2 < remainderArray.length) {\n            //checkTest(AntArrElective100,remainderArray[k2])\n            checking_plus_1(combine, array, remainderArray[k2]);\n\n            if (array[x] == 100 && array[x + 1] == 100) {\n              //if(k2 < remainderArray.length){\n              //changeRowtoZero_plus_1(array,remainderArraySlot1[k2])\n              array[x] = remainderArray[k2];\n              array[x + 1] = remainderArray[k2];\n              combine[x] = remainderArray[k2];\n              combine[x + 1] = remainderArray[k2];\n              changeRowtoZero_plus_1(combine, array, x, x + 1);\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedDataElective100_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedDataElective100_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n          }\n\n          k2++;\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n\n        if (array[-1] != undefined) {\n          insertedDataElective100_Slot2_1.push(array[-1]);\n        }\n\n        return array;\n      };\n\n      var AntArrInsElective100 = AntAlgoInsertElective100(AntArrElective100, AntArrCombine);\n\n      const slot2Equal1forElective100 = (array, combine) => {\n        let k = 0;\n        let test2 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedDataElective100_Slot2_1.length) {\n              checking_only_1(combine, array, insertedDataElective100_Slot2_1[k]);\n              array[x] = insertedDataElective100_Slot2_2[k];\n              combine[x] = insertedDataElective100_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n        return array;\n      };\n\n      slot2Equal1forElective100(AntArrElective100, AntArrCombine);\n\n      const slot2Equal2forElective100 = (array, combine) => {\n        let k = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedDataElective100_Slot2_2.length) {\n              checking_plus_1(combine, array, insertedDataElective100_Slot2_2[k]);\n              array[x] = insertedDataElective100_Slot2_2[k];\n              array[x + 1] = insertedDataElective100_Slot2_2[k];\n              combine[x] = insertedDataElective100_Slot2_2[k];\n              combine[x + 1] = insertedDataElective100_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n\n        if (array[-1] != undefined) {\n          insertedDataElective100_Slot2_1.push(array[-1]);\n        }\n\n        return array;\n      };\n\n      slot2Equal2forElective100(AntArrElective100, AntArrCombine); //___________________________________________________________________________________________________________________________________\n      //___________________________________________________________________________________________________________________________________\n\n      const array1DElective200 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective200 = array1DElective200(DataArrayElective200);\n      let insertedDataElective200_Slot2_2 = [];\n      let insertedDataElective200_Slot2_1 = [];\n\n      const AntAlgoInsertElective200 = (array, combine) => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let k4 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let remainderArray3 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterDataElective200.length; x++) {\n          test.push(filterDataElective200[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            changeToZero(array);\n            changeToZero(combine);\n\n            if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n              checking_3(combine, array, test[k]);\n\n              if (array[i] == 100 && array[i - 1] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i - 1] = array[j - 1];\n                array[i + 1] = array[j + 1];\n                array[j] = test[k];\n                array[j - 1] = test[k];\n                array[j + 1] = test[k];\n                combine[j] = test[k];\n                combine[j - 1] = test[k];\n                combine[j + 1] = test[k];\n                changeRowtoZero_3_(combine, array, i, i - 1, i + 1);\n              } else {\n                remainderArray3.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              checking_minus_1(combine, array, test[k]);\n              checking_plus_1(combine, array, test[k]);\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  combine[j] = test[k];\n                  combine[j - 1] = test[k];\n                  changeRowtoZero_minus_1(combine, array, i, i - 1);\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  combine[j] = test[k];\n                  combine[j + 1] = test[k];\n                  changeRowtoZero_plus_1(combine, i, i + 1);\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 4) {\n              checking_minus_1(combine, array, test[k]);\n              checking_plus_1(combine, array, test[k]);\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100 && array[i - 1] == 100) {\n                array[i] = array[j];\n                array[i - 1] = array[j - 1];\n                array[j] = test[k];\n                array[j - 1] = test[k];\n                combine[j] = test[k];\n                combine[j - 1] = test[k];\n                changeRowtoZero_minus_1(combine, array, j, j - 1);\n\n                if (array[i] == 100 && array[i - 1] == 100) {\n                  //checking_minus_1(array,test[k]);\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  combine[j] = test[k];\n                  combine[j - 1] = test[k];\n                  changeRowtoZero_minus_1(combine, array, j, j - 1);\n                } else if (array[i] == 100 && array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  combine[j] = test[k];\n                  combine[j + 1] = test[k];\n                  changeRowtoZero_plus_1(combine, array, j, j - 1);\n                } else {\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else if (array[i] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i + 1] = array[j + 1];\n                array[j] = test[k];\n                array[j + 1] = test[k];\n                combine[j] = test[k];\n                combine[j + 1] = test[k];\n                changeRowtoZero_plus_1(combine, array, i, i - 1);\n\n                if (array[i] == 100 && array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  combine[j] = test[k];\n                  combine[j - 1] = test[k];\n                  changeRowtoZero_minus_1(combine, array, j, j - 1);\n                } else if (array[i] == 100 && array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  combine[j] = test[k];\n                  combine[j + 1] = test[k];\n                  changeRowtoZero_plus_1(combine, array, j, j - 1);\n                } else {\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (k3 < remainderArraySlot1.length) {\n            checking_plus_1(combine, array, remainderArraySlot1[k3]);\n\n            if (array[x] == 100 && array[x + 1] == 100) {\n              array[x] = remainderArraySlot1[k3];\n              array[x + 1] = remainderArraySlot1[k3];\n              combine[x] = remainderArraySlot1[k3];\n              combine[x + 1] = remainderArraySlot1[k3];\n              changeRowtoZero_plus_1(combine, array, x, x + 1);\n            } else {\n              insertedDataElective200_Slot2_2.push(remainderArraySlot1[k3]);\n            }\n          }\n\n          k3++;\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n\n        for (let x = 0; x < array.length; x++) {\n          if (k2 < remainderArray.length) {\n            //checkTest(AntArrElective200,remainderArray[k2])\n            checking_plus_1(combine, array, remainderArray[k2]);\n\n            if (array[x] == 100 && array[x + 1] == 100) {\n              //if(k2 < remainderArray.length){\n              //changeRowtoZero_plus_1(array,remainderArraySlot1[k2])\n              array[x] = remainderArray[k2];\n              array[x + 1] = remainderArray[k2];\n              combine[x] = remainderArray[k2];\n              combine[x + 1] = remainderArray[k2];\n              changeRowtoZero_plus_1(combine, array, x, x + 1);\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedDataElective200_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedDataElective200_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n          }\n\n          k2++;\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n\n        if (array[-1] != undefined) {\n          insertedDataElective200_Slot2_1.push(array[-1]);\n        }\n\n        return array;\n      };\n\n      var AntArrInsElective200 = AntAlgoInsertElective200(AntArrElective200, AntArrCombine);\n\n      const slot2Equal1forElective200 = (array, combine) => {\n        let k = 0;\n        let test2 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedDataElective200_Slot2_1.length) {\n              checking_only_1(combine, array, insertedDataElective200_Slot2_1[k]);\n              array[x] = insertedDataElective200_Slot2_1[k];\n              combine[x] = insertedDataElective200_Slot2_1[k];\n            }\n\n            k++;\n          }\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n        return array;\n      };\n\n      slot2Equal1forElective200(AntArrElective200, AntArrCombine);\n\n      const slot2Equal2forElective200 = (array, combine) => {\n        let k = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedDataElective200_Slot2_2.length) {\n              checking_plus_1(combine, array, insertedDataElective200_Slot2_2[k]);\n              array[x] = insertedDataElective200_Slot2_2[k];\n              array[x + 1] = insertedDataElective200_Slot2_2[k];\n              combine[x] = insertedDataElective200_Slot2_2[k];\n              combine[x + 1] = insertedDataElective200_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n\n        if (array[-1] != undefined) {\n          insertedDataElective200_Slot2_1.push(array[-1]);\n        }\n\n        return array;\n      };\n\n      slot2Equal2forElective200(AntArrElective200, AntArrCombine); //___________________________________________________________________________________________________________________________________\n      //___________________________________________________________________________________________________________________________________\n\n      const array1DElective500 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective500 = array1DElective500(DataArrayElective500);\n      let extraDataElective500_Slot2_2 = [];\n      let extraData500Elective_Slot2_1 = [];\n      let insertedDataElective500_Slot2_2 = [];\n      let insertedDataElective500_Slot2_1 = [];\n\n      const AntAlgoInsertElective500 = (array, combine) => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let k4 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let remainderArray3 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterDataElective500.length; x++) {\n          test.push(filterDataElective500[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            changeToZero(array);\n            changeToZero(combine);\n\n            if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n              checking_3(combine, array, test[k]);\n\n              if (array[i] == 100 && array[i - 1] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i - 1] = array[j - 1];\n                array[i + 1] = array[j + 1];\n                array[j] = test[k];\n                array[j - 1] = test[k];\n                array[j + 1] = test[k];\n                combine[j] = test[k];\n                combine[j - 1] = test[k];\n                combine[j + 1] = test[k];\n                changeRowtoZero_3_(combine, array, i, i - 1, i + 1);\n              } else {\n                remainderArray3.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              checking_minus_1(combine, array, test[k]);\n              checking_plus_1(combine, array, test[k]);\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  combine[j] = test[k];\n                  combine[j - 1] = test[k];\n                  changeRowtoZero_minus_1(combine, array, i, i - 1);\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  combine[j] = test[k];\n                  combine[j + 1] = test[k];\n                  changeRowtoZero_plus_1(combine, i, i + 1);\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 4) {\n              checking_minus_1(combine, array, test[k]);\n              checking_plus_1(combine, array, test[k]);\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100 && array[i - 1] == 100) {\n                array[i] = array[j];\n                array[i - 1] = array[j - 1];\n                array[j] = test[k];\n                array[j - 1] = test[k];\n                combine[j] = test[k];\n                combine[j - 1] = test[k];\n                changeRowtoZero_minus_1(combine, array, j, j - 1);\n\n                if (array[i] == 100 && array[i - 1] == 100) {\n                  //checking_minus_1(array,test[k]);\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  combine[j] = test[k];\n                  combine[j - 1] = test[k];\n                  changeRowtoZero_minus_1(combine, array, j, j - 1);\n                } else if (array[i] == 100 && array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  combine[j] = test[k];\n                  combine[j + 1] = test[k];\n                  changeRowtoZero_plus_1(combine, array, j, j - 1);\n                } else {\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else if (array[i] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i + 1] = array[j + 1];\n                array[j] = test[k];\n                array[j + 1] = test[k];\n                combine[j] = test[k];\n                combine[j + 1] = test[k];\n                changeRowtoZero_plus_1(combine, array, i, i - 1);\n\n                if (array[i] == 100 && array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  combine[j] = test[k];\n                  combine[j - 1] = test[k];\n                  changeRowtoZero_minus_1(combine, array, j, j - 1);\n                } else if (array[i] == 100 && array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  combine[j] = test[k];\n                  combine[j + 1] = test[k];\n                  changeRowtoZero_plus_1(combine, array, j, j - 1);\n                } else {\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (k3 < remainderArraySlot1.length) {\n            checking_plus_1(combine, array, remainderArraySlot1[k3]);\n\n            if (array[x] == 100 && array[x + 1] == 100) {\n              array[x] = remainderArraySlot1[k3];\n              array[x + 1] = remainderArraySlot1[k3];\n              combine[x] = remainderArraySlot1[k3];\n              combine[x + 1] = remainderArraySlot1[k3];\n              changeRowtoZero_plus_1(combine, array, x, x + 1);\n            } else {\n              insertedDataElective500_Slot2_2.push(remainderArraySlot1[k3]);\n            }\n          }\n\n          k3++;\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n\n        for (let x = 0; x < array.length; x++) {\n          if (k2 < remainderArray.length) {\n            //checkTest(AntArrElective500remainderArray[k2])\n            checking_plus_1(combine, array, remainderArray[k2]);\n\n            if (array[x] == 100 && array[x + 1] == 100) {\n              //if(k2 < remainderArray.length){\n              //changeRowtoZero_plus_1(array,remainderArraySlot1[k2])\n              array[x] = remainderArray[k2];\n              array[x + 1] = remainderArray[k2];\n              combine[x] = remainderArray[k2];\n              combine[x + 1] = remainderArray[k2];\n              changeRowtoZero_plus_1(combine, array, x, x + 1);\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedDataElective500_Slot2_2.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedDataElective500_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n          }\n\n          k2++;\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n\n        if (array[-1] != undefined) {\n          insertedDataElective500_Slot2_1.push(array[-1]);\n        }\n\n        return array;\n      };\n\n      var AntArrInsElective500 = AntAlgoInsertElective500(AntArrElective500, AntArrCombine);\n\n      const slot2Equal1forElective500 = (array, combine) => {\n        let k = 0;\n        let test2 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedDataElective500_Slot2_1.length) {\n              checking_only_1(combine, array, insertedDataElective500_Slot2_1[k]);\n              array[x] = insertedDataElective500_Slot2_1[k];\n              combine[x] = insertedDataElective500_Slot2_1[k];\n            }\n\n            k++;\n          }\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n        return array;\n      };\n\n      slot2Equal1forElective500(AntArrElective500, AntArrCombine);\n\n      const slot2Equal2forElective500 = (array, combine) => {\n        let k = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedDataElective500_Slot2_2.length) {\n              checking_plus_1(insertedDataElective500_Slot2_2[k]);\n              array[x] = insertedDataElective500_Slot2_2[k];\n              array[x + 1] = insertedDataElective500_Slot2_2[k];\n              combine[x] = insertedDataElective500_Slot2_2[k];\n              combine[x + 1] = insertedDataElective500_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n\n        if (array[-1] != undefined) {\n          insertedDataElective500_Slot2_1.push(array[-1]);\n        }\n\n        return array;\n      };\n\n      slot2Equal2forElective500(AntArrElective500, AntArrCombine); //-----------------------------------------------------------------------------------------------------------------------------------------------\n      // Hard Constraint \n      // H1: No student attend more than one class/ event at the same time\n      // H2: The room is large enough to accomodate all of the student in attendace while also meeting the requirement \n      // H3: At any given time, each room can onle have one course booked\n      // H4: No student attend class during 12:00 pm -2:00 due to solat jumaat\n      // H5: One teacher can only teach one class at one time.\n      //Check for the H1 violation: same group attend more than 1 class at 1 time\n\n      const check1Group = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n        }\n\n        for (let x = 1; x <= totalRoom; x++) {\n          try {\n            for (let i = 0; i < array.length; i++) {\n              indexArray = x * 37;\n\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined && array[i + indexArray] != 1 && array[i + indexArray] != 0) {\n                try {\n                  if (array[i][6] == array[i + indexArray][6] && array[i][5] == array[i + indexArray][5]) {\n                    try {\n                      count += 1;\n                    } catch {}\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH1_ALL = check1Group(AntArrCombine); //Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\n\n      const checkRoomQuota = array => {\n        let count = 0;\n        return count;\n      };\n\n      var checkH2_ALLElective = checkRoomQuota(AntArrCombine); //Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\n\n      const checkSolatJummat = array => {\n        let count = 0;\n        return count;\n      };\n\n      var checkH4_ALLElective = checkSolatJummat(AntArrCombine); //Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\n\n      const check1Teacher = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n\n          try {\n            for (let i = 1; i < array.length; i++) {\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined && array[i + indexArray] != 1 && array[i + indexArray] != 0) {\n                try {\n                  if (array[i][5] == array[i + indexArray][5]) {\n                    count += 1;\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH5_ALL = check1Teacher(AntArrCombine);\n\n      const checkHC = (data1, data2) => {\n        let count = 0;\n\n        if (data1 != 0) {\n          count += 1;\n        }\n\n        if (data2 != 0) {\n          count += 1;\n        }\n\n        return count;\n      };\n\n      let checkTotalHardContraints = checkHC(checkH5_ALL, checkH1_ALL);\n      console.log(\"Total Hard Constraint: \" + checkTotalHardContraints); //----------------------------------------------------------------------------------------------------------------------------------------\n      // Soft Constraint \n      // S1: A student has a class schedule toward the end of the day\n      // S2: A student have more than two class in a row\n      //Check for the S1 violation: student have class at the end of the day\n\n      const checkEndOfClass = array => {\n        let count = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          let indexArray = x * 37;\n\n          if (array[indexArray] != 100) {\n            count = 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkSC1_ALL = checkEndOfClass(AntArrCombine); //Check for the S2 violation: teacher have 2 class in a row\n\n      const check2ClassInARow = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          try {\n            if (array[i][5] != undefined && array[i + 3][5] != undefined && array[i + 2][5] != undefined && array[i + 4][5] != undefined) {\n              if (array[i][5] == array[i + 3][5] && array[i + 2][5] == array[i + 4][5]) {\n                count = 1;\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkSC2_ALL = checkEndOfClass(AntArrCombine); //----------------------------------------------------------------------------------------------------------------------------------------------\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n\n      const checkTotalSoftContraint = () => {\n        let count = 0;\n        let totalSC = checkSC1_ALL + checkSC2_ALL;\n\n        if (totalSC != 0) {\n          count += 1;\n        }\n\n        return count;\n      };\n\n      var checkTotalSoftContraints = checkTotalSoftContraint();\n      console.log(\"Total Soft Constraint: \" + checkTotalSoftContraints); //----------------------------------------------------------------------------------------------------------------------------------------------\n\n      const change100ToEmptyElective = data => {\n        for (let i = 0; i < data.length; i++) {\n          if (data[i] == 100) {\n            data[i] = [];\n          }\n        }\n\n        return data;\n      };\n\n      let finalDataElective = change100ToEmptyElective(AntArrCombine);\n      checkTotalHardContraintsAll = checkTotalHardContraints;\n      checkTotalSoftContraintsAll = checkTotalSoftContraints;\n      finalDataAllElective.push(finalDataElective);\n      return {\n        checkTotalHardContraints,\n        checkTotalSoftContraints,\n        finalDataAllElective\n      }; //___________________________________________________________________________________________________________________________________\n    };\n\n    let trigger = 0;\n    var t0 = performance.now();\n\n    const iteration = () => {\n      //antSystem()\n      let globalBestHS = checkTotalHardContraintsAll;\n      let globalBestSS = checkTotalSoftContraintsAll;\n      let globalBestScehdule = finalDataAllElective[0];\n\n      for (let i = 1; i <= 1; i++) {\n        antSystem();\n        let localBestHS = checkTotalHardContraintsAll;\n        let localBestSS = checkTotalSoftContraintsAll;\n        let localBestScehdule = finalDataAllElective[0];\n        console.log(\"iteraion: \" + i);\n\n        if (globalBestHS > localBestHS) {\n          globalBestHS = localBestHS;\n          globalBestSS = localBestSS;\n          globalBestScehdule = localBestScehdule;\n        }\n\n        if (localBestHS == 0) {\n          console.log(\"iteraion: \" + i);\n          console.log(\"workable solution is found\");\n          globalBestHS = localBestHS;\n          globalBestSS = localBestSS;\n          globalBestScehdule = localBestScehdule;\n          console.log(\"Workable Gloabal best HS: \" + globalBestHS);\n          console.log(\"Workable Gloabal best SS: \" + globalBestSS); //console.log(finalDataAll[0])\n\n          trigger = 1;\n          return [finalDataAllElective[0]];\n        } else if (localBestHS == 0 && localBestSS == 0) {\n          console.log(\"iteraion: \" + i);\n          console.log(\"perfect solution is found\");\n          globalBestHS = localBestHS;\n          globalBestSS = localBestSS;\n          globalBestScehdule = localBestScehdule;\n          console.log(\"Perfect Gloabal best HS: \" + globalBestHS);\n          console.log(\"Perfect Gloabal best SS: \" + globalBestSS);\n          console.log(finalDataAll[0]);\n          trigger = 1;\n          return [finalDataAllElective[0]];\n        }\n      }\n\n      return [finalDataAllElective[0]];\n    };\n\n    let interations = iteration();\n    let presentableDataElective = [];\n\n    if (trigger == 1) {\n      //shot course code, course name and lecturer\n      console.log(interations);\n\n      const changeToPresentationData = data => {\n        console.log(data);\n\n        for (let i = 0; i <= data.length; i++) {\n          // console.log(data[i][1]);\n          // console.log(data[i][2]);\n          // console.log(data[i][5]);\n          try {\n            console.log(data[i][1]);\n            presentableDataElective.push([data[i][1], data[i][2], data[i][5]]);\n          } catch (error) {}\n        }\n      };\n\n      changeToPresentationData(interations);\n      let allRoomName = [];\n\n      for (let i = 0; i < roomData[0].length; i++) {\n        allRoomName.push(roomData[0][i][0]);\n      }\n\n      allRoomName.unshift(\"Room\");\n\n      if (allRoomName.pop() == undefined) {}\n\n      let wed = ['Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday'];\n\n      const create2dArrayElective = (weekdayArray, partDay, arrayAll, partAll) => {\n        var tmp = [];\n\n        for (var i = 0; i < weekdayArray.length; i += partDay) {\n          tmp.push(weekdayArray.slice(i, i + partDay));\n        }\n\n        for (var i = 0; i < arrayAll.length; i += partAll) {\n          tmp.push(arrayAll.slice(i, i + partAll));\n        }\n\n        return tmp;\n      };\n\n      let datasetElective = create2dArrayElective(wed, 10, presentableDataElective, 10);\n      console.log(datasetElective); //console.log(dataset)\n\n      const insertRoomNameElective = (roomData, array) => {\n        for (let i = 0; i < array.length; i++) {\n          array[i].unshift(roomData[i]);\n        }\n\n        return array;\n      };\n\n      insertRoomNameElective(allRoomName, datasetElective);\n      /** Convert a 2D array into a CSV string\r\n       * elective\r\n      */\n\n      function arrayToCsvElective(data) {\n        //console.log(data)\n        return data.map(row => row.map(String) // convert every value to String\n        .map(v => v.replaceAll('\"', '\"\"')) // escape double colons\n        .map(v => `\"${v}\"`) // quote it\n        .join(',') // comma-separated\n        ).join('\\r\\n'); // rows starting on new lines\n      }\n\n      let csvElective = arrayToCsvElective(datasetElective);\n\n      function downloadBlobElective(content, filename, contentType) {\n        // Create a blob\n        var blob = new Blob([content], {\n          type: contentType\n        });\n        var url = URL.createObjectURL(blob); // Create a link to download it\n\n        var pom = document.createElement('a');\n        pom.href = url;\n        pom.setAttribute('download', filename);\n        pom.click();\n      }\n\n      var t1 = performance.now();\n      console.log(\"Duration: \" + (t1 - t0)); //downloadBlobElective(csvElective, 'ModifiedAntSystemElective_GeneratedSchedule.csv', 'text/csv;charset=utf-8;')\n    } else {\n      var t1 = performance.now();\n      console.log(\"Duration: \" + (t1 - t0) + \" milliseconds\");\n      alert(\"no workable solution found, please refersh until get workable solution\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2124,\n      columnNumber: 17\n    }\n  }, \"Generate Schedule Page Elective\"));\n};\n\nexport default ArrayScheduleElective;","map":{"version":3,"sources":["C:/Users/acit/Desktop/FYP Code/FYP Code/frontend/src/components/GenerateSchedulePage/GenerateScheduleElective.js"],"names":["concat","create","find","forEach","indexOf","React","useEffect","useState","useContext","useParams","_","CSVLink","LoadingSpinner","finalDataAll","finalDataAllElective","checkHardConstraintOutsite","checkSoftConstraintOutsite","ArrayScheduleElective","props","isLoading","setIsLoading","loadedFile","setLoaadedFile","roomData","setroomData","courseData","setcourseData","CsvData","setCsvData","userId","sendRequest","response","fetch","responsedata","json","stringifyData","JSON","stringify","userWithFiles","Dataset","ertRoom","map","ertCourse","ok","Error","message","err","console","log","testData","EnrollmentQuota","CourseCode","HMS","lecturerData","roomName","roomSize","filterData50","filterData100","filterData200","filterData500","filterDataElective50","filterDataElective100","filterDataElective200","filterDataElective500","dupeData","room","push","hardConstraintViolated","softConstraintViolated","i","length","enrollment","code","hms","lecturer","reduce","results","item","index","array","name","size","notDuplicatesRoom","filter","notDuplicatesLecturer","pop","courseDataXElective","courseDataWithElective","slice","splice","roomUnder50","roomUnder100","roomUnder200","roomUnder500","checkNumberofRoom","createArray","data","result","DataArray50","DataArray100","DataArray200","DataArray500","combineArray","startIndex100","startIndex200","startIndex500","DataArrayElective50","DataArrayElective100","DataArrayElective200","DataArrayElective500","combineArrayElective","checkTotalHardContraintsAll","checkTotalSoftContraintsAll","antSystem","checking_minus_1","array2","k","b","totalRoom","totalRoom2","u","indexArray","indexArray2","checking_plus_1","checking_3","checking_only_1","changeRowtoZero_minus_1","index1","index2","changeRowtoZero_plus_1","changeRowtoZero_1","changeRowtoZero_3_","index3","changeToZero","checkTest","data1","count","x","array1DElectiveCombine","AntArrCombine","array1DElective50","AntArrElective50","insertedDataElective50_Slot2_2","insertedDataElective50_Slot2_1","AntAlgoInsertElective50","combine","test","k2","k3","k4","remainderArray","remainderArraySlot1","remainderArray3","hourMS","j","Math","floor","random","slot2","undefined","AntArrInsElective50","slot2Equal1forElective50","test2","slot2Equal2forElective50","array1DElective100","AntArrElective100","insertedDataElective100_Slot2_2","insertedDataElective100_Slot2_1","AntAlgoInsertElective100","AntArrInsElective100","slot2Equal1forElective100","slot2Equal2forElective100","array1DElective200","AntArrElective200","insertedDataElective200_Slot2_2","insertedDataElective200_Slot2_1","AntAlgoInsertElective200","AntArrInsElective200","slot2Equal1forElective200","slot2Equal2forElective200","array1DElective500","AntArrElective500","extraDataElective500_Slot2_2","extraData500Elective_Slot2_1","insertedDataElective500_Slot2_2","insertedDataElective500_Slot2_1","AntAlgoInsertElective500","AntArrInsElective500","slot2Equal1forElective500","slot2Equal2forElective500","check1Group","checkH1_ALL","checkRoomQuota","checkH2_ALLElective","checkSolatJummat","checkH4_ALLElective","check1Teacher","checkH5_ALL","checkHC","data2","checkTotalHardContraints","checkEndOfClass","checkSC1_ALL","check2ClassInARow","checkSC2_ALL","checkTotalSoftContraint","totalSC","checkTotalSoftContraints","change100ToEmptyElective","finalDataElective","trigger","t0","performance","now","iteration","globalBestHS","globalBestSS","globalBestScehdule","localBestHS","localBestSS","localBestScehdule","interations","presentableDataElective","changeToPresentationData","error","allRoomName","unshift","wed","create2dArrayElective","weekdayArray","partDay","arrayAll","partAll","tmp","datasetElective","insertRoomNameElective","arrayToCsvElective","row","String","v","replaceAll","join","csvElective","downloadBlobElective","content","filename","contentType","blob","Blob","type","url","URL","createObjectURL","pom","document","createElement","href","setAttribute","click","t1","alert"],"mappings":"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","sourcesContent":["import { concat, create, find, forEach, indexOf } from \"lodash\";\r\nimport React,{ useEffect,useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport _ from 'lodash';\r\nimport { CSVLink } from \"react-csv\";\r\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\r\n\r\n\r\nlet finalDataAll = [];\r\nlet finalDataAllElective = [];\r\nlet checkHardConstraintOutsite = 0;\r\nlet checkSoftConstraintOutsite = 0;\r\n\r\nconst ArrayScheduleElective = (props) => {\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [loadedFile, setLoaadedFile] = useState(false);\r\n    const [roomData, setroomData] = useState();\r\n    const [courseData, setcourseData] = useState();\r\n    const [CsvData, setCsvData] = useState();\r\n    // const [Keys, setKeys] = useState();\r\n    //const [uploadedData, setUploadedData] = useState([]);\r\n    //console.log(\"props dataset:\"+ props.test)\r\n\r\n    const userId = useParams().userId;\r\n    useEffect(()=>{\r\n        const sendRequest = async () =>{\r\n            setIsLoading(true);\r\n            try{\r\n            const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875');\r\n            //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\r\n            //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\r\n            const responsedata = await response.json();\r\n            let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset);\r\n\r\n            // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\r\n            const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset =>[Dataset['Room'],Dataset['Size']]); //Extract Room\r\n            setroomData([ertRoom]);\r\n\r\n            const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'],Dataset['Course Code'],Dataset['Course Name'],Dataset['Year'],Dataset['Semester'],Dataset['Lecturer'],Dataset['Group'],Dataset['HMS'],Dataset['Programme Code'],Dataset['Slot1'],Dataset['Slot2']]); //Extract Enrollment Quota\r\n            setcourseData([ertCourse]);\r\n\r\n            if (!response.ok){\r\n                throw new Error(responsedata.message);\r\n            }\r\n            setLoaadedFile(stringifyData);\r\n            setIsLoading(true);\r\n            }catch(err){\r\n                console.log(err.message);\r\n            }\r\n            setIsLoading(false);\r\n            \r\n        };\r\n        sendRequest();\r\n    },[userId]);\r\n\r\n        if(!isLoading && loadedFile){\r\n            const testData = [1,2,3,4,5,6,7,8,9];\r\n            const EnrollmentQuota = [];\r\n            const CourseCode = [];\r\n            const HMS = [];\r\n            const lecturerData = []\r\n            const roomName = [];\r\n            const roomSize = [];\r\n            const filterData50  = [];\r\n            const filterData100  = [];\r\n            const filterData200  = [];\r\n            const filterData500  = [];\r\n            const filterDataElective50  = [];\r\n            const filterDataElective100  = [];\r\n            const filterDataElective200  = [];\r\n            const filterDataElective500  = [];\r\n            const dupeData  = [];\r\n            const room = []\r\n            room.push(roomData[0])\r\n            \r\n            let hardConstraintViolated = 0;\r\n            let softConstraintViolated = 0;\r\n            //console.log(courseData[0][0][1]);\r\n            for(let i = 0; i <courseData[0].length; i++){\r\n                let enrollment = [courseData[0][i][0]];\r\n                let code = [courseData[0][i][1]];\r\n                let hms = [courseData[0][i][7]];\r\n                let lecturer = [courseData[0][i][5]];\r\n                enrollment.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    EnrollmentQuota.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                code.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    CourseCode.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                hms.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    HMS.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                lecturer.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    lecturerData.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n            }\r\n\r\n            for(let i = 0; i <roomData[0].length; i++){\r\n                let name = [roomData[0][i][0]];\r\n                let size = [roomData[0][i][1]];\r\n                name.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomName.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                size.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomSize.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n            }\r\n \r\n            \r\n            const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\r\n\r\n            const notDuplicatesLecturer = lecturerData.filter((item, index) => index == lecturerData.indexOf(item));\r\n            notDuplicatesLecturer.pop();\r\n            //console.log(notDuplicatesLecturer)\r\n\r\n\r\n            let courseDataXElective = []\r\n            let courseDataWithElective = []\r\n            courseData[0].pop()\r\n\r\n            //saparate faculty course with the elective course\r\n            for(let i=0; i< courseData[0].length; i++){\r\n                if(courseData[0][i][1].slice(0,3) != 'TMU'){\r\n                    courseData[0][i].splice()\r\n                    if(  courseData[0][i][1].slice(0,3) != 'TMX'){\r\n                        courseData[0][i].splice()\r\n                        courseDataXElective.push(courseData[0][i])\r\n                    }\r\n                }\r\n            }\r\n\r\n            //saparate elective course with the faculty course\r\n            for(let i=0; i< courseData[0].length; i++){\r\n                if(courseData[0][i][1].slice(0,3) == 'TMU' ||  courseData[0][i][1].slice(0,3) == 'TMX'){\r\n                    courseDataWithElective.push(courseData[0][i])\r\n                }\r\n            }\r\n\r\n            //insert data without elective courses into correct room capacity\r\n                for(let i = 0; i< courseDataXElective.length;i++){\r\n                        if (courseDataXElective[i][0] < 50) {\r\n                            filterData50.push(courseDataXElective[i]);\r\n                        }\r\n                        if (courseDataXElective[i][0] >= 50 && courseDataXElective[i][0] < 100) {\r\n                            \r\n                            filterData100.push(courseDataXElective[i]);\r\n                        }\r\n                        if (courseDataXElective[i][0] >= 100 && courseDataXElective[i][0] < 200 ) {\r\n                            filterData200.push(courseDataXElective[i]);\r\n                        }\r\n                        if (courseDataXElective[i][0] >= 200 && courseDataXElective[i][0] < 500) {\r\n                            filterData500.push(courseDataXElective[i]);\r\n                        }\r\n                }\r\n                //console.log(filterData50)\r\n\r\n                //insert data without faculty courses into correct room capacity\r\n                for(let i = 0; i< courseDataWithElective.length;i++){\r\n                    if (courseDataWithElective[i][0] < 50) {\r\n                        filterDataElective50.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 50 && courseDataWithElective[i][0] < 100) {\r\n                        \r\n                        filterDataElective100.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 100 && courseDataWithElective[i][0] < 200 ) {\r\n                        filterDataElective200.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 200 && courseDataWithElective[i][0] < 500) {\r\n                        filterDataElective500.push(courseDataWithElective[i]);\r\n                    }\r\n                }\r\n                // console.log(filterDataElective50);\r\n                // console.log(filterDataElective100);\r\n                // console.log(filterDataElective200);\r\n                // console.log(filterDataElective500);\r\n\r\n\r\n            let roomUnder50 = []\r\n            let roomUnder100 = []\r\n            let roomUnder200 = []\r\n            let roomUnder500 = []\r\n            const checkNumberofRoom = () => {\r\n                for(let i = 0; i < roomData[0].length; i++){\r\n                    let room = roomData[0][i][1]\r\n                    //console.log(roomData[0][i][1]);\r\n                    if(room < 50){\r\n                        roomUnder50.push(room)\r\n                    }else if(room > 50 && room < 100){\r\n                        roomUnder100.push(room)\r\n\r\n                    }else if(room > 100 && room < 200){\r\n                        roomUnder200.push(room)\r\n\r\n                    }else if(room > 200){\r\n                        roomUnder500.push(room)\r\n                    }\r\n                }\r\n            }\r\n            checkNumberofRoom();\r\n\r\n\r\n            const createArray = (data) => {\r\n                var result = []\r\n\r\n                    for(let i = 0; i<data; i++){\r\n                        result[i] = []\r\n                    }\r\n                return result;\r\n            }\r\n\r\n            let DataArray50 = roomUnder50.length * 38;\r\n            let DataArray100 = roomUnder100.length * 38;\r\n            let DataArray200 = roomUnder200.length * 38;\r\n            let DataArray500 = roomUnder500.length * 38;\r\n            let combineArray = DataArray50 + DataArray100 + DataArray200 + DataArray500\r\n\r\n            let startIndex100 = DataArray50-1\r\n            let startIndex200 = DataArray50+ DataArray100-1\r\n            let startIndex500 = DataArray50 +DataArray100+DataArray200-1\r\n\r\n            let DataArrayElective50 = roomUnder50.length * 10;\r\n            let DataArrayElective100 = roomUnder100.length * 10;\r\n            let DataArrayElective200 = roomUnder200.length * 10;\r\n            let DataArrayElective500 = roomUnder500.length * 10;\r\n            let combineArrayElective = DataArrayElective50 + DataArrayElective100 + DataArrayElective200 + DataArrayElective500\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nvar checkTotalHardContraintsAll = 0\r\nvar checkTotalSoftContraintsAll = 0\r\n\r\nconst antSystem = () => {\r\n\r\n    const checking_minus_1 = (array,array2,data) => {\r\n        let k =0\r\n        let b =0\r\n        let totalRoom = array.length / 38\r\n        let totalRoom2 = array2.length / 38\r\n    \r\n        for(let u = 0; u < array.length; u++){\r\n            try{\r\n                //if( array[u] != 100 && array[u][5] == data[5] && array[u-1] != 100 && array[u-1][5] == data[5]){\r\n                if(array[u] != 100 && data[5] != array[u][5] || data[6] == array[u][6] && array[u-1] != 100 && data[5] == array[u-1][5] || data[6] == array[u-1][6]){\r\n                    for(let b =0; b < totalRoom; b++){\r\n                        let indexArray = b*38\r\n                        if( array[u+indexArray] ==100 && array[u+indexArray-1] ==100){\r\n                            array[u+indexArray] = 0\r\n                            array[u+indexArray-1] = 0\r\n                        }\r\n                        if( array[u-indexArray] ==100 && array[u-indexArray-1] ==100){\r\n                            array[u-indexArray] = 0\r\n                            array[u-indexArray-1] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n    \r\n        for(let u = 0; u < array2.length; u++){\r\n            try{\r\n                //if( array2[u] != 100 && array2[u][5] == data[5] && array2[u-1] != 100 && array2[u-1][5] == data[5]){\r\n                if(array2[u] != 100 && data[5] != array2[u][5] || data[6] == array2[u][6] && array2[u-1] != 100 && data[5] == array2[u-1][5] || data[6] == array2[u-1][6]){\r\n                    for(let b =0; b < totalRoom; b++){\r\n                        let indexArray2 = b*38\r\n                        if( array2[u+indexArray2] ==100 && array2[u+indexArray2-1] ==100){\r\n                            array2[u+indexArray2] = 0\r\n                            array2[u+indexArray2-1] = 0\r\n                        }\r\n                        if( array2[u-indexArray2] ==100 && array2[u-indexArray2-1] ==100){\r\n                            array2[u-indexArray2] = 0\r\n                            array2[u-indexArray2-1] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n        return array\r\n    \r\n    \r\n    }\r\n    \r\n    const checking_plus_1 = (array,array2,data) => {\r\n    \r\n        let totalRoom = array.length / 38\r\n        let totalRoom2 = array2.length / 38\r\n    \r\n        for(let u = 0; u < array.length; u++){\r\n            try{\r\n                //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\r\n                if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6] && array[u+1] != 100 && data[5] == array[u+1][5] || data[6] == array[u+1][6]){\r\n                    for(let b =0; b < totalRoom; b++){\r\n                        let indexArray = b*38\r\n                        if( array[u+indexArray] ==100 && array[u+indexArray+1] ==100){\r\n                            array[u+indexArray] = 0\r\n                            array[u+indexArray+1] = 0\r\n                        }\r\n                        if( array[u-indexArray] ==100 && array[u-indexArray+1] ==100){\r\n                            array[u-indexArray] = 0\r\n                            array[u-indexArray+1] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n    \r\n        for(let u = 0; u < array2.length; u++){\r\n            try{\r\n                //if( array2[u] != 100 && array2[u][5] == data[5] && array2[u+1] != 100 && array2[u+1][5] == data[5]){\r\n                if( array2[u] != 100 && data[5] == array2[u][5] || data[6] == array2[u][6] && array2[u+1] != 100 && data[5] == array2[u+1][5] || data[6] == array2[u+1][6]){\r\n                    for(let b =0; b < totalRoom; b++){\r\n                        let indexArray2 = b*38\r\n                        if( array2[u+indexArray2] ==100 && array2[u+indexArray2+1] ==100){\r\n                            array2[u+indexArray2] = 0\r\n                            array2[u+indexArray2+1] = 0\r\n                        }\r\n                        if( array2[u-indexArray2] ==100 && array2[u-indexArray2+1] ==100){\r\n                            array2[u-indexArray2] = 0\r\n                            array2[u-indexArray2+1] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n        return array\r\n    }\r\n    \r\n    const checking_3 = (array,array2,data) =>{\r\n    \r\n    \r\n        let k =0\r\n        let b =0\r\n        let totalRoom = array.length / 38\r\n        let totalRoom2 = array2.length / 38\r\n    \r\n        for(let u = 0; u < array.length; u++){\r\n            try{\r\n                //if( array[u] != 100 && array[u][5] == data[5] && array[u-1] != 100 && array[u-1][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\r\n                if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]  && array[u-1] != 100 && data[5] == array[u-1][5] && array[u+1] != 100 && data[5] == array[u+1][5] || data[6] == array[u-1][6] && array[u+1] != 100 && data[6] == array[u+1][6]){\r\n                    for(let b =0; b < totalRoom; b++){\r\n                        let indexArray = b*38\r\n    \r\n                        if( array[u+indexArray] ==100 && array[u+indexArray-1] ==100){\r\n                            array[u+indexArray] = 0\r\n                            array[u+indexArray-1] = 0\r\n                        }\r\n                        if( array[u-indexArray] ==100 && array[u-indexArray-1] ==100){\r\n                            array[u-indexArray] = 0\r\n                            array[u-indexArray-1] = 0\r\n                        }\r\n                        if( array[u+indexArray] ==100 && array[u+indexArray+1] ==100){\r\n                            array[u+indexArray] = 0\r\n                            array[u+indexArray+1] = 0\r\n                        }\r\n                        if( array[u-indexArray] ==100 && array[u-indexArray+1] ==100){\r\n                            array[u-indexArray] = 0\r\n                            array[u-indexArray+1] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n    \r\n        for(let u = 0; u < array2.length; u++){\r\n            try{\r\n                //if( array2[u] != 100 && array2[u][5] == data[5] && array2[u-1] != 100 && array2[u-1][5] == data[5] && array2[u+1] != 100 && array2[u+1][5] == data[5]){\r\n                if( array2[u] != 100 && data[5] == array2[u][5] || data[6] == array2[u][6]  && array2[u-1] != 100 && data[5] == array2[u-1][5] && array2[u+1] != 100 && data[5] == array2[u+1][5] || data[6] == array2[u-1][6] && array2[u+1] != 100 && data[6] == array2[u+1][6]){\r\n                    for(let b =0; b < totalRoom2; b++){\r\n                        let indexArray2 = b*38\r\n    \r\n                        if( array2[u+indexArray2] ==100 && array2[u+indexArray2-1] ==100){\r\n                            array2[u+indexArray2] = 0\r\n                            array2[u+indexArray2-1] = 0\r\n                        }\r\n                        if( array2[u-indexArray2] ==100 && array2[u-indexArray2-1] ==100){\r\n                            array2[u-indexArray2] = 0\r\n                            array2[u-indexArray2-1] = 0\r\n                        }\r\n                        if( array2[u+indexArray2] ==100 && array2[u+indexArray2+1] ==100){\r\n                            array2[u+indexArray2] = 0\r\n                            array2[u+indexArray2+1] = 0\r\n                        }\r\n                        if( array2[u-indexArray2] ==100 && array2[u-indexArray2+1] ==100){\r\n                            array2[u-indexArray2] = 0\r\n                            array2[u-indexArray2+1] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n        return array\r\n    }\r\n    \r\n    const checking_only_1 = (array,array2,data) => {\r\n    \r\n        let k =0\r\n        let b =0\r\n        let totalRoom = array.length / 38\r\n        let totalRoom2 = array2.length / 38\r\n    \r\n        for(let u = 0; u < array.length; u++){\r\n            try{\r\n                if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]){\r\n                    for(let b =0; b < totalRoom; b++){\r\n                        if( array[u+38*b] ==100){\r\n                            array[u+38*b] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n        for(let u = 0; u < array2.length; u++){\r\n            try{\r\n                if( array2[u] != 100 && data[5] == array2[u][5] || data[6] == array2[u][6]){\r\n                    for(let b =0; b < totalRoom2; b++){\r\n                        if( array2[u+38*b] ==100){\r\n                            array2[u+38*b] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n        return array\r\n    \r\n    }\r\n    \r\n    const changeRowtoZero_minus_1 = (array,array2,index1,index2) => {\r\n        let k =0\r\n        let b =0\r\n        let totalRoom = array.length / 38\r\n        let totalRoom2 = array2.length / 38\r\n    \r\n        for(let u = 0; u < array.length; u++){\r\n            try{\r\n                if( u == index1 && u-1 == index2){\r\n                    for(let b =0; b < totalRoom; b++){\r\n                        let indexArray = b*38\r\n                        if( array[u+indexArray] ==100 && array[u+indexArray-1] ==100){\r\n                            array[u+indexArray] = 0\r\n                            array[u+indexArray-1] = 0\r\n                        }\r\n                        if( array[u-indexArray]==100 && array[u-indexArray-1] == 100){\r\n                            array[u-indexArray] = 0\r\n                            array[u-indexArray-1] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n    \r\n        for(let u = 0; u < array2.length; u++){\r\n            try{\r\n                if( u == index1 && u-1 == index2){\r\n                    for(let b =0; b < totalRoom2; b++){\r\n                        let indexArray2 = b*38\r\n                        if( array2[u+indexArray2] ==100 && array2[u+indexArray2-1] ==100){\r\n                            array2[u+indexArray2] = 0\r\n                            array2[u+indexArray2-1] = 0\r\n                        }\r\n                        if( array2[u-indexArray2]==100 && array2[u-indexArray2-1] == 100){\r\n                            array2[u-indexArray2] = 0\r\n                            array2[u-indexArray2-1] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n        return array    \r\n    }\r\n    \r\n    const changeRowtoZero_plus_1 = (array,array2,index1,index2) => {\r\n        let k =0\r\n        let b =0\r\n        let totalRoom = array.length / 38\r\n        let totalRoom2 = array2.length / 38\r\n    \r\n        for(let u = 0; u < array.length; u++){\r\n            try{\r\n                if( u == index1 && u-1 == index2){\r\n                    for(let b =0; b < totalRoom; b++){\r\n                        let indexArray = b*38\r\n                        if( array[u+indexArray] ==100 && array[u+indexArray+1] ==100){\r\n                            array[u+indexArray] = 0\r\n                            array[u+indexArray+1] = 0\r\n                        }\r\n                        if( array[u-indexArray]==100 && array[u-indexArray+1] == 100){\r\n                            array[u-indexArray] = 0\r\n                            array[u-indexArray+1] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n    \r\n        for(let u = 0; u < array2.length; u++){\r\n            try{\r\n                if( u == index1 && u-1 == index2){\r\n                    for(let b =0; b < totalRoom2; b++){\r\n                        let indexArray2 = b*38\r\n                        if( array2[u+indexArray2] ==100 && array2[u+indexArray2+1] ==100){\r\n                            array2[u+indexArray2] = 0\r\n                            array2[u+indexArray2+1] = 0\r\n                        }\r\n                        if( array2[u-indexArray2]==100 && array2[u-indexArray2+1] == 100){\r\n                            array2[u-indexArray2] = 0\r\n                            array2[u-indexArray2+1] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n        return array    \r\n    }\r\n    \r\n    const changeRowtoZero_1 = (array,array2,index1) => {\r\n        let k =0\r\n        let b =0\r\n        let totalRoom = array.length / 38\r\n        let totalRoom2 = array2.length / 38\r\n    \r\n        for(let u = 0; u < array.length; u++){\r\n            try{\r\n                if( u == index1){\r\n                    for(let b =0; b < totalRoom; b++){\r\n                        let indexArray = b*38\r\n                        if( array[u+indexArray] ==100 ){\r\n                            array[u+indexArray] = 0\r\n                        }\r\n                        if( array[u-indexArray] ==100 ){\r\n                            array[u-indexArray] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n    \r\n        for(let u = 0; u < array2.length; u++){\r\n            try{\r\n                if( u == index1){\r\n                    for(let b =0; b < totalRoom2; b++){\r\n                        let indexArray2 = b*38\r\n                        if( array2[u+indexArray2] ==100 ){\r\n                            array2[u+indexArray2] = 0\r\n                        }\r\n                        if( array2[u-indexArray2] ==100 ){\r\n                            array2[u-indexArray2] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n        return array    \r\n    }\r\n    \r\n    const changeRowtoZero_3_ = (array,array2,index1,index2,index3) => {\r\n        let k =0\r\n        let b =0\r\n        let totalRoom = array.length / 38\r\n        let totalRoom2 = array2.length / 38\r\n    \r\n        for(let u = 0; u < array.length; u++){\r\n            try{\r\n                if( u == index1 && u-1 == index2 && u+1 == index3){\r\n                    for(let b =0; b < totalRoom; b++){\r\n                        let indexArray = b*38\r\n                        if( array[u+indexArray] ==100 && array[u+indexArray-1] ==100  && array[u+indexArray+1] == 100 ){\r\n                            array[u+indexArray] = 0\r\n                            array[u+indexArray-1] = 0\r\n                            array[u+indexArray+1] = 0\r\n                        }\r\n                        if( array[u-indexArray] ==100 && array[u-indexArray-1] ==100  && array[u-indexArray+1] == 100){\r\n                            array[u-indexArray] = 0\r\n                            array[u-indexArray-1] = 0\r\n                            array[u-indexArray+1] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n    \r\n    \r\n        for(let u = 0; u < array2.length; u++){\r\n            try{\r\n                if( u == index1 && u-1 == index2 && u+1 == index3){\r\n                    for(let b =0; b < totalRoom2; b++){\r\n                        let indexArray = b*38\r\n                        if( array2[u+indexArray] ==100 && array2[u+indexArray-1] ==100  && array2[u+indexArray+1] == 100 ){\r\n                            array2[u+indexArray] = 0\r\n                            array2[u+indexArray-1] = 0\r\n                            array2[u+indexArray+1] = 0\r\n                        }\r\n                        if( array2[u-indexArray] ==100 && array2[u-indexArray-1] ==100  && array2[u-indexArray+1] == 100){\r\n                            array2[u-indexArray] = 0\r\n                            array2[u-indexArray-1] = 0\r\n                            array2[u-indexArray+1] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n        return array    \r\n    }\r\n    \r\n    const changeToZero = (array) => {\r\n        for(let i = 0; i < array.length; i++){\r\n            if(array[i] == 0){\r\n                array[i] = 100\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n    \r\n    \r\n    const checkTest = (array,array2,data1) => {\r\n        let count =0\r\n        let totalRoom = array.length / 38\r\n        let totalRoom2 = array2.length / 38\r\n    \r\n        for(let x= 1 ; x <= totalRoom ; x++){\r\n         let indexArray = (x * 38)\r\n            try{\r\n             for(let i = 1; i<array.length ; i++){\r\n                    //if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 1 && array[i+indexArray] != 0 ){\r\n                        try{\r\n                            if(data1 == array[i][5]){\r\n                                if(array[i+indexArray] == 100){\r\n                                    array[i+indexArray] = 0\r\n                                }\r\n    \r\n                             }\r\n                        }catch{}\r\n                    //}    \r\n                }\r\n            }catch{}\r\n        }\r\n    \r\n        for(let x= 1 ; x <= totalRoom2 ; x++){\r\n            let indexArray2 = (x * 38)\r\n               try{\r\n                for(let i = 1; i<array2.length ; i++){\r\n                       //if(array2[i+indexArray2] != 100 && array2[i+indexArray2] != undefined && array2[i+indexArray2] != 1 && array2[i+indexArray2] != 0 ){\r\n                           try{\r\n                               if(data1 == array2[i][5]){\r\n                                   if(array2[i+indexArray2] == 100){\r\n                                       array2[i+indexArray2] = 0\r\n                                   }\r\n       \r\n                                }\r\n                           }catch{}\r\n                       //}    \r\n                   }\r\n               }catch{}\r\n           }\r\n        return array\r\n    }\r\n    //___________________________________________________________________________________________________________________________________\r\nconst array1DElectiveCombine = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrCombine = array1DElectiveCombine(combineArrayElective);\r\n\r\n\r\nconst array1DElective50 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrElective50 = array1DElective50(DataArrayElective50);\r\n\r\nlet insertedDataElective50_Slot2_2 = []\r\nlet insertedDataElective50_Slot2_1= []\r\n\r\nconst AntAlgoInsertElective50 = (array,combine) => {\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    let k4 =0 \r\n\r\n    let remainderArray = []\r\n    let remainderArraySlot1 = []\r\n    let remainderArray3 = []\r\n\r\n    let totalRoom = array.length / 38\r\n\r\n    for(let x=0; x<filterDataElective50.length;x++){\r\n        test.push(filterDataElective50[x]);\r\n    }\r\n\r\n     for(let i = array.length-1;i>0;i--){\r\n         if(k < test.length){\r\n         let hourMS = test[k][7]\r\n\r\n         changeToZero(array)\r\n         changeToZero(combine)\r\n         if(hourMS == 3){\r\n             const j = Math.floor(Math.random()*(i+1));\r\n             checking_3(combine,array,test[k]);\r\n             if(array[i] == 100 && array[i-1] == 100 && array[i+1]==100){\r\n                array[i] = array[j];\r\n                array[i-1] = array[j-1];\r\n                array[i+1] = array[j+1];\r\n                array[j] = test[k];\r\n                array[j-1] = test[k];\r\n                array[j+1] = test[k];\r\n                combine[j] = test[k];\r\n                combine[j-1] = test[k];\r\n                combine[j+1] = test[k];\r\n                changeRowtoZero_3_(combine,array,i,i-1,i+1)\r\n                }\r\n                 else{\r\n                    remainderArray3.push(test[k]);    \r\n                }\r\n             }\r\n\r\n          else if(hourMS == 2){\r\n            checking_minus_1(combine,array,test[k])\r\n            checking_plus_1(combine,array,test[k])\r\n             const j = Math.floor(Math.random()*(i+1));\r\n             if(array[i] == 100){\r\n                 if(array[i-1] == 100 ){\r\n                    array[i] = array[j];\r\n                    array[i-1] = array[j-1];\r\n                    array[j] = test[k];\r\n                    array[j-1] = test[k];\r\n                    combine[j] = test[k];\r\n                    combine[j-1] = test[k];\r\n                    changeRowtoZero_minus_1(combine,array,i,i-1)\r\n                     \r\n                 }else if(array[i+1] == 100){\r\n                    array[i] = array[j];\r\n                    array[i+1] = array[j+1];\r\n                    array[j] = test[k];\r\n                    array[j+1] = test[k];\r\n                    combine[j] = test[k];\r\n                    combine[j+1] = test[k];\r\n                    changeRowtoZero_plus_1(combine,i,i+1)\r\n                     \r\n                 }\r\n                 else{\r\n                     remainderArray.push(test[k]);\r\n                     \r\n                 }\r\n             }else{\r\n                 remainderArray.push(test[k]);\r\n             }\r\n             }\r\n\r\n            else if(hourMS == 4){\r\n                checking_minus_1(combine,array,test[k]);\r\n                checking_plus_1(combine,array,test[k])\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                    if(array[i] == 100 && array[i-1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        combine[j] = test[k];\r\n                        combine[j-1] = test[k];\r\n\r\n                        \r\n\r\n                        changeRowtoZero_minus_1(combine,array,j,j-1);\r\n                        if(array[i] == 100 && array[i-1] == 100){\r\n                            //checking_minus_1(array,test[k]);\r\n                            array[i] = array[j];\r\n                            array[i-1] = array[j-1];\r\n                            array[j] = test[k];\r\n                            array[j-1] = test[k];\r\n                            combine[j] = test[k];\r\n                            combine[j-1] = test[k];\r\n                            changeRowtoZero_minus_1(combine,array,j,j-1);\r\n                        }\r\n                        else if(array[i] == 100 && array[i+1] == 100){\r\n                            array[i] = array[j];\r\n                            array[i+1] = array[j+1];\r\n                            array[j] = test[k];\r\n                            array[j+1] = test[k];\r\n                            combine[j] = test[k];\r\n                            combine[j+1] = test[k];\r\n                            changeRowtoZero_plus_1(combine,array,j,j-1);\r\n                        }\r\n                        else{\r\n                            remainderArraySlot1.push(test[k]);\r\n                        }\r\n                    }\r\n                    else if(array[i] == 100 && array[i+1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        combine[j] = test[k];\r\n                        combine[j+1] = test[k];\r\n                    \r\n                        changeRowtoZero_plus_1(combine,array,i,i-1);\r\n                        if(array[i] == 100 && array[i-1] == 100){\r\n                            array[i] = array[j];\r\n                            array[i-1] = array[j-1];\r\n                            array[j] = test[k];\r\n                            array[j-1] = test[k];\r\n                            combine[j] = test[k];\r\n                            combine[j-1] = test[k];\r\n                            changeRowtoZero_minus_1(combine,array,j,j-1);\r\n                        }\r\n                        else if(array[i] == 100 && array[i+1] == 100){\r\n                            array[i] = array[j];\r\n                            array[i+1] = array[j+1];\r\n                            array[j] = test[k];\r\n                            array[j+1] = test[k];\r\n                            combine[j] = test[k];\r\n                            combine[j+1] = test[k];\r\n                            changeRowtoZero_plus_1(combine,array,j,j-1);\r\n                        }\r\n                        else{\r\n                            remainderArraySlot1.push(test[k]);\r\n                        }\r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                    }\r\n\r\n            }\r\n         }\r\n         k++  \r\n     }\r\n\r\n\r\n     for(let x = 0; x< array.length; x++){\r\n        if(k3 < remainderArraySlot1.length){                \r\n            checking_plus_1(combine,array,remainderArraySlot1[k3])\r\n            if(array[x] == 100 && array[x+1] ==100){\r\n                array[x] = remainderArraySlot1[k3]\r\n                array[x+1] = remainderArraySlot1[k3]\r\n                combine[x] = remainderArraySlot1[k3]\r\n                combine[x+1] = remainderArraySlot1[k3]\r\n                changeRowtoZero_plus_1(combine,array,x,x+1)\r\n            }else{insertedDataElective50_Slot2_2.push(remainderArraySlot1[k3])}\r\n         }\r\n         k3++   \r\n     }\r\n     changeToZero(array);\r\n     changeToZero(combine);\r\n    \r\n     \r\n     for(let x = 0; x< array.length; x++){\r\n        if(k2 < remainderArray.length){\r\n            //checkTest(AntArr50,remainderArray[k2])\r\n            checking_plus_1(combine,array,remainderArray[k2])\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 //if(k2 < remainderArray.length){\r\n                    //changeRowtoZero_plus_1(array,remainderArraySlot1[k2])\r\n                     array[x] = remainderArray[k2]\r\n                     array[x+1] = remainderArray[k2]\r\n                     combine[x] = remainderArray[k2]\r\n                     combine[x+1] = remainderArray[k2]\r\n                     changeRowtoZero_plus_1(combine,array,x,x+1)\r\n                 }\r\n                 try{\r\n                     let slot2 = remainderArray[k2][10]\r\n                     if(slot2 == 1){\r\n                        insertedDataElective50_Slot2_1.push(remainderArray[k2])\r\n                     }\r\n                     if(slot2 == 2){\r\n                        insertedDataElective50_Slot2_2.push(remainderArray[k2])\r\n                    }\r\n                 }catch{}\r\n         }\r\n         k2++   \r\n     }\r\n      changeToZero(array)\r\n      changeToZero(combine)\r\n\r\n     if(array[-1] != undefined){\r\n         insertedDataElective50_Slot2_1.push(array[-1]);\r\n     }\r\n\r\n    return array;\r\n}\r\nvar AntArrInsElective50 = AntAlgoInsertElective50(AntArrElective50,AntArrCombine);\r\n\r\n\r\nconst slot2Equal1forElective50= (array,combine) => {\r\n    let k = 0;\r\n    let test2 = []\r\n   let totalRoom = array.length / 38\r\n\r\n    for(let x = 0; x< array.length; x++){\r\n           if(array[x] == 100){\r\n               if(k < insertedDataElective50_Slot2_1.length){\r\n                   checking_only_1(combine,array,insertedDataElective50_Slot2_1[k])\r\n                   array[x] = insertedDataElective50_Slot2_1[k]\r\n                   combine[x] = insertedDataElective50_Slot2_1[k]\r\n               }\r\n               k++   \r\n        }\r\n    }\r\n    changeToZero(array)\r\n    changeToZero(combine)\r\n    return array;\r\n}\r\nslot2Equal1forElective50(AntArrElective50,AntArrCombine);\r\n\r\n\r\n\r\nconst slot2Equal2forElective50 = (array,combine) => {\r\n    let k = 0;\r\n   let totalRoom = array.length / 38\r\n\r\n    for(let x = 0; x< array.length; x++){\r\n        if(array[x] == 100 && array[x+1] ==100){\r\n           if(k <insertedDataElective50_Slot2_2.length){\r\n               checking_plus_1(combine,array,insertedDataElective50_Slot2_2[k])\r\n                array[x] =insertedDataElective50_Slot2_2[k]\r\n                array[x+1] =insertedDataElective50_Slot2_2[k]\r\n                combine[x] =insertedDataElective50_Slot2_2[k]\r\n                combine[x+1] =insertedDataElective50_Slot2_2[k]\r\n            }\r\n            k++\r\n        }\r\n    }\r\n    changeToZero(array)\r\n    changeToZero(combine)\r\n\r\n    if(array[-1] != undefined){\r\n        insertedDataElective50_Slot2_1.push(array[-1]);\r\n    }\r\n\r\n    return array;\r\n}\r\nslot2Equal2forElective50(AntArrElective50,AntArrCombine);\r\n\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\nconst array1DElective100 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrElective100 = array1DElective100(DataArrayElective100);\r\n\r\nlet insertedDataElective100_Slot2_2 = []\r\nlet insertedDataElective100_Slot2_1= []\r\n\r\nconst AntAlgoInsertElective100 = (array,combine) => {\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    let k4 =0 \r\n\r\n    let remainderArray = []\r\n    let remainderArraySlot1 = []\r\n    let remainderArray3 = []\r\n\r\n    let totalRoom = array.length / 38\r\n\r\n    for(let x=0; x<filterDataElective100.length;x++){\r\n        test.push(filterDataElective100[x]);\r\n    }\r\n\r\n     for(let i = array.length-1;i>0;i--){\r\n         if(k < test.length){\r\n         let hourMS = test[k][7]\r\n\r\n         changeToZero(array)\r\n         changeToZero(combine)\r\n         if(hourMS == 3){\r\n             const j = Math.floor(Math.random()*(i+1));\r\n             checking_3(combine,array,test[k]);\r\n             if(array[i] == 100 && array[i-1] == 100 && array[i+1]==100){\r\n                array[i] = array[j];\r\n                array[i-1] = array[j-1];\r\n                array[i+1] = array[j+1];\r\n                array[j] = test[k];\r\n                array[j-1] = test[k];\r\n                array[j+1] = test[k];\r\n                combine[j] = test[k];\r\n                combine[j-1] = test[k];\r\n                combine[j+1] = test[k];\r\n                changeRowtoZero_3_(combine,array,i,i-1,i+1)\r\n                }\r\n                 else{\r\n                    remainderArray3.push(test[k]);    \r\n                }\r\n             }\r\n\r\n          else if(hourMS == 2){\r\n            checking_minus_1(combine,array,test[k])\r\n            checking_plus_1(combine,array,test[k])\r\n             const j = Math.floor(Math.random()*(i+1));\r\n             if(array[i] == 100){\r\n                 if(array[i-1] == 100 ){\r\n                    array[i] = array[j];\r\n                    array[i-1] = array[j-1];\r\n                    array[j] = test[k];\r\n                    array[j-1] = test[k];\r\n                    combine[j] = test[k];\r\n                    combine[j-1] = test[k];\r\n                    changeRowtoZero_minus_1(combine,array,i,i-1)\r\n                     \r\n                 }else if(array[i+1] == 100){\r\n                    array[i] = array[j];\r\n                    array[i+1] = array[j+1];\r\n                    array[j] = test[k];\r\n                    array[j+1] = test[k];\r\n                    combine[j] = test[k];\r\n                    combine[j+1] = test[k];\r\n                    changeRowtoZero_plus_1(combine,i,i+1)\r\n                     \r\n                 }\r\n                 else{\r\n                     remainderArray.push(test[k]);\r\n                     \r\n                 }\r\n             }else{\r\n                 remainderArray.push(test[k]);\r\n             }\r\n             }\r\n\r\n            else if(hourMS == 4){\r\n                checking_minus_1(combine,array,test[k]);\r\n                checking_plus_1(combine,array,test[k])\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                    if(array[i] == 100 && array[i-1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        combine[j] = test[k];\r\n                        combine[j-1] = test[k];\r\n\r\n                        \r\n\r\n                        changeRowtoZero_minus_1(combine,array,j,j-1);\r\n                        if(array[i] == 100 && array[i-1] == 100){\r\n                            //checking_minus_1(array,test[k]);\r\n                            array[i] = array[j];\r\n                            array[i-1] = array[j-1];\r\n                            array[j] = test[k];\r\n                            array[j-1] = test[k];\r\n                            combine[j] = test[k];\r\n                            combine[j-1] = test[k];\r\n                            changeRowtoZero_minus_1(combine,array,j,j-1);\r\n                        }\r\n                        else if(array[i] == 100 && array[i+1] == 100){\r\n                            array[i] = array[j];\r\n                            array[i+1] = array[j+1];\r\n                            array[j] = test[k];\r\n                            array[j+1] = test[k];\r\n                            combine[j] = test[k];\r\n                            combine[j+1] = test[k];\r\n                            changeRowtoZero_plus_1(combine,array,j,j-1);\r\n                        }\r\n                        else{\r\n                            remainderArraySlot1.push(test[k]);\r\n                        }\r\n                    }\r\n                    else if(array[i] == 100 && array[i+1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        combine[j] = test[k];\r\n                        combine[j+1] = test[k];\r\n                    \r\n                        changeRowtoZero_plus_1(combine,array,i,i-1);\r\n                        if(array[i] == 100 && array[i-1] == 100){\r\n                            array[i] = array[j];\r\n                            array[i-1] = array[j-1];\r\n                            array[j] = test[k];\r\n                            array[j-1] = test[k];\r\n                            combine[j] = test[k];\r\n                            combine[j-1] = test[k];\r\n                            changeRowtoZero_minus_1(combine,array,j,j-1);\r\n                        }\r\n                        else if(array[i] == 100 && array[i+1] == 100){\r\n                            array[i] = array[j];\r\n                            array[i+1] = array[j+1];\r\n                            array[j] = test[k];\r\n                            array[j+1] = test[k];\r\n                            combine[j] = test[k];\r\n                            combine[j+1] = test[k];\r\n                            changeRowtoZero_plus_1(combine,array,j,j-1);\r\n                        }\r\n                        else{\r\n                            remainderArraySlot1.push(test[k]);\r\n                        }\r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                    }\r\n\r\n            }\r\n         }\r\n         k++  \r\n     }\r\n\r\n\r\n     for(let x = 0; x< array.length; x++){\r\n        if(k3 < remainderArraySlot1.length){                \r\n            checking_plus_1(combine,array,remainderArraySlot1[k3])\r\n            if(array[x] == 100 && array[x+1] ==100){\r\n                array[x] = remainderArraySlot1[k3]\r\n                array[x+1] = remainderArraySlot1[k3]\r\n                combine[x] = remainderArraySlot1[k3]\r\n                combine[x+1] = remainderArraySlot1[k3]\r\n                changeRowtoZero_plus_1(combine,array,x,x+1)\r\n            }else{insertedDataElective100_Slot2_2.push(remainderArraySlot1[k3])}\r\n         }\r\n         k3++   \r\n     }\r\n     changeToZero(array);\r\n     changeToZero(combine);\r\n    \r\n     \r\n     for(let x = 0; x< array.length; x++){\r\n        if(k2 < remainderArray.length){\r\n            //checkTest(AntArrElective100,remainderArray[k2])\r\n            checking_plus_1(combine,array,remainderArray[k2])\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 //if(k2 < remainderArray.length){\r\n                    //changeRowtoZero_plus_1(array,remainderArraySlot1[k2])\r\n                     array[x] = remainderArray[k2]\r\n                     array[x+1] = remainderArray[k2]\r\n                     combine[x] = remainderArray[k2]\r\n                     combine[x+1] = remainderArray[k2]\r\n                     changeRowtoZero_plus_1(combine,array,x,x+1)\r\n                 }\r\n                 try{\r\n                     let slot2 = remainderArray[k2][10]\r\n                     if(slot2 == 1){\r\n                        insertedDataElective100_Slot2_1.push(remainderArray[k2])\r\n                     }\r\n                     if(slot2 == 2){\r\n                        insertedDataElective100_Slot2_2.push(remainderArray[k2])\r\n                    }\r\n                 }catch{}\r\n         }\r\n         k2++   \r\n     }\r\n      changeToZero(array)\r\n      changeToZero(combine)\r\n\r\n     if(array[-1] != undefined){\r\n        insertedDataElective100_Slot2_1.push(array[-1]);\r\n     }\r\n\r\n    return array;\r\n}\r\nvar AntArrInsElective100 = AntAlgoInsertElective100(AntArrElective100,AntArrCombine);\r\n\r\n\r\nconst slot2Equal1forElective100= (array,combine) => {\r\n    let k = 0;\r\n    let test2 = []\r\n   let totalRoom = array.length / 38\r\n\r\n    for(let x = 0; x< array.length; x++){\r\n           if(array[x] == 100){\r\n               if(k < insertedDataElective100_Slot2_1.length){\r\n                   checking_only_1(combine,array,insertedDataElective100_Slot2_1[k])\r\n                   array[x] =insertedDataElective100_Slot2_2[k]\r\n                   combine[x] = insertedDataElective100_Slot2_2[k]\r\n               }\r\n               k++   \r\n        }\r\n    }\r\n    changeToZero(array)\r\n    changeToZero(combine)\r\n    return array;\r\n}\r\nslot2Equal1forElective100(AntArrElective100,AntArrCombine);\r\n\r\n\r\n\r\nconst slot2Equal2forElective100 = (array,combine) => {\r\n    let k = 0;\r\n   let totalRoom = array.length / 38\r\n\r\n    for(let x = 0; x< array.length; x++){\r\n        if(array[x] == 100 && array[x+1] ==100){\r\n           if(k < insertedDataElective100_Slot2_2.length){\r\n               checking_plus_1(combine,array,insertedDataElective100_Slot2_2[k])\r\n                array[x] = insertedDataElective100_Slot2_2[k]\r\n                array[x+1] = insertedDataElective100_Slot2_2[k]\r\n                combine[x] = insertedDataElective100_Slot2_2[k]\r\n                combine[x+1] = insertedDataElective100_Slot2_2[k]\r\n            }\r\n            k++\r\n        }\r\n    }\r\n    changeToZero(array)\r\n    changeToZero(combine)\r\n\r\n    if(array[-1] != undefined){\r\n        insertedDataElective100_Slot2_1.push(array[-1]);\r\n    }\r\n\r\n    return array;\r\n}\r\nslot2Equal2forElective100(AntArrElective100,AntArrCombine);\r\n\r\n\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\nconst array1DElective200 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrElective200 = array1DElective200(DataArrayElective200);\r\n\r\nlet insertedDataElective200_Slot2_2 = []\r\nlet insertedDataElective200_Slot2_1= []\r\n\r\nconst AntAlgoInsertElective200 = (array,combine) => {\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    let k4 =0 \r\n\r\n    let remainderArray = []\r\n    let remainderArraySlot1 = []\r\n    let remainderArray3 = []\r\n\r\n    let totalRoom = array.length / 38\r\n\r\n    for(let x=0; x<filterDataElective200.length;x++){\r\n        test.push(filterDataElective200[x]);\r\n    }\r\n\r\n     for(let i = array.length-1;i>0;i--){\r\n         if(k < test.length){\r\n         let hourMS = test[k][7]\r\n\r\n         changeToZero(array)\r\n         changeToZero(combine)\r\n         if(hourMS == 3){\r\n             const j = Math.floor(Math.random()*(i+1));\r\n             checking_3(combine,array,test[k]);\r\n             if(array[i] == 100 && array[i-1] == 100 && array[i+1]==100){\r\n                array[i] = array[j];\r\n                array[i-1] = array[j-1];\r\n                array[i+1] = array[j+1];\r\n                array[j] = test[k];\r\n                array[j-1] = test[k];\r\n                array[j+1] = test[k];\r\n                combine[j] = test[k];\r\n                combine[j-1] = test[k];\r\n                combine[j+1] = test[k];\r\n                changeRowtoZero_3_(combine,array,i,i-1,i+1)\r\n                }\r\n                 else{\r\n                    remainderArray3.push(test[k]);    \r\n                }\r\n             }\r\n\r\n          else if(hourMS == 2){\r\n            checking_minus_1(combine,array,test[k])\r\n            checking_plus_1(combine,array,test[k])\r\n             const j = Math.floor(Math.random()*(i+1));\r\n             if(array[i] == 100){\r\n                 if(array[i-1] == 100 ){\r\n                    array[i] = array[j];\r\n                    array[i-1] = array[j-1];\r\n                    array[j] = test[k];\r\n                    array[j-1] = test[k];\r\n                    combine[j] = test[k];\r\n                    combine[j-1] = test[k];\r\n                    changeRowtoZero_minus_1(combine,array,i,i-1)\r\n                     \r\n                 }else if(array[i+1] == 100){\r\n                    array[i] = array[j];\r\n                    array[i+1] = array[j+1];\r\n                    array[j] = test[k];\r\n                    array[j+1] = test[k];\r\n                    combine[j] = test[k];\r\n                    combine[j+1] = test[k];\r\n                    changeRowtoZero_plus_1(combine,i,i+1)\r\n                     \r\n                 }\r\n                 else{\r\n                     remainderArray.push(test[k]);\r\n                     \r\n                 }\r\n             }else{\r\n                 remainderArray.push(test[k]);\r\n             }\r\n             }\r\n\r\n            else if(hourMS == 4){\r\n                checking_minus_1(combine,array,test[k]);\r\n                checking_plus_1(combine,array,test[k])\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                    if(array[i] == 100 && array[i-1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        combine[j] = test[k];\r\n                        combine[j-1] = test[k];\r\n\r\n                        \r\n\r\n                        changeRowtoZero_minus_1(combine,array,j,j-1);\r\n                        if(array[i] == 100 && array[i-1] == 100){\r\n                            //checking_minus_1(array,test[k]);\r\n                            array[i] = array[j];\r\n                            array[i-1] = array[j-1];\r\n                            array[j] = test[k];\r\n                            array[j-1] = test[k];\r\n                            combine[j] = test[k];\r\n                            combine[j-1] = test[k];\r\n                            changeRowtoZero_minus_1(combine,array,j,j-1);\r\n                        }\r\n                        else if(array[i] == 100 && array[i+1] == 100){\r\n                            array[i] = array[j];\r\n                            array[i+1] = array[j+1];\r\n                            array[j] = test[k];\r\n                            array[j+1] = test[k];\r\n                            combine[j] = test[k];\r\n                            combine[j+1] = test[k];\r\n                            changeRowtoZero_plus_1(combine,array,j,j-1);\r\n                        }\r\n                        else{\r\n                            remainderArraySlot1.push(test[k]);\r\n                        }\r\n                    }\r\n                    else if(array[i] == 100 && array[i+1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        combine[j] = test[k];\r\n                        combine[j+1] = test[k];\r\n                    \r\n                        changeRowtoZero_plus_1(combine,array,i,i-1);\r\n                        if(array[i] == 100 && array[i-1] == 100){\r\n                            array[i] = array[j];\r\n                            array[i-1] = array[j-1];\r\n                            array[j] = test[k];\r\n                            array[j-1] = test[k];\r\n                            combine[j] = test[k];\r\n                            combine[j-1] = test[k];\r\n                            changeRowtoZero_minus_1(combine,array,j,j-1);\r\n                        }\r\n                        else if(array[i] == 100 && array[i+1] == 100){\r\n                            array[i] = array[j];\r\n                            array[i+1] = array[j+1];\r\n                            array[j] = test[k];\r\n                            array[j+1] = test[k];\r\n                            combine[j] = test[k];\r\n                            combine[j+1] = test[k];\r\n                            changeRowtoZero_plus_1(combine,array,j,j-1);\r\n                        }\r\n                        else{\r\n                            remainderArraySlot1.push(test[k]);\r\n                        }\r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                    }\r\n\r\n            }\r\n         }\r\n         k++  \r\n     }\r\n\r\n\r\n     for(let x = 0; x< array.length; x++){\r\n        if(k3 < remainderArraySlot1.length){                \r\n            checking_plus_1(combine,array,remainderArraySlot1[k3])\r\n            if(array[x] == 100 && array[x+1] ==100){\r\n                array[x] = remainderArraySlot1[k3]\r\n                array[x+1] = remainderArraySlot1[k3]\r\n                combine[x] = remainderArraySlot1[k3]\r\n                combine[x+1] = remainderArraySlot1[k3]\r\n                changeRowtoZero_plus_1(combine,array,x,x+1)\r\n            }else{insertedDataElective200_Slot2_2.push(remainderArraySlot1[k3])}\r\n         }\r\n         k3++   \r\n     }\r\n     changeToZero(array);\r\n     changeToZero(combine);\r\n    \r\n     \r\n     for(let x = 0; x< array.length; x++){\r\n        if(k2 < remainderArray.length){\r\n            //checkTest(AntArrElective200,remainderArray[k2])\r\n            checking_plus_1(combine,array,remainderArray[k2])\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 //if(k2 < remainderArray.length){\r\n                    //changeRowtoZero_plus_1(array,remainderArraySlot1[k2])\r\n                     array[x] = remainderArray[k2]\r\n                     array[x+1] = remainderArray[k2]\r\n                     combine[x] = remainderArray[k2]\r\n                     combine[x+1] = remainderArray[k2]\r\n                     changeRowtoZero_plus_1(combine,array,x,x+1)\r\n                 }\r\n                 try{\r\n                     let slot2 = remainderArray[k2][10]\r\n                     if(slot2 == 1){\r\n                        insertedDataElective200_Slot2_1.push(remainderArray[k2])\r\n                     }\r\n                     if(slot2 == 2){\r\n                        insertedDataElective200_Slot2_2.push(remainderArray[k2])\r\n                    }\r\n                 }catch{}\r\n         }\r\n         k2++   \r\n     }\r\n      changeToZero(array)\r\n      changeToZero(combine)\r\n\r\n     if(array[-1] != undefined){\r\n        insertedDataElective200_Slot2_1.push(array[-1]);\r\n     }\r\n\r\n    return array;\r\n}\r\nvar AntArrInsElective200 = AntAlgoInsertElective200(AntArrElective200,AntArrCombine);\r\n\r\n\r\nconst slot2Equal1forElective200= (array,combine) => {\r\n    let k = 0;\r\n    let test2 = []\r\n   let totalRoom = array.length / 38\r\n\r\n    for(let x = 0; x< array.length; x++){\r\n           if(array[x] == 100){\r\n               if(k < insertedDataElective200_Slot2_1.length){\r\n                   checking_only_1(combine,array,insertedDataElective200_Slot2_1[k])\r\n                   array[x] = insertedDataElective200_Slot2_1[k]\r\n                   combine[x] = insertedDataElective200_Slot2_1[k]\r\n               }\r\n               k++   \r\n        }\r\n    }\r\n    changeToZero(array)\r\n    changeToZero(combine)\r\n    return array;\r\n}\r\nslot2Equal1forElective200(AntArrElective200,AntArrCombine);\r\n\r\n\r\n\r\nconst slot2Equal2forElective200 = (array,combine) => {\r\n    let k = 0;\r\n   let totalRoom = array.length / 38\r\n\r\n    for(let x = 0; x< array.length; x++){\r\n        if(array[x] == 100 && array[x+1] ==100){\r\n           if(k < insertedDataElective200_Slot2_2.length){\r\n               checking_plus_1(combine,array,insertedDataElective200_Slot2_2[k])\r\n                array[x] = insertedDataElective200_Slot2_2[k]\r\n                array[x+1] = insertedDataElective200_Slot2_2[k]\r\n                combine[x] = insertedDataElective200_Slot2_2[k]\r\n                combine[x+1] = insertedDataElective200_Slot2_2[k]\r\n            }\r\n            k++\r\n        }\r\n    }\r\n    changeToZero(array)\r\n    changeToZero(combine)\r\n\r\n    if(array[-1] != undefined){\r\n        insertedDataElective200_Slot2_1.push(array[-1]);\r\n    }\r\n\r\n    return array;\r\n}\r\nslot2Equal2forElective200(AntArrElective200,AntArrCombine);\r\n\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\nconst array1DElective500 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrElective500 = array1DElective500(DataArrayElective500);\r\n\r\nlet extraDataElective500_Slot2_2 = []\r\nlet extraData500Elective_Slot2_1 = []\r\nlet insertedDataElective500_Slot2_2 = []\r\nlet insertedDataElective500_Slot2_1= []\r\n\r\nconst AntAlgoInsertElective500 = (array,combine) => {\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    let k4 =0 \r\n\r\n    let remainderArray = []\r\n    let remainderArraySlot1 = []\r\n    let remainderArray3 = []\r\n\r\n    let totalRoom = array.length / 38\r\n\r\n    for(let x=0; x<filterDataElective500.length;x++){\r\n        test.push(filterDataElective500[x]);\r\n    }\r\n\r\n     for(let i = array.length-1;i>0;i--){\r\n         if(k < test.length){\r\n         let hourMS = test[k][7]\r\n\r\n         changeToZero(array)\r\n         changeToZero(combine)\r\n         if(hourMS == 3){\r\n             const j = Math.floor(Math.random()*(i+1));\r\n             checking_3(combine,array,test[k]);\r\n             if(array[i] == 100 && array[i-1] == 100 && array[i+1]==100){\r\n                array[i] = array[j];\r\n                array[i-1] = array[j-1];\r\n                array[i+1] = array[j+1];\r\n                array[j] = test[k];\r\n                array[j-1] = test[k];\r\n                array[j+1] = test[k];\r\n                combine[j] = test[k];\r\n                combine[j-1] = test[k];\r\n                combine[j+1] = test[k];\r\n                changeRowtoZero_3_(combine,array,i,i-1,i+1)\r\n                }\r\n                 else{\r\n                    remainderArray3.push(test[k]);    \r\n                }\r\n             }\r\n\r\n          else if(hourMS == 2){\r\n            checking_minus_1(combine,array,test[k])\r\n            checking_plus_1(combine,array,test[k])\r\n             const j = Math.floor(Math.random()*(i+1));\r\n             if(array[i] == 100){\r\n                 if(array[i-1] == 100 ){\r\n                    array[i] = array[j];\r\n                    array[i-1] = array[j-1];\r\n                    array[j] = test[k];\r\n                    array[j-1] = test[k];\r\n                    combine[j] = test[k];\r\n                    combine[j-1] = test[k];\r\n                    changeRowtoZero_minus_1(combine,array,i,i-1)\r\n                     \r\n                 }else if(array[i+1] == 100){\r\n                    array[i] = array[j];\r\n                    array[i+1] = array[j+1];\r\n                    array[j] = test[k];\r\n                    array[j+1] = test[k];\r\n                    combine[j] = test[k];\r\n                    combine[j+1] = test[k];\r\n                    changeRowtoZero_plus_1(combine,i,i+1)\r\n                     \r\n                 }\r\n                 else{\r\n                     remainderArray.push(test[k]);\r\n                     \r\n                 }\r\n             }else{\r\n                 remainderArray.push(test[k]);\r\n             }\r\n             }\r\n\r\n            else if(hourMS == 4){\r\n                checking_minus_1(combine,array,test[k]);\r\n                checking_plus_1(combine,array,test[k])\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                    if(array[i] == 100 && array[i-1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        combine[j] = test[k];\r\n                        combine[j-1] = test[k];\r\n\r\n                        \r\n\r\n                        changeRowtoZero_minus_1(combine,array,j,j-1);\r\n                        if(array[i] == 100 && array[i-1] == 100){\r\n                            //checking_minus_1(array,test[k]);\r\n                            array[i] = array[j];\r\n                            array[i-1] = array[j-1];\r\n                            array[j] = test[k];\r\n                            array[j-1] = test[k];\r\n                            combine[j] = test[k];\r\n                            combine[j-1] = test[k];\r\n                            changeRowtoZero_minus_1(combine,array,j,j-1);\r\n                        }\r\n                        else if(array[i] == 100 && array[i+1] == 100){\r\n                            array[i] = array[j];\r\n                            array[i+1] = array[j+1];\r\n                            array[j] = test[k];\r\n                            array[j+1] = test[k];\r\n                            combine[j] = test[k];\r\n                            combine[j+1] = test[k];\r\n                            changeRowtoZero_plus_1(combine,array,j,j-1);\r\n                        }\r\n                        else{\r\n                            remainderArraySlot1.push(test[k]);\r\n                        }\r\n                    }\r\n                    else if(array[i] == 100 && array[i+1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        combine[j] = test[k];\r\n                        combine[j+1] = test[k];\r\n                    \r\n                        changeRowtoZero_plus_1(combine,array,i,i-1);\r\n                        if(array[i] == 100 && array[i-1] == 100){\r\n                            array[i] = array[j];\r\n                            array[i-1] = array[j-1];\r\n                            array[j] = test[k];\r\n                            array[j-1] = test[k];\r\n                            combine[j] = test[k];\r\n                            combine[j-1] = test[k];\r\n                            changeRowtoZero_minus_1(combine,array,j,j-1);\r\n                        }\r\n                        else if(array[i] == 100 && array[i+1] == 100){\r\n                            array[i] = array[j];\r\n                            array[i+1] = array[j+1];\r\n                            array[j] = test[k];\r\n                            array[j+1] = test[k];\r\n                            combine[j] = test[k];\r\n                            combine[j+1] = test[k];\r\n                            changeRowtoZero_plus_1(combine,array,j,j-1);\r\n                        }\r\n                        else{\r\n                            remainderArraySlot1.push(test[k]);\r\n                        }\r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                    }\r\n\r\n            }\r\n         }\r\n         k++  \r\n     }\r\n\r\n\r\n     for(let x = 0; x< array.length; x++){\r\n        if(k3 < remainderArraySlot1.length){                \r\n            checking_plus_1(combine,array,remainderArraySlot1[k3])\r\n            if(array[x] == 100 && array[x+1] ==100){\r\n                array[x] = remainderArraySlot1[k3]\r\n                array[x+1] = remainderArraySlot1[k3]\r\n                combine[x] = remainderArraySlot1[k3]\r\n                combine[x+1] = remainderArraySlot1[k3]\r\n                changeRowtoZero_plus_1(combine,array,x,x+1)\r\n            }else{insertedDataElective500_Slot2_2.push(remainderArraySlot1[k3])}\r\n         }\r\n         k3++   \r\n     }\r\n     changeToZero(array);\r\n     changeToZero(combine);\r\n    \r\n     \r\n     for(let x = 0; x< array.length; x++){\r\n        if(k2 < remainderArray.length){\r\n            //checkTest(AntArrElective500remainderArray[k2])\r\n            checking_plus_1(combine,array,remainderArray[k2])\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 //if(k2 < remainderArray.length){\r\n                    //changeRowtoZero_plus_1(array,remainderArraySlot1[k2])\r\n                     array[x] = remainderArray[k2]\r\n                     array[x+1] = remainderArray[k2]\r\n                     combine[x] = remainderArray[k2]\r\n                     combine[x+1] = remainderArray[k2]\r\n                     changeRowtoZero_plus_1(combine,array,x,x+1)\r\n                 }\r\n                 try{\r\n                     let slot2 = remainderArray[k2][10]\r\n                     if(slot2 == 1){\r\n                        insertedDataElective500_Slot2_2.push(remainderArray[k2])\r\n                     }\r\n                     if(slot2 == 2){\r\n                        insertedDataElective500_Slot2_2.push(remainderArray[k2])\r\n                    }\r\n                 }catch{}\r\n         }\r\n         k2++   \r\n     }\r\n      changeToZero(array)\r\n      changeToZero(combine)\r\n\r\n     if(array[-1] != undefined){\r\n        insertedDataElective500_Slot2_1.push(array[-1]);\r\n     }\r\n\r\n    return array;\r\n}\r\nvar AntArrInsElective500 = AntAlgoInsertElective500(AntArrElective500,AntArrCombine);\r\n\r\n\r\nconst slot2Equal1forElective500= (array,combine) => {\r\n    let k = 0;\r\n    let test2 = []\r\n   let totalRoom = array.length / 38\r\n\r\n    for(let x = 0; x< array.length; x++){\r\n           if(array[x] == 100){\r\n               if(k < insertedDataElective500_Slot2_1.length){\r\n                   checking_only_1(combine,array,insertedDataElective500_Slot2_1[k])\r\n                   array[x] = insertedDataElective500_Slot2_1[k]\r\n                   combine[x] = insertedDataElective500_Slot2_1[k]\r\n               }\r\n               k++   \r\n        }\r\n    }\r\n    changeToZero(array)\r\n    changeToZero(combine)\r\n    return array;\r\n}\r\nslot2Equal1forElective500(AntArrElective500,AntArrCombine);\r\n\r\n\r\n\r\nconst slot2Equal2forElective500 = (array,combine) => {\r\n    let k = 0;\r\n   let totalRoom = array.length / 38\r\n\r\n    for(let x = 0; x< array.length; x++){\r\n        if(array[x] == 100 && array[x+1] ==100){\r\n           if(k < insertedDataElective500_Slot2_2.length){\r\n               checking_plus_1(insertedDataElective500_Slot2_2[k])\r\n                array[x] = insertedDataElective500_Slot2_2[k]\r\n                array[x+1] = insertedDataElective500_Slot2_2[k]\r\n                combine[x] = insertedDataElective500_Slot2_2[k]\r\n                combine[x+1] = insertedDataElective500_Slot2_2[k]\r\n            }\r\n            k++\r\n        }\r\n    }\r\n    changeToZero(array)\r\n    changeToZero(combine)\r\n\r\n    if(array[-1] != undefined){\r\n        insertedDataElective500_Slot2_1.push(array[-1]);\r\n    }\r\n\r\n    return array;\r\n}\r\nslot2Equal2forElective500(AntArrElective500,AntArrCombine);\r\n\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n// Hard Constraint \r\n// H1: No student attend more than one class/ event at the same time\r\n// H2: The room is large enough to accomodate all of the student in attendace while also meeting the requirement \r\n// H3: At any given time, each room can onle have one course booked\r\n// H4: No student attend class during 12:00 pm -2:00 due to solat jumaat\r\n// H5: One teacher can only teach one class at one time.\r\n\r\n//Check for the H1 violation: same group attend more than 1 class at 1 time\r\n\r\nconst check1Group = (array) => {\r\n    let count =0\r\n    let indexArray = 0\r\n    let totalRoom = array.length / 38\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n        indexArray = (x * 38)\r\n    }\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n        try{\r\n             for(let i = 0; i<array.length ; i++){\r\n                indexArray = (x * 37)\r\n                if(array[i+indexArray] != 100 && array[i+indexArray] != undefined  && array[i+indexArray] != 1 && array[i+indexArray] != 0 ){\r\n                    try{\r\n                        if(array[i][6] == array[i+indexArray][6] && array[i][5] == array[i+indexArray][5]){\r\n                             try{\r\n       \r\n                                 count +=1\r\n                             }catch{}\r\n                        }\r\n                    }catch{}\r\n                }   \r\n            }\r\n        }catch{}\r\n    }\r\n    return count\r\n \r\n }\r\n \r\n var checkH1_ALL = check1Group(AntArrCombine)\r\n\r\n \r\n \r\n \r\n \r\n //Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\r\n \r\n const checkRoomQuota = (array) => {\r\n    let count = 0\r\n    return count \r\n }\r\n var checkH2_ALLElective = checkRoomQuota(AntArrCombine)\r\n \r\n \r\n //Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\r\n const checkSolatJummat = (array) => {\r\n    let count = 0\r\n    return count \r\n }\r\n var checkH4_ALLElective = checkSolatJummat(AntArrCombine)\r\n \r\n //Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\r\n \r\n const check1Teacher = (array) => {\r\n    let count =0\r\n    let indexArray = 0\r\n    let totalRoom = array.length / 38\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n     indexArray = (x * 38)\r\n        try{\r\n         for(let i = 1; i<array.length ; i++){\r\n                if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 1 && array[i+indexArray] != 0 ){\r\n                    try{\r\n                        if(array[i][5] == array[i+indexArray][5]){\r\n                            count +=1\r\n                         }\r\n                    }catch{}\r\n                }    \r\n            }\r\n        }catch{}\r\n    }\r\n    return count\r\n \r\n \r\n }\r\n var checkH5_ALL = check1Teacher(AntArrCombine)\r\n const checkHC = (data1,data2) => {\r\n     let count =0;\r\n     if(data1 != 0){\r\n         count +=1\r\n     }\r\n     if(data2 != 0){\r\n         count +=1\r\n     }\r\n \r\n     return count;\r\n }\r\n let checkTotalHardContraints = checkHC(checkH5_ALL,checkH1_ALL)\r\n console.log(\"Total Hard Constraint: \"+checkTotalHardContraints)\r\n \r\n \r\n //----------------------------------------------------------------------------------------------------------------------------------------\r\n \r\n \r\n // Soft Constraint \r\n // S1: A student has a class schedule toward the end of the day\r\n // S2: A student have more than two class in a row\r\n \r\n \r\n //Check for the S1 violation: student have class at the end of the day\r\n const checkEndOfClass = (array) => {\r\n    let count =0\r\n    let totalRoom = array.length / 38\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n        let indexArray = (x * 37)\r\n        if(array[indexArray] != 100 ){\r\n            count = 1\r\n        }\r\n    }\r\n    return count\r\n \r\n }\r\n  var checkSC1_ALL = checkEndOfClass(AntArrCombine)\r\n \r\n \r\n \r\n //Check for the S2 violation: teacher have 2 class in a row\r\n \r\n const check2ClassInARow = (array) => {\r\n    let count =0\r\n    for(let i = 0; i < array.length; i++){\r\n        try{\r\n         if(array[i][5] != undefined && array[i+3][5] != undefined && array[i+2][5] != undefined && array[i+4][5] != undefined){\r\n             if(array[i][5] == array[i+3][5] && array[i+2][5] == array[i+4][5]){\r\n                 count = 1\r\n             }\r\n        }\r\n        }catch{}\r\n    }\r\n    return count\r\n \r\n }\r\n var checkSC2_ALL = checkEndOfClass(AntArrCombine)\r\n \r\n \r\n //----------------------------------------------------------------------------------------------------------------------------------------------\r\n \r\n //-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n \r\n \r\n \r\n //----------------------------------------------------------------------------------------------------------------------------------------\r\n \r\n \r\n \r\n \r\n //-----------------------------------------------------------------------------------------------------------------------------------------------\r\n \r\n const checkTotalSoftContraint = () => {\r\n     let count =0\r\n     let totalSC = checkSC1_ALL + checkSC2_ALL\r\n     \r\n     if(totalSC != 0){\r\n         count +=1\r\n     }\r\n     return count\r\n }\r\n var checkTotalSoftContraints = checkTotalSoftContraint()\r\n console.log(\"Total Soft Constraint: \"+checkTotalSoftContraints)\r\n //----------------------------------------------------------------------------------------------------------------------------------------------\r\n \r\n const change100ToEmptyElective = (data) => {\r\n     for(let i = 0; i< data.length; i++){\r\n         if(data[i] == 100){\r\n             data[i] = [];\r\n         }\r\n     }\r\n     return data;\r\n }\r\n let finalDataElective = change100ToEmptyElective(AntArrCombine)\r\n \r\n \r\n checkTotalHardContraintsAll = checkTotalHardContraints\r\n checkTotalSoftContraintsAll = checkTotalSoftContraints\r\n finalDataAllElective.push(finalDataElective)\r\n return {checkTotalHardContraints,checkTotalSoftContraints,finalDataAllElective}\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n}\r\n\r\nlet trigger = 0\r\nvar t0 = performance.now()\r\nconst iteration = () => {\r\n        //antSystem()\r\n        let globalBestHS = checkTotalHardContraintsAll \r\n        let globalBestSS = checkTotalSoftContraintsAll\r\n        let globalBestScehdule = finalDataAllElective[0]\r\n    for(let i= 1; i <= 1; i++){\r\n        antSystem()\r\n        let localBestHS = checkTotalHardContraintsAll \r\n        let localBestSS = checkTotalSoftContraintsAll\r\n        let localBestScehdule = finalDataAllElective[0]\r\n            console.log(\"iteraion: \" + i)\r\n            if(globalBestHS > localBestHS ){\r\n                globalBestHS = localBestHS\r\n                globalBestSS = localBestSS\r\n                globalBestScehdule = localBestScehdule\r\n            }\r\n            if(localBestHS == 0){\r\n                console.log(\"iteraion: \" + i)\r\n                console.log(\"workable solution is found\")\r\n                globalBestHS = localBestHS\r\n                globalBestSS = localBestSS\r\n                globalBestScehdule = localBestScehdule\r\n                console.log(\"Workable Gloabal best HS: \"+globalBestHS)\r\n                console.log(\"Workable Gloabal best SS: \" +globalBestSS)\r\n                //console.log(finalDataAll[0])\r\n                trigger = 1\r\n                return [finalDataAllElective[0]]\r\n            }\r\n            else if(localBestHS == 0 && localBestSS == 0){\r\n                console.log(\"iteraion: \" + i)\r\n                console.log(\"perfect solution is found\")\r\n                globalBestHS = localBestHS\r\n                globalBestSS = localBestSS\r\n                globalBestScehdule = localBestScehdule\r\n                console.log(\"Perfect Gloabal best HS: \"+globalBestHS)\r\n                console.log(\"Perfect Gloabal best SS: \" +globalBestSS)\r\n                console.log(finalDataAll[0])\r\n                trigger = 1\r\n                return [finalDataAllElective[0]]\r\n            }\r\n    }\r\n    return [finalDataAllElective[0]]\r\n}\r\nlet interations = iteration()\r\n\r\nlet presentableDataElective = []\r\n\r\nif(trigger == 1){\r\n//shot course code, course name and lecturer\r\nconsole.log(interations);    \r\nconst changeToPresentationData = (data) => {\r\n    console.log(data)\r\n    for(let i= 0; i <= data.length; i++){\r\n        // console.log(data[i][1]);\r\n        // console.log(data[i][2]);\r\n        // console.log(data[i][5]);\r\n        try {\r\n            console.log(data[i][1])\r\n            presentableDataElective.push([data[i][1],data[i][2],data[i][5]])\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n}\r\nchangeToPresentationData(interations)\r\n\r\n\r\nlet allRoomName = []\r\nfor(let i = 0; i < roomData[0].length; i++){\r\n    allRoomName.push(roomData[0][i][0])\r\n}\r\nallRoomName.unshift(\"Room\");\r\nif(allRoomName.pop() == undefined){\r\n}\r\n\r\n\r\nlet wed = ['Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday']\r\n\r\nconst create2dArrayElective = (weekdayArray,partDay,arrayAll, partAll) => {\r\n    var tmp = [];\r\n\r\n    for(var i = 0; i < weekdayArray.length; i += partDay) {\r\n        tmp.push(weekdayArray.slice(i, i + partDay));\r\n    }\r\n    for(var i = 0; i < arrayAll.length; i += partAll) {\r\n        tmp.push(arrayAll.slice(i, i + partAll));\r\n    }\r\n    return tmp;\r\n}\r\nlet datasetElective = create2dArrayElective(wed,10,presentableDataElective,10);\r\nconsole.log(datasetElective)\r\n//console.log(dataset)\r\n\r\nconst insertRoomNameElective = (roomData,array) => {\r\n    for(let i= 0; i<array.length; i++){\r\n        array[i].unshift(roomData[i]);\r\n    }\r\n    return array;\r\n}\r\n\r\ninsertRoomNameElective(allRoomName,datasetElective)\r\n\r\n\r\n  /** Convert a 2D array into a CSV string\r\n   * elective\r\n */\r\n   function arrayToCsvElective(data){\r\n    //console.log(data)\r\n    return data.map(row =>\r\n      row\r\n      .map(String)  // convert every value to String\r\n      .map(v => v.replaceAll('\"', '\"\"'))  // escape double colons\r\n      .map(v => `\"${v}\"`)  // quote it\r\n      .join(',')  // comma-separated\r\n    ).join('\\r\\n');  // rows starting on new lines\r\n  }\r\n\r\nlet csvElective = arrayToCsvElective(\r\n    datasetElective\r\n);\r\n\r\nfunction downloadBlobElective(content, filename, contentType) {\r\n    // Create a blob\r\n    var blob = new Blob([content], { type: contentType });\r\n    var url = URL.createObjectURL(blob);\r\n  \r\n    // Create a link to download it\r\n    var pom = document.createElement('a');\r\n    pom.href = url;\r\n    pom.setAttribute('download', filename);\r\n    pom.click();\r\n  }\r\n\r\n    var t1 = performance.now()\r\n    console.log(\"Duration: \" + (t1-t0))\r\n  //downloadBlobElective(csvElective, 'ModifiedAntSystemElective_GeneratedSchedule.csv', 'text/csv;charset=utf-8;')\r\n}else{\r\n    var t1 = performance.now()\r\n    console.log(\"Duration: \" + (t1-t0) + \" milliseconds\" )\r\n    alert(\"no workable solution found, please refersh until get workable solution\")\r\n}\r\n        }\r\n        return(\r\n            <React.Fragment>\r\n                <h1>\r\n                    Generate Schedule Page Elective\r\n                </h1>\r\n        \r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    export default ArrayScheduleElective;"]},"metadata":{},"sourceType":"module"}