{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acit\\\\Desktop\\\\FYP Code\\\\FYP Code\\\\frontend\\\\src\\\\components\\\\RandomSchedule\\\\arraySchedule.js\";\nimport { create, find, forEach, indexOf } from \"lodash\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport _ from 'lodash';\nimport { CSVLink } from \"react-csv\";\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\nlet finalDataAll = [];\nlet checkHardConstraintOutsite = 0;\nlet checkSoftConstraintOutsite = 0;\n\nconst ArraySchedule = props => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedFile, setLoaadedFile] = useState(false);\n  const [roomData, setroomData] = useState();\n  const [courseData, setcourseData] = useState();\n  const [CsvData, setCsvData] = useState(); // const [Keys, setKeys] = useState();\n  //const [uploadedData, setUploadedData] = useState([]);\n  //console.log(\"props dataset:\"+ props.test)\n\n  const userId = useParams().userId;\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875'); //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\n        //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\n\n        const responsedata = await response.json();\n        let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset); // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\n\n        const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Room'], Dataset['Size']]); //Extract Room\n\n        setroomData([ertRoom]);\n        const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'], Dataset['Course Code'], Dataset['Course Name'], Dataset['Year'], Dataset['Semester'], Dataset['Lecturer'], Dataset['Group'], Dataset['HMS'], Dataset['Programme Code'], Dataset['Slot1'], Dataset['Slot2']]); //Extract Enrollment Quota\n\n        setcourseData([ertCourse]);\n\n        if (!response.ok) {\n          throw new Error(responsedata.message);\n        }\n\n        setLoaadedFile(stringifyData);\n        setIsLoading(true);\n      } catch (err) {\n        console.log(err.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, [userId]);\n\n  if (!isLoading && loadedFile) {\n    const testData = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const EnrollmentQuota = [];\n    const CourseCode = [];\n    const HMS = [];\n    const roomName = [];\n    const roomSize = [];\n    const filterData50 = [];\n    const filterData100 = [];\n    const filterData200 = [];\n    const filterData500 = [];\n    const dupeData = [];\n    const room = [];\n    room.push(roomData[0]);\n    let hardConstraintViolated = 0;\n    let softConstraintViolated = 0; //console.log(courseData[0][0][1]);\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      let enrollment = [courseData[0][i][0]];\n      let code = [courseData[0][i][1]];\n      let hms = [courseData[0][i][7]];\n      enrollment.reduce(function (results, item, index, array) {\n        results[index] = item;\n        EnrollmentQuota.push(item); //console.log(results)\n      }, {});\n      code.reduce(function (results, item, index, array) {\n        results[index] = item;\n        CourseCode.push(item); //console.log(results)\n      }, {});\n      hms.reduce(function (results, item, index, array) {\n        results[index] = item;\n        HMS.push(item); //console.log(results)\n      }, {});\n    }\n\n    for (let i = 0; i < roomData[0].length; i++) {\n      let name = [roomData[0][i][0]];\n      let size = [roomData[0][i][1]];\n      name.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomName.push(item); //console.log(results)\n      }, {});\n      size.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomSize.push(item); //console.log(results)\n      }, {});\n    }\n\n    const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      if (courseData[0][i][0] < 50) {\n        //for(let j = 0; j <courseData[0][i][7]; j++){\n        filterData50.push(courseData[0][i]); //}\n      }\n\n      if (courseData[0][i][0] >= 50 && courseData[0][i][0] < 100) {\n        //for(let j = 0; j <courseData[0][i][7]; j++){\n        filterData100.push(courseData[0][i]); //}\n      }\n\n      if (courseData[0][i][0] >= 100 && courseData[0][i][0] < 200) {\n        //for(let j = 0; j <courseData[0][i][7]; j++){\n        filterData200.push(courseData[0][i]); //}\n      }\n\n      if (courseData[0][i][0] >= 200 && courseData[0][i][0] < 500) {\n        //for(let j = 0; j <courseData[0][i][7]; j++){\n        filterData500.push(courseData[0][i]); //}\n      } //filterData.push(courseData[0][i]);\n\n    }\n\n    let roomUnder50 = [];\n    let roomUnder100 = [];\n    let roomUnder200 = [];\n    let roomUnder500 = [];\n\n    const checkNumberofRoom = () => {\n      for (let i = 0; i < roomData[0].length; i++) {\n        let room = roomData[0][i][1]; //console.log(roomData[0][i][1]);\n\n        if (room < 50) {\n          roomUnder50.push(room);\n        } else if (room > 50 && room < 100) {\n          roomUnder100.push(room);\n        } else if (room > 100 && room < 200) {\n          roomUnder200.push(room);\n        } else if (room > 200) {\n          roomUnder500.push(room);\n        }\n      }\n    };\n\n    checkNumberofRoom();\n\n    const createArray = data => {\n      var result = [];\n\n      for (let i = 0; i < data; i++) {\n        result[i] = [];\n      }\n\n      return result;\n    };\n\n    let DataArray50 = roomUnder50.length * 38;\n    let DataArray100 = roomUnder100.length * 38;\n    let DataArray200 = roomUnder200.length * 38;\n    let DataArray500 = roomUnder500.length * 38; //----------------------------------------------------------------------------------------------------------------------------------------\n\n    var checkTotalHardContraintsAll = 0;\n    var checkTotalSoftContraintsAll = 0;\n\n    const antSystem = () => {\n      //create 1d array for dataset 50\n      const array1D50 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr50 = array1D50(DataArray50);\n      let extraData50_Slot2_2 = [];\n      let extraData50_Slot2_1 = [];\n      let insertedData50_Slot2_2 = [];\n      let insertedData50_Slot2_1 = [];\n\n      const AntAlgoInsert50 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterData50.length; x++) {\n          test.push(filterData50[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let slot1 = test[k][9];\n            let slot2 = test[k][10];\n\n            if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                //slot in slot1 = 2\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const z = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[z];\n                      array[i - 1] = array[z - 1];\n                      array[i] = test[k];\n                      array[i - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[z];\n                      array[i + 1] = array[z + 1];\n                      array[z] = test[k];\n                      array[z + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } //slot in slot1 = 2\n                else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const v = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[v];\n                      array[i - 1] = array[v - 1];\n                      array[v] = test[k];\n                      array[v - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[v];\n                      array[i + 1] = array[v + 1];\n                      array[v] = test[k];\n                      array[v + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  array[j + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  insertedData50_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  insertedData50_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = array[j];\n                  array[j] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //console.log(remainderArraySlot1);\n        //for(let x = 0; x < remainderArraySlot1.length; x++){\n\n\n        for (let z = 0; z < array.length; z++) {\n          for (let x = 0; x < remainderArraySlot1.length; x++) {\n            if (array[z] == remainderArraySlot1[x]) {\n              for (let b = 1; b <= totalRoom; b++) {\n                if (array[z + 38 * b] == 100 && array[z + 38 * b - 1] == 100) {\n                  array[z + 38 * b] = 0;\n                  array[z + 38 * b - 1] = 0;\n                }\n\n                if (array[z - 38 * b] == 100 && array[z - 38 * b - 1] == 100) {\n                  array[z - 38 * b] = 0;\n                  array[z - 38 * b - 1] = 0;\n                }\n              }\n            }\n          }\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData50_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData50_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const c = Math.floor(Math.random() * (x + 1));\n              array[x] = array[c];\n              array[x + 1] = array[c + 1];\n              array[c] = remainderArray[k2];\n              array[c + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData50_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData50_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const b = Math.floor(Math.random() * (x + 1));\n              array[x] = array[b];\n              array[x + 1] = array[b + 1];\n              array[b] = remainderArray[k2];\n              array[b + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData50_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData50_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        } //if there is array in -1, reslot in into the array\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedData50_Slot2_1.push(array[-1]); // array[-1] = undefined\n        }\n\n        return array;\n      };\n\n      var AntArrIns50 = AntAlgoInsert50(AntArr50);\n\n      const checkAmountData50B = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmountB = checkAmountData50B(AntArrIns50);\n\n      const slot2Equal1for50 = array => {\n        let k = 0;\n        let test2 = []; //console.log(insertedData50_Slot2_1)\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedData50_Slot2_1.length) {\n              array[x] = insertedData50_Slot2_1[k];\n            }\n\n            k++;\n          }\n        } //console.log(test2)\n\n\n        return array;\n      };\n\n      slot2Equal1for50(AntArr50);\n\n      const slot2Equal2for50 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedData50_Slot2_2.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = insertedData50_Slot2_2[k];\n              array[q + 1] = insertedData50_Slot2_2[k];\n            } else {\n              if (insertedData50_Slot2_2[k] != undefined) {\n                extraData50_Slot2_2.push(insertedData50_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < extraData50_Slot2_2.length) {\n              array[x] = extraData50_Slot2_2[k];\n              array[x + 1] = extraData50_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2for50(AntArr50);\n\n      const checkAmountData50 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount50 = checkAmountData50(AntArrIns50); //----------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Data is more than or equal to 50 but less than 100\n      //create 1d array for dataset 100\n\n      const array1D100 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr100 = array1D100(DataArray100);\n      let extraData100_Slot2_2 = [];\n      let extraData100_Slot2_1 = [];\n      let insertedData100_Slot2_2 = [];\n      let insertedData100_Slot2_1 = [];\n\n      const AntAlgoInsert100 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterData100.length; x++) {\n          test.push(filterData100[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let slot1 = test[k][9];\n            let slot2 = test[k][10];\n\n            if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                //slot in slot1 = 2\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const z = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[z];\n                      array[i - 1] = array[z - 1];\n                      array[i] = test[k];\n                      array[i - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[z];\n                      array[i + 1] = array[z + 1];\n                      array[z] = test[k];\n                      array[z + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } //slot in slot1 = 2\n                else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const v = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[v];\n                      array[i - 1] = array[v - 1];\n                      array[v] = test[k];\n                      array[v - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[v];\n                      array[i + 1] = array[v + 1];\n                      array[v] = test[k];\n                      array[v + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  array[j + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  insertedData100_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  insertedData100_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = array[j];\n                  array[j] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //console.log(remainderArraySlot1);\n        //for(let x = 0; x < remainderArraySlot1.length; x++){\n\n\n        for (let z = 0; z < array.length; z++) {\n          for (let x = 0; x < remainderArraySlot1.length; x++) {\n            if (array[z] == remainderArraySlot1[x]) {\n              for (let b = 1; b <= totalRoom; b++) {\n                if (array[z + 38 * b] == 100 && array[z + 38 * b - 1] == 100) {\n                  array[z + 38 * b] = 0;\n                  array[z + 38 * b - 1] = 0;\n                }\n\n                if (array[z - 38 * b] == 100 && array[z - 38 * b - 1] == 100) {\n                  array[z - 38 * b] = 0;\n                  array[z - 38 * b - 1] = 0;\n                }\n              }\n            }\n          }\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData100_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData100_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const c = Math.floor(Math.random() * (x + 1));\n              array[x] = array[c];\n              array[x + 1] = array[c + 1];\n              array[c] = remainderArray[k2];\n              array[c + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData100_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData100_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const b = Math.floor(Math.random() * (x + 1));\n              array[x] = array[b];\n              array[x + 1] = array[b + 1];\n              array[b] = remainderArray[k2];\n              array[b + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData100_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData100_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        } //if there is array in -1, reslot in into the array\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedData100_Slot2_1.push(array[-1]); // array[-1] = undefined\n        }\n\n        return array;\n      };\n\n      var AntArrIns100 = AntAlgoInsert100(AntArr100);\n\n      const checkAmountData100B = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 100 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmountB = checkAmountData100B(AntArrIns100);\n\n      const slot2Equal1for100 = array => {\n        let k = 0;\n        let test2 = []; //console.log(insertedData100_Slot2_1)\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedData100_Slot2_1.length) {\n              array[x] = insertedData100_Slot2_1[k];\n            }\n\n            k++;\n          }\n        } //console.log(test2)\n\n\n        return array;\n      };\n\n      slot2Equal1for100(AntArr100);\n\n      const slot2Equal2for100 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedData100_Slot2_2.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = insertedData100_Slot2_2[k];\n              array[q + 1] = insertedData100_Slot2_2[k];\n            } else {\n              if (insertedData100_Slot2_2[k] != undefined) {\n                extraData100_Slot2_2.push(insertedData100_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < extraData100_Slot2_2.length) {\n              array[x] = extraData100_Slot2_2[k];\n              array[x + 1] = extraData100_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2for100(AntArr100);\n\n      const checkAmountData100 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 100 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount100 = checkAmountData100(AntArrIns100); //----------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Data is more than or equal to 100 but less than 200\n      //create 1d array for dataset 200\n\n      const array1D200 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr200 = array1D200(DataArray200);\n      let extraData200_Slot2_2 = [];\n      let extraData200_Slot2_1 = [];\n      let insertedData200_Slot2_2 = [];\n      let insertedData200_Slot2_1 = [];\n\n      const AntAlgoInsert200 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterData200.length; x++) {\n          test.push(filterData200[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let slot1 = test[k][9];\n            let slot2 = test[k][10];\n\n            if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                //slot in slot1 = 2\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const z = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[z];\n                      array[i - 1] = array[z - 1];\n                      array[i] = test[k];\n                      array[i - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[z];\n                      array[i + 1] = array[z + 1];\n                      array[z] = test[k];\n                      array[z + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } //slot in slot1 = 2\n                else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const v = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[v];\n                      array[i - 1] = array[v - 1];\n                      array[v] = test[k];\n                      array[v - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[v];\n                      array[i + 1] = array[v + 1];\n                      array[v] = test[k];\n                      array[v + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  array[j + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  insertedData200_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  insertedData200_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = array[j];\n                  array[j] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //console.log(remainderArraySlot1);\n        //for(let x = 0; x < remainderArraySlot1.length; x++){\n\n\n        for (let z = 0; z < array.length; z++) {\n          for (let x = 0; x < remainderArraySlot1.length; x++) {\n            if (array[z] == remainderArraySlot1[x]) {\n              for (let b = 1; b <= totalRoom; b++) {\n                if (array[z + 38 * b] == 100 && array[z + 38 * b - 1] == 100) {\n                  array[z + 38 * b] = 0;\n                  array[z + 38 * b - 1] = 0;\n                }\n\n                if (array[z - 38 * b] == 100 && array[z - 38 * b - 1] == 100) {\n                  array[z - 38 * b] = 0;\n                  array[z - 38 * b - 1] = 0;\n                }\n              }\n            }\n          }\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData200_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData200_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const c = Math.floor(Math.random() * (x + 1));\n              array[x] = array[c];\n              array[x + 1] = array[c + 1];\n              array[c] = remainderArray[k2];\n              array[c + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData200_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData200_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const b = Math.floor(Math.random() * (x + 1));\n              array[x] = array[b];\n              array[x + 1] = array[b + 1];\n              array[b] = remainderArray[k2];\n              array[b + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData200_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData200_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        } //if there is array in -1, reslot in into the array\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedData200_Slot2_1.push(array[-1]); // array[-1] = undefined\n        }\n\n        return array;\n      };\n\n      var AntArrIns200 = AntAlgoInsert200(AntArr200);\n\n      const checkAmountData200B = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 200 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmountB = checkAmountData200B(AntArrIns200);\n\n      const slot2Equal1for200 = array => {\n        let k = 0;\n        let test2 = []; //console.log(insertedData200_Slot2_1)\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedData200_Slot2_1.length) {\n              array[x] = insertedData200_Slot2_1[k];\n            }\n\n            k++;\n          }\n        } //console.log(test2)\n\n\n        return array;\n      };\n\n      slot2Equal1for200(AntArr200);\n\n      const slot2Equal2for200 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedData200_Slot2_2.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = insertedData200_Slot2_2[k];\n              array[q + 1] = insertedData200_Slot2_2[k];\n            } else {\n              if (insertedData200_Slot2_2[k] != undefined) {\n                extraData200_Slot2_2.push(insertedData200_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < extraData200_Slot2_2.length) {\n              array[x] = extraData200_Slot2_2[k];\n              array[x + 1] = extraData200_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2for200(AntArr200);\n\n      const checkAmountData200 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 200 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount200 = checkAmountData200(AntArrIns200); //----------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Data is more than or equal to 200 \n      //create 1d array for dataset 500\n\n      const array1D500 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr500 = array1D500(DataArray500);\n      let extraData500_Slot2_2 = [];\n      let extraData500_Slot2_1 = [];\n      let insertedData500_Slot2_2 = [];\n      let insertedData500_Slot2_1 = [];\n\n      const AntAlgoInsert500 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterData500.length; x++) {\n          test.push(filterData500[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let slot1 = test[k][9];\n            let slot2 = test[k][10];\n\n            if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                //slot in slot1 = 2\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const z = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[z];\n                      array[i - 1] = array[z - 1];\n                      array[i] = test[k];\n                      array[i - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[z];\n                      array[i + 1] = array[z + 1];\n                      array[z] = test[k];\n                      array[z + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } //slot in slot1 = 2\n                else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const v = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[v];\n                      array[i - 1] = array[v - 1];\n                      array[v] = test[k];\n                      array[v - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[v];\n                      array[i + 1] = array[v + 1];\n                      array[v] = test[k];\n                      array[v + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  array[j + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  insertedData500_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  insertedData500_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = array[j];\n                  array[j] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //console.log(remainderArraySlot1);\n        //for(let x = 0; x < remainderArraySlot1.length; x++){\n\n\n        for (let z = 0; z < array.length; z++) {\n          for (let x = 0; x < remainderArraySlot1.length; x++) {\n            if (array[z] == remainderArraySlot1[x]) {\n              for (let b = 1; b <= totalRoom; b++) {\n                if (array[z + 38 * b] == 100 && array[z + 38 * b - 1] == 100) {\n                  array[z + 38 * b] = 0;\n                  array[z + 38 * b - 1] = 0;\n                }\n\n                if (array[z - 38 * b] == 100 && array[z - 38 * b - 1] == 100) {\n                  array[z - 38 * b] = 0;\n                  array[z - 38 * b - 1] = 0;\n                }\n              }\n            }\n          }\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData500_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData500_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const c = Math.floor(Math.random() * (x + 1));\n              array[x] = array[c];\n              array[x + 1] = array[c + 1];\n              array[c] = remainderArray[k2];\n              array[c + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData500_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData500_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const b = Math.floor(Math.random() * (x + 1));\n              array[x] = array[b];\n              array[x + 1] = array[b + 1];\n              array[b] = remainderArray[k2];\n              array[b + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData500_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData500_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        } //if there is array in -1, reslot in into the array\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedData500_Slot2_1.push(array[-1]); // array[-1] = undefined\n        }\n\n        return array;\n      };\n\n      var AntArrIns500 = AntAlgoInsert500(AntArr500);\n\n      const checkAmountData500B = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 500 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmountB = checkAmountData500B(AntArrIns500);\n\n      const slot2Equal1for500 = array => {\n        let k = 0;\n        let test2 = []; //console.log(insertedData500_Slot2_1)\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedData500_Slot2_1.length) {\n              array[x] = insertedData500_Slot2_1[k];\n            }\n\n            k++;\n          }\n        } //console.log(test2)\n\n\n        return array;\n      };\n\n      slot2Equal1for500(AntArr500);\n\n      const slot2Equal2for500 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedData500_Slot2_2.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = insertedData500_Slot2_2[k];\n              array[q + 1] = insertedData500_Slot2_2[k];\n            } else {\n              if (insertedData500_Slot2_2[k] != undefined) {\n                extraData500_Slot2_2.push(insertedData500_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < extraData500_Slot2_2.length) {\n              array[x] = extraData500_Slot2_2[k];\n              array[x + 1] = extraData500_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2for500(AntArr500);\n\n      const checkAmountData500 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 500 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount500 = checkAmountData500(AntArrIns500); //----------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------------\n      //Combine all dataset\n\n      let combineData = [];\n\n      const combine = (data1, data2, data3, data4) => {\n        for (let i = 0; i < data1.length; i++) {\n          combineData.push(data1[i]);\n        }\n\n        for (let i = 0; i < data2.length; i++) {\n          combineData.push(data2[i]);\n        }\n\n        for (let i = 0; i < data3.length; i++) {\n          combineData.push(data3[i]);\n        }\n\n        for (let i = 0; i < data4.length; i++) {\n          combineData.push(data4[i]);\n        }\n\n        return combineData;\n      };\n\n      let dataCombine = combine(AntArr50, AntArr100, AntArr200, AntArr500); //console.log(dataCombine)\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n      // Hard Constraint \n      // H1: No student attend more than one class/ event at the same time\n      // H2: The room is large enough to accomodate all of the student in attendace while also meeting the requirement \n      // H3: At any given time, each room can onle have one course booked\n      // H4: No student attend class during 12:00 pm -2:00 due to solat jumaat\n      // H5: One teacher can only teach one class at one time.\n      //Check for the H1 violation: same group attend more than 1 class at 1 time\n\n      const check1Group = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 37;\n        }\n\n        for (let i = 0; i < array.length; i++) {\n          try {\n            for (let x = 1; x <= totalRoom; x++) {\n              indexArray = x * 37;\n\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined) {\n                try {\n                  if (array[i][6] == array[i + indexArray][6] && array[i + 1][6] == array[i + indexArray + 1][6] && array[i][5] == array[i + indexArray][5] && array[i + 1][5] == array[i + indexArray + 1][5]) {\n                    try {\n                      //console.log(array[i])\n                      //console.log(array[i+indexArray])\n                      count += 1;\n                    } catch {}\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH1_ALL = check1Group(dataCombine); //Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\n\n      const checkRoomQuota = array => {\n        let count = 0;\n        return count;\n      }; //Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\n\n\n      const checkSolatJummat = array => {\n        let count = 0;\n        return count;\n      }; //Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\n\n\n      const check1Teacher = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n        }\n\n        for (let i = 1; i < array.length; i++) {\n          try {\n            for (let x = 1; x <= totalRoom; x++) {\n              indexArray = x * 38;\n\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined) {\n                try {\n                  if (array[i][5] == array[i + indexArray][5] && array[i + 1][5] == array[i + indexArray + 1][5]) {\n                    count += 1;\n                  } else if (array[i][5] == array[i + indexArray][5] && array[i - 1][5] == array[i + indexArray - 1][5]) {\n                    count += 1;\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH5_ALL = check1Teacher(dataCombine); //----------------------------------------------------------------------------------------------------------------------------------------\n      // Soft Constraint \n      // S1: A student has a class schedule toward the end of the day\n      // S2: A student have more than two class in a row\n      //Check for the S1 violation: student have class at the end of the day\n\n      const checkEndOfClass = array => {\n        let count = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          let indexArray = x * 37;\n\n          if (array[indexArray] != 100) {\n            count = 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkS1_50 = checkEndOfClass(AntArr50);\n      var checkS1_100 = checkEndOfClass(AntArr100);\n      var checkS1_200 = checkEndOfClass(AntArr200);\n      var checkS1_500 = checkEndOfClass(AntArr500); //Check for the S2 violation: teacher have 2 class in a row\n\n      const check2ClassInARow = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          try {\n            if (array[i][5] != undefined && array[i + 3][5] != undefined && array[i + 2][5] != undefined && array[i + 4][5] != undefined) {\n              if (array[i][5] == array[i + 3][5] && array[i + 2][5] == array[i + 4][5]) {\n                // console.log(array[i][5])\n                // console.log(array[i+3][5])\n                // console.log(array[i+2][5])\n                // console.log(array[i+4][5])\n                count = 1;\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkS2_50 = check2ClassInARow(AntArr50);\n      var checkS2_100 = check2ClassInARow(AntArr100);\n      var checkS2_200 = check2ClassInARow(AntArr200);\n      var checkS2_500 = check2ClassInARow(AntArr500); //----------------------------------------------------------------------------------------------------------------------------------------------\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n      //Check total Hard Constraint\n\n      const checkTotalHardContraint = () => {\n        let count = 0;\n        let totalH1 = checkH1_ALL;\n        let totalH5 = checkH5_ALL;\n\n        if (totalH1 != 0) {\n          count += 1;\n        }\n\n        if (totalH5 != 0) {\n          count += 1;\n        }\n\n        return count;\n      };\n\n      var checkTotalHardContraints = checkTotalHardContraint(); //console.log(\"Total Hard Constraint: \"+checkTotalHardContraints)\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n\n      const checkTotalSoftContraint = () => {\n        let count = 0;\n        let totalS1 = checkS1_50 + checkS1_100 + checkS1_200 + checkS1_500;\n        let totalS2 = checkS2_50 + checkS2_100 + checkS2_200 + checkS2_500;\n\n        if (totalS1 != 0) {\n          count += 1;\n        }\n\n        if (totalS2 != 0) {\n          count += 1;\n        }\n\n        return count;\n      };\n\n      var checkTotalSoftContraints = checkTotalSoftContraint(); //console.log(\"Total Soft Constraint: \"+checkTotalSoftContraints)\n      //----------------------------------------------------------------------------------------------------------------------------------------------\n\n      const change100ToEmpty = data => {\n        for (let i = 0; i < data.length; i++) {\n          if (data[i] == 100) {\n            data[i] = [];\n          }\n        }\n\n        return data;\n      };\n\n      let finalData = change100ToEmpty(combineData);\n\n      const checkMissingData = (data50, data100, data200, data500) => {\n        let countData = [];\n\n        for (let i = 0; i < courseData[0].length; i++) {\n          for (let j = 0; j < courseData[0][i][7]; j++) {\n            countData.push(courseData[0][i]);\n          }\n        }\n\n        let totalGenerateScheduleData = data50 + data100 + data200 + data500;\n\n        if (countData.length == totalGenerateScheduleData) {} else {}\n      };\n\n      checkMissingData(checkAmount50, checkAmount100, checkAmount200, checkAmount500);\n      checkTotalHardContraintsAll = checkTotalHardContraints;\n      checkTotalSoftContraintsAll = checkTotalSoftContraints;\n      finalDataAll.push(finalData);\n      return {\n        checkTotalHardContraints,\n        checkTotalSoftContraints,\n        finalData\n      };\n    };\n\n    let antSystemAlgo = antSystem(); // -------------------------------------------------------------------------------------------------------------------------------------------\n\n    let trigger = 0;\n\n    const iteration = () => {\n      antSystem();\n      let globalBestHS = checkTotalHardContraintsAll;\n      let globalBestSS = checkTotalSoftContraintsAll;\n      let globalBestScehdule = finalDataAll[0];\n\n      for (let i = 1; i <= 500; i++) {\n        antSystem();\n        let localBestHS = checkTotalHardContraintsAll;\n        let localBestSS = checkTotalSoftContraintsAll;\n        let localBestScehdule = finalDataAll[0];\n        console.log(\"iteraion: \" + i);\n\n        if (globalBestHS > localBestHS) {\n          globalBestHS = localBestHS;\n          globalBestSS = localBestSS;\n          globalBestScehdule = localBestScehdule;\n        }\n\n        if (localBestHS == 0) {\n          console.log(\"iteraion: \" + i);\n          console.log(\"workable solution is found\");\n          globalBestHS = localBestHS;\n          globalBestSS = localBestSS;\n          globalBestScehdule = localBestScehdule;\n          console.log(\"Workable Gloabal best HS: \" + globalBestHS);\n          console.log(\"Workable Gloabal best SS: \" + globalBestSS);\n          console.log(finalDataAll[0]);\n          trigger = 1;\n          return finalDataAll[0];\n        } else if (localBestHS == 0 && localBestSS == 0) {\n          console.log(\"iteraion: \" + i);\n          console.log(\"perfect solution is found\");\n          globalBestHS = localBestHS;\n          globalBestSS = localBestSS;\n          globalBestScehdule = localBestScehdule;\n          console.log(\"Perfect Gloabal best HS: \" + globalBestHS);\n          console.log(\"Perfect Gloabal best SS: \" + globalBestSS);\n          console.log(finalDataAll[0]);\n          trigger = 1;\n          return finalDataAll[0];\n        }\n      }\n    };\n\n    let interations = iteration();\n    let presentableData = [];\n\n    if (trigger == 1) {\n      const changeToPresentationData = data => {\n        for (let i = 0; i <= data.length; i++) {\n          try {\n            presentableData.push([data[i][1], data[i][2], data[i][5]]);\n          } catch (error) {}\n        }\n      };\n\n      changeToPresentationData(interations);\n      let allRoomName = [];\n\n      for (let i = 0; i < roomData[0].length; i++) {\n        allRoomName.push(roomData[0][i][0]);\n      }\n\n      allRoomName.unshift(\"Room\");\n\n      if (allRoomName.pop() == undefined) {}\n\n      let weekday = ['Monday', 'Monday', 'Monday', 'Monday', 'Monday', 'Monday', 'Monday', 'Monday', 'Monday', 'Monday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Friday', 'Friday', 'Friday', 'Friday', 'Friday', 'Friday', 'Friday', 'Friday'];\n\n      const create2dArray = (weekdayArray, partDay, arrayAll, partAll) => {\n        var tmp = [];\n\n        for (var i = 0; i < weekdayArray.length; i += partDay) {\n          tmp.push(weekdayArray.slice(i, i + partDay));\n        }\n\n        for (var i = 0; i < arrayAll.length; i += partAll) {\n          tmp.push(arrayAll.slice(i, i + partAll));\n        }\n\n        return tmp;\n      };\n\n      let dataset = create2dArray(weekday, 38, presentableData, 38);\n\n      const insertRoomName = (roomData, array) => {\n        for (let i = 0; i < array.length; i++) {\n          array[i].unshift(roomData[i]);\n        }\n\n        return array;\n      };\n\n      insertRoomName(allRoomName, dataset);\n      /** Convert a 2D array into a CSV string\r\n       */\n\n      function arrayToCsv(data) {\n        //console.log(data)\n        return data.map(row => row.map(String) // convert every value to String\n        .map(v => v.replaceAll('\"', '\"\"')) // escape double colons\n        .map(v => `\"${v}\"`) // quote it\n        .join(',') // comma-separated\n        ).join('\\r\\n'); // rows starting on new lines\n      }\n\n      let csv = arrayToCsv(dataset);\n\n      function downloadBlob(content, filename, contentType) {\n        // Create a blob\n        var blob = new Blob([content], {\n          type: contentType\n        });\n        var url = URL.createObjectURL(blob); // Create a link to download it\n\n        var pom = document.createElement('a');\n        pom.href = url;\n        pom.setAttribute('download', filename);\n        pom.click();\n      }\n\n      downloadBlob(csv, 'ModifiedAntSystem_GeneratedSchedule.csv', 'text/csv;charset=utf-8;');\n    } else {\n      alert(\"no workable solution found, please refersh until get workable solution\");\n    } //----------------------------------------------------------------------------------------------------------------------------------------\n\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2149,\n      columnNumber: 13\n    }\n  }, \"Generate Schedule Page\"));\n};\n\nexport default ArraySchedule; //result[i][j]=Course.splice(Math.floor(Math.random()* Course.length),1)[0] // create random placement of Course Value\n//const Schedule = new Array(10).fill(Array(5).fill(null));\n//console.log(Schedule);\n// const Course = [['TE1',4],['TE1',4],['TE1',4],['TE1',3],['TE1',4],['TE1',2],['TE1',4],['TE1',4],['TE1',4],['TE1',3]];\n//const Course = [['TE1',2],['TE2',2],['TE3',3],['TE4',4],['TE5',3],['TE6',4],['TE7',4],['TE8',2],['TE9',4]];\n//const Course = ['TE1','TE2','TE3','TE4','TE5','TE6','TE7','TE8','TE9'];","map":{"version":3,"sources":["C:/Users/acit/Desktop/FYP Code/FYP Code/frontend/src/components/RandomSchedule/arraySchedule.js"],"names":["create","find","forEach","indexOf","React","useEffect","useState","useContext","useParams","_","CSVLink","LoadingSpinner","finalDataAll","checkHardConstraintOutsite","checkSoftConstraintOutsite","ArraySchedule","props","isLoading","setIsLoading","loadedFile","setLoaadedFile","roomData","setroomData","courseData","setcourseData","CsvData","setCsvData","userId","sendRequest","response","fetch","responsedata","json","stringifyData","JSON","stringify","userWithFiles","Dataset","ertRoom","map","ertCourse","ok","Error","message","err","console","log","testData","EnrollmentQuota","CourseCode","HMS","roomName","roomSize","filterData50","filterData100","filterData200","filterData500","dupeData","room","push","hardConstraintViolated","softConstraintViolated","i","length","enrollment","code","hms","reduce","results","item","index","array","name","size","notDuplicatesRoom","filter","roomUnder50","roomUnder100","roomUnder200","roomUnder500","checkNumberofRoom","createArray","data","result","DataArray50","DataArray100","DataArray200","DataArray500","checkTotalHardContraintsAll","checkTotalSoftContraintsAll","antSystem","array1D50","AntArr50","extraData50_Slot2_2","extraData50_Slot2_1","insertedData50_Slot2_2","insertedData50_Slot2_1","AntAlgoInsert50","test","k","k2","k3","remainderArray","remainderArraySlot1","totalRoom","x","hourMS","slot1","slot2","j","Math","floor","random","b","z","v","q","undefined","c","AntArrIns50","checkAmountData50B","count","checkAmountB","slot2Equal1for50","test2","slot2Equal2for50","checkAmountData50","checkAmount50","array1D100","AntArr100","extraData100_Slot2_2","extraData100_Slot2_1","insertedData100_Slot2_2","insertedData100_Slot2_1","AntAlgoInsert100","AntArrIns100","checkAmountData100B","slot2Equal1for100","slot2Equal2for100","checkAmountData100","checkAmount100","array1D200","AntArr200","extraData200_Slot2_2","extraData200_Slot2_1","insertedData200_Slot2_2","insertedData200_Slot2_1","AntAlgoInsert200","AntArrIns200","checkAmountData200B","slot2Equal1for200","slot2Equal2for200","checkAmountData200","checkAmount200","array1D500","AntArr500","extraData500_Slot2_2","extraData500_Slot2_1","insertedData500_Slot2_2","insertedData500_Slot2_1","AntAlgoInsert500","AntArrIns500","checkAmountData500B","slot2Equal1for500","slot2Equal2for500","checkAmountData500","checkAmount500","combineData","combine","data1","data2","data3","data4","dataCombine","check1Group","indexArray","checkH1_ALL","checkRoomQuota","checkSolatJummat","check1Teacher","checkH5_ALL","checkEndOfClass","checkS1_50","checkS1_100","checkS1_200","checkS1_500","check2ClassInARow","checkS2_50","checkS2_100","checkS2_200","checkS2_500","checkTotalHardContraint","totalH1","totalH5","checkTotalHardContraints","checkTotalSoftContraint","totalS1","totalS2","checkTotalSoftContraints","change100ToEmpty","finalData","checkMissingData","data50","data100","data200","data500","countData","totalGenerateScheduleData","antSystemAlgo","trigger","iteration","globalBestHS","globalBestSS","globalBestScehdule","localBestHS","localBestSS","localBestScehdule","interations","presentableData","changeToPresentationData","error","allRoomName","unshift","pop","weekday","create2dArray","weekdayArray","partDay","arrayAll","partAll","tmp","slice","dataset","insertRoomName","arrayToCsv","row","String","replaceAll","join","csv","downloadBlob","content","filename","contentType","blob","Blob","type","url","URL","createObjectURL","pom","document","createElement","href","setAttribute","click","alert"],"mappings":"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","sourcesContent":["import { create, find, forEach, indexOf } from \"lodash\";\r\nimport React,{ useEffect,useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport _ from 'lodash';\r\nimport { CSVLink } from \"react-csv\";\r\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\r\n\r\n\r\nlet finalDataAll = [];\r\nlet checkHardConstraintOutsite = 0;\r\nlet checkSoftConstraintOutsite = 0;\r\n\r\nconst ArraySchedule = (props) => {\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [loadedFile, setLoaadedFile] = useState(false);\r\n    const [roomData, setroomData] = useState();\r\n    const [courseData, setcourseData] = useState();\r\n    const [CsvData, setCsvData] = useState();\r\n    // const [Keys, setKeys] = useState();\r\n    //const [uploadedData, setUploadedData] = useState([]);\r\n    //console.log(\"props dataset:\"+ props.test)\r\n\r\n    const userId = useParams().userId;\r\n    useEffect(()=>{\r\n        const sendRequest = async () =>{\r\n            setIsLoading(true);\r\n            try{\r\n            const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875');\r\n            //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\r\n            //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\r\n            const responsedata = await response.json();\r\n            let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset);\r\n\r\n            // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\r\n            const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset =>[Dataset['Room'],Dataset['Size']]); //Extract Room\r\n            setroomData([ertRoom]);\r\n\r\n            const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'],Dataset['Course Code'],Dataset['Course Name'],Dataset['Year'],Dataset['Semester'],Dataset['Lecturer'],Dataset['Group'],Dataset['HMS'],Dataset['Programme Code'],Dataset['Slot1'],Dataset['Slot2']]); //Extract Enrollment Quota\r\n            setcourseData([ertCourse]);\r\n\r\n            if (!response.ok){\r\n                throw new Error(responsedata.message);\r\n            }\r\n            setLoaadedFile(stringifyData);\r\n            setIsLoading(true);\r\n            }catch(err){\r\n                console.log(err.message);\r\n            }\r\n            setIsLoading(false);\r\n            \r\n        };\r\n        sendRequest();\r\n    },[userId]);\r\n\r\n        if(!isLoading && loadedFile){\r\n            const testData = [1,2,3,4,5,6,7,8,9];\r\n            const EnrollmentQuota = [];\r\n            const CourseCode = [];\r\n            const HMS = [];\r\n            const roomName = [];\r\n            const roomSize = [];\r\n            const filterData50  = [];\r\n            const filterData100  = [];\r\n            const filterData200  = [];\r\n            const filterData500  = [];\r\n            const dupeData  = [];\r\n            const room = []\r\n            room.push(roomData[0])\r\n            \r\n            let hardConstraintViolated = 0;\r\n            let softConstraintViolated = 0;\r\n            //console.log(courseData[0][0][1]);\r\n            for(let i = 0; i <courseData[0].length; i++){\r\n                let enrollment = [courseData[0][i][0]];\r\n                let code = [courseData[0][i][1]];\r\n                let hms = [courseData[0][i][7]];\r\n                enrollment.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    EnrollmentQuota.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                code.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    CourseCode.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                hms.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    HMS.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n            }\r\n\r\n            for(let i = 0; i <roomData[0].length; i++){\r\n                let name = [roomData[0][i][0]];\r\n                let size = [roomData[0][i][1]];\r\n                name.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomName.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                size.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomSize.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n            }\r\n \r\n            \r\n            const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\r\n\r\n\r\n                for(let i = 0; i< courseData[0].length;i++){\r\n                    if (courseData[0][i][0] < 50) {\r\n                        //for(let j = 0; j <courseData[0][i][7]; j++){\r\n                            filterData50.push(courseData[0][i]);\r\n                        //}\r\n                    }\r\n                    if (courseData[0][i][0] >= 50 && courseData[0][i][0] < 100) {\r\n                        //for(let j = 0; j <courseData[0][i][7]; j++){\r\n                            filterData100.push(courseData[0][i]);\r\n                        //}\r\n                    }\r\n                    if (courseData[0][i][0] >= 100 && courseData[0][i][0] < 200) {\r\n                        //for(let j = 0; j <courseData[0][i][7]; j++){\r\n                            filterData200.push(courseData[0][i]);\r\n                        //}\r\n                    }\r\n                    if (courseData[0][i][0] >= 200 && courseData[0][i][0] < 500) {\r\n                        //for(let j = 0; j <courseData[0][i][7]; j++){\r\n                            filterData500.push(courseData[0][i]);\r\n                        //}\r\n                    }\r\n                    //filterData.push(courseData[0][i]);\r\n                }\r\n\r\n\r\n            let roomUnder50 = []\r\n            let roomUnder100 = []\r\n            let roomUnder200 = []\r\n            let roomUnder500 = []\r\n            const checkNumberofRoom = () => {\r\n                for(let i = 0; i < roomData[0].length; i++){\r\n                    let room = roomData[0][i][1]\r\n                    //console.log(roomData[0][i][1]);\r\n                    if(room < 50){\r\n                        roomUnder50.push(room)\r\n                    }else if(room > 50 && room < 100){\r\n                        roomUnder100.push(room)\r\n\r\n                    }else if(room > 100 && room < 200){\r\n                        roomUnder200.push(room)\r\n\r\n                    }else if(room > 200){\r\n                        roomUnder500.push(room)\r\n                    }\r\n                }\r\n            }\r\n            checkNumberofRoom();\r\n\r\n\r\n            const createArray = (data) => {\r\n                var result = []\r\n\r\n                    for(let i = 0; i<data; i++){\r\n                        result[i] = []\r\n                    }\r\n                return result;\r\n            }\r\n\r\n            let DataArray50 = roomUnder50.length * 38;\r\n            let DataArray100 = roomUnder100.length * 38;\r\n            let DataArray200 = roomUnder200.length * 38;\r\n            let DataArray500 = roomUnder500.length * 38;\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nvar checkTotalHardContraintsAll = 0\r\nvar checkTotalSoftContraintsAll = 0\r\n\r\nconst antSystem = () => {\r\n    //create 1d array for dataset 50\r\n    const array1D50 = (data) => {\r\n       var result = []\r\n\r\n       for(let i = 0; i< data; i++){\r\n           result[i]= 100;\r\n       }\r\n       return result;\r\n   }\r\n   var AntArr50 = array1D50(DataArray50);\r\n\r\n   let extraData50_Slot2_2 = []\r\n   let extraData50_Slot2_1 = []\r\n   let insertedData50_Slot2_2 = []\r\n   let insertedData50_Slot2_1= []\r\n\r\n   const AntAlgoInsert50 = (array) => {\r\n       let test = []\r\n       let k = 0;\r\n       let k2 =0\r\n       let k3 =0\r\n\r\n       let remainderArray = []\r\n       let remainderArraySlot1 = []\r\n\r\n       let totalRoom = array.length / 38\r\n\r\n       for(let x=0; x<filterData50.length;x++){\r\n           test.push(filterData50[x]);\r\n       }\r\n\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k < test.length){\r\n            let hourMS = test[k][7]\r\n            let slot1 = test[k][9]\r\n            let slot2 = test[k][10]\r\n\r\n            if(hourMS == 4){\r\n               const j = Math.floor(Math.random()*(i+1));\r\n               if(array[i] == 100){\r\n                   //slot in slot1 = 2\r\n                   if(array[i-1] == 100 ){\r\n                       array[i] = array[j];\r\n                       array[i-1] = array[j-1];\r\n                       array[j] = test[k];\r\n                       array[j-1] = test[k];\r\n                       \r\n                       // make stack become 0\r\n                       for(let b = 1; b <= totalRoom; b++){\r\n                        if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                            array[j+38*b] = 0         \r\n                            array[j+38*b-1] = 0\r\n                        }\r\n                        if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                            array[j-38*b] = 0         \r\n                            array[j-38*b-1] = 0\r\n                        }\r\n                       }\r\n                       const z = Math.floor(Math.random()*(i+1));\r\n                       if(array[i] == 100){\r\n                           //slot in slot1 = 2\r\n                           if(array[i-1] == 100 ){\r\n                               array[i] = array[z];\r\n                               array[i-1] = array[z-1];\r\n                               array[i] = test[k];\r\n                               array[i-1] = test[k];\r\n                           }\r\n                           else if(array[i+1] == 100 ){\r\n                                array[i] = array[z];\r\n                                array[i+1] = array[z+1];\r\n                                array[z] = test[k];\r\n                                array[z+1] = test[k];\r\n                           }\r\n                           else{\r\n                            remainderArraySlot1.push(test[k]);\r\n                            }\r\n                        }\r\n                        else{\r\n                            remainderArraySlot1.push(test[k]);\r\n                        }\r\n                        //revert back to 100\r\n                        for(let x =0; x<array.length; x++){\r\n                            if(array[x] == 0){\r\n                                array[x] = 100\r\n                            }\r\n                        }\r\n                   }\r\n                   //slot in slot1 = 2\r\n                   else if(array[i+1] == 100 ){\r\n                       array[i] = array[j];\r\n                       array[i+1] = array[j+1];\r\n                       array[j] = test[k];\r\n                       array[j+1] = test[k];\r\n                       \r\n                        // make stack become 0\r\n                       for(let b = 1; b <= totalRoom; b++){\r\n                        if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                            array[j+38*b] = 0         \r\n                            array[j+38*b-1] = 0\r\n                        }\r\n                        if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                            array[j-38*b] = 0         \r\n                            array[j-38*b-1] = 0\r\n                        }\r\n                       }\r\n                       const v = Math.floor(Math.random()*(i+1));\r\n                       if(array[i] == 100){\r\n                           //slot in slot1 = 2\r\n                           if(array[i-1] == 100 ){\r\n                               array[i] = array[v];\r\n                               array[i-1] = array[v-1];\r\n                               array[v] = test[k];\r\n                               array[v-1] = test[k];\r\n                           }\r\n                           else if(array[i+1] == 100){\r\n                                array[i] = array[v];\r\n                                array[i+1] = array[v+1];\r\n                                array[v] = test[k];\r\n                                array[v+1] = test[k];\r\n                           }\r\n                           else{\r\n                            remainderArraySlot1.push(test[k]);\r\n                            }\r\n                        }\r\n                        else{\r\n                            remainderArraySlot1.push(test[k]);\r\n                        }\r\n                        //revert back to 100\r\n                        for(let x =0; x<array.length; x++){\r\n                            if(array[x] == 0){\r\n                                array[x] = 100\r\n                            }\r\n                        }\r\n                   }\r\n                   else{\r\n                       remainderArray.push(test[k]);\r\n                   }\r\n               }else{\r\n                   remainderArray.push(test[k]);\r\n                   \r\n               }\r\n            }\r\n\r\n            else if(hourMS == 3){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        array[j+1] = test[k];\r\n                        \r\n                    }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        insertedData50_Slot2_1.push(test[k])\r\n                        \r\n                    }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        insertedData50_Slot2_1.push(test[k])\r\n                        \r\n                    }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                        array[i] = array[j];\r\n                        array[j] = test[k];\r\n                        remainderArraySlot1.push(test[k])\r\n                        \r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                    \r\n                }\r\n                }\r\n\r\n             else if(hourMS == 2){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    if(array[i-1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        \r\n                    }else if(array[i+1] == 100){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        \r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                        \r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                }\r\n                }\r\n            }\r\n            k++  \r\n        }\r\n        //console.log(remainderArraySlot1);\r\n        //for(let x = 0; x < remainderArraySlot1.length; x++){\r\n        for(let z =0; z< array.length; z++){\r\n            for(let x = 0; x < remainderArraySlot1.length; x++){\r\n                if(array[z] == remainderArraySlot1[x]){\r\n                    for(let b = 1; b <= totalRoom; b++){\r\n                        if( array[z+38*b]==100 && array[z+38*b-1]==100){\r\n                            array[z+38*b] = 0         \r\n                            array[z+38*b-1] = 0\r\n                        }\r\n                        if( array[z-38*b]==100 && array[z-38*b-1]==100){\r\n                            array[z-38*b] = 0         \r\n                            array[z-38*b-1] = 0\r\n                        }\r\n                       }\r\n                }\r\n            }\r\n        }\r\n\r\n        //fullfill the slot 3\r\n        for(let x = 0; x< array.length; x++){\r\n            if(array[x] == 100 && array[x+1] == 100){\r\n                if(k3 < remainderArraySlot1.length){\r\n                    const q = Math.floor(Math.random()*(x+1));\r\n                        array[x] = array[q]\r\n                        array[x+1] = array[q+1]\r\n                        array[q] = remainderArraySlot1[k3]\r\n                        array[q+1] = remainderArraySlot1[k3]\r\n                }else{\r\n                    if(remainderArraySlot1[k3] != undefined){\r\n                        insertedData50_Slot2_2.push(remainderArraySlot1[k3])\r\n                    }\r\n                }\r\n                k3++   \r\n            }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                if(k3 < remainderArraySlot1.length){\r\n                    const q = Math.floor(Math.random()*(x+1));\r\n                        array[x] = array[q]\r\n                        array[x+1] = array[q+1]\r\n                        array[q] = remainderArraySlot1[k3]\r\n                        array[q+1] = remainderArraySlot1[k3]\r\n                }else{\r\n                    if(remainderArraySlot1[k3] != undefined){\r\n                        insertedData50_Slot2_2.push(remainderArraySlot1[k3])\r\n                    }\r\n                }\r\n                k3++   \r\n            }\r\n        }\r\n\r\n\r\n        //console.log(remainderArray);\r\n        for(let x = 0; x< array.length; x++){\r\n                if(array[x] == 100 && array[x+1] ==100 ){\r\n                    if(k2 < remainderArray.length){\r\n                        const c = Math.floor(Math.random()*(x+1));\r\n                        array[x] = array[c]\r\n                        array[x+1] = array[c+1]\r\n                        array[c] = remainderArray[k2]\r\n                        array[c+1] = remainderArray[k2]\r\n                    }\r\n                    try{\r\n                        let slot2 = remainderArray[k2][10]\r\n                        if(slot2 == 1){\r\n                            insertedData50_Slot2_1.push(remainderArray[k2])\r\n                        }\r\n                        if(slot2 == 2){\r\n                            insertedData50_Slot2_2.push(remainderArray[k2])\r\n                        }\r\n                    }catch{}\r\n                k2++   \r\n            }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                if(k2 < remainderArray.length){\r\n                    const b = Math.floor(Math.random()*(x+1));\r\n                    array[x] = array[b]\r\n                    array[x+1] = array[b+1]\r\n                    array[b] = remainderArray[k2]\r\n                    array[b+1] = remainderArray[k2]\r\n                }\r\n                try{\r\n                    let slot2 = remainderArray[k2][10]\r\n                    if(slot2 == 1){\r\n                        insertedData50_Slot2_1.push(remainderArray[k2])\r\n                    }\r\n                    if(slot2 == 2){\r\n                        insertedData50_Slot2_2.push(remainderArray[k2])\r\n                    }\r\n                }catch{}\r\n            k2++   \r\n        }\r\n        }\r\n\r\n        //if there is array in -1, reslot in into the array\r\n        for(let x =0; x<array.length; x++){\r\n            if(array[x] == 0){\r\n                array[x] = 100\r\n            }\r\n        }\r\n        if(array[-1] != undefined){\r\n            insertedData50_Slot2_1.push(array[-1]);\r\n            // array[-1] = undefined\r\n        }\r\n\r\n       return array;\r\n   }\r\n   var AntArrIns50 = AntAlgoInsert50(AntArr50);\r\n\r\n   const checkAmountData50B = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n    }\r\n    var checkAmountB = checkAmountData50B(AntArrIns50)\r\n\r\n\r\n    const slot2Equal1for50 = (array) => {\r\n        let k = 0;\r\n        let test2 = []\r\n        //console.log(insertedData50_Slot2_1)\r\n        \r\n        for(let x = 0; x< array.length; x++){\r\n            if(array[x] == 100){\r\n                if(k < insertedData50_Slot2_1.length){\r\n                    array[x] = insertedData50_Slot2_1[k]\r\n                }\r\n            k++   \r\n            }\r\n        }\r\n        //console.log(test2)\r\n        return array;\r\n    }\r\n    slot2Equal1for50(AntArr50);\r\n \r\n\r\n    const slot2Equal2for50 = (array) => {\r\n        let k = 0;\r\n        for(let x = 0; x< array.length; x++){\r\n            if(array[x] == 100 && array[x+1] ==100){\r\n                if(k < insertedData50_Slot2_2.length){\r\n                    const q = Math.floor(Math.random()*(x+1));\r\n                        array[x] = array[q]\r\n                        array[x+1] = array[q+1]\r\n                        array[q] = insertedData50_Slot2_2[k]\r\n                        array[q+1] = insertedData50_Slot2_2[k]\r\n                }else{\r\n                    if(insertedData50_Slot2_2[k] != undefined){\r\n                        extraData50_Slot2_2.push(insertedData50_Slot2_2[k])\r\n                    }\r\n                }\r\n                k++   \r\n            }\r\n        }\r\n\r\n        for(let x = 0; x< array.length; x++){\r\n            if(array[x] == 100 && array[x+1] ==100){\r\n                if(k < extraData50_Slot2_2.length){\r\n                    array[x] = extraData50_Slot2_2[k]\r\n                    array[x+1] = extraData50_Slot2_2[k]\r\n                }\r\n            k++   \r\n            }\r\n        }\r\n        return array;\r\n}\r\n    slot2Equal2for50(AntArr50);\r\n\r\n   const checkAmountData50 = (array) => {\r\n       let count = 0\r\n       for(let i = 0; i < array.length; i++){\r\n               if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined){\r\n                   count += 1\r\n               }\r\n       }\r\n       return count\r\n   }\r\n   var checkAmount50 = checkAmountData50(AntArrIns50)\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 50 but less than 100\r\n\r\n            //create 1d array for dataset 100\r\n            const array1D100 = (data) => {\r\n                var result = []\r\n            \r\n                for(let i = 0; i< data; i++){\r\n                    result[i]= 100;\r\n                }\r\n                return result;\r\n            }\r\n            var AntArr100 = array1D100(DataArray100);\r\n            \r\n            let extraData100_Slot2_2 = []\r\n            let extraData100_Slot2_1 = []\r\n            let insertedData100_Slot2_2 = []\r\n            let insertedData100_Slot2_1= []\r\n            \r\n            const AntAlgoInsert100 = (array) => {\r\n                let test = []\r\n                let k = 0;\r\n                let k2 =0\r\n                let k3 =0\r\n            \r\n                let remainderArray = []\r\n                let remainderArraySlot1 = []\r\n            \r\n                let totalRoom = array.length / 38\r\n            \r\n                for(let x=0; x<filterData100.length;x++){\r\n                    test.push(filterData100[x]);\r\n                }\r\n            \r\n                 for(let i = array.length-1;i>0;i--){\r\n                     if(k < test.length){\r\n                     let hourMS = test[k][7]\r\n                     let slot1 = test[k][9]\r\n                     let slot2 = test[k][10]\r\n            \r\n                     if(hourMS == 4){\r\n                        const j = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[j];\r\n                                array[i-1] = array[j-1];\r\n                                array[j] = test[k];\r\n                                array[j-1] = test[k];\r\n                                \r\n                                // make stack become 0\r\n                                for(let b = 1; b <= totalRoom; b++){\r\n                                 if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                                     array[j+38*b] = 0         \r\n                                     array[j+38*b-1] = 0\r\n                                 }\r\n                                 if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                                     array[j-38*b] = 0         \r\n                                     array[j-38*b-1] = 0\r\n                                 }\r\n                                }\r\n                                const z = Math.floor(Math.random()*(i+1));\r\n                                if(array[i] == 100){\r\n                                    //slot in slot1 = 2\r\n                                    if(array[i-1] == 100 ){\r\n                                        array[i] = array[z];\r\n                                        array[i-1] = array[z-1];\r\n                                        array[i] = test[k];\r\n                                        array[i-1] = test[k];\r\n                                    }\r\n                                    else if(array[i+1] == 100 ){\r\n                                         array[i] = array[z];\r\n                                         array[i+1] = array[z+1];\r\n                                         array[z] = test[k];\r\n                                         array[z+1] = test[k];\r\n                                    }\r\n                                    else{\r\n                                     remainderArraySlot1.push(test[k]);\r\n                                     }\r\n                                 }\r\n                                 else{\r\n                                     remainderArraySlot1.push(test[k]);\r\n                                 }\r\n                                 //revert back to 100\r\n                                 for(let x =0; x<array.length; x++){\r\n                                     if(array[x] == 0){\r\n                                         array[x] = 100\r\n                                     }\r\n                                 }\r\n                            }\r\n                            //slot in slot1 = 2\r\n                            else if(array[i+1] == 100 ){\r\n                                array[i] = array[j];\r\n                                array[i+1] = array[j+1];\r\n                                array[j] = test[k];\r\n                                array[j+1] = test[k];\r\n                                \r\n                                 // make stack become 0\r\n                                for(let b = 1; b <= totalRoom; b++){\r\n                                 if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                                     array[j+38*b] = 0         \r\n                                     array[j+38*b-1] = 0\r\n                                 }\r\n                                 if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                                     array[j-38*b] = 0         \r\n                                     array[j-38*b-1] = 0\r\n                                 }\r\n                                }\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                if(array[i] == 100){\r\n                                    //slot in slot1 = 2\r\n                                    if(array[i-1] == 100 ){\r\n                                        array[i] = array[v];\r\n                                        array[i-1] = array[v-1];\r\n                                        array[v] = test[k];\r\n                                        array[v-1] = test[k];\r\n                                    }\r\n                                    else if(array[i+1] == 100){\r\n                                         array[i] = array[v];\r\n                                         array[i+1] = array[v+1];\r\n                                         array[v] = test[k];\r\n                                         array[v+1] = test[k];\r\n                                    }\r\n                                    else{\r\n                                     remainderArraySlot1.push(test[k]);\r\n                                     }\r\n                                 }\r\n                                 else{\r\n                                     remainderArraySlot1.push(test[k]);\r\n                                 }\r\n                                 //revert back to 100\r\n                                 for(let x =0; x<array.length; x++){\r\n                                     if(array[x] == 0){\r\n                                         array[x] = 100\r\n                                     }\r\n                                 }\r\n                            }\r\n                            else{\r\n                                remainderArray.push(test[k]);\r\n                            }\r\n                        }else{\r\n                            remainderArray.push(test[k]);\r\n                            \r\n                        }\r\n                     }\r\n            \r\n                     else if(hourMS == 3){\r\n                         const j = Math.floor(Math.random()*(i+1));\r\n                         if(array[i] == 100){\r\n                             if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                                 array[i] = array[j];\r\n                                 array[i-1] = array[j-1];\r\n                                 array[i+1] = array[j+1];\r\n                                 array[j] = test[k];\r\n                                 array[j-1] = test[k];\r\n                                 array[j+1] = test[k];\r\n                                 \r\n                             }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                                 array[i] = array[j];\r\n                                 array[i-1] = array[j-1];\r\n                                 array[j] = test[k];\r\n                                 array[j-1] = test[k];\r\n                                 insertedData100_Slot2_1.push(test[k])\r\n                                 \r\n                             }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                                 array[i] = array[j];\r\n                                 array[i+1] = array[j+1];\r\n                                 array[j] = test[k];\r\n                                 array[j+1] = test[k];\r\n                                 insertedData100_Slot2_1.push(test[k])\r\n                                 \r\n                             }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                                 array[i] = array[j];\r\n                                 array[j] = test[k];\r\n                                 remainderArraySlot1.push(test[k])\r\n                                 \r\n                             }\r\n                         }else{\r\n                             remainderArray.push(test[k]);\r\n                             \r\n                         }\r\n                         }\r\n            \r\n                      else if(hourMS == 2){\r\n                         const j = Math.floor(Math.random()*(i+1));\r\n                         if(array[i] == 100){\r\n                             if(array[i-1] == 100 ){\r\n                                 array[i] = array[j];\r\n                                 array[i-1] = array[j-1];\r\n                                 array[j] = test[k];\r\n                                 array[j-1] = test[k];\r\n                                 \r\n                             }else if(array[i+1] == 100){\r\n                                 array[i] = array[j];\r\n                                 array[i+1] = array[j+1];\r\n                                 array[j] = test[k];\r\n                                 array[j+1] = test[k];\r\n                                 \r\n                             }\r\n                             else{\r\n                                 remainderArray.push(test[k]);\r\n                                 \r\n                             }\r\n                         }else{\r\n                             remainderArray.push(test[k]);\r\n                         }\r\n                         }\r\n                     }\r\n                     k++  \r\n                 }\r\n                 //console.log(remainderArraySlot1);\r\n                 //for(let x = 0; x < remainderArraySlot1.length; x++){\r\n                 for(let z =0; z< array.length; z++){\r\n                     for(let x = 0; x < remainderArraySlot1.length; x++){\r\n                         if(array[z] == remainderArraySlot1[x]){\r\n                             for(let b = 1; b <= totalRoom; b++){\r\n                                 if( array[z+38*b]==100 && array[z+38*b-1]==100){\r\n                                     array[z+38*b] = 0         \r\n                                     array[z+38*b-1] = 0\r\n                                 }\r\n                                 if( array[z-38*b]==100 && array[z-38*b-1]==100){\r\n                                     array[z-38*b] = 0         \r\n                                     array[z-38*b-1] = 0\r\n                                 }\r\n                                }\r\n                         }\r\n                     }\r\n                 }\r\n            \r\n                 //fullfill the slot 3\r\n                 for(let x = 0; x< array.length; x++){\r\n                     if(array[x] == 100 && array[x+1] == 100){\r\n                         if(k3 < remainderArraySlot1.length){\r\n                             const q = Math.floor(Math.random()*(x+1));\r\n                                 array[x] = array[q]\r\n                                 array[x+1] = array[q+1]\r\n                                 array[q] = remainderArraySlot1[k3]\r\n                                 array[q+1] = remainderArraySlot1[k3]\r\n                         }else{\r\n                             if(remainderArraySlot1[k3] != undefined){\r\n                                 insertedData100_Slot2_2.push(remainderArraySlot1[k3])\r\n                             }\r\n                         }\r\n                         k3++   \r\n                     }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                         if(k3 < remainderArraySlot1.length){\r\n                             const q = Math.floor(Math.random()*(x+1));\r\n                                 array[x] = array[q]\r\n                                 array[x+1] = array[q+1]\r\n                                 array[q] = remainderArraySlot1[k3]\r\n                                 array[q+1] = remainderArraySlot1[k3]\r\n                         }else{\r\n                             if(remainderArraySlot1[k3] != undefined){\r\n                                 insertedData100_Slot2_2.push(remainderArraySlot1[k3])\r\n                             }\r\n                         }\r\n                         k3++   \r\n                     }\r\n                 }\r\n            \r\n            \r\n                 //console.log(remainderArray);\r\n                 for(let x = 0; x< array.length; x++){\r\n                         if(array[x] == 100 && array[x+1] ==100 ){\r\n                             if(k2 < remainderArray.length){\r\n                                 const c = Math.floor(Math.random()*(x+1));\r\n                                 array[x] = array[c]\r\n                                 array[x+1] = array[c+1]\r\n                                 array[c] = remainderArray[k2]\r\n                                 array[c+1] = remainderArray[k2]\r\n                             }\r\n                             try{\r\n                                 let slot2 = remainderArray[k2][10]\r\n                                 if(slot2 == 1){\r\n                                     insertedData100_Slot2_1.push(remainderArray[k2])\r\n                                 }\r\n                                 if(slot2 == 2){\r\n                                     insertedData100_Slot2_2.push(remainderArray[k2])\r\n                                 }\r\n                             }catch{}\r\n                         k2++   \r\n                     }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                         if(k2 < remainderArray.length){\r\n                             const b = Math.floor(Math.random()*(x+1));\r\n                             array[x] = array[b]\r\n                             array[x+1] = array[b+1]\r\n                             array[b] = remainderArray[k2]\r\n                             array[b+1] = remainderArray[k2]\r\n                         }\r\n                         try{\r\n                             let slot2 = remainderArray[k2][10]\r\n                             if(slot2 == 1){\r\n                                 insertedData100_Slot2_1.push(remainderArray[k2])\r\n                             }\r\n                             if(slot2 == 2){\r\n                                 insertedData100_Slot2_2.push(remainderArray[k2])\r\n                             }\r\n                         }catch{}\r\n                     k2++   \r\n                 }\r\n                 }\r\n            \r\n                 //if there is array in -1, reslot in into the array\r\n                 for(let x =0; x<array.length; x++){\r\n                     if(array[x] == 0){\r\n                         array[x] = 100\r\n                     }\r\n                 }\r\n                 if(array[-1] != undefined){\r\n                     insertedData100_Slot2_1.push(array[-1]);\r\n                     // array[-1] = undefined\r\n                 }\r\n            \r\n                return array;\r\n            }\r\n            var AntArrIns100 = AntAlgoInsert100(AntArr100);\r\n            \r\n            const checkAmountData100B = (array) => {\r\n             let count = 0\r\n             for(let i = 0; i < array.length; i++){\r\n                     if(array[i] != 100 && array[i] !=100 && array[i] != 0 && array[i] != undefined){\r\n                         count += 1\r\n                     }\r\n             }\r\n             return count\r\n             }\r\n             var checkAmountB = checkAmountData100B(AntArrIns100)\r\n\r\n            \r\n             const slot2Equal1for100 = (array) => {\r\n                 let k = 0;\r\n                 let test2 = []\r\n                 //console.log(insertedData100_Slot2_1)\r\n                 \r\n                 for(let x = 0; x< array.length; x++){\r\n                     if(array[x] == 100){\r\n                         if(k < insertedData100_Slot2_1.length){\r\n                             array[x] = insertedData100_Slot2_1[k]\r\n                         }\r\n                     k++   \r\n                     }\r\n                 }\r\n                 //console.log(test2)\r\n                 return array;\r\n             }\r\n             slot2Equal1for100(AntArr100);\r\n            \r\n            \r\n             const slot2Equal2for100 = (array) => {\r\n                 let k = 0;\r\n                 for(let x = 0; x< array.length; x++){\r\n                     if(array[x] == 100 && array[x+1] ==100){\r\n                         if(k < insertedData100_Slot2_2.length){\r\n                             const q = Math.floor(Math.random()*(x+1));\r\n                                 array[x] = array[q]\r\n                                 array[x+1] = array[q+1]\r\n                                 array[q] = insertedData100_Slot2_2[k]\r\n                                 array[q+1] = insertedData100_Slot2_2[k]\r\n                         }else{\r\n                             if(insertedData100_Slot2_2[k] != undefined){\r\n                                 extraData100_Slot2_2.push(insertedData100_Slot2_2[k])\r\n                             }\r\n                         }\r\n                         k++   \r\n                     }\r\n                 }\r\n            \r\n                 for(let x = 0; x< array.length; x++){\r\n                     if(array[x] == 100 && array[x+1] ==100){\r\n                         if(k < extraData100_Slot2_2.length){\r\n                             array[x] = extraData100_Slot2_2[k]\r\n                             array[x+1] = extraData100_Slot2_2[k]\r\n                         }\r\n                     k++   \r\n                     }\r\n                 }\r\n                 return array;\r\n            }\r\n             slot2Equal2for100(AntArr100);\r\n            \r\n            const checkAmountData100 = (array) => {\r\n                let count = 0\r\n                for(let i = 0; i < array.length; i++){\r\n                        if(array[i] != 100 && array[i] !=100 && array[i] != 0 && array[i] != undefined){\r\n                            count += 1\r\n                        }\r\n                }\r\n                return count\r\n            }\r\n            var checkAmount100 = checkAmountData100(AntArrIns100)\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 100 but less than 200\r\n\r\n            //create 1d array for dataset 200\r\n            const array1D200 = (data) => {\r\n                var result = []\r\n            \r\n                for(let i = 0; i< data; i++){\r\n                    result[i]= 100;\r\n                }\r\n                return result;\r\n            }\r\n            var AntArr200 = array1D200(DataArray200);\r\n            \r\n            let extraData200_Slot2_2 = []\r\n            let extraData200_Slot2_1 = []\r\n            let insertedData200_Slot2_2 = []\r\n            let insertedData200_Slot2_1= []\r\n            \r\n            const AntAlgoInsert200 = (array) => {\r\n                let test = []\r\n                let k = 0;\r\n                let k2 =0\r\n                let k3 =0\r\n            \r\n                let remainderArray = []\r\n                let remainderArraySlot1 = []\r\n            \r\n                let totalRoom = array.length / 38\r\n            \r\n                for(let x=0; x<filterData200.length;x++){\r\n                    test.push(filterData200[x]);\r\n                }\r\n            \r\n                 for(let i = array.length-1;i>0;i--){\r\n                     if(k < test.length){\r\n                     let hourMS = test[k][7]\r\n                     let slot1 = test[k][9]\r\n                     let slot2 = test[k][10]\r\n            \r\n                     if(hourMS == 4){\r\n                        const j = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[j];\r\n                                array[i-1] = array[j-1];\r\n                                array[j] = test[k];\r\n                                array[j-1] = test[k];\r\n                                \r\n                                // make stack become 0\r\n                                for(let b = 1; b <= totalRoom; b++){\r\n                                 if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                                     array[j+38*b] = 0         \r\n                                     array[j+38*b-1] = 0\r\n                                 }\r\n                                 if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                                     array[j-38*b] = 0         \r\n                                     array[j-38*b-1] = 0\r\n                                 }\r\n                                }\r\n                                const z = Math.floor(Math.random()*(i+1));\r\n                                if(array[i] == 100){\r\n                                    //slot in slot1 = 2\r\n                                    if(array[i-1] == 100 ){\r\n                                        array[i] = array[z];\r\n                                        array[i-1] = array[z-1];\r\n                                        array[i] = test[k];\r\n                                        array[i-1] = test[k];\r\n                                    }\r\n                                    else if(array[i+1] == 100 ){\r\n                                         array[i] = array[z];\r\n                                         array[i+1] = array[z+1];\r\n                                         array[z] = test[k];\r\n                                         array[z+1] = test[k];\r\n                                    }\r\n                                    else{\r\n                                     remainderArraySlot1.push(test[k]);\r\n                                     }\r\n                                 }\r\n                                 else{\r\n                                     remainderArraySlot1.push(test[k]);\r\n                                 }\r\n                                 //revert back to 100\r\n                                 for(let x =0; x<array.length; x++){\r\n                                     if(array[x] == 0){\r\n                                         array[x] = 100\r\n                                     }\r\n                                 }\r\n                            }\r\n                            //slot in slot1 = 2\r\n                            else if(array[i+1] == 100 ){\r\n                                array[i] = array[j];\r\n                                array[i+1] = array[j+1];\r\n                                array[j] = test[k];\r\n                                array[j+1] = test[k];\r\n                                \r\n                                 // make stack become 0\r\n                                for(let b = 1; b <= totalRoom; b++){\r\n                                 if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                                     array[j+38*b] = 0         \r\n                                     array[j+38*b-1] = 0\r\n                                 }\r\n                                 if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                                     array[j-38*b] = 0         \r\n                                     array[j-38*b-1] = 0\r\n                                 }\r\n                                }\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                if(array[i] == 100){\r\n                                    //slot in slot1 = 2\r\n                                    if(array[i-1] == 100 ){\r\n                                        array[i] = array[v];\r\n                                        array[i-1] = array[v-1];\r\n                                        array[v] = test[k];\r\n                                        array[v-1] = test[k];\r\n                                    }\r\n                                    else if(array[i+1] == 100){\r\n                                         array[i] = array[v];\r\n                                         array[i+1] = array[v+1];\r\n                                         array[v] = test[k];\r\n                                         array[v+1] = test[k];\r\n                                    }\r\n                                    else{\r\n                                     remainderArraySlot1.push(test[k]);\r\n                                     }\r\n                                 }\r\n                                 else{\r\n                                     remainderArraySlot1.push(test[k]);\r\n                                 }\r\n                                 //revert back to 100\r\n                                 for(let x =0; x<array.length; x++){\r\n                                     if(array[x] == 0){\r\n                                         array[x] = 100\r\n                                     }\r\n                                 }\r\n                            }\r\n                            else{\r\n                                remainderArray.push(test[k]);\r\n                            }\r\n                        }else{\r\n                            remainderArray.push(test[k]);\r\n                            \r\n                        }\r\n                     }\r\n            \r\n                     else if(hourMS == 3){\r\n                         const j = Math.floor(Math.random()*(i+1));\r\n                         if(array[i] == 100){\r\n                             if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                                 array[i] = array[j];\r\n                                 array[i-1] = array[j-1];\r\n                                 array[i+1] = array[j+1];\r\n                                 array[j] = test[k];\r\n                                 array[j-1] = test[k];\r\n                                 array[j+1] = test[k];\r\n                                 \r\n                             }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                                 array[i] = array[j];\r\n                                 array[i-1] = array[j-1];\r\n                                 array[j] = test[k];\r\n                                 array[j-1] = test[k];\r\n                                 insertedData200_Slot2_1.push(test[k])\r\n                                 \r\n                             }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                                 array[i] = array[j];\r\n                                 array[i+1] = array[j+1];\r\n                                 array[j] = test[k];\r\n                                 array[j+1] = test[k];\r\n                                 insertedData200_Slot2_1.push(test[k])\r\n                                 \r\n                             }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                                 array[i] = array[j];\r\n                                 array[j] = test[k];\r\n                                 remainderArraySlot1.push(test[k])\r\n                                 \r\n                             }\r\n                         }else{\r\n                             remainderArray.push(test[k]);\r\n                             \r\n                         }\r\n                         }\r\n            \r\n                      else if(hourMS == 2){\r\n                         const j = Math.floor(Math.random()*(i+1));\r\n                         if(array[i] == 100){\r\n                             if(array[i-1] == 100 ){\r\n                                 array[i] = array[j];\r\n                                 array[i-1] = array[j-1];\r\n                                 array[j] = test[k];\r\n                                 array[j-1] = test[k];\r\n                                 \r\n                             }else if(array[i+1] == 100){\r\n                                 array[i] = array[j];\r\n                                 array[i+1] = array[j+1];\r\n                                 array[j] = test[k];\r\n                                 array[j+1] = test[k];\r\n                                 \r\n                             }\r\n                             else{\r\n                                 remainderArray.push(test[k]);\r\n                                 \r\n                             }\r\n                         }else{\r\n                             remainderArray.push(test[k]);\r\n                         }\r\n                         }\r\n                     }\r\n                     k++  \r\n                 }\r\n                 //console.log(remainderArraySlot1);\r\n                 //for(let x = 0; x < remainderArraySlot1.length; x++){\r\n                 for(let z =0; z< array.length; z++){\r\n                     for(let x = 0; x < remainderArraySlot1.length; x++){\r\n                         if(array[z] == remainderArraySlot1[x]){\r\n                             for(let b = 1; b <= totalRoom; b++){\r\n                                 if( array[z+38*b]==100 && array[z+38*b-1]==100){\r\n                                     array[z+38*b] = 0         \r\n                                     array[z+38*b-1] = 0\r\n                                 }\r\n                                 if( array[z-38*b]==100 && array[z-38*b-1]==100){\r\n                                     array[z-38*b] = 0         \r\n                                     array[z-38*b-1] = 0\r\n                                 }\r\n                                }\r\n                         }\r\n                     }\r\n                 }\r\n            \r\n                 //fullfill the slot 3\r\n                 for(let x = 0; x< array.length; x++){\r\n                     if(array[x] == 100 && array[x+1] == 100){\r\n                         if(k3 < remainderArraySlot1.length){\r\n                             const q = Math.floor(Math.random()*(x+1));\r\n                                 array[x] = array[q]\r\n                                 array[x+1] = array[q+1]\r\n                                 array[q] = remainderArraySlot1[k3]\r\n                                 array[q+1] = remainderArraySlot1[k3]\r\n                         }else{\r\n                             if(remainderArraySlot1[k3] != undefined){\r\n                                 insertedData200_Slot2_2.push(remainderArraySlot1[k3])\r\n                             }\r\n                         }\r\n                         k3++   \r\n                     }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                         if(k3 < remainderArraySlot1.length){\r\n                             const q = Math.floor(Math.random()*(x+1));\r\n                                 array[x] = array[q]\r\n                                 array[x+1] = array[q+1]\r\n                                 array[q] = remainderArraySlot1[k3]\r\n                                 array[q+1] = remainderArraySlot1[k3]\r\n                         }else{\r\n                             if(remainderArraySlot1[k3] != undefined){\r\n                                 insertedData200_Slot2_2.push(remainderArraySlot1[k3])\r\n                             }\r\n                         }\r\n                         k3++   \r\n                     }\r\n                 }\r\n            \r\n            \r\n                 //console.log(remainderArray);\r\n                 for(let x = 0; x< array.length; x++){\r\n                         if(array[x] == 100 && array[x+1] ==100 ){\r\n                             if(k2 < remainderArray.length){\r\n                                 const c = Math.floor(Math.random()*(x+1));\r\n                                 array[x] = array[c]\r\n                                 array[x+1] = array[c+1]\r\n                                 array[c] = remainderArray[k2]\r\n                                 array[c+1] = remainderArray[k2]\r\n                             }\r\n                             try{\r\n                                 let slot2 = remainderArray[k2][10]\r\n                                 if(slot2 == 1){\r\n                                     insertedData200_Slot2_1.push(remainderArray[k2])\r\n                                 }\r\n                                 if(slot2 == 2){\r\n                                     insertedData200_Slot2_2.push(remainderArray[k2])\r\n                                 }\r\n                             }catch{}\r\n                         k2++   \r\n                     }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                         if(k2 < remainderArray.length){\r\n                             const b = Math.floor(Math.random()*(x+1));\r\n                             array[x] = array[b]\r\n                             array[x+1] = array[b+1]\r\n                             array[b] = remainderArray[k2]\r\n                             array[b+1] = remainderArray[k2]\r\n                         }\r\n                         try{\r\n                             let slot2 = remainderArray[k2][10]\r\n                             if(slot2 == 1){\r\n                                 insertedData200_Slot2_1.push(remainderArray[k2])\r\n                             }\r\n                             if(slot2 == 2){\r\n                                 insertedData200_Slot2_2.push(remainderArray[k2])\r\n                             }\r\n                         }catch{}\r\n                     k2++   \r\n                 }\r\n                 }\r\n            \r\n                 //if there is array in -1, reslot in into the array\r\n                 for(let x =0; x<array.length; x++){\r\n                     if(array[x] == 0){\r\n                         array[x] = 100\r\n                     }\r\n                 }\r\n                 if(array[-1] != undefined){\r\n                     insertedData200_Slot2_1.push(array[-1]);\r\n                     // array[-1] = undefined\r\n                 }\r\n            \r\n                return array;\r\n            }\r\n            var AntArrIns200 = AntAlgoInsert200(AntArr200);\r\n            \r\n            const checkAmountData200B = (array) => {\r\n             let count = 0\r\n             for(let i = 0; i < array.length; i++){\r\n                     if(array[i] != 100 && array[i] !=200 && array[i] != 0 && array[i] != undefined){\r\n                         count += 1\r\n                     }\r\n             }\r\n             return count\r\n             }\r\n             var checkAmountB = checkAmountData200B(AntArrIns200)\r\n\r\n            \r\n             const slot2Equal1for200 = (array) => {\r\n                 let k = 0;\r\n                 let test2 = []\r\n                 //console.log(insertedData200_Slot2_1)\r\n                 \r\n                 for(let x = 0; x< array.length; x++){\r\n                     if(array[x] == 100){\r\n                         if(k < insertedData200_Slot2_1.length){\r\n                             array[x] = insertedData200_Slot2_1[k]\r\n                         }\r\n                     k++   \r\n                     }\r\n                 }\r\n                 //console.log(test2)\r\n                 return array;\r\n             }\r\n             slot2Equal1for200(AntArr200);\r\n            \r\n            \r\n             const slot2Equal2for200 = (array) => {\r\n                 let k = 0;\r\n                 for(let x = 0; x< array.length; x++){\r\n                     if(array[x] == 100 && array[x+1] ==100){\r\n                         if(k < insertedData200_Slot2_2.length){\r\n                             const q = Math.floor(Math.random()*(x+1));\r\n                                 array[x] = array[q]\r\n                                 array[x+1] = array[q+1]\r\n                                 array[q] = insertedData200_Slot2_2[k]\r\n                                 array[q+1] = insertedData200_Slot2_2[k]\r\n                         }else{\r\n                             if(insertedData200_Slot2_2[k] != undefined){\r\n                                 extraData200_Slot2_2.push(insertedData200_Slot2_2[k])\r\n                             }\r\n                         }\r\n                         k++   \r\n                     }\r\n                 }\r\n            \r\n                 for(let x = 0; x< array.length; x++){\r\n                     if(array[x] == 100 && array[x+1] ==100){\r\n                         if(k < extraData200_Slot2_2.length){\r\n                             array[x] = extraData200_Slot2_2[k]\r\n                             array[x+1] = extraData200_Slot2_2[k]\r\n                         }\r\n                     k++   \r\n                     }\r\n                 }\r\n                 return array;\r\n            }\r\n             slot2Equal2for200(AntArr200);\r\n            \r\n            const checkAmountData200 = (array) => {\r\n                let count = 0\r\n                for(let i = 0; i < array.length; i++){\r\n                        if(array[i] != 100 && array[i] !=200 && array[i] != 0 && array[i] != undefined){\r\n                            count += 1\r\n                        }\r\n                }\r\n                return count\r\n            }\r\n            var checkAmount200 = checkAmountData200(AntArrIns200)\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n   \r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 200 \r\n\r\n           //create 1d array for dataset 500\r\n        const array1D500 = (data) => {\r\n            var result = []\r\n        \r\n            for(let i = 0; i< data; i++){\r\n                result[i]= 100;\r\n            }\r\n            return result;\r\n        }\r\n        var AntArr500 = array1D500(DataArray500);\r\n        \r\n        let extraData500_Slot2_2 = []\r\n        let extraData500_Slot2_1 = []\r\n        let insertedData500_Slot2_2 = []\r\n        let insertedData500_Slot2_1= []\r\n        \r\n        const AntAlgoInsert500 = (array) => {\r\n            let test = []\r\n            let k = 0;\r\n            let k2 =0\r\n            let k3 =0\r\n        \r\n            let remainderArray = []\r\n            let remainderArraySlot1 = []\r\n        \r\n            let totalRoom = array.length / 38\r\n        \r\n            for(let x=0; x<filterData500.length;x++){\r\n                test.push(filterData500[x]);\r\n            }\r\n        \r\n             for(let i = array.length-1;i>0;i--){\r\n                 if(k < test.length){\r\n                 let hourMS = test[k][7]\r\n                 let slot1 = test[k][9]\r\n                 let slot2 = test[k][10]\r\n        \r\n                 if(hourMS == 4){\r\n                    const j = Math.floor(Math.random()*(i+1));\r\n                    if(array[i] == 100){\r\n                        //slot in slot1 = 2\r\n                        if(array[i-1] == 100 ){\r\n                            array[i] = array[j];\r\n                            array[i-1] = array[j-1];\r\n                            array[j] = test[k];\r\n                            array[j-1] = test[k];\r\n                            \r\n                            // make stack become 0\r\n                            for(let b = 1; b <= totalRoom; b++){\r\n                             if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                                 array[j+38*b] = 0         \r\n                                 array[j+38*b-1] = 0\r\n                             }\r\n                             if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                                 array[j-38*b] = 0         \r\n                                 array[j-38*b-1] = 0\r\n                             }\r\n                            }\r\n                            const z = Math.floor(Math.random()*(i+1));\r\n                            if(array[i] == 100){\r\n                                //slot in slot1 = 2\r\n                                if(array[i-1] == 100 ){\r\n                                    array[i] = array[z];\r\n                                    array[i-1] = array[z-1];\r\n                                    array[i] = test[k];\r\n                                    array[i-1] = test[k];\r\n                                }\r\n                                else if(array[i+1] == 100 ){\r\n                                     array[i] = array[z];\r\n                                     array[i+1] = array[z+1];\r\n                                     array[z] = test[k];\r\n                                     array[z+1] = test[k];\r\n                                }\r\n                                else{\r\n                                 remainderArraySlot1.push(test[k]);\r\n                                 }\r\n                             }\r\n                             else{\r\n                                 remainderArraySlot1.push(test[k]);\r\n                             }\r\n                             //revert back to 100\r\n                             for(let x =0; x<array.length; x++){\r\n                                 if(array[x] == 0){\r\n                                     array[x] = 100\r\n                                 }\r\n                             }\r\n                        }\r\n                        //slot in slot1 = 2\r\n                        else if(array[i+1] == 100 ){\r\n                            array[i] = array[j];\r\n                            array[i+1] = array[j+1];\r\n                            array[j] = test[k];\r\n                            array[j+1] = test[k];\r\n                            \r\n                             // make stack become 0\r\n                            for(let b = 1; b <= totalRoom; b++){\r\n                             if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                                 array[j+38*b] = 0         \r\n                                 array[j+38*b-1] = 0\r\n                             }\r\n                             if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                                 array[j-38*b] = 0         \r\n                                 array[j-38*b-1] = 0\r\n                             }\r\n                            }\r\n                            const v = Math.floor(Math.random()*(i+1));\r\n                            if(array[i] == 100){\r\n                                //slot in slot1 = 2\r\n                                if(array[i-1] == 100 ){\r\n                                    array[i] = array[v];\r\n                                    array[i-1] = array[v-1];\r\n                                    array[v] = test[k];\r\n                                    array[v-1] = test[k];\r\n                                }\r\n                                else if(array[i+1] == 100){\r\n                                     array[i] = array[v];\r\n                                     array[i+1] = array[v+1];\r\n                                     array[v] = test[k];\r\n                                     array[v+1] = test[k];\r\n                                }\r\n                                else{\r\n                                 remainderArraySlot1.push(test[k]);\r\n                                 }\r\n                             }\r\n                             else{\r\n                                 remainderArraySlot1.push(test[k]);\r\n                             }\r\n                             //revert back to 100\r\n                             for(let x =0; x<array.length; x++){\r\n                                 if(array[x] == 0){\r\n                                     array[x] = 100\r\n                                 }\r\n                             }\r\n                        }\r\n                        else{\r\n                            remainderArray.push(test[k]);\r\n                        }\r\n                    }else{\r\n                        remainderArray.push(test[k]);\r\n                        \r\n                    }\r\n                 }\r\n        \r\n                 else if(hourMS == 3){\r\n                     const j = Math.floor(Math.random()*(i+1));\r\n                     if(array[i] == 100){\r\n                         if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                             array[i] = array[j];\r\n                             array[i-1] = array[j-1];\r\n                             array[i+1] = array[j+1];\r\n                             array[j] = test[k];\r\n                             array[j-1] = test[k];\r\n                             array[j+1] = test[k];\r\n                             \r\n                         }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                             array[i] = array[j];\r\n                             array[i-1] = array[j-1];\r\n                             array[j] = test[k];\r\n                             array[j-1] = test[k];\r\n                             insertedData500_Slot2_1.push(test[k])\r\n                             \r\n                         }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                             array[i] = array[j];\r\n                             array[i+1] = array[j+1];\r\n                             array[j] = test[k];\r\n                             array[j+1] = test[k];\r\n                             insertedData500_Slot2_1.push(test[k])\r\n                             \r\n                         }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                             array[i] = array[j];\r\n                             array[j] = test[k];\r\n                             remainderArraySlot1.push(test[k])\r\n                             \r\n                         }\r\n                     }else{\r\n                         remainderArray.push(test[k]);\r\n                         \r\n                     }\r\n                     }\r\n        \r\n                  else if(hourMS == 2){\r\n                     const j = Math.floor(Math.random()*(i+1));\r\n                     if(array[i] == 100){\r\n                         if(array[i-1] == 100 ){\r\n                             array[i] = array[j];\r\n                             array[i-1] = array[j-1];\r\n                             array[j] = test[k];\r\n                             array[j-1] = test[k];\r\n                             \r\n                         }else if(array[i+1] == 100){\r\n                             array[i] = array[j];\r\n                             array[i+1] = array[j+1];\r\n                             array[j] = test[k];\r\n                             array[j+1] = test[k];\r\n                             \r\n                         }\r\n                         else{\r\n                             remainderArray.push(test[k]);\r\n                             \r\n                         }\r\n                     }else{\r\n                         remainderArray.push(test[k]);\r\n                     }\r\n                     }\r\n                 }\r\n                 k++  \r\n             }\r\n             //console.log(remainderArraySlot1);\r\n             //for(let x = 0; x < remainderArraySlot1.length; x++){\r\n             for(let z =0; z< array.length; z++){\r\n                 for(let x = 0; x < remainderArraySlot1.length; x++){\r\n                     if(array[z] == remainderArraySlot1[x]){\r\n                         for(let b = 1; b <= totalRoom; b++){\r\n                             if( array[z+38*b]==100 && array[z+38*b-1]==100){\r\n                                 array[z+38*b] = 0         \r\n                                 array[z+38*b-1] = 0\r\n                             }\r\n                             if( array[z-38*b]==100 && array[z-38*b-1]==100){\r\n                                 array[z-38*b] = 0         \r\n                                 array[z-38*b-1] = 0\r\n                             }\r\n                            }\r\n                     }\r\n                 }\r\n             }\r\n        \r\n             //fullfill the slot 3\r\n             for(let x = 0; x< array.length; x++){\r\n                 if(array[x] == 100 && array[x+1] == 100){\r\n                     if(k3 < remainderArraySlot1.length){\r\n                         const q = Math.floor(Math.random()*(x+1));\r\n                             array[x] = array[q]\r\n                             array[x+1] = array[q+1]\r\n                             array[q] = remainderArraySlot1[k3]\r\n                             array[q+1] = remainderArraySlot1[k3]\r\n                     }else{\r\n                         if(remainderArraySlot1[k3] != undefined){\r\n                             insertedData500_Slot2_2.push(remainderArraySlot1[k3])\r\n                         }\r\n                     }\r\n                     k3++   \r\n                 }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                     if(k3 < remainderArraySlot1.length){\r\n                         const q = Math.floor(Math.random()*(x+1));\r\n                             array[x] = array[q]\r\n                             array[x+1] = array[q+1]\r\n                             array[q] = remainderArraySlot1[k3]\r\n                             array[q+1] = remainderArraySlot1[k3]\r\n                     }else{\r\n                         if(remainderArraySlot1[k3] != undefined){\r\n                             insertedData500_Slot2_2.push(remainderArraySlot1[k3])\r\n                         }\r\n                     }\r\n                     k3++   \r\n                 }\r\n             }\r\n        \r\n        \r\n             //console.log(remainderArray);\r\n             for(let x = 0; x< array.length; x++){\r\n                     if(array[x] == 100 && array[x+1] ==100 ){\r\n                         if(k2 < remainderArray.length){\r\n                             const c = Math.floor(Math.random()*(x+1));\r\n                             array[x] = array[c]\r\n                             array[x+1] = array[c+1]\r\n                             array[c] = remainderArray[k2]\r\n                             array[c+1] = remainderArray[k2]\r\n                         }\r\n                         try{\r\n                             let slot2 = remainderArray[k2][10]\r\n                             if(slot2 == 1){\r\n                                 insertedData500_Slot2_1.push(remainderArray[k2])\r\n                             }\r\n                             if(slot2 == 2){\r\n                                 insertedData500_Slot2_2.push(remainderArray[k2])\r\n                             }\r\n                         }catch{}\r\n                     k2++   \r\n                 }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                     if(k2 < remainderArray.length){\r\n                         const b = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[b]\r\n                         array[x+1] = array[b+1]\r\n                         array[b] = remainderArray[k2]\r\n                         array[b+1] = remainderArray[k2]\r\n                     }\r\n                     try{\r\n                         let slot2 = remainderArray[k2][10]\r\n                         if(slot2 == 1){\r\n                             insertedData500_Slot2_1.push(remainderArray[k2])\r\n                         }\r\n                         if(slot2 == 2){\r\n                             insertedData500_Slot2_2.push(remainderArray[k2])\r\n                         }\r\n                     }catch{}\r\n                 k2++   \r\n             }\r\n             }\r\n        \r\n             //if there is array in -1, reslot in into the array\r\n             for(let x =0; x<array.length; x++){\r\n                 if(array[x] == 0){\r\n                     array[x] = 100\r\n                 }\r\n             }\r\n             if(array[-1] != undefined){\r\n                 insertedData500_Slot2_1.push(array[-1]);\r\n                 // array[-1] = undefined\r\n             }\r\n        \r\n            return array;\r\n        }\r\n        var AntArrIns500 = AntAlgoInsert500(AntArr500);\r\n        \r\n        const checkAmountData500B = (array) => {\r\n         let count = 0\r\n         for(let i = 0; i < array.length; i++){\r\n                 if(array[i] != 100 && array[i] !=500 && array[i] != 0 && array[i] != undefined){\r\n                     count += 1\r\n                 }\r\n         }\r\n         return count\r\n         }\r\n         var checkAmountB = checkAmountData500B(AntArrIns500)\r\n\r\n        \r\n         const slot2Equal1for500 = (array) => {\r\n             let k = 0;\r\n             let test2 = []\r\n             //console.log(insertedData500_Slot2_1)\r\n             \r\n             for(let x = 0; x< array.length; x++){\r\n                 if(array[x] == 100){\r\n                     if(k < insertedData500_Slot2_1.length){\r\n                         array[x] = insertedData500_Slot2_1[k]\r\n                     }\r\n                 k++   \r\n                 }\r\n             }\r\n             //console.log(test2)\r\n             return array;\r\n         }\r\n         slot2Equal1for500(AntArr500);\r\n        \r\n        \r\n         const slot2Equal2for500 = (array) => {\r\n             let k = 0;\r\n             for(let x = 0; x< array.length; x++){\r\n                 if(array[x] == 100 && array[x+1] ==100){\r\n                     if(k < insertedData500_Slot2_2.length){\r\n                         const q = Math.floor(Math.random()*(x+1));\r\n                             array[x] = array[q]\r\n                             array[x+1] = array[q+1]\r\n                             array[q] = insertedData500_Slot2_2[k]\r\n                             array[q+1] = insertedData500_Slot2_2[k]\r\n                     }else{\r\n                         if(insertedData500_Slot2_2[k] != undefined){\r\n                             extraData500_Slot2_2.push(insertedData500_Slot2_2[k])\r\n                         }\r\n                     }\r\n                     k++   \r\n                 }\r\n             }\r\n        \r\n             for(let x = 0; x< array.length; x++){\r\n                 if(array[x] == 100 && array[x+1] ==100){\r\n                     if(k < extraData500_Slot2_2.length){\r\n                         array[x] = extraData500_Slot2_2[k]\r\n                         array[x+1] = extraData500_Slot2_2[k]\r\n                     }\r\n                 k++   \r\n                 }\r\n             }\r\n             return array;\r\n        }\r\n         slot2Equal2for500(AntArr500);\r\n        \r\n        const checkAmountData500 = (array) => {\r\n            let count = 0\r\n            for(let i = 0; i < array.length; i++){\r\n                    if(array[i] != 100 && array[i] !=500 && array[i] != 0 && array[i] != undefined){\r\n                        count += 1\r\n                    }\r\n            }\r\n            return count\r\n        }\r\n        var checkAmount500 = checkAmountData500(AntArrIns500)\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------------\r\n//Combine all dataset\r\nlet combineData = []\r\nconst combine = (data1,data2,data3,data4)  => {\r\n    for(let i = 0; i < data1.length; i++){\r\n        combineData.push(data1[i])\r\n    }\r\n    for(let i = 0; i < data2.length; i++){\r\n        combineData.push(data2[i])\r\n    }\r\n    for(let i = 0; i < data3.length; i++){\r\n        combineData.push(data3[i])\r\n    }\r\n    for(let i = 0; i < data4.length; i++){\r\n        combineData.push(data4[i])\r\n    }\r\n    return combineData;\r\n}\r\nlet dataCombine = combine(AntArr50,AntArr100,AntArr200,AntArr500)\r\n//console.log(dataCombine)\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n// Hard Constraint \r\n// H1: No student attend more than one class/ event at the same time\r\n// H2: The room is large enough to accomodate all of the student in attendace while also meeting the requirement \r\n// H3: At any given time, each room can onle have one course booked\r\n// H4: No student attend class during 12:00 pm -2:00 due to solat jumaat\r\n// H5: One teacher can only teach one class at one time.\r\n\r\n//Check for the H1 violation: same group attend more than 1 class at 1 time\r\n\r\nconst check1Group = (array) => {\r\n   let count =0\r\n   let indexArray = 0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       indexArray = (x * 37)\r\n   }\r\n   for(let i = 0; i<array.length ; i++){\r\n       try{\r\n           for(let x= 1 ; x <= totalRoom ; x++){\r\n               indexArray = (x * 37)\r\n               if(array[i+indexArray] != 100 && array[i+indexArray] != undefined ){\r\n                   try{\r\n                       if(array[i][6] == array[i+indexArray][6] && array[i+1][6] == array[i+indexArray+1][6] && array[i][5] == array[i+indexArray][5] && array[i+1][5] == array[i+indexArray+1][5]){\r\n                            try{\r\n                                //console.log(array[i])\r\n                                //console.log(array[i+indexArray])\r\n                                count +=1\r\n                            }catch{}\r\n                       }\r\n                   }catch{}\r\n               }   \r\n           }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n}\r\n\r\nvar checkH1_ALL = check1Group(dataCombine)\r\n\r\n\r\n\r\n\r\n//Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\r\n\r\nconst checkRoomQuota = (array) => {\r\n   let count = 0\r\n   return count \r\n}\r\n\r\n\r\n\r\n//Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\r\nconst checkSolatJummat = (array) => {\r\n   let count = 0\r\n   return count \r\n}\r\n\r\n\r\n//Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\r\n\r\nconst check1Teacher = (array) => {\r\n   let count =0\r\n   let indexArray = 0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       indexArray = (x * 38)\r\n   }\r\n   for(let i = 1; i<array.length ; i++){\r\n       try{\r\n           for(let x= 1 ; x <= totalRoom ; x++){\r\n               indexArray = (x * 38)\r\n               if(array[i+indexArray] != 100 && array[i+indexArray] != undefined ){\r\n                   try{\r\n                       if(array[i][5] == array[i+indexArray][5] && array[i+1][5] == array[i+indexArray+1][5] ){\r\n                           count +=1\r\n                       }else if(array[i][5] == array[i+indexArray][5] && array[i-1][5] == array[i+indexArray-1][5] ){\r\n                        count +=1\r\n                       }\r\n                   }catch{}\r\n               }    \r\n           }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n}\r\nvar checkH5_ALL = check1Teacher(dataCombine)\r\n\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n// Soft Constraint \r\n// S1: A student has a class schedule toward the end of the day\r\n// S2: A student have more than two class in a row\r\n\r\n\r\n//Check for the S1 violation: student have class at the end of the day\r\nconst checkEndOfClass = (array) => {\r\n   let count =0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       let indexArray = (x * 37)\r\n       if(array[indexArray] != 100 ){\r\n           count = 1\r\n       }\r\n   }\r\n   return count\r\n\r\n}\r\nvar checkS1_50 = checkEndOfClass(AntArr50)\r\nvar checkS1_100 = checkEndOfClass(AntArr100)\r\nvar checkS1_200 = checkEndOfClass(AntArr200)\r\nvar checkS1_500 = checkEndOfClass(AntArr500)\r\n\r\n\r\n//Check for the S2 violation: teacher have 2 class in a row\r\n\r\nconst check2ClassInARow = (array) => {\r\n   let count =0\r\n   for(let i = 0; i < array.length; i++){\r\n       try{\r\n        if(array[i][5] != undefined && array[i+3][5] != undefined && array[i+2][5] != undefined && array[i+4][5] != undefined){\r\n            if(array[i][5] == array[i+3][5] && array[i+2][5] == array[i+4][5]){\r\n                // console.log(array[i][5])\r\n                // console.log(array[i+3][5])\r\n                // console.log(array[i+2][5])\r\n                // console.log(array[i+4][5])\r\n                count = 1\r\n            }\r\n       }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n}\r\nvar checkS2_50 = check2ClassInARow(AntArr50)\r\nvar checkS2_100 = check2ClassInARow(AntArr100)\r\nvar checkS2_200 = check2ClassInARow(AntArr200)\r\nvar checkS2_500 = check2ClassInARow(AntArr500)\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n//Check total Hard Constraint\r\n\r\nconst checkTotalHardContraint = () => {\r\n   let count =0\r\n   let totalH1 = checkH1_ALL\r\n   let totalH5 = checkH5_ALL\r\n   if(totalH1 != 0){\r\n       count +=1\r\n   }\r\n   if(totalH5 != 0){\r\n       count +=1\r\n   }   \r\n\r\n   return count\r\n}\r\nvar checkTotalHardContraints = checkTotalHardContraint()\r\n//console.log(\"Total Hard Constraint: \"+checkTotalHardContraints)\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nconst checkTotalSoftContraint = () => {\r\n    let count =0\r\n    let totalS1 = checkS1_50 + checkS1_100 + checkS1_200 + checkS1_500\r\n    let totalS2 = checkS2_50 + checkS2_100 + checkS2_200 + checkS2_500\r\n    if(totalS1 != 0){\r\n        count +=1\r\n    }\r\n    if(totalS2 != 0){\r\n        count +=1\r\n    }   \r\n    return count\r\n}\r\nvar checkTotalSoftContraints = checkTotalSoftContraint()\r\n//console.log(\"Total Soft Constraint: \"+checkTotalSoftContraints)\r\n//----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nconst change100ToEmpty = (data) => {\r\n    for(let i = 0; i< data.length; i++){\r\n        if(data[i] == 100){\r\n            data[i] = [];\r\n        }\r\n    }\r\n    return data;\r\n}\r\nlet finalData = change100ToEmpty(combineData)\r\n\r\n\r\nconst checkMissingData = (data50,data100,data200,data500) => {\r\n    let countData = []\r\n    for(let i = 0; i< courseData[0].length;i++){\r\n        for(let j = 0; j <courseData[0][i][7]; j++){\r\n            countData.push(courseData[0][i]);\r\n        }\r\n    }\r\n\r\n    let totalGenerateScheduleData = data50 + data100 + data200 + data500\r\n\r\n    if(countData.length == totalGenerateScheduleData){\r\n  \r\n    }else{\r\n\r\n    }\r\n}\r\ncheckMissingData(checkAmount50,checkAmount100,checkAmount200,checkAmount500)\r\n\r\n\r\ncheckTotalHardContraintsAll = checkTotalHardContraints\r\ncheckTotalSoftContraintsAll = checkTotalSoftContraints\r\nfinalDataAll.push(finalData)\r\nreturn {checkTotalHardContraints,checkTotalSoftContraints,finalData}\r\n}\r\nlet antSystemAlgo = antSystem();\r\n// -------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nlet trigger = 0\r\n\r\nconst iteration = () => {\r\n        antSystem()\r\n        let globalBestHS = checkTotalHardContraintsAll \r\n        let globalBestSS = checkTotalSoftContraintsAll\r\n        let globalBestScehdule = finalDataAll[0]\r\n    for(let i= 1; i <= 500; i++){\r\n        antSystem()\r\n        let localBestHS = checkTotalHardContraintsAll \r\n        let localBestSS = checkTotalSoftContraintsAll\r\n        let localBestScehdule = finalDataAll[0]\r\n            console.log(\"iteraion: \" + i)\r\n            if(globalBestHS > localBestHS ){\r\n                globalBestHS = localBestHS\r\n                globalBestSS = localBestSS\r\n                globalBestScehdule = localBestScehdule\r\n            }\r\n            if(localBestHS == 0){\r\n                console.log(\"iteraion: \" + i)\r\n                console.log(\"workable solution is found\")\r\n                globalBestHS = localBestHS\r\n                globalBestSS = localBestSS\r\n                globalBestScehdule = localBestScehdule\r\n                console.log(\"Workable Gloabal best HS: \"+globalBestHS)\r\n                console.log(\"Workable Gloabal best SS: \" +globalBestSS)\r\n                console.log(finalDataAll[0])\r\n                trigger = 1\r\n                return finalDataAll[0]\r\n            }\r\n            else if(localBestHS == 0 && localBestSS == 0){\r\n                console.log(\"iteraion: \" + i)\r\n                console.log(\"perfect solution is found\")\r\n                globalBestHS = localBestHS\r\n                globalBestSS = localBestSS\r\n                globalBestScehdule = localBestScehdule\r\n                console.log(\"Perfect Gloabal best HS: \"+globalBestHS)\r\n                console.log(\"Perfect Gloabal best SS: \" +globalBestSS)\r\n                console.log(finalDataAll[0])\r\n                trigger = 1\r\n                return finalDataAll[0]\r\n            }\r\n    }\r\n\r\n}\r\nlet interations = iteration()\r\n\r\nlet presentableData = []\r\n\r\nif(trigger == 1){\r\nconst changeToPresentationData = (data) => {\r\n    for(let i= 0; i <= data.length; i++){\r\n        try {\r\n            presentableData.push([data[i][1],data[i][2],data[i][5]])\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nchangeToPresentationData(interations)\r\n\r\nlet allRoomName = []\r\nfor(let i = 0; i < roomData[0].length; i++){\r\n    allRoomName.push(roomData[0][i][0])\r\n}\r\nallRoomName.unshift(\"Room\");\r\nif(allRoomName.pop() == undefined){\r\n}\r\n\r\n\r\nlet weekday = ['Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday',\r\n'Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday',\r\n'Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday',\r\n'Friday','Friday','Friday','Friday','Friday','Friday','Friday','Friday']\r\n\r\n\r\nconst create2dArray = (weekdayArray,partDay,arrayAll, partAll) => {\r\n    var tmp = [];\r\n\r\n    for(var i = 0; i < weekdayArray.length; i += partDay) {\r\n        tmp.push(weekdayArray.slice(i, i + partDay));\r\n    }\r\n    for(var i = 0; i < arrayAll.length; i += partAll) {\r\n        tmp.push(arrayAll.slice(i, i + partAll));\r\n    }\r\n    return tmp;\r\n}\r\nlet dataset = create2dArray(weekday,38,presentableData,38)\r\n\r\n\r\nconst insertRoomName = (roomData,array) => {\r\n    for(let i= 0; i<array.length; i++){\r\n        array[i].unshift(roomData[i]);\r\n    }\r\n    return array;\r\n}\r\n\r\ninsertRoomName(allRoomName,dataset)\r\n\r\n\r\n/** Convert a 2D array into a CSV string\r\n */\r\n  function arrayToCsv(data){\r\n    //console.log(data)\r\n    return data.map(row =>\r\n      row\r\n      .map(String)  // convert every value to String\r\n      .map(v => v.replaceAll('\"', '\"\"'))  // escape double colons\r\n      .map(v => `\"${v}\"`)  // quote it\r\n      .join(',')  // comma-separated\r\n    ).join('\\r\\n');  // rows starting on new lines\r\n  }\r\n\r\nlet csv = arrayToCsv(\r\n    dataset\r\n);\r\n\r\nfunction downloadBlob(content, filename, contentType) {\r\n    // Create a blob\r\n    var blob = new Blob([content], { type: contentType });\r\n    var url = URL.createObjectURL(blob);\r\n  \r\n    // Create a link to download it\r\n    var pom = document.createElement('a');\r\n    pom.href = url;\r\n    pom.setAttribute('download', filename);\r\n    pom.click();\r\n  }\r\n\r\n  downloadBlob(csv, 'ModifiedAntSystem_GeneratedSchedule.csv', 'text/csv;charset=utf-8;')\r\n}else{\r\n    alert(\"no workable solution found, please refersh until get workable solution\")\r\n}\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n        }\r\n    return(\r\n        <React.Fragment>\r\n            <h1>\r\n                Generate Schedule Page\r\n            </h1>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default ArraySchedule;\r\n\r\n\r\n//result[i][j]=Course.splice(Math.floor(Math.random()* Course.length),1)[0] // create random placement of Course Value\r\n//const Schedule = new Array(10).fill(Array(5).fill(null));\r\n//console.log(Schedule);\r\n// const Course = [['TE1',4],['TE1',4],['TE1',4],['TE1',3],['TE1',4],['TE1',2],['TE1',4],['TE1',4],['TE1',4],['TE1',3]];\r\n//const Course = [['TE1',2],['TE2',2],['TE3',3],['TE4',4],['TE5',3],['TE6',4],['TE7',4],['TE8',2],['TE9',4]];\r\n//const Course = ['TE1','TE2','TE3','TE4','TE5','TE6','TE7','TE8','TE9'];"]},"metadata":{},"sourceType":"module"}