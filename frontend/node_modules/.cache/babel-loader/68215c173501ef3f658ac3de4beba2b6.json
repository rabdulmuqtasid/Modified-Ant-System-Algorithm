{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acit\\\\Desktop\\\\FYP Code\\\\FYP Code\\\\frontend\\\\src\\\\components\\\\RandomSchedule\\\\arraySchedule.js\";\nimport { create, find, forEach, indexOf } from \"lodash\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport _ from 'lodash';\nimport { CSVLink } from \"react-csv\";\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\nlet finalDataAll = [];\nlet finalDataAllElective = [];\nlet checkHardConstraintOutsite = 0;\nlet checkSoftConstraintOutsite = 0;\n\nconst ArraySchedule = props => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedFile, setLoaadedFile] = useState(false);\n  const [roomData, setroomData] = useState();\n  const [courseData, setcourseData] = useState();\n  const [CsvData, setCsvData] = useState(); // const [Keys, setKeys] = useState();\n  //const [uploadedData, setUploadedData] = useState([]);\n  //console.log(\"props dataset:\"+ props.test)\n\n  const userId = useParams().userId;\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875'); //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\n        //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\n\n        const responsedata = await response.json();\n        let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset); // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\n\n        const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Room'], Dataset['Size']]); //Extract Room\n\n        setroomData([ertRoom]);\n        const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'], Dataset['Course Code'], Dataset['Course Name'], Dataset['Year'], Dataset['Semester'], Dataset['Lecturer'], Dataset['Group'], Dataset['HMS'], Dataset['Programme Code'], Dataset['Slot1'], Dataset['Slot2']]); //Extract Enrollment Quota\n\n        setcourseData([ertCourse]);\n\n        if (!response.ok) {\n          throw new Error(responsedata.message);\n        }\n\n        setLoaadedFile(stringifyData);\n        setIsLoading(true);\n      } catch (err) {\n        console.log(err.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, [userId]);\n\n  if (!isLoading && loadedFile) {\n    const testData = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const EnrollmentQuota = [];\n    const CourseCode = [];\n    const HMS = [];\n    const lecturerData = [];\n    const roomName = [];\n    const roomSize = [];\n    const filterData50 = [];\n    const filterData100 = [];\n    const filterData200 = [];\n    const filterData500 = [];\n    const filterDataElective50 = [];\n    const filterDataElective100 = [];\n    const filterDataElective200 = [];\n    const filterDataElective500 = [];\n    const dupeData = [];\n    const room = [];\n    room.push(roomData[0]);\n    let hardConstraintViolated = 0;\n    let softConstraintViolated = 0; //console.log(courseData[0][0][1]);\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      let enrollment = [courseData[0][i][0]];\n      let code = [courseData[0][i][1]];\n      let hms = [courseData[0][i][7]];\n      let lecturer = [courseData[0][i][5]];\n      enrollment.reduce(function (results, item, index, array) {\n        results[index] = item;\n        EnrollmentQuota.push(item); //console.log(results)\n      }, {});\n      code.reduce(function (results, item, index, array) {\n        results[index] = item;\n        CourseCode.push(item); //console.log(results)\n      }, {});\n      hms.reduce(function (results, item, index, array) {\n        results[index] = item;\n        HMS.push(item); //console.log(results)\n      }, {});\n      lecturer.reduce(function (results, item, index, array) {\n        results[index] = item;\n        lecturerData.push(item); //console.log(results)\n      }, {});\n    }\n\n    for (let i = 0; i < roomData[0].length; i++) {\n      let name = [roomData[0][i][0]];\n      let size = [roomData[0][i][1]];\n      name.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomName.push(item); //console.log(results)\n      }, {});\n      size.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomSize.push(item); //console.log(results)\n      }, {});\n    }\n\n    const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\n    const notDuplicatesLecturer = lecturerData.filter((item, index) => index == lecturerData.indexOf(item));\n    notDuplicatesLecturer.pop(); //console.log(notDuplicatesLecturer)\n\n    let courseDataXElective = [];\n    let courseDataWithElective = [];\n    courseData[0].pop(); //saparate faculty course with the elective course\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      if (courseData[0][i][1].slice(0, 3) != 'TMU') {\n        courseData[0][i].splice();\n\n        if (courseData[0][i][1].slice(0, 3) != 'TMX') {\n          courseData[0][i].splice();\n          courseDataXElective.push(courseData[0][i]);\n        }\n      }\n    } //saparate elective course with the faculty course\n\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      if (courseData[0][i][1].slice(0, 3) == 'TMU' || courseData[0][i][1].slice(0, 3) == 'TMX') {\n        courseDataWithElective.push(courseData[0][i]);\n      }\n    } //insert data without elective courses into correct room capacity\n\n\n    for (let i = 0; i < courseDataXElective.length; i++) {\n      if (courseDataXElective[i][0] < 50) {\n        filterData50.push(courseDataXElective[i]);\n      }\n\n      if (courseDataXElective[i][0] >= 50 && courseDataXElective[i][0] < 100) {\n        filterData100.push(courseDataXElective[i]);\n      }\n\n      if (courseDataXElective[i][0] >= 100 && courseDataXElective[i][0] < 200) {\n        filterData200.push(courseDataXElective[i]);\n      }\n\n      if (courseDataXElective[i][0] >= 200 && courseDataXElective[i][0] < 500) {\n        filterData500.push(courseDataXElective[i]);\n      }\n    } //console.log(filterData50)\n    //insert data without faculty courses into correct room capacity\n\n\n    for (let i = 0; i < courseDataWithElective.length; i++) {\n      if (courseDataWithElective[i][0] < 50) {\n        filterDataElective50.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 50 && courseDataWithElective[i][0] < 100) {\n        filterDataElective100.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 100 && courseDataWithElective[i][0] < 200) {\n        filterDataElective200.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 200 && courseDataWithElective[i][0] < 500) {\n        filterDataElective500.push(courseDataWithElective[i]);\n      }\n    } // console.log(filterDataElective50);\n    // console.log(filterDataElective100);\n    // console.log(filterDataElective200);\n    // console.log(filterDataElective500);\n\n\n    let roomUnder50 = [];\n    let roomUnder100 = [];\n    let roomUnder200 = [];\n    let roomUnder500 = [];\n\n    const checkNumberofRoom = () => {\n      for (let i = 0; i < roomData[0].length; i++) {\n        let room = roomData[0][i][1]; //console.log(roomData[0][i][1]);\n\n        if (room < 50) {\n          roomUnder50.push(room);\n        } else if (room > 50 && room < 100) {\n          roomUnder100.push(room);\n        } else if (room > 100 && room < 200) {\n          roomUnder200.push(room);\n        } else if (room > 200) {\n          roomUnder500.push(room);\n        }\n      }\n    };\n\n    checkNumberofRoom();\n\n    const createArray = data => {\n      var result = [];\n\n      for (let i = 0; i < data; i++) {\n        result[i] = [];\n      }\n\n      return result;\n    };\n\n    let DataArray50 = roomUnder50.length * 38;\n    let DataArray100 = roomUnder100.length * 38;\n    let DataArray200 = roomUnder200.length * 38;\n    let DataArray500 = roomUnder500.length * 38;\n    let DataArrayElective50 = roomUnder50.length * 10;\n    let DataArrayElective100 = roomUnder100.length * 10;\n    let DataArrayElective200 = roomUnder200.length * 10;\n    let DataArrayElective500 = roomUnder500.length * 10; //----------------------------------------------------------------------------------------------------------------------------------------\n\n    var checkTotalHardContraintsAll = 0;\n    var checkTotalSoftContraintsAll = 0;\n\n    const antSystem = () => {\n      //Faculty courses\n      //create 1d array for dataset 50\n      const array1D50 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr50 = array1D50(DataArray50);\n      let extraData50_Slot2_2 = [];\n      let extraData50_Slot2_1 = [];\n      let insertedData50_Slot2_2 = [];\n      let insertedData50_Slot2_1 = [];\n\n      const AntAlgoInsert50 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0; //CHECK HMS 2\n\n        let slotin2_2_1 = [];\n        let slotin2_2_2 = [];\n        let slotin0_2_1 = [];\n        let slotin0_2_2 = []; //CHECK HMS 3\n\n        let slotin3_3_1 = [];\n        let slotin2_3_1 = [];\n        let slotin1_3_1 = [];\n        let slotin0_3_1 = []; //CHECK HMS 4\n\n        let slotin2_4_1 = [];\n        let slotin2_4_2 = [];\n        let slotin0_4_1 = [];\n        let slotin0_4_2 = [];\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterData50.length; x++) {\n          test.push(filterData50[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let slot1 = test[k][9];\n            let slot2 = test[k][10];\n\n            if (hourMS == 4) {\n              let b = 0;\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n\n                  if (b < totalRoom) {\n                    if (array[i][5] != 100 && array[i][5] == test[k][5]) {\n                      if (array[i + 38 * b] == 100 && array[i + 37 * b] == 100) {\n                        array[i + 38 * b] = 0;\n                        array[i + 37 * b] = 0;\n                      }\n\n                      if (array[i - 38 * b] == 100 && array[i - 37 * b] == 100) {\n                        array[i - 38 * b] = 0;\n                        array[i - 37 * b] = 0;\n                      }\n                    }\n                  }\n\n                  b++; //const j = Math.floor(Math.random()*(i+1));\n\n                  if (array[i] == 100 && array[i - 1] == 100) {\n                    array[i] = array[j];\n                    array[i - 1] = array[j - 1];\n                    array[j] = test[k];\n                    array[j - 1] = test[k];\n                  } else if (array[i] == 100 && array[i + 1] == 100) {\n                    array[i] = array[j];\n                    array[i + 1] = array[j + 1];\n                    array[j] = test[k];\n                    array[j + 1] = test[k];\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  }\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n\n                  if (b < totalRoom) {\n                    if (array[i][5] != 100 && array[i][5] == test[k][5]) {\n                      if (array[i + 38 * b] == 100 && array[i + 39 * b] == 100) {\n                        array[i + 38 * b] = 0;\n                        array[i + 39 * b] = 0;\n                      }\n\n                      if (array[i - 38 * b] == 100 && array[i - 39 * b] == 100) {\n                        array[i - 38 * b] = 0;\n                        array[i - 39 * b] = 0;\n                      }\n                    }\n                  }\n\n                  b++; //const j = Math.floor(Math.random()*(i+1));\n\n                  if (array[i] == 100 && array[i - 1] == 100) {\n                    array[i] = array[j];\n                    array[i - 1] = array[j - 1];\n                    array[j] = test[k];\n                    array[j - 1] = test[k];\n                  } else if (array[i] == 100 && array[i + 1] == 100) {\n                    array[i] = array[j];\n                    array[i + 1] = array[j + 1];\n                    array[j] = test[k];\n                    array[j + 1] = test[k];\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  }\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  slotin2_2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  slotin2_2_2.push(test[k]);\n                } else {\n                  remainderArray.push(test[k]);\n                  slotin0_2_1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n                slotin0_2_2.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  array[j + 1] = test[k];\n                  slotin3_3_1.push(test[k]);\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  insertedData50_Slot2_1.push(test[k]);\n                  slotin2_3_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  insertedData50_Slot2_1.push(test[k]);\n                  slotin2_3_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = array[j];\n                  array[j] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                  slotin1_3_1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n                slotin0_3_1.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              array[x] = remainderArraySlot1[k3];\n              array[x + 1] = remainderArraySlot1[k3];\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              array[x] = remainderArray[k2];\n              array[x + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData50_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData50_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        }\n\n        return array;\n      };\n\n      var AntArrIns50 = AntAlgoInsert50(AntArr50); //console.log(AntArrIns50);\n\n      const slot2Equal1for50 = array => {\n        let k = 0;\n        let test2 = []; //console.log(insertedData50_Slot2_1)\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedData50_Slot2_1.length) {\n              array[x] = insertedData50_Slot2_1[k];\n            }\n\n            k++;\n          }\n        } //console.log(test2)\n\n\n        return array;\n      };\n\n      let varchec = slot2Equal1for50(AntArr50);\n\n      const slot2Equal2for50 = array => {\n        let k = 0;\n        let test2 = []; //console.log(insertedData50_Slot2_2)\n        //  for(let x=0; x<filterData50.length;x++){\n        //      if(filterData50[x][10] == 2){\n        //          insertedData50_Slot2_2.push(filterData50[x]);\n        //      }\n        //  }\n        //console.log(insertedData50_Slot2_2)\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedData50_Slot2_2.length) {\n              array[x] = insertedData50_Slot2_2[k];\n              array[x + 1] = insertedData50_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedData50_Slot2_1.push(array[-1]);\n        } else {}\n\n        return array;\n      };\n\n      slot2Equal2for50(AntArr50);\n\n      const checkAmountData50 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount = checkAmountData50(AntArrIns50);\n      console.log(AntArrIns50);\n      console.log(checkAmount);\n\n      const checkAmountData50_0 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_0 = checkAmountData50_0(AntArrIns50);\n      console.log(\"zero counter: \" + checkAmount_0); // console.log(extraData50_Slot2_2)\n      // console.log(extraData50_Slot2_1)\n      //----------------------------------------------------------------------------------------------------------------------------------------\n\n      const check1Group = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 37;\n        }\n\n        for (let x = 1; x <= totalRoom; x++) {\n          try {\n            //for(let x= 1 ; x <= totalRoom ; x++){\n            for (let i = 0; i < array.length; i++) {\n              indexArray = x * 37;\n\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined && array[i + indexArray] != 0) {\n                try {\n                  //if(array[i][6] == array[i+indexArray][6] && array[i+1][6] == array[i+indexArray+1][6] && array[i][5] == array[i+indexArray][5] && array[i+1][5] == array[i+indexArray+1][5]){\n                  if (array[i][6] == array[i + indexArray][6] && array[i][5] == array[i + indexArray][5]) {\n                    try {\n                      //console.log(array[i])\n                      //console.log(array[i+indexArray])\n                      count += 1;\n                    } catch {}\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH1_50 = check1Group(AntArr50);\n      console.log(\"HS1 50: \" + checkH1_50);\n\n      const check1Teacher = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n\n          try {\n            for (let i = 1; i < array.length; i++) {\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined && array[i + indexArray] != 0) {\n                try {\n                  if (array[i][5] == array[i + indexArray][5]) {\n                    //if(array[i][5] == array[i+indexArray][5] && array[i+1][5] == array[i+indexArray+1][5]){\n                    //    console.log(i)\n                    //    console.log(array[i])\n                    //    console.log(i+indexArray)\n                    //    console.log(array[i+indexArray])\n                    count += 1;\n                  } // if(array[i][5] == array[i+indexArray][5] && array[i-1][5] == array[i+indexArray-1][5]){\n                  //     count +=1\n                  //  }\n\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH5_50 = check1Teacher(AntArr50);\n      console.log(\"HS5 50: \" + checkH5_50); // console.log(\"H5 All: \"+checkH5_ALL)\n      // console.log(\"H5 Elective: \"+checkH5_ALLElective)\n    };\n\n    for (let i = 1; i <= 1; i++) {\n      console.log(\"iteration: \" + i);\n      antSystem();\n    } // -------------------------------------------------------------------------------------------------------------------------------------------\n    //----------------------------------------------------------------------------------------------------------------------------------------\n\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 13\n    }\n  }, \"Generate Schedule Page\"));\n};\n\nexport default ArraySchedule; //result[i][j]=Course.splice(Math.floor(Math.random()* Course.length),1)[0] // create random placement of Course Value\n//const Schedule = new Array(10).fill(Array(5).fill(null));\n//console.log(Schedule);\n// const Course = [['TE1',4],['TE1',4],['TE1',4],['TE1',3],['TE1',4],['TE1',2],['TE1',4],['TE1',4],['TE1',4],['TE1',3]];\n//const Course = [['TE1',2],['TE2',2],['TE3',3],['TE4',4],['TE5',3],['TE6',4],['TE7',4],['TE8',2],['TE9',4]];\n//const Course = ['TE1','TE2','TE3','TE4','TE5','TE6','TE7','TE8','TE9'];","map":{"version":3,"sources":["C:/Users/acit/Desktop/FYP Code/FYP Code/frontend/src/components/RandomSchedule/arraySchedule.js"],"names":["create","find","forEach","indexOf","React","useEffect","useState","useContext","useParams","_","CSVLink","LoadingSpinner","finalDataAll","finalDataAllElective","checkHardConstraintOutsite","checkSoftConstraintOutsite","ArraySchedule","props","isLoading","setIsLoading","loadedFile","setLoaadedFile","roomData","setroomData","courseData","setcourseData","CsvData","setCsvData","userId","sendRequest","response","fetch","responsedata","json","stringifyData","JSON","stringify","userWithFiles","Dataset","ertRoom","map","ertCourse","ok","Error","message","err","console","log","testData","EnrollmentQuota","CourseCode","HMS","lecturerData","roomName","roomSize","filterData50","filterData100","filterData200","filterData500","filterDataElective50","filterDataElective100","filterDataElective200","filterDataElective500","dupeData","room","push","hardConstraintViolated","softConstraintViolated","i","length","enrollment","code","hms","lecturer","reduce","results","item","index","array","name","size","notDuplicatesRoom","filter","notDuplicatesLecturer","pop","courseDataXElective","courseDataWithElective","slice","splice","roomUnder50","roomUnder100","roomUnder200","roomUnder500","checkNumberofRoom","createArray","data","result","DataArray50","DataArray100","DataArray200","DataArray500","DataArrayElective50","DataArrayElective100","DataArrayElective200","DataArrayElective500","checkTotalHardContraintsAll","checkTotalSoftContraintsAll","antSystem","array1D50","AntArr50","extraData50_Slot2_2","extraData50_Slot2_1","insertedData50_Slot2_2","insertedData50_Slot2_1","AntAlgoInsert50","test","k","k2","k3","slotin2_2_1","slotin2_2_2","slotin0_2_1","slotin0_2_2","slotin3_3_1","slotin2_3_1","slotin1_3_1","slotin0_3_1","slotin2_4_1","slotin2_4_2","slotin0_4_1","slotin0_4_2","remainderArray","remainderArraySlot1","totalRoom","x","hourMS","slot1","slot2","b","j","Math","floor","random","AntArrIns50","slot2Equal1for50","test2","varchec","slot2Equal2for50","undefined","checkAmountData50","count","checkAmount","checkAmountData50_0","checkAmount_0","check1Group","indexArray","checkH1_50","check1Teacher","checkH5_50"],"mappings":"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","sourcesContent":["import { create, find, forEach, indexOf } from \"lodash\";\r\nimport React,{ useEffect,useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport _ from 'lodash';\r\nimport { CSVLink } from \"react-csv\";\r\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\r\n\r\n\r\nlet finalDataAll = [];\r\nlet finalDataAllElective = [];\r\nlet checkHardConstraintOutsite = 0;\r\nlet checkSoftConstraintOutsite = 0;\r\n\r\nconst ArraySchedule = (props) => {\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [loadedFile, setLoaadedFile] = useState(false);\r\n    const [roomData, setroomData] = useState();\r\n    const [courseData, setcourseData] = useState();\r\n    const [CsvData, setCsvData] = useState();\r\n    // const [Keys, setKeys] = useState();\r\n    //const [uploadedData, setUploadedData] = useState([]);\r\n    //console.log(\"props dataset:\"+ props.test)\r\n\r\n    const userId = useParams().userId;\r\n    useEffect(()=>{\r\n        const sendRequest = async () =>{\r\n            setIsLoading(true);\r\n            try{\r\n            const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875');\r\n            //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\r\n            //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\r\n            const responsedata = await response.json();\r\n            let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset);\r\n\r\n            // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\r\n            const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset =>[Dataset['Room'],Dataset['Size']]); //Extract Room\r\n            setroomData([ertRoom]);\r\n\r\n            const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'],Dataset['Course Code'],Dataset['Course Name'],Dataset['Year'],Dataset['Semester'],Dataset['Lecturer'],Dataset['Group'],Dataset['HMS'],Dataset['Programme Code'],Dataset['Slot1'],Dataset['Slot2']]); //Extract Enrollment Quota\r\n            setcourseData([ertCourse]);\r\n\r\n            if (!response.ok){\r\n                throw new Error(responsedata.message);\r\n            }\r\n            setLoaadedFile(stringifyData);\r\n            setIsLoading(true);\r\n            }catch(err){\r\n                console.log(err.message);\r\n            }\r\n            setIsLoading(false);\r\n            \r\n        };\r\n        sendRequest();\r\n    },[userId]);\r\n\r\n        if(!isLoading && loadedFile){\r\n            const testData = [1,2,3,4,5,6,7,8,9];\r\n            const EnrollmentQuota = [];\r\n            const CourseCode = [];\r\n            const HMS = [];\r\n            const lecturerData = []\r\n            const roomName = [];\r\n            const roomSize = [];\r\n            const filterData50  = [];\r\n            const filterData100  = [];\r\n            const filterData200  = [];\r\n            const filterData500  = [];\r\n            const filterDataElective50  = [];\r\n            const filterDataElective100  = [];\r\n            const filterDataElective200  = [];\r\n            const filterDataElective500  = [];\r\n            const dupeData  = [];\r\n            const room = []\r\n            room.push(roomData[0])\r\n            \r\n            let hardConstraintViolated = 0;\r\n            let softConstraintViolated = 0;\r\n            //console.log(courseData[0][0][1]);\r\n            for(let i = 0; i <courseData[0].length; i++){\r\n                let enrollment = [courseData[0][i][0]];\r\n                let code = [courseData[0][i][1]];\r\n                let hms = [courseData[0][i][7]];\r\n                let lecturer = [courseData[0][i][5]];\r\n                enrollment.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    EnrollmentQuota.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                code.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    CourseCode.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                hms.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    HMS.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                lecturer.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    lecturerData.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n            }\r\n\r\n            for(let i = 0; i <roomData[0].length; i++){\r\n                let name = [roomData[0][i][0]];\r\n                let size = [roomData[0][i][1]];\r\n                name.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomName.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                size.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomSize.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n            }\r\n \r\n            \r\n            const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\r\n\r\n            const notDuplicatesLecturer = lecturerData.filter((item, index) => index == lecturerData.indexOf(item));\r\n            notDuplicatesLecturer.pop();\r\n            //console.log(notDuplicatesLecturer)\r\n\r\n\r\n            let courseDataXElective = []\r\n            let courseDataWithElective = []\r\n            courseData[0].pop()\r\n\r\n            //saparate faculty course with the elective course\r\n            for(let i=0; i< courseData[0].length; i++){\r\n                if(courseData[0][i][1].slice(0,3) != 'TMU'){\r\n                    courseData[0][i].splice()\r\n                    if(  courseData[0][i][1].slice(0,3) != 'TMX'){\r\n                        courseData[0][i].splice()\r\n                        courseDataXElective.push(courseData[0][i])\r\n                    }\r\n                }\r\n            }\r\n\r\n            //saparate elective course with the faculty course\r\n            for(let i=0; i< courseData[0].length; i++){\r\n                if(courseData[0][i][1].slice(0,3) == 'TMU' ||  courseData[0][i][1].slice(0,3) == 'TMX'){\r\n                    courseDataWithElective.push(courseData[0][i])\r\n                }\r\n            }\r\n\r\n            //insert data without elective courses into correct room capacity\r\n                for(let i = 0; i< courseDataXElective.length;i++){\r\n                        if (courseDataXElective[i][0] < 50) {\r\n                            filterData50.push(courseDataXElective[i]);\r\n                        }\r\n                        if (courseDataXElective[i][0] >= 50 && courseDataXElective[i][0] < 100) {\r\n                            \r\n                            filterData100.push(courseDataXElective[i]);\r\n                        }\r\n                        if (courseDataXElective[i][0] >= 100 && courseDataXElective[i][0] < 200 ) {\r\n                            filterData200.push(courseDataXElective[i]);\r\n                        }\r\n                        if (courseDataXElective[i][0] >= 200 && courseDataXElective[i][0] < 500) {\r\n                            filterData500.push(courseDataXElective[i]);\r\n                        }\r\n                }\r\n                //console.log(filterData50)\r\n\r\n                //insert data without faculty courses into correct room capacity\r\n                for(let i = 0; i< courseDataWithElective.length;i++){\r\n                    if (courseDataWithElective[i][0] < 50) {\r\n                        filterDataElective50.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 50 && courseDataWithElective[i][0] < 100) {\r\n                        \r\n                        filterDataElective100.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 100 && courseDataWithElective[i][0] < 200 ) {\r\n                        filterDataElective200.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 200 && courseDataWithElective[i][0] < 500) {\r\n                        filterDataElective500.push(courseDataWithElective[i]);\r\n                    }\r\n                }\r\n                // console.log(filterDataElective50);\r\n                // console.log(filterDataElective100);\r\n                // console.log(filterDataElective200);\r\n                // console.log(filterDataElective500);\r\n\r\n\r\n            let roomUnder50 = []\r\n            let roomUnder100 = []\r\n            let roomUnder200 = []\r\n            let roomUnder500 = []\r\n            const checkNumberofRoom = () => {\r\n                for(let i = 0; i < roomData[0].length; i++){\r\n                    let room = roomData[0][i][1]\r\n                    //console.log(roomData[0][i][1]);\r\n                    if(room < 50){\r\n                        roomUnder50.push(room)\r\n                    }else if(room > 50 && room < 100){\r\n                        roomUnder100.push(room)\r\n\r\n                    }else if(room > 100 && room < 200){\r\n                        roomUnder200.push(room)\r\n\r\n                    }else if(room > 200){\r\n                        roomUnder500.push(room)\r\n                    }\r\n                }\r\n            }\r\n            checkNumberofRoom();\r\n\r\n\r\n            const createArray = (data) => {\r\n                var result = []\r\n\r\n                    for(let i = 0; i<data; i++){\r\n                        result[i] = []\r\n                    }\r\n                return result;\r\n            }\r\n\r\n            let DataArray50 = roomUnder50.length * 38;\r\n            let DataArray100 = roomUnder100.length * 38;\r\n            let DataArray200 = roomUnder200.length * 38;\r\n            let DataArray500 = roomUnder500.length * 38;\r\n\r\n            let DataArrayElective50 = roomUnder50.length * 10;\r\n            let DataArrayElective100 = roomUnder100.length * 10;\r\n            let DataArrayElective200 = roomUnder200.length * 10;\r\n            let DataArrayElective500 = roomUnder500.length * 10;\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nvar checkTotalHardContraintsAll = 0\r\nvar checkTotalSoftContraintsAll = 0\r\n\r\nconst antSystem = () => {\r\n\r\n    //Faculty courses\r\n\r\n    //create 1d array for dataset 50\r\n    const array1D50 = (data) => {\r\n        var result = []\r\n \r\n        for(let i = 0; i< data; i++){\r\n            result[i]= 100;\r\n        }\r\n        return result;\r\n    }\r\n    var AntArr50 = array1D50(DataArray50);\r\n \r\n    let extraData50_Slot2_2 = []\r\n    let extraData50_Slot2_1 = []\r\n    let insertedData50_Slot2_2 = []\r\n    let insertedData50_Slot2_1= []\r\n \r\n    const AntAlgoInsert50 = (array) => {\r\n        let test = []\r\n        let k = 0;\r\n        let k2 =0\r\n        let k3 =0\r\n        \r\n        //CHECK HMS 2\r\n        let slotin2_2_1 = []\r\n        let slotin2_2_2 = []\r\n        let slotin0_2_1 = []\r\n        let slotin0_2_2 = []\r\n \r\n        //CHECK HMS 3\r\n        let slotin3_3_1 = []\r\n        let slotin2_3_1 = []\r\n        let slotin1_3_1 = []\r\n        let slotin0_3_1 = []\r\n \r\n        \r\n         //CHECK HMS 4\r\n        let slotin2_4_1 = []\r\n        let slotin2_4_2 = []\r\n        let slotin0_4_1 = []\r\n        let slotin0_4_2 = []\r\n \r\n        let remainderArray = []\r\n        let remainderArraySlot1 = []\r\n        let totalRoom = array.length / 38\r\n\r\n        for(let x=0; x<filterData50.length;x++){\r\n            test.push(filterData50[x]);\r\n        }\r\n \r\n         for(let i = array.length-1;i>0;i--){\r\n             if(k < test.length){\r\n             let hourMS = test[k][7]\r\n             let slot1 = test[k][9]\r\n             let slot2 = test[k][10]\r\n             \r\n\r\n             if(hourMS == 4){\r\n                 let b = 0\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    if(array[i-1] == 100){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n\r\n                        if(b < totalRoom){\r\n                            if( array[i][5] != 100 && array[i][5] == test[k][5]){\r\n                                if( array[i+38*b]==100 && array[i + 37*b] == 100){\r\n                                    array[i+38*b] = 0\r\n                                    array[i+37*b] = 0\r\n                                }\r\n                                if( array[i-38*b]==100 && array[i - 37*b] == 100){\r\n                                    array[i-38*b] = 0\r\n                                    array[i-37*b] = 0\r\n                                }\r\n                            }\r\n                        }   \r\n                        b++\r\n\r\n                        //const j = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100 && array[i-1] == 100){\r\n                                array[i] = array[j];\r\n                                array[i-1] = array[j-1];\r\n                                array[j] = test[k];\r\n                                array[j-1] = test[k];\r\n                            }\r\n                            else if(array[i] == 100 && array[i+1] == 100){\r\n                               array[i] = array[j];\r\n                               array[i+1] = array[j+1];\r\n                               array[j] = test[k];\r\n                               array[j+1] = test[k];\r\n                           }\r\n                           else{\r\n                               remainderArraySlot1.push(test[k]);\r\n                           }\r\n\r\n                           for(let x = 0; x < array.length ; x++){\r\n                               if(array[x] == 0){\r\n                                   array[x] = 100;\r\n                               }\r\n                           }\r\n\r\n                    }\r\n                    else if(array[i+1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        \r\n                        if(b < totalRoom){\r\n                            if(array[i][5] != 100 && array[i][5] == test[k][5]){\r\n                                if( array[i+38*b]==100 && array[i + 39*b] == 100){\r\n                                    array[i+38*b] = 0\r\n                                    array[i+39*b] = 0\r\n                                }\r\n                                if(array[i-38*b]==100 && array[i - 39*b] == 100){\r\n                                    array[i-38*b] = 0\r\n                                    array[i-39*b] = 0\r\n                                }\r\n                            }\r\n                        }   \r\n                        b++\r\n\r\n                        //const j = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100 && array[i-1] == 100){\r\n                                array[i] = array[j];\r\n                                array[i-1] = array[j-1];\r\n                                array[j] = test[k];\r\n                                array[j-1] = test[k];\r\n                            }\r\n                            else if(array[i] == 100 && array[i+1] == 100){\r\n                               array[i] = array[j];\r\n                               array[i+1] = array[j+1];\r\n                               array[j] = test[k];\r\n                               array[j+1] = test[k];\r\n                           }\r\n                           else{\r\n                               remainderArraySlot1.push(test[k]);\r\n                           }\r\n                           for(let x = 0; x < array.length ; x++){\r\n                               if(array[x] == 0){\r\n                                   array[x] = 100;\r\n                               }\r\n                           }\r\n                        \r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                }\r\n            }\r\n\r\n             else if(hourMS == 2){\r\n                 const j = Math.floor(Math.random()*(i+1));\r\n                 if(array[i] == 100){\r\n                     if(array[i-1] == 100){\r\n                         array[i] = array[j];\r\n                         array[i-1] = array[j-1];\r\n                         array[j] = test[k];\r\n                         array[j-1] = test[k];\r\n                         slotin2_2_1.push(test[k])\r\n                     }else if(array[i+1] == 100){\r\n                         array[i] = array[j];\r\n                         array[i+1] = array[j+1];\r\n                         array[j] = test[k];\r\n                         array[j+1] = test[k];\r\n                         slotin2_2_2.push(test[k])\r\n                     }\r\n                     else{\r\n                         remainderArray.push(test[k]);\r\n                         slotin0_2_1.push(test[k])\r\n                     }\r\n                 }else{\r\n                     remainderArray.push(test[k]);\r\n                     slotin0_2_2.push(test[k])\r\n                 }\r\n             }\r\n\r\n             else if(hourMS == 3){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        array[j+1] = test[k];\r\n                        slotin3_3_1.push(test[k])\r\n                    }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        insertedData50_Slot2_1.push(test[k])\r\n                        slotin2_3_1.push(test[k])\r\n                    }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        insertedData50_Slot2_1.push(test[k])\r\n                        slotin2_3_1.push(test[k])\r\n                    }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                        array[i] = array[j];\r\n                        array[j] = test[k];\r\n                        remainderArraySlot1.push(test[k])\r\n                        slotin1_3_1.push(test[k])\r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                    slotin0_3_1.push(test[k])\r\n                }\r\n            }\r\n         }\r\n         k++  \r\n     }\r\n \r\n     //fullfill the slot 3\r\n     for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100 && array[x+1] ==100){\r\n             if(k3 < remainderArraySlot1.length){\r\n                 array[x] = remainderArraySlot1[k3]\r\n                 array[x+1] = remainderArraySlot1[k3]\r\n             }\r\n             k3++   \r\n         }\r\n     }\r\n \r\n     //console.log(remainderArray);\r\n     for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k2 < remainderArray.length){\r\n                     array[x] = remainderArray[k2]\r\n                     array[x+1] = remainderArray[k2]\r\n                 }\r\n                 try{\r\n                     let slot2 = remainderArray[k2][10]\r\n                     if(slot2 == 1){\r\n                         insertedData50_Slot2_1.push(remainderArray[k2])\r\n                     }\r\n                     if(slot2 == 2){\r\n                        insertedData50_Slot2_2.push(remainderArray[k2])\r\n                    }\r\n                 }catch{}\r\n             k2++   \r\n         }\r\n     }\r\n \r\n        return array;\r\n    }\r\n \r\n    var AntArrIns50 = AntAlgoInsert50(AntArr50);\r\n    //console.log(AntArrIns50);\r\n \r\n     const slot2Equal1for50= (array) => {\r\n         let k = 0;\r\n         let test2 = []\r\n         //console.log(insertedData50_Slot2_1)\r\n         \r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100){\r\n                 if(k < insertedData50_Slot2_1.length){\r\n                     array[x] = insertedData50_Slot2_1[k]\r\n                 }\r\n             k++   \r\n             }\r\n         }\r\n         //console.log(test2)\r\n         return array;\r\n     }\r\n     let varchec = slot2Equal1for50(AntArr50);\r\n  \r\n \r\n     const slot2Equal2for50 = (array) => {\r\n         let k = 0;\r\n         let test2 = []\r\n         //console.log(insertedData50_Slot2_2)\r\n \r\n        //  for(let x=0; x<filterData50.length;x++){\r\n        //      if(filterData50[x][10] == 2){\r\n        //          insertedData50_Slot2_2.push(filterData50[x]);\r\n        //      }\r\n        //  }\r\n         //console.log(insertedData50_Slot2_2)\r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k < insertedData50_Slot2_2.length){\r\n                     array[x] = insertedData50_Slot2_2[k]\r\n                     array[x+1] = insertedData50_Slot2_2[k]\r\n                 }\r\n             k++   \r\n             }\r\n         }\r\n\r\n         if(array[-1] != undefined){\r\n             insertedData50_Slot2_1.push(array[-1]);\r\n         }else{\r\n\r\n         }\r\n\r\n         return array;\r\n     }\r\n     slot2Equal2for50(AntArr50);\r\n \r\n \r\n    const checkAmountData50 = (array) => {\r\n        let count = 0\r\n        for(let i = 0; i < array.length; i++){\r\n                if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined){\r\n                    count += 1\r\n                }\r\n        }\r\n        return count\r\n    }\r\n    var checkAmount = checkAmountData50(AntArrIns50)\r\n    console.log(AntArrIns50)\r\n    console.log(checkAmount);\r\n\r\n\r\n    const checkAmountData50_0 = (array) => {\r\n        let count = 0\r\n        for(let i = 0; i < array.length; i++){\r\n                if( array[i] == 0 ){\r\n                    count += 1\r\n                }\r\n        }\r\n        return count\r\n    }\r\n    var checkAmount_0 = checkAmountData50_0(AntArrIns50)\r\n    console.log(\"zero counter: \"+checkAmount_0);\r\n\r\n    // console.log(extraData50_Slot2_2)\r\n    // console.log(extraData50_Slot2_1)\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nconst check1Group = (array) => {\r\n   let count =0\r\n   let indexArray = 0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       indexArray = (x * 37)\r\n   }\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       try{\r\n           //for(let x= 1 ; x <= totalRoom ; x++){\r\n            for(let i = 0; i<array.length ; i++){\r\n               indexArray = (x * 37)\r\n               if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 0){\r\n                   try{\r\n                       //if(array[i][6] == array[i+indexArray][6] && array[i+1][6] == array[i+indexArray+1][6] && array[i][5] == array[i+indexArray][5] && array[i+1][5] == array[i+indexArray+1][5]){\r\n                       if(array[i][6] == array[i+indexArray][6] && array[i][5] == array[i+indexArray][5]){\r\n                            try{\r\n                                //console.log(array[i])\r\n                                //console.log(array[i+indexArray])\r\n                                count +=1\r\n                            }catch{}\r\n                       }\r\n                   }catch{}\r\n               }   \r\n           }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n}\r\n\r\nvar checkH1_50 = check1Group(AntArr50)\r\nconsole.log(\"HS1 50: \" + checkH1_50);\r\n\r\nconst check1Teacher = (array) => {\r\n   let count =0\r\n   let indexArray = 0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n    indexArray = (x * 38)\r\n       try{\r\n        for(let i = 1; i<array.length ; i++){\r\n               if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 0 ){\r\n                   try{\r\n                       if(array[i][5] == array[i+indexArray][5] ){\r\n                       //if(array[i][5] == array[i+indexArray][5] && array[i+1][5] == array[i+indexArray+1][5]){\r\n                        //    console.log(i)\r\n                        //    console.log(array[i])\r\n                        //    console.log(i+indexArray)\r\n                        //    console.log(array[i+indexArray])\r\n                           count +=1\r\n                        }\r\n                        // if(array[i][5] == array[i+indexArray][5] && array[i-1][5] == array[i+indexArray-1][5]){\r\n                        //     count +=1\r\n                        //  }\r\n                   }catch{}\r\n               }    \r\n           }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n\r\n}\r\n\r\nvar checkH5_50 = check1Teacher(AntArr50)\r\nconsole.log(\"HS5 50: \" + checkH5_50);\r\n// console.log(\"H5 All: \"+checkH5_ALL)\r\n// console.log(\"H5 Elective: \"+checkH5_ALLElective)\r\n}\r\nfor(let i=1 ; i <= 1 ; i++){\r\n    console.log(\"iteration: \" + i);\r\n    antSystem()\r\n}\r\n\r\n// -------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n        }\r\n    return(\r\n        <React.Fragment>\r\n            <h1>\r\n                Generate Schedule Page\r\n            </h1>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default ArraySchedule;\r\n\r\n\r\n//result[i][j]=Course.splice(Math.floor(Math.random()* Course.length),1)[0] // create random placement of Course Value\r\n//const Schedule = new Array(10).fill(Array(5).fill(null));\r\n//console.log(Schedule);\r\n// const Course = [['TE1',4],['TE1',4],['TE1',4],['TE1',3],['TE1',4],['TE1',2],['TE1',4],['TE1',4],['TE1',4],['TE1',3]];\r\n//const Course = [['TE1',2],['TE2',2],['TE3',3],['TE4',4],['TE5',3],['TE6',4],['TE7',4],['TE8',2],['TE9',4]];\r\n//const Course = ['TE1','TE2','TE3','TE4','TE5','TE6','TE7','TE8','TE9'];"]},"metadata":{},"sourceType":"module"}