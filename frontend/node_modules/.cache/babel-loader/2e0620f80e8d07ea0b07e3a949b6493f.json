{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acit\\\\Desktop\\\\FYP Code\\\\FYP Code\\\\frontend\\\\src\\\\components\\\\RandomSchedule\\\\arraySchedule.js\";\nimport { find, forEach, indexOf } from \"lodash\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport _ from 'lodash';\n\nconst ArraySchedule = props => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedFile, setLoaadedFile] = useState(false);\n  const [roomData, setroomData] = useState();\n  const [courseData, setcourseData] = useState(); // const [Keys, setKeys] = useState();\n  //const [uploadedData, setUploadedData] = useState([]);\n  //console.log(\"props dataset:\"+ props.test)\n\n  const userId = useParams().userId;\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        // const response = await fetch('http://localhost:5000/api/user/');\n        //const response = await fetch('http://localhost:5000/api/files/users/624278b29a90a9077e2f65e4');\n        const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875'); //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\n        //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\n\n        const responsedata = await response.json();\n        let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset); // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\n\n        const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Room'], Dataset['Size']]); //Extract Room\n\n        setroomData([ertRoom]);\n        const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'], Dataset['Course Code'], Dataset['Course Name'], Dataset['Year'], Dataset['Semester'], Dataset['Lecturer'], Dataset['Group'], Dataset['HMS'], Dataset['Programme Code'], Dataset['Slot1'], Dataset['Slot2']]); //Extract Enrollment Quota\n\n        setcourseData([ertCourse]); // const ertCCode = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => Dataset['Course Code']); //Extract Course Code\n        // const ertCName = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => Dataset['Course Name']); //Extract Course Name\n        // const ertCHours = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => Dataset['Credit Hours']); //Extract Credit Hours\n        // const ertYear = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => Dataset['Year']); //Extract Year\n        // const ertSemester = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => Dataset['Semester']); //Extract Semester\n        // const ertProCode = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => Dataset['Program Code']); //Extract Lecture Code\n        // const ertLecturer = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => Dataset['Lecturer']); //Extract Lecturer\n        // const ertGroup = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => Dataset['Group']); //Extract Group\n        // const ertHMS = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => Dataset['HMS']); //Extract Hours Meeting Student\n        // const ertProgram = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => Dataset['Programme Code']); //Extract Programme Code\n        // const ertTtlStudent = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => Dataset['Enrollment Quota']); //Extract Enrollment Quota\n\n        if (!response.ok) {\n          throw new Error(responsedata.message);\n        }\n\n        setLoaadedFile(stringifyData);\n        setIsLoading(true);\n      } catch (err) {\n        console.log(err.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, [userId]);\n\n  if (!isLoading && loadedFile) {\n    const testData = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const EnrollmentQuota = [];\n    const CourseCode = [];\n    const HMS = [];\n    const roomName = [];\n    const roomSize = [];\n    const filterData50 = [];\n    const filterData100 = [];\n    const filterData200 = [];\n    const filterData500 = [];\n    const dupeData = [];\n    const room = [];\n    room.push(roomData[0]);\n    let hardConstraintViolated = 0;\n    let softConstraintViolated = 0; //console.log(courseData[0][0][1]);\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      let enrollment = [courseData[0][i][0]];\n      let code = [courseData[0][i][1]];\n      let hms = [courseData[0][i][7]];\n      enrollment.reduce(function (results, item, index, array) {\n        results[index] = item;\n        EnrollmentQuota.push(item); //console.log(results)\n      }, {});\n      code.reduce(function (results, item, index, array) {\n        results[index] = item;\n        CourseCode.push(item); //console.log(results)\n      }, {});\n      hms.reduce(function (results, item, index, array) {\n        results[index] = item;\n        HMS.push(item); //console.log(results)\n      }, {});\n    }\n\n    for (let i = 0; i < roomData[0].length; i++) {\n      let name = [roomData[0][i][0]];\n      let size = [roomData[0][i][1]];\n      name.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomName.push(item); //console.log(results)\n      }, {});\n      size.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomSize.push(item); //console.log(results)\n      }, {});\n    }\n\n    const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      if (courseData[0][i][0] < 50) {\n        //for(let j = 0; j <courseData[0][i][7]; j++){\n        filterData50.push(courseData[0][i]); //}\n      }\n\n      if (courseData[0][i][0] >= 50 && courseData[0][i][0] < 100) {\n        //for(let j = 0; j <courseData[0][i][7]; j++){\n        filterData100.push(courseData[0][i]); //}\n      }\n\n      if (courseData[0][i][0] >= 100 && courseData[0][i][0] < 200) {\n        //for(let j = 0; j <courseData[0][i][7]; j++){\n        filterData200.push(courseData[0][i]); //}\n      }\n\n      if (courseData[0][i][0] >= 200 && courseData[0][i][0] < 500) {\n        //for(let j = 0; j <courseData[0][i][7]; j++){\n        filterData500.push(courseData[0][i]); //}\n      } //filterData.push(courseData[0][i]);\n\n    }\n\n    let roomUnder50 = [];\n    let roomUnder100 = [];\n    let roomUnder200 = [];\n    let roomUnder500 = [];\n\n    const checkNumberofRoom = () => {\n      for (let i = 0; i < roomData[0].length; i++) {\n        let room = roomData[0][i][1]; //console.log(roomData[0][i][1]);\n\n        if (room < 50) {\n          roomUnder50.push(room);\n        } else if (room > 50 && room < 100) {\n          roomUnder100.push(room);\n        } else if (room > 100 && room < 200) {\n          roomUnder200.push(room);\n        } else if (room > 200) {\n          roomUnder500.push(room);\n        }\n      }\n    };\n\n    checkNumberofRoom();\n\n    const createArray = data => {\n      var result = [];\n\n      for (let i = 0; i < data; i++) {\n        result[i] = [];\n      }\n\n      return result;\n    };\n\n    let DataArray50 = roomUnder50.length * 38;\n    let DataArray100 = roomUnder100.length * 38;\n    let DataArray200 = roomUnder200.length * 38;\n    let DataArray500 = roomUnder500.length * 38;\n    var ground50Array = createArray(DataArray50);\n    var ground100Array = createArray(DataArray100);\n    var ground200Array = createArray(DataArray200);\n    var ground500Array = createArray(DataArray500);\n    let Column50 = roomUnder50.length;\n    let Column100 = roomUnder100.length;\n    let Column200 = roomUnder200.length;\n    let Column500 = roomUnder500.length;\n    let Row = 38; //create 1d array for dataset 50\n\n    const array1D50 = data => {\n      var result = [];\n\n      for (let i = 0; i < data; i++) {\n        result[i] = 100;\n      }\n\n      return result;\n    };\n\n    var AntArr50 = array1D50(DataArray50);\n    console.log(AntArr50); //----------------------------------------------------------------------------------------------------------------------------------------\n    // Data is more than or equal to 50 but less than 100\n    //create 1d array for dataset 100\n\n    const array1D100 = data => {\n      var result = [];\n\n      for (let i = 0; i < data; i++) {\n        result[i] = 100;\n      }\n\n      return result;\n    };\n\n    var AntArr100 = array1D100(DataArray100); //console.log(AntArr200);\n\n    const AntAlgoInsert100 = array => {\n      let test = [];\n      let k = 0;\n\n      for (let x = 0; x < filterData100.length; x++) {\n        test.push(filterData100[x]);\n      }\n\n      for (let i = array.length - 1; i > 0; i--) {\n        if (k < test.length) {\n          let slot1 = test[k][9];\n\n          if (slot1 == 2) {\n            const j = Math.floor(Math.random() * (i + 1));\n\n            if (array[i] == 100 && array[i + 1] == 100) {\n              array[i] = array[j];\n              array[i + 1] = array[j + 1];\n              array[j] = test[k];\n              array[j + 1] = test[k];\n            } else if (array[i] != 100 || array[i + 1] != 100) {\n              test.push(test[k]);\n            }\n          }\n        }\n\n        k++;\n      }\n\n      return array;\n    };\n\n    var AntArrIns100 = AntAlgoInsert100(AntArr100);\n\n    const slot2Equal2for100 = array => {\n      let test = [];\n      let k = 0;\n\n      for (let x = 0; x < filterData100.length; x++) {\n        test.push(filterData100[x]);\n      }\n\n      for (let i = array.length - 1; i > 0; i--) {\n        if (k < test.length) {\n          let slot2 = test[k][10];\n\n          if (slot2 == 2) {\n            const j = Math.floor(Math.random() * (i + 1));\n\n            if (array[i - 1] == 100 && array[i + 2] == 100) {\n              array[i - 1] = 50;\n              array[i + 2] = 50;\n            }\n\n            if (array[i] == 100 && array[i + 1] == 100) {\n              array[i] = array[j];\n              array[i + 1] = array[j + 1];\n              array[j] = test[k];\n              array[j + 1] = test[k];\n            } else if (array[i] != 100 || array[i + 1] != 100) {\n              test.push(test[k]);\n            }\n\n            if (array[i - 1] == 50 && array[i + 2] == 50) {\n              array[i - 1] = 100;\n              array[i + 2] = 100;\n            }\n          }\n        }\n\n        k++;\n      }\n\n      return array;\n    };\n\n    slot2Equal2for100(AntArr100);\n\n    const Slot2Equal1for100 = array => {\n      let test = [];\n      let k = 0;\n\n      for (let x = 0; x < filterData100.length; x++) {\n        test.push(filterData100[x]);\n      }\n\n      for (let i = array.length - 1; i > 0; i--) {\n        if (k < test.length) {\n          let slot2 = test[k][10];\n\n          if (slot2 == 1) {\n            const j = Math.floor(Math.random() * (i + 1));\n\n            if (array[i - 1] == 100 && array[i + 2] == 100) {\n              array[i - 1] = 50;\n              array[i + 2] = 50;\n            }\n\n            if (array[i] == 100 || array[i] == 50) {\n              array[i] = array[j];\n              array[j] = test[k];\n            } else if (array[i] != 100 || array[i] != 50) {\n              test.push(test[k]);\n            }\n\n            if (array[i - 1] == 50 && array[i + 2] == 50) {\n              array[i - 1] = 100;\n              array[i + 2] = 100;\n            }\n          }\n        }\n\n        k++;\n      }\n\n      return array;\n    };\n\n    var Slot2_1_100 = Slot2Equal1for100(AntArr100);\n    console.log(Slot2_1_100);\n\n    const checkAmountData100 = array => {\n      let count = 0;\n\n      for (let i = 0; i < array.length; i++) {\n        if (array[i] != 100 && array[i] != 50) {\n          count += 1;\n        }\n      }\n\n      return count;\n    };\n\n    var checkAmount = checkAmountData200(AntArrIns100);\n    console.log(checkAmount); //----------------------------------------------------------------------------------------------------------------------------------------\n    //----------------------------------------------------------------------------------------------------------------------------------------\n    // Data is more than or equal to 100 but less than 200\n    //create 1d array for dataset 200\n\n    const array1D200 = data => {\n      var result = [];\n\n      for (let i = 0; i < data; i++) {\n        result[i] = 100;\n      }\n\n      return result;\n    };\n\n    var AntArr200 = array1D200(DataArray200); //console.log(AntArr200);\n\n    const AntAlgoInsert200 = array => {\n      let test = [];\n      let k = 0;\n\n      for (let x = 0; x < filterData200.length; x++) {\n        test.push(filterData200[x]);\n      }\n\n      for (let i = array.length - 1; i > 0; i--) {\n        if (k < test.length) {\n          let slot1 = test[k][9];\n\n          if (slot1 == 2) {\n            const j = Math.floor(Math.random() * (i + 1));\n\n            if (array[i] == 100 && array[i + 1] == 100) {\n              array[i] = array[j];\n              array[i + 1] = array[j + 1];\n              array[j] = test[k];\n              array[j + 1] = test[k];\n            } else if (array[i] != 100 || array[i + 1] != 100) {\n              test.push(test[k]);\n            }\n          }\n        }\n\n        k++;\n      }\n\n      return array;\n    };\n\n    var AntArrIns200 = AntAlgoInsert200(AntArr200);\n\n    const slot2Equal2for200 = array => {\n      let test = [];\n      let k = 0;\n\n      for (let x = 0; x < filterData200.length; x++) {\n        test.push(filterData200[x]);\n      }\n\n      for (let i = array.length - 1; i > 0; i--) {\n        if (k < test.length) {\n          let slot2 = test[k][10];\n\n          if (slot2 == 2) {\n            const j = Math.floor(Math.random() * (i + 1));\n\n            if (array[i - 1] == 100 && array[i + 2] == 100) {\n              array[i - 1] = 50;\n              array[i + 2] = 50;\n            }\n\n            if (array[i] == 100 && array[i + 1] == 100) {\n              array[i] = array[j];\n              array[i + 1] = array[j + 1];\n              array[j] = test[k];\n              array[j + 1] = test[k];\n            } else if (array[i] != 100 || array[i + 1] != 100) {\n              test.push(test[k]);\n            }\n\n            if (array[i - 1] == 50 && array[i + 2] == 50) {\n              array[i - 1] = 100;\n              array[i + 2] = 100;\n            }\n          }\n        }\n\n        k++;\n      }\n\n      return array;\n    };\n\n    slot2Equal2for200(AntArr200);\n\n    const Slot2Equal1for200 = array => {\n      let test = [];\n      let k = 0;\n\n      for (let x = 0; x < filterData200.length; x++) {\n        test.push(filterData200[x]);\n      }\n\n      for (let i = array.length - 1; i > 0; i--) {\n        if (k < test.length) {\n          let slot2 = test[k][10];\n\n          if (slot2 == 1) {\n            const j = Math.floor(Math.random() * (i + 1));\n\n            if (array[i - 1] == 100 && array[i + 2] == 100) {\n              array[i - 1] = 50;\n              array[i + 2] = 50;\n            }\n\n            if (array[i] == 100 || array[i] == 50) {\n              array[i] = array[j];\n              array[j] = test[k];\n            } else if (array[i] != 100 || array[i] != 50) {\n              test.push(test[k]);\n            }\n\n            if (array[i - 1] == 50 && array[i + 2] == 50) {\n              array[i - 1] = 100;\n              array[i + 2] = 100;\n            }\n          }\n        }\n\n        k++;\n      }\n\n      return array;\n    };\n\n    var Slot2_1_200 = Slot2Equal1for200(AntArr200);\n    console.log(Slot2_1_200);\n\n    const checkAmountData200 = array => {\n      let count = 0;\n\n      for (let i = 0; i < array.length; i++) {\n        if (array[i] != 100 && array[i] != 50) {\n          count += 1;\n        }\n      }\n\n      return count;\n    };\n\n    var checkAmount = checkAmountData200(AntArrIns200);\n    console.log(checkAmount); //----------------------------------------------------------------------------------------------------------------------------------------\n    //----------------------------------------------------------------------------------------------------------------------------------------\n    // Data is more than or equal to 200 \n    //create 1d array for dataset 500\n\n    const array1D500 = data => {\n      var result = [];\n\n      for (let i = 0; i < data; i++) {\n        result[i] = 100;\n      }\n\n      return result;\n    };\n\n    var AntArr500 = array1D500(DataArray500); //console.log(AntArr500);\n\n    const AntAlgoInsert500 = array => {\n      let test = [];\n      let k = 0;\n\n      for (let x = 0; x < filterData500.length; x++) {\n        test.push(filterData500[x]);\n      }\n\n      for (let i = array.length - 1; i > 0; i--) {\n        if (k < test.length) {\n          let slot1 = test[k][9];\n\n          if (slot1 == 2) {\n            const j = Math.floor(Math.random() * (i + 1));\n\n            if (array[i] == 100 && array[i + 1] == 100) {\n              array[i] = array[j];\n              array[i + 1] = array[j + 1];\n              array[j] = test[k];\n              array[j + 1] = test[k];\n            } else if (array[i] != 100 || array[i + 1] != 100) {\n              test.push(test[k]);\n            }\n          }\n        }\n\n        k++;\n      }\n\n      return array;\n    };\n\n    var AntArrIns500 = AntAlgoInsert500(AntArr500);\n\n    const slot2Equal2for500 = array => {\n      let test = [];\n      let k = 0;\n\n      for (let x = 0; x < filterData500.length; x++) {\n        test.push(filterData500[x]);\n      }\n\n      for (let i = array.length - 1; i > 0; i--) {\n        if (k < test.length) {\n          let slot2 = test[k][10];\n\n          if (slot2 == 2) {\n            const j = Math.floor(Math.random() * (i + 1));\n\n            if (array[i - 1] == 100 && array[i + 2] == 100) {\n              array[i - 1] = 50;\n              array[i + 2] = 50;\n            }\n\n            if (array[i] == 100 && array[i + 1] == 100) {\n              array[i] = array[j];\n              array[i + 1] = array[j + 1];\n              array[j] = test[k];\n              array[j + 1] = test[k];\n            } else if (array[i] != 100 || array[i + 1] != 100) {\n              test.push(test[k]);\n            }\n\n            if (array[i - 1] == 50 && array[i + 2] == 50) {\n              array[i - 1] = 100;\n              array[i + 2] = 100;\n            }\n          }\n        }\n\n        k++;\n      }\n\n      return array;\n    };\n\n    slot2Equal2for500(AntArr500);\n\n    const slot2Equal1for500 = array => {\n      let test = [];\n      let k = 0;\n\n      for (let x = 0; x < filterData500.length; x++) {\n        test.push(filterData500[x]);\n      }\n\n      for (let i = array.length - 1; i > 0; i--) {\n        if (k < test.length) {\n          let slot2 = test[k][10];\n\n          if (slot2 == 1) {\n            const j = Math.floor(Math.random() * (i + 1));\n\n            if (array[i - 1] == 100 && array[i + 2] == 100) {\n              array[i - 1] = 50;\n              array[i + 2] = 50;\n            }\n\n            if (array[i] == 100 || array[i] == 50) {\n              array[i] = array[j];\n              array[j] = test[k];\n            } else if (array[i] != 100 || array[i] != 50) {\n              test.push(test[k]);\n            }\n\n            if (array[i - 1] == 50 && array[i + 2] == 50) {\n              array[i - 1] = 100;\n              array[i + 2] = 100;\n            }\n          }\n        }\n\n        k++;\n      }\n\n      return array;\n    };\n\n    var Slot2_1_500 = slot2Equal1for500(AntArr500);\n    console.log(Slot2_1_500);\n\n    const checkAmountData500 = array => {\n      let count = 0;\n\n      for (let i = 0; i < array.length; i++) {\n        if (array[i] != 100 && array[i] != 50) {\n          count += 1;\n        }\n      }\n\n      return count;\n    };\n\n    var checkAmount = checkAmountData500(AntArrIns500);\n    console.log(checkAmount); //----------------------------------------------------------------------------------------------------------------------------------------\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default ArraySchedule; //result[i][j]=Course.splice(Math.floor(Math.random()* Course.length),1)[0] // create random placement of Course Value\n//const Schedule = new Array(10).fill(Array(5).fill(null));\n//console.log(Schedule);\n// const Course = [['TE1',4],['TE1',4],['TE1',4],['TE1',3],['TE1',4],['TE1',2],['TE1',4],['TE1',4],['TE1',4],['TE1',3]];\n//const Course = [['TE1',2],['TE2',2],['TE3',3],['TE4',4],['TE5',3],['TE6',4],['TE7',4],['TE8',2],['TE9',4]];\n//const Course = ['TE1','TE2','TE3','TE4','TE5','TE6','TE7','TE8','TE9'];","map":{"version":3,"sources":["C:/Users/acit/Desktop/FYP Code/FYP Code/frontend/src/components/RandomSchedule/arraySchedule.js"],"names":["find","forEach","indexOf","React","useEffect","useState","useContext","useParams","_","ArraySchedule","props","isLoading","setIsLoading","loadedFile","setLoaadedFile","roomData","setroomData","courseData","setcourseData","userId","sendRequest","response","fetch","responsedata","json","stringifyData","JSON","stringify","userWithFiles","Dataset","ertRoom","map","ertCourse","ok","Error","message","err","console","log","testData","EnrollmentQuota","CourseCode","HMS","roomName","roomSize","filterData50","filterData100","filterData200","filterData500","dupeData","room","push","hardConstraintViolated","softConstraintViolated","i","length","enrollment","code","hms","reduce","results","item","index","array","name","size","notDuplicatesRoom","filter","roomUnder50","roomUnder100","roomUnder200","roomUnder500","checkNumberofRoom","createArray","data","result","DataArray50","DataArray100","DataArray200","DataArray500","ground50Array","ground100Array","ground200Array","ground500Array","Column50","Column100","Column200","Column500","Row","array1D50","AntArr50","array1D100","AntArr100","AntAlgoInsert100","test","k","x","slot1","j","Math","floor","random","AntArrIns100","slot2Equal2for100","slot2","Slot2Equal1for100","Slot2_1_100","checkAmountData100","count","checkAmount","checkAmountData200","array1D200","AntArr200","AntAlgoInsert200","AntArrIns200","slot2Equal2for200","Slot2Equal1for200","Slot2_1_200","array1D500","AntArr500","AntAlgoInsert500","AntArrIns500","slot2Equal2for500","slot2Equal1for500","Slot2_1_500","checkAmountData500"],"mappings":"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","sourcesContent":["import { find, forEach, indexOf } from \"lodash\";\r\nimport React,{ useEffect,useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport _ from 'lodash';\r\n\r\n\r\nconst ArraySchedule = (props) => {\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [loadedFile, setLoaadedFile] = useState(false);\r\n    const [roomData, setroomData] = useState();\r\n    const [courseData, setcourseData] = useState();\r\n    // const [Keys, setKeys] = useState();\r\n    //const [uploadedData, setUploadedData] = useState([]);\r\n    //console.log(\"props dataset:\"+ props.test)\r\n\r\n    const userId = useParams().userId;\r\n    useEffect(()=>{\r\n        const sendRequest = async () =>{\r\n            setIsLoading(true);\r\n            try{\r\n            // const response = await fetch('http://localhost:5000/api/user/');\r\n            //const response = await fetch('http://localhost:5000/api/files/users/624278b29a90a9077e2f65e4');\r\n            const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875');\r\n            //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\r\n            //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\r\n            const responsedata = await response.json();\r\n            let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset);\r\n\r\n            // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\r\n            const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset =>[Dataset['Room'],Dataset['Size']]); //Extract Room\r\n            setroomData([ertRoom]);\r\n\r\n            const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'],Dataset['Course Code'],Dataset['Course Name'],Dataset['Year'],Dataset['Semester'],Dataset['Lecturer'],Dataset['Group'],Dataset['HMS'],Dataset['Programme Code'],Dataset['Slot1'],Dataset['Slot2']]); //Extract Enrollment Quota\r\n            setcourseData([ertCourse]);\r\n\r\n            // const ertCCode = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => Dataset['Course Code']); //Extract Course Code\r\n            // const ertCName = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => Dataset['Course Name']); //Extract Course Name\r\n            // const ertCHours = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => Dataset['Credit Hours']); //Extract Credit Hours\r\n            // const ertYear = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => Dataset['Year']); //Extract Year\r\n            // const ertSemester = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => Dataset['Semester']); //Extract Semester\r\n            // const ertProCode = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => Dataset['Program Code']); //Extract Lecture Code\r\n            // const ertLecturer = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => Dataset['Lecturer']); //Extract Lecturer\r\n            // const ertGroup = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => Dataset['Group']); //Extract Group\r\n            // const ertHMS = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => Dataset['HMS']); //Extract Hours Meeting Student\r\n            // const ertProgram = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => Dataset['Programme Code']); //Extract Programme Code\r\n            // const ertTtlStudent = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => Dataset['Enrollment Quota']); //Extract Enrollment Quota\r\n            if (!response.ok){\r\n                throw new Error(responsedata.message);\r\n            }\r\n            setLoaadedFile(stringifyData);\r\n            setIsLoading(true);\r\n            }catch(err){\r\n                console.log(err.message);\r\n            }\r\n            setIsLoading(false);\r\n            \r\n        };\r\n        sendRequest();\r\n    },[userId]);\r\n\r\n        if(!isLoading && loadedFile){\r\n            const testData = [1,2,3,4,5,6,7,8,9];\r\n            const EnrollmentQuota = [];\r\n            const CourseCode = [];\r\n            const HMS = [];\r\n            const roomName = [];\r\n            const roomSize = [];\r\n            const filterData50  = [];\r\n            const filterData100  = [];\r\n            const filterData200  = [];\r\n            const filterData500  = [];\r\n            const dupeData  = [];\r\n            const room = []\r\n            room.push(roomData[0])\r\n            \r\n            let hardConstraintViolated = 0;\r\n            let softConstraintViolated = 0;\r\n            //console.log(courseData[0][0][1]);\r\n            for(let i = 0; i <courseData[0].length; i++){\r\n                let enrollment = [courseData[0][i][0]];\r\n                let code = [courseData[0][i][1]];\r\n                let hms = [courseData[0][i][7]];\r\n                enrollment.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    EnrollmentQuota.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                code.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    CourseCode.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                hms.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    HMS.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n            }\r\n\r\n            for(let i = 0; i <roomData[0].length; i++){\r\n                let name = [roomData[0][i][0]];\r\n                let size = [roomData[0][i][1]];\r\n                name.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomName.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                size.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomSize.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n            }\r\n \r\n            \r\n            const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\r\n\r\n\r\n                for(let i = 0; i< courseData[0].length;i++){\r\n                    if (courseData[0][i][0] < 50) {\r\n                        //for(let j = 0; j <courseData[0][i][7]; j++){\r\n                            filterData50.push(courseData[0][i]);\r\n                        //}\r\n                    }\r\n                    if (courseData[0][i][0] >= 50 && courseData[0][i][0] < 100) {\r\n                        //for(let j = 0; j <courseData[0][i][7]; j++){\r\n                            filterData100.push(courseData[0][i]);\r\n                        //}\r\n                    }\r\n                    if (courseData[0][i][0] >= 100 && courseData[0][i][0] < 200) {\r\n                        //for(let j = 0; j <courseData[0][i][7]; j++){\r\n                            filterData200.push(courseData[0][i]);\r\n                        //}\r\n                    }\r\n                    if (courseData[0][i][0] >= 200 && courseData[0][i][0] < 500) {\r\n                        //for(let j = 0; j <courseData[0][i][7]; j++){\r\n                            filterData500.push(courseData[0][i]);\r\n                        //}\r\n                    }\r\n                    //filterData.push(courseData[0][i]);\r\n                }\r\n\r\n\r\n            let roomUnder50 = []\r\n            let roomUnder100 = []\r\n            let roomUnder200 = []\r\n            let roomUnder500 = []\r\n            const checkNumberofRoom = () => {\r\n                for(let i = 0; i < roomData[0].length; i++){\r\n                    let room = roomData[0][i][1]\r\n                    //console.log(roomData[0][i][1]);\r\n                    if(room < 50){\r\n                        roomUnder50.push(room)\r\n                    }else if(room > 50 && room < 100){\r\n                        roomUnder100.push(room)\r\n\r\n                    }else if(room > 100 && room < 200){\r\n                        roomUnder200.push(room)\r\n\r\n                    }else if(room > 200){\r\n                        roomUnder500.push(room)\r\n                    }\r\n                }\r\n            }\r\n            checkNumberofRoom();\r\n\r\n\r\n            const createArray = (data) => {\r\n                var result = []\r\n\r\n                    for(let i = 0; i<data; i++){\r\n                        result[i] = []\r\n                    }\r\n                return result;\r\n            }\r\n\r\n            let DataArray50 = roomUnder50.length * 38;\r\n            let DataArray100 = roomUnder100.length * 38;\r\n            let DataArray200 = roomUnder200.length * 38;\r\n            let DataArray500 = roomUnder500.length * 38;\r\n\r\n            var ground50Array = createArray(DataArray50);\r\n            var ground100Array = createArray(DataArray100);\r\n            var ground200Array = createArray(DataArray200);\r\n            var ground500Array = createArray(DataArray500);\r\n\r\n\r\n            let Column50 = roomUnder50.length\r\n            let Column100 = roomUnder100.length\r\n            let Column200 = roomUnder200.length\r\n            let Column500 = roomUnder500.length\r\n            let Row = 38\r\n\r\n\r\n            //create 1d array for dataset 50\r\n            const array1D50 = (data) => {\r\n                var result = []\r\n\r\n                for(let i = 0; i< data; i++){\r\n                    result[i]= 100;\r\n                }\r\n                return result;\r\n            }\r\n            var AntArr50 = array1D50(DataArray50);\r\n            console.log(AntArr50);\r\n\r\n\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 50 but less than 100\r\n\r\n             //create 1d array for dataset 100\r\n             const array1D100 = (data) => {\r\n                var result = []\r\n\r\n                for(let i = 0; i< data; i++){\r\n                    result[i]= 100;\r\n                }\r\n                return result;\r\n            }\r\n            var AntArr100 = array1D100(DataArray100);\r\n            //console.log(AntArr200);\r\n\r\n\r\n            const AntAlgoInsert100 = (array) => {\r\n                let test = []\r\n                let k = 0;\r\n                for(let x=0; x<filterData100.length;x++){\r\n                    test.push(filterData100[x]);\r\n                }\r\n                for(let i = array.length-1;i>0;i--){\r\n                        if(k < test.length){\r\n                            let slot1 = test[k][9]\r\n                            if(slot1 == 2){\r\n                                    const j = Math.floor(Math.random()*(i+1));\r\n                                    if(array[i] == 100 && array[i+1] == 100){\r\n                                        array[i] = array[j];\r\n                                        array[i+1] = array[j+1];\r\n                                        array[j] = test[k];\r\n                                        array[j+1] = test[k];\r\n                                    }   \r\n                                    else if(array[i]!=100 || array[i+1] != 100){\r\n                                        test.push(test[k]);\r\n                                    }                      \r\n                            }\r\n                            \r\n                        }\r\n                        k++                        \r\n                }\r\n\r\n                return array;\r\n            }\r\n            var AntArrIns100 = AntAlgoInsert100(AntArr100);\r\n\r\n            const slot2Equal2for100 = (array) => {\r\n                let test = []\r\n                let k = 0;\r\n                for(let x=0; x<filterData100.length;x++){\r\n                    test.push(filterData100[x]);\r\n                }\r\n                for(let i = array.length-1;i>0;i--){\r\n                        if(k < test.length){\r\n                            let slot2 = test[k][10]\r\n                            if(slot2 == 2){\r\n                                    const j = Math.floor(Math.random()*(i+1));\r\n                                    if(array[i-1] == 100 && array[i+2] == 100 ){\r\n                                        array[i-1] = 50;\r\n                                        array[i+2] = 50;\r\n                                    }\r\n                                    if(array[i] == 100 && array[i+1] == 100){\r\n                                        array[i] = array[j];\r\n                                        array[i+1] = array[j+1];\r\n                                        array[j] = test[k];\r\n                                        array[j+1] = test[k];\r\n                                    }   \r\n                                    else if(array[i]!=100 || array[i+1] != 100){\r\n                                        test.push(test[k]);\r\n                                    }\r\n                                    \r\n                                    if(array[i-1] == 50 && array[i+2] == 50 ){\r\n                                        array[i-1] = 100;\r\n                                        array[i+2] = 100;\r\n                                    }         \r\n                            }\r\n                            \r\n                        }\r\n                        k++                        \r\n                }\r\n                return array;\r\n            }\r\n            slot2Equal2for100(AntArr100);\r\n\r\n            const Slot2Equal1for100 = (array) => {\r\n                let test = []\r\n                let k = 0;\r\n                for(let x=0; x<filterData100.length;x++){\r\n                    test.push(filterData100[x]);\r\n                }\r\n                for(let i = array.length-1;i>0;i--){\r\n                        if(k < test.length){\r\n                            let slot2 = test[k][10]\r\n                            if(slot2 == 1){\r\n                                    const j = Math.floor(Math.random()*(i+1));\r\n                                    if(array[i-1] == 100 && array[i+2] == 100 ){\r\n                                        array[i-1] = 50;\r\n                                        array[i+2] = 50;\r\n                                    }\r\n                                    if(array[i] == 100 || array[i] == 50){\r\n                                        array[i] = array[j];\r\n                                        array[j] = test[k];\r\n                                    }   \r\n                                    else if(array[i]!=100 || array[i] != 50){\r\n                                        test.push(test[k]);\r\n                                    }\r\n                                    if(array[i-1] == 50 && array[i+2] == 50 ){\r\n                                        array[i-1] = 100;\r\n                                        array[i+2] = 100;\r\n                                    }                  \r\n                            }\r\n                            \r\n                        }\r\n                        k++                        \r\n                }\r\n                return array;\r\n            }\r\n\r\n            var Slot2_1_100 = Slot2Equal1for100(AntArr100);\r\n            console.log(Slot2_1_100);\r\n\r\n            const checkAmountData100 = (array) => {\r\n                let count = 0\r\n                for(let i = 0; i < array.length; i++){\r\n                        if(array[i] != 100 && array[i] !=50){\r\n                            count += 1\r\n                        }\r\n                }\r\n                return count\r\n            }\r\n            var checkAmount = checkAmountData200(AntArrIns100)\r\n            console.log(checkAmount);\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 100 but less than 200\r\n\r\n             //create 1d array for dataset 200\r\n             const array1D200 = (data) => {\r\n                var result = []\r\n\r\n                for(let i = 0; i< data; i++){\r\n                    result[i]= 100;\r\n                }\r\n                return result;\r\n            }\r\n            var AntArr200 = array1D200(DataArray200);\r\n            //console.log(AntArr200);\r\n\r\n\r\n            const AntAlgoInsert200 = (array) => {\r\n                let test = []\r\n                let k = 0;\r\n                for(let x=0; x<filterData200.length;x++){\r\n                    test.push(filterData200[x]);\r\n                }\r\n                for(let i = array.length-1;i>0;i--){\r\n                        if(k < test.length){\r\n                            let slot1 = test[k][9]\r\n                            if(slot1 == 2){\r\n                                    const j = Math.floor(Math.random()*(i+1));\r\n                                    if(array[i] == 100 && array[i+1] == 100){\r\n                                        array[i] = array[j];\r\n                                        array[i+1] = array[j+1];\r\n                                        array[j] = test[k];\r\n                                        array[j+1] = test[k];\r\n                                    }   \r\n                                    else if(array[i]!=100 || array[i+1] != 100){\r\n                                        test.push(test[k]);\r\n                                    }                      \r\n                            }\r\n                            \r\n                        }\r\n                        k++                        \r\n                }\r\n\r\n                return array;\r\n            }\r\n            var AntArrIns200 = AntAlgoInsert200(AntArr200);\r\n\r\n            const slot2Equal2for200 = (array) => {\r\n                let test = []\r\n                let k = 0;\r\n                for(let x=0; x<filterData200.length;x++){\r\n                    test.push(filterData200[x]);\r\n                }\r\n                for(let i = array.length-1;i>0;i--){\r\n                        if(k < test.length){\r\n                            let slot2 = test[k][10]\r\n                            if(slot2 == 2){\r\n                                    const j = Math.floor(Math.random()*(i+1));\r\n                                    if(array[i-1] == 100 && array[i+2] == 100 ){\r\n                                        array[i-1] = 50;\r\n                                        array[i+2] = 50;\r\n                                    }\r\n                                    if(array[i] == 100 && array[i+1] == 100){\r\n                                        array[i] = array[j];\r\n                                        array[i+1] = array[j+1];\r\n                                        array[j] = test[k];\r\n                                        array[j+1] = test[k];\r\n                                    }   \r\n                                    else if(array[i]!=100 || array[i+1] != 100){\r\n                                        test.push(test[k]);\r\n                                    }\r\n                                    \r\n                                    if(array[i-1] == 50 && array[i+2] == 50 ){\r\n                                        array[i-1] = 100;\r\n                                        array[i+2] = 100;\r\n                                    }         \r\n                            }\r\n                            \r\n                        }\r\n                        k++                        \r\n                }\r\n                return array;\r\n            }\r\n            slot2Equal2for200(AntArr200);\r\n\r\n            const Slot2Equal1for200 = (array) => {\r\n                let test = []\r\n                let k = 0;\r\n                for(let x=0; x<filterData200.length;x++){\r\n                    test.push(filterData200[x]);\r\n                }\r\n                for(let i = array.length-1;i>0;i--){\r\n                        if(k < test.length){\r\n                            let slot2 = test[k][10]\r\n                            if(slot2 == 1){\r\n                                    const j = Math.floor(Math.random()*(i+1));\r\n                                    if(array[i-1] == 100 && array[i+2] == 100 ){\r\n                                        array[i-1] = 50;\r\n                                        array[i+2] = 50;\r\n                                    }\r\n                                    if(array[i] == 100 || array[i] == 50){\r\n                                        array[i] = array[j];\r\n                                        array[j] = test[k];\r\n                                    }   \r\n                                    else if(array[i]!=100 || array[i] != 50){\r\n                                        test.push(test[k]);\r\n                                    }\r\n                                    if(array[i-1] == 50 && array[i+2] == 50 ){\r\n                                        array[i-1] = 100;\r\n                                        array[i+2] = 100;\r\n                                    }                  \r\n                            }\r\n                            \r\n                        }\r\n                        k++                        \r\n                }\r\n                return array;\r\n            }\r\n\r\n            var Slot2_1_200 = Slot2Equal1for200(AntArr200);\r\n            console.log(Slot2_1_200);\r\n\r\n            const checkAmountData200 = (array) => {\r\n                let count = 0\r\n                for(let i = 0; i < array.length; i++){\r\n                        if(array[i] != 100 && array[i] !=50){\r\n                            count += 1\r\n                        }\r\n                }\r\n                return count\r\n            }\r\n            var checkAmount = checkAmountData200(AntArrIns200)\r\n            console.log(checkAmount);\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n    \r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 200 \r\n\r\n            //create 1d array for dataset 500\r\n            const array1D500 = (data) => {\r\n                var result = []\r\n\r\n                for(let i = 0; i< data; i++){\r\n                    result[i]= 100;\r\n                }\r\n                return result;\r\n            }\r\n            var AntArr500 = array1D500(DataArray500);\r\n            //console.log(AntArr500);\r\n\r\n\r\n            const AntAlgoInsert500 = (array) => {\r\n                let test = []\r\n                let k = 0;\r\n                for(let x=0; x<filterData500.length;x++){\r\n                    test.push(filterData500[x]);\r\n                }\r\n                for(let i = array.length-1;i>0;i--){\r\n                        if(k < test.length){\r\n                            let slot1 = test[k][9]\r\n                            if(slot1 == 2){\r\n                                    const j = Math.floor(Math.random()*(i+1));\r\n                                    if(array[i] == 100 && array[i+1] == 100){\r\n                                        array[i] = array[j];\r\n                                        array[i+1] = array[j+1];\r\n                                        array[j] = test[k];\r\n                                        array[j+1] = test[k];\r\n                                    }   \r\n                                    else if(array[i]!=100 || array[i+1] != 100){\r\n                                        test.push(test[k]);\r\n                                    }                      \r\n                            }\r\n                            \r\n                        }\r\n                        k++                        \r\n                }\r\n\r\n                return array;\r\n            }\r\n            var AntArrIns500 = AntAlgoInsert500(AntArr500);\r\n\r\n            const slot2Equal2for500 = (array) => {\r\n                let test = []\r\n                let k = 0;\r\n                for(let x=0; x<filterData500.length;x++){\r\n                    test.push(filterData500[x]);\r\n                }\r\n                for(let i = array.length-1;i>0;i--){\r\n                        if(k < test.length){\r\n                            let slot2 = test[k][10]\r\n                            if(slot2 == 2){\r\n                                    const j = Math.floor(Math.random()*(i+1));\r\n                                    if(array[i-1] == 100 && array[i+2] == 100 ){\r\n                                        array[i-1] = 50;\r\n                                        array[i+2] = 50;\r\n                                    }\r\n                                    if(array[i] == 100 && array[i+1] == 100){\r\n                                        array[i] = array[j];\r\n                                        array[i+1] = array[j+1];\r\n                                        array[j] = test[k];\r\n                                        array[j+1] = test[k];\r\n                                    }   \r\n                                    else if(array[i]!=100 || array[i+1] != 100){\r\n                                        test.push(test[k]);\r\n                                    }\r\n                                    \r\n                                    if(array[i-1] == 50 && array[i+2] == 50 ){\r\n                                        array[i-1] = 100;\r\n                                        array[i+2] = 100;\r\n                                    }         \r\n                            }\r\n                            \r\n                        }\r\n                        k++                        \r\n                }\r\n                return array;\r\n            }\r\n            slot2Equal2for500(AntArr500);\r\n\r\n            const slot2Equal1for500= (array) => {\r\n                let test = []\r\n                let k = 0;\r\n                for(let x=0; x<filterData500.length;x++){\r\n                    test.push(filterData500[x]);\r\n                }\r\n                for(let i = array.length-1;i>0;i--){\r\n                        if(k < test.length){\r\n                            let slot2 = test[k][10]\r\n                            if(slot2 == 1){\r\n                                    const j = Math.floor(Math.random()*(i+1));\r\n                                    if(array[i-1] == 100 && array[i+2] == 100 ){\r\n                                        array[i-1] = 50;\r\n                                        array[i+2] = 50;\r\n                                    }\r\n                                    if(array[i] == 100 || array[i] == 50){\r\n                                        array[i] = array[j];\r\n                                        array[j] = test[k];\r\n                                    }   \r\n                                    else if(array[i]!=100 || array[i] != 50){\r\n                                        test.push(test[k]);\r\n                                    }\r\n                                    if(array[i-1] == 50 && array[i+2] == 50 ){\r\n                                        array[i-1] = 100;\r\n                                        array[i+2] = 100;\r\n                                    }                  \r\n                            }\r\n                            \r\n                        }\r\n                        k++                        \r\n                }\r\n                return array;\r\n            }\r\n\r\n            var Slot2_1_500 = slot2Equal1for500(AntArr500);\r\n            console.log(Slot2_1_500);\r\n\r\n            const checkAmountData500 = (array) => {\r\n                let count = 0\r\n                for(let i = 0; i < array.length; i++){\r\n                        if(array[i] != 100 && array[i] !=50){\r\n                            count += 1\r\n                        }\r\n                }\r\n                return count\r\n            }\r\n            var checkAmount = checkAmountData500(AntArrIns500)\r\n            console.log(checkAmount);\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n        }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {/* <Dataset  ertCourse={Course}/> */}\r\n            {/* {!isLoading && loadedFile} */}\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ArraySchedule;\r\n\r\n\r\n//result[i][j]=Course.splice(Math.floor(Math.random()* Course.length),1)[0] // create random placement of Course Value\r\n//const Schedule = new Array(10).fill(Array(5).fill(null));\r\n//console.log(Schedule);\r\n// const Course = [['TE1',4],['TE1',4],['TE1',4],['TE1',3],['TE1',4],['TE1',2],['TE1',4],['TE1',4],['TE1',4],['TE1',3]];\r\n//const Course = [['TE1',2],['TE2',2],['TE3',3],['TE4',4],['TE5',3],['TE6',4],['TE7',4],['TE8',2],['TE9',4]];\r\n//const Course = ['TE1','TE2','TE3','TE4','TE5','TE6','TE7','TE8','TE9'];"]},"metadata":{},"sourceType":"module"}