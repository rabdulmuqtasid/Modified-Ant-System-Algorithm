{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acit\\\\Desktop\\\\FYP Code\\\\FYP Code\\\\frontend\\\\src\\\\components\\\\GenerateSchedulePage\\\\GenerateSchedulePage.js\";\nimport { concat, create, find, forEach, indexOf } from \"lodash\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport _ from 'lodash';\nimport { CSVLink } from \"react-csv\";\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\nlet finalDataAll = [];\nlet finalDataAllElective = [];\nlet checkHardConstraintOutsite = 0;\nlet checkSoftConstraintOutsite = 0;\n\nconst ArraySchedule = props => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedFile, setLoaadedFile] = useState(false);\n  const [roomData, setroomData] = useState();\n  const [courseData, setcourseData] = useState();\n  const [CsvData, setCsvData] = useState(); // const [Keys, setKeys] = useState();\n  //const [uploadedData, setUploadedData] = useState([]);\n  //console.log(\"props dataset:\"+ props.test)\n\n  const userId = useParams().userId;\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875'); //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\n        //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\n\n        const responsedata = await response.json();\n        let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset); // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\n\n        const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Room'], Dataset['Size']]); //Extract Room\n\n        setroomData([ertRoom]);\n        const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'], Dataset['Course Code'], Dataset['Course Name'], Dataset['Year'], Dataset['Semester'], Dataset['Lecturer'], Dataset['Group'], Dataset['HMS'], Dataset['Programme Code'], Dataset['Slot1'], Dataset['Slot2']]); //Extract Enrollment Quota\n\n        setcourseData([ertCourse]);\n\n        if (!response.ok) {\n          throw new Error(responsedata.message);\n        }\n\n        setLoaadedFile(stringifyData);\n        setIsLoading(true);\n      } catch (err) {\n        console.log(err.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, [userId]);\n\n  if (!isLoading && loadedFile) {\n    const EnrollmentQuota = [];\n    const CourseCode = [];\n    const HMS = [];\n    const lecturerData = [];\n    const roomName = [];\n    const roomSize = [];\n    const filterData50 = [];\n    const filterData100 = [];\n    const filterData200 = [];\n    const filterData500 = [];\n    const filterDataElective50 = [];\n    const filterDataElective100 = [];\n    const filterDataElective200 = [];\n    const filterDataElective500 = [];\n    const room = [];\n    room.push(roomData[0]);\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      let enrollment = [courseData[0][i][0]];\n      let code = [courseData[0][i][1]];\n      let hms = [courseData[0][i][7]];\n      let lecturer = [courseData[0][i][5]];\n      enrollment.reduce(function (results, item, index, array) {\n        results[index] = item;\n        EnrollmentQuota.push(item);\n      }, {});\n      code.reduce(function (results, item, index, array) {\n        results[index] = item;\n        CourseCode.push(item);\n      }, {});\n      hms.reduce(function (results, item, index, array) {\n        results[index] = item;\n        HMS.push(item);\n      }, {});\n      lecturer.reduce(function (results, item, index, array) {\n        results[index] = item;\n        lecturerData.push(item);\n      }, {});\n    }\n\n    for (let i = 0; i < roomData[0].length; i++) {\n      let name = [roomData[0][i][0]];\n      let size = [roomData[0][i][1]];\n      name.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomName.push(item);\n      }, {});\n      size.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomSize.push(item);\n      }, {});\n    }\n\n    const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\n    const notDuplicatesLecturer = lecturerData.filter((item, index) => index == lecturerData.indexOf(item));\n    notDuplicatesLecturer.pop();\n    let courseDataXElective = [];\n    let courseDataWithElective = [];\n    courseData[0].pop(); //saparate faculty course with the elective course\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      if (courseData[0][i][8] != 'ELECTIVE') {\n        //if(courseData[0][i][1].slice(0,3) != 'TMU'){\n        courseData[0][i].splice();\n        courseDataXElective.push(courseData[0][i]); // if(  courseData[0][i][1].slice(0,3) != 'TMX'){\n        //     courseData[0][i].splice()\n        //     courseDataXElective.push(courseData[0][i])\n        // }\n      }\n    } //saparate elective course with the faculty course\n\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      //console.log(courseData[0][i][8])\n      //if(courseData[0][i][1].slice(0,3) == 'TMU' ||  courseData[0][i][1].slice(0,3) == 'TMX'){\n      if (courseData[0][i][8] == 'ELECTIVE') {\n        courseDataWithElective.push(courseData[0][i]);\n      }\n    } //insert data without elective courses into correct room capacity\n\n\n    for (let i = 0; i < courseDataXElective.length; i++) {\n      if (courseDataXElective[i][0] < 50) {\n        filterData50.push(courseDataXElective[i]);\n      }\n\n      if (courseDataXElective[i][0] >= 50 && courseDataXElective[i][0] < 100) {\n        filterData100.push(courseDataXElective[i]);\n      }\n\n      if (courseDataXElective[i][0] >= 100 && courseDataXElective[i][0] < 200) {\n        filterData200.push(courseDataXElective[i]);\n      }\n\n      if (courseDataXElective[i][0] >= 200 && courseDataXElective[i][0] < 500) {\n        filterData500.push(courseDataXElective[i]);\n      }\n    } //console.log(filterData50)\n    //insert data without faculty courses into correct room capacity\n\n\n    for (let i = 0; i < courseDataWithElective.length; i++) {\n      if (courseDataWithElective[i][0] < 50) {\n        filterDataElective50.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 50 && courseDataWithElective[i][0] < 100) {\n        filterDataElective100.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 100 && courseDataWithElective[i][0] < 200) {\n        filterDataElective200.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 200 && courseDataWithElective[i][0] < 500) {\n        filterDataElective500.push(courseDataWithElective[i]);\n      }\n    }\n\n    let roomUnder50 = [];\n    let roomUnder100 = [];\n    let roomUnder200 = [];\n    let roomUnder500 = []; //separate room \n\n    const checkNumberofRoom = () => {\n      for (let i = 0; i < roomData[0].length; i++) {\n        let room = roomData[0][i][1];\n\n        if (room < 50) {\n          roomUnder50.push(room);\n        } else if (room > 50 && room < 100) {\n          roomUnder100.push(room);\n        } else if (room > 100 && room < 200) {\n          roomUnder200.push(room);\n        } else if (room > 200) {\n          roomUnder500.push(room);\n        }\n      }\n    };\n\n    checkNumberofRoom();\n\n    const createArray = data => {\n      var result = [];\n\n      for (let i = 0; i < data; i++) {\n        result[i] = [];\n      }\n\n      return result;\n    };\n\n    let DataArray50 = roomUnder50.length * 38;\n    let DataArray100 = roomUnder100.length * 38;\n    let DataArray200 = roomUnder200.length * 38;\n    let DataArray500 = roomUnder500.length * 38;\n    let combineArray = DataArray50 + DataArray100 + DataArray200 + DataArray500;\n    let pheCombineArray = DataArray50 + DataArray100 + DataArray200 + DataArray500;\n    let startIndex100 = DataArray50 - 1;\n    let startIndex200 = DataArray50 + DataArray100 - 1;\n    let startIndex500 = DataArray50 + DataArray100 + DataArray200 - 1; //----------------------------------------------------------------------------------------------------------------------------------------\n\n    var checkTotalHardContraintsAll = 0;\n    var checkTotalSoftContraintsAll = 0;\n\n    function sleep(ms) {\n      return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    const antSystem = () => {\n      //______________________________________________________________________________________________________________________________________________\n      //Faculty courses\n      const checking_minus_1 = (array, array2, data) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u-1] != 100 && array[u-1][5] == data[5]){\n            if (array[u] != 100 && data[5] != array[u][5] || data[6] == array[u][6] && array[u - 1] != 100 && data[5] == array[u - 1][5] || data[6] == array[u - 1][6]) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray - 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray - 1] = 0;\n                  array2[u + indexArray] = 0;\n                  array2[u + indexArray - 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray - 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray - 1] = 0;\n                  array2[u - indexArray] = 0;\n                  array2[u - indexArray - 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const checking_minus_1_phe = (array, array2, data) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u-1] != 100 && array[u-1][5] == data[5]){\n            if (array[u] != 100 && data[5] != array[u][5] || data[6] == array[u][6] && array[u - 1] != 100 && data[5] == array[u - 1][5] || data[6] == array[u - 1][6]) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray = b * 38; //if( array[u+indexArray] ==100 && array[u+indexArray-1] ==100){\n\n                if (array2[u + indexArray] == 100 && array2[u + indexArray - 1] == 100) {\n                  // array[u+indexArray] = 0\n                  // array[u+indexArray-1] = 0\n                  array2[u + indexArray] = 0;\n                  array2[u + indexArray - 1] = 0;\n                } //if( array[u-indexArray] ==100 && array[u-indexArray-1] ==100){\n\n\n                if (array2[u - indexArray] == 100 && array2[u - indexArray - 1] == 100) {\n                  // array[u-indexArray] = 0\n                  // array[u-indexArray-1] = 0\n                  array2[u - indexArray] = 0;\n                  array2[u - indexArray - 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array2;\n      };\n\n      const checking_plus_1 = (array, array2, data) => {\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\n            if (array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6] && array[u + 1] != 100 && data[5] == array[u + 1][5] || data[6] == array[u + 1][6]) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray + 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray + 1] = 0;\n                  array2[u + indexArray] = 0;\n                  array2[u + indexArray + 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray + 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray + 1] = 0;\n                  array2[u - indexArray] = 0;\n                  array2[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const checking_plus_1_phe = (array, array2, data) => {\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\n            if (array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6] && array[u + 1] != 100 && data[5] == array[u + 1][5] || data[6] == array[u + 1][6]) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray = b * 38; //if( array[u+indexArray] ==100 && array[u+indexArray+1] ==100){\n\n                if (array2[u + indexArray] == 100 && array2[u + indexArray + 1] == 100) {\n                  // array[u+indexArray] = 0\n                  // array[u+indexArray+1] = 0\n                  array2[u + indexArray] = 0;\n                  array2[u + indexArray + 1] = 0;\n                } //if( array[u-indexArray] ==100 && array[u-indexArray+1] ==100){\n\n\n                if (array2[u - indexArray] == 100 && array2[u - indexArray + 1] == 100) {\n                  // array[u-indexArray] = 0\n                  // array[u-indexArray+1] = 0\n                  array2[u - indexArray] = 0;\n                  array2[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array2;\n      };\n\n      const checking_3 = (array, array2, data) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u-1] != 100 && array[u-1][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\n            if (array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6] && array[u - 1] != 100 && data[5] == array[u - 1][5] && array[u + 1] != 100 && data[5] == array[u + 1][5] || data[6] == array[u - 1][6] && array[u + 1] != 100 && data[6] == array[u + 1][6]) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray - 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray - 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray - 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray - 1] = 0;\n                }\n\n                if (array[u + indexArray] == 100 && array[u + indexArray + 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray + 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray + 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            //if( array2[u] != 100 && array2[u][5] == data[5] && array2[u-1] != 100 && array2[u-1][5] == data[5] && array2[u+1] != 100 && array2[u+1][5] == data[5]){\n            if (array2[u] != 100 && data[5] == array2[u][5] || data[6] == array2[u][6] && array2[u - 1] != 100 && data[5] == array2[u - 1][5] && array2[u + 1] != 100 && data[5] == array2[u + 1][5] || data[6] == array2[u - 1][6] && array2[u + 1] != 100 && data[6] == array2[u + 1][6]) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray2 = b * 38;\n\n                if (array2[u + indexArray2] == 100 && array2[u + indexArray2 - 1] == 100) {\n                  array2[u + indexArray2] = 0;\n                  array2[u + indexArray2 - 1] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100 && array2[u - indexArray2 - 1] == 100) {\n                  array2[u - indexArray2] = 0;\n                  array2[u - indexArray2 - 1] = 0;\n                }\n\n                if (array2[u + indexArray2] == 100 && array2[u + indexArray2 + 1] == 100) {\n                  array2[u + indexArray2] = 0;\n                  array2[u + indexArray2 + 1] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100 && array2[u - indexArray2 + 1] == 100) {\n                  array2[u - indexArray2] = 0;\n                  array2[u - indexArray2 + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const checking_only_1 = (array, array2, data) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            if (array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]) {\n              for (let b = 0; b < totalRoom; b++) {\n                if (array[u + 38 * b] == 100) {\n                  array[u + 38 * b] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            if (array2[u] != 100 && data[5] == array2[u][5] || data[6] == array2[u][6]) {\n              for (let b = 0; b < totalRoom2; b++) {\n                if (array2[u + 38 * b] == 100) {\n                  array2[u + 38 * b] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const changeRowtoZero_minus_1 = (array, array2, index1, index2) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray - 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray - 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray - 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray - 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray2 = b * 38;\n\n                if (array2[u + indexArray2] == 100 && array2[u + indexArray2 - 1] == 100) {\n                  array2[u + indexArray2] = 0;\n                  array2[u + indexArray2 - 1] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100 && array2[u - indexArray2 - 1] == 100) {\n                  array2[u - indexArray2] = 0;\n                  array2[u - indexArray2 - 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const changeRowtoZero_plus_1 = (array, array2, index1, index2) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray + 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray + 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray + 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray2 = b * 38;\n\n                if (array2[u + indexArray2] == 100 && array2[u + indexArray2 + 1] == 100) {\n                  array2[u + indexArray2] = 0;\n                  array2[u + indexArray2 + 1] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100 && array2[u - indexArray2 + 1] == 100) {\n                  array2[u - indexArray2] = 0;\n                  array2[u - indexArray2 + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const changeRowtoZero_1 = (array, array2, index1) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            if (u == index1) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100) {\n                  array[u + indexArray] = 0;\n                }\n\n                if (array[u - indexArray] == 100) {\n                  array[u - indexArray] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            if (u == index1) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray2 = b * 38;\n\n                if (array2[u + indexArray2] == 100) {\n                  array2[u + indexArray2] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100) {\n                  array2[u - indexArray2] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const changeRowtoZero_3_ = (array, array2, index1, index2, index3) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2 && u + 1 == index3) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray - 1] == 100 && array[u + indexArray + 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray - 1] = 0;\n                  array[u + indexArray + 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray - 1] == 100 && array[u - indexArray + 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray - 1] = 0;\n                  array[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2 && u + 1 == index3) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray = b * 38;\n\n                if (array2[u + indexArray] == 100 && array2[u + indexArray - 1] == 100 && array2[u + indexArray + 1] == 100) {\n                  array2[u + indexArray] = 0;\n                  array2[u + indexArray - 1] = 0;\n                  array2[u + indexArray + 1] = 0;\n                }\n\n                if (array2[u - indexArray] == 100 && array2[u - indexArray - 1] == 100 && array2[u - indexArray + 1] == 100) {\n                  array2[u - indexArray] = 0;\n                  array2[u - indexArray - 1] = 0;\n                  array2[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const changeToZero = array => {\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            array[i] = 100;\n          }\n        }\n\n        return array;\n      };\n\n      const checkTest = (array, array2, data1) => {\n        let count = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          let indexArray = x * 38;\n\n          try {\n            for (let i = 1; i < array.length; i++) {\n              //if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 1 && array[i+indexArray] != 0 ){\n              try {\n                if (data1 == array[i][5]) {\n                  if (array[i + indexArray] == 100) {\n                    array[i + indexArray] = 0;\n                  }\n                }\n              } catch {} //}    \n\n            }\n          } catch {}\n        }\n\n        for (let x = 1; x <= totalRoom2; x++) {\n          let indexArray2 = x * 38;\n\n          try {\n            for (let i = 1; i < array2.length; i++) {\n              //if(array2[i+indexArray2] != 100 && array2[i+indexArray2] != undefined && array2[i+indexArray2] != 1 && array2[i+indexArray2] != 0 ){\n              try {\n                if (data1 == array2[i][5]) {\n                  if (array2[i + indexArray2] == 100) {\n                    array2[i + indexArray2] = 0;\n                  }\n                }\n              } catch {} //}    \n\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const checking_1 = (array, array2, data) => {\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\n            //if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]){\n            if (array[u] != 100) {\n              if (data[5] == array[u][5] || data[6] == array[u][6]) {\n                for (let b = 0; b < totalRoom; b++) {\n                  let indexArray = b * 38;\n\n                  if (array[u + indexArray] == 100) {\n                    array[u + indexArray] = 0; //array2[u+indexArray] = 0\n                  }\n\n                  if (array[u - indexArray] == 100) {\n                    array[u - indexArray] = 0; //array2[u-indexArray] = 0\n                  }\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const checking_1_phe = (array, array2, data) => {\n        //let totalRoom = array.length / 38\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\n            //if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]){\n            if (array[u] != 100) {\n              if (data[5] == array[u][5] || data[6] == array[u][6]) {\n                for (let b = 0; b < totalRoom2; b++) {\n                  let indexArray = b * 38;\n\n                  if (array2[u + indexArray] == 100) {\n                    //array[u+indexArray] = 0\n                    array2[u + indexArray] = 0;\n                  }\n\n                  if (array2[u - indexArray] == 100) {\n                    //array[u-indexArray] = 0\n                    array2[u - indexArray] = 0;\n                  }\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array2;\n      };\n\n      const array1DCombine = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrCombine = array1DCombine(combineArray);\n      var pheAntArrCombine = array1DCombine(pheCombineArray);\n\n      const checkDay = (combine, array, index) => {\n        //for(let x =0; x < combine.length ; x++){}\n        let c = 0;\n        let z = index;\n\n        while (c != 1) {\n          if (z >= 0 && z < 10) {\n            //console.log(\"Monday\")\n            zeroMonday(array);\n            zeroMondayCom(combine);\n            c = 1;\n          } else if (z >= 10 && z < 20) {\n            //console.log(\"Tuesday\")   \n            zeroTuesday(array);\n            zeroTuesdayCom(combine);\n            c = 1;\n          } else if (z >= 20 && z < 30) {\n            //console.log(\"Thursday\")   \n            zeroThursday(array);\n            zeroThursdayCom(combine);\n            c = 1;\n          } else if (z >= 30 && z < 38) {\n            //console.log(\"Friday\")   \n            zeroFriday(array);\n            zeroFridayCom(combine);\n            c = 1;\n          } else z -= 38;\n        }\n      };\n\n      const zeroMonday = array => {\n        let totalRoom2 = array.length / 38;\n\n        for (let u = 0; u < 10; u++) {\n          try {\n            for (let b = 0; b < totalRoom2; b++) {\n              let indexArray = b * 38;\n\n              if (array[u + indexArray] == 100) {\n                array[u + indexArray] = 0;\n              }\n\n              if (array[u - indexArray] == 100) {\n                array[u - indexArray] = 0;\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const zeroMondayCom = combine => {\n        let totalRoom2 = combine.length / 38;\n\n        for (let u = 0; u < 10; u++) {\n          try {\n            for (let b = 0; b < totalRoom2; b++) {\n              let indexArray = b * 38;\n\n              if (combine[u + indexArray] == 100) {\n                combine[u + indexArray] = 0;\n              }\n\n              if (combine[u - indexArray] == 100) {\n                combine[u - indexArray] = 0;\n              }\n            }\n          } catch {}\n        }\n\n        return combine;\n      };\n\n      const zeroTuesday = array => {\n        let totalRoom2 = array.length / 38;\n\n        for (let u = 10; u < 20; u++) {\n          try {\n            for (let b = 0; b < totalRoom2; b++) {\n              let indexArray = b * 38;\n\n              if (array[u + indexArray] == 100) {\n                array[u + indexArray] = 0;\n              }\n\n              if (array[u - indexArray] == 100) {\n                array[u - indexArray] = 0;\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const zeroTuesdayCom = combine => {\n        let totalRoom2 = combine.length / 38;\n\n        for (let u = 10; u < 20; u++) {\n          try {\n            for (let b = 0; b < totalRoom2; b++) {\n              let indexArray = b * 38;\n\n              if (combine[u + indexArray] == 100) {\n                combine[u + indexArray] = 0;\n              }\n\n              if (combine[u - indexArray] == 100) {\n                combine[u - indexArray] = 0;\n              }\n            }\n          } catch {}\n        }\n\n        return combine;\n      };\n\n      const zeroThursday = array => {\n        let totalRoom2 = array.length / 38;\n\n        for (let u = 20; u < 30; u++) {\n          try {\n            for (let b = 0; b < totalRoom2; b++) {\n              let indexArray = b * 38;\n\n              if (array[u + indexArray] == 100) {\n                array[u + indexArray] = 0;\n              }\n\n              if (array[u - indexArray] == 100) {\n                array[u - indexArray] = 0;\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const zeroThursdayCom = combine => {\n        let totalRoom2 = combine.length / 38;\n\n        for (let u = 20; u < 30; u++) {\n          try {\n            for (let b = 0; b < totalRoom2; b++) {\n              let indexArray = b * 38;\n\n              if (combine[u + indexArray] == 100) {\n                combine[u + indexArray] = 0;\n              }\n\n              if (combine[u - indexArray] == 100) {\n                combine[u - indexArray] = 0;\n              }\n            }\n          } catch {}\n        }\n\n        return combine;\n      };\n\n      const zeroFriday = array => {\n        let totalRoom2 = array.length / 38;\n\n        for (let u = 30; u < 38; u++) {\n          try {\n            for (let b = 0; b < totalRoom2; b++) {\n              let indexArray = b * 38;\n\n              if (array[u + indexArray] == 100) {\n                array[u + indexArray] = 0;\n              }\n\n              if (array[u - indexArray] == 100) {\n                array[u - indexArray] = 0;\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const zeroFridayCom = combine => {\n        let totalRoom2 = combine.length / 38;\n\n        for (let u = 30; u < 38; u++) {\n          try {\n            for (let b = 0; b < totalRoom2; b++) {\n              let indexArray = b * 38;\n\n              if (combine[u + indexArray] == 100) {\n                combine[u + indexArray] = 0;\n              }\n\n              if (combine[u - indexArray] == 100) {\n                combine[u - indexArray] = 0;\n              }\n            }\n          } catch {}\n        }\n\n        return combine;\n      }; //create 1d array for dataset less than 50\n\n\n      const array1D50 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr50 = array1D50(DataArray50);\n      let insertedData50_Slot2_2 = [];\n      let insertedData50_Slot2_1 = [];\n\n      const AntAlgoInsert50 = (array, combine) => {\n        //array.length = 1064 (last index = 1063)\n        //arrayLength50 = 646 (last index = 645)\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let k4 = 0;\n        let k5 = 0;\n        let count = 0;\n        let b = 1;\n        let hms2 = [];\n        let hms3 = [];\n        let hms4 = [];\n        let hms2Remainder = [];\n        let arrayTemp100 = [];\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterData50.length; x++) {\n          if (filterData50[x][7] == 2) {\n            hms2.push(filterData50[x]);\n          }\n\n          if (filterData50[x][7] == 4) {\n            hms4.push(filterData50[x]);\n          }\n\n          if (filterData50[x][7] == 3) {\n            hms3.push(filterData50[x]);\n          }\n\n          test.push(filterData50[x]);\n        } // for(let i = array.length-1;i>0;i--){\n        //     if(k < hms2.length){\n        //         checking_1(combine,array,hms2[k])\n        //         checking_1_phe(combine,array,hms2[k])\n        //         let c = 0\n        //         while(c != 1){\n        //             const j = Math.floor(Math.random()*(i+1));    \n        //             if(array[j] == 100 && array[j-1] == 100){\n        //                     array[j] = -1;\n        //                     array[j-1] = -1;\n        //                     combine[j] = hms2[k];\n        //                     combine[j-1] = hms2[k];\n        //                     c = 1\n        //             }\n        //             else if(array[j] == 100 && array[j+1] == 100){\n        //                     array[j] = -1;\n        //                     array[j+1] = -1;\n        //                     combine[j] = hms2[k];\n        //                     combine[j+1] = hms2[k];\n        //                     c = 1\n        //             }\n        //         }    \n        //     }\n        //     changeToZero(array)\n        //     changeToZero(combine)\n        //     k++  \n        // }\n        // console.log(hms2.length)\n        // console.log(hms4.length)\n        // console.log(hms3.length)\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          //if(k2 < hms4.length){\n          if (k2 < 1) {\n            checking_1(combine, array, hms4[k2]);\n            checking_1_phe(combine, array, hms4[k2]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[j] == 100 && array[j - 1] == 100) {\n                console.log(j);\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j] = hms4[k2];\n                combine[j - 1] = hms4[k2];\n                checkDay(combine, array, j);\n                let b = 0;\n\n                while (b != 1) {\n                  const v = Math.floor(Math.random() * (i + 1));\n\n                  if (array[v] == 100 && array[v - 1] == 100) {\n                    console.log(v);\n                    array[v] = -1;\n                    array[v - 1] = -1;\n                    combine[v] = hms4[k2];\n                    combine[v - 1] = hms4[k2];\n                    b = 1;\n                  } else if (array[v] == 100 && array[v + 1] == 100) {\n                    console.log(v);\n                    array[v] = -1;\n                    array[v + 1] = -1;\n                    combine[v] = hms4[k2];\n                    combine[v + 1] = hms4[k2];\n                    b = 1;\n                  }\n                }\n\n                c = 1;\n              } else if (array[j] == 100 && array[j + 1] == 100) {\n                console.log(j);\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j] = hms4[k2];\n                combine[j + 1] = hms4[k2];\n                checkDay(combine, array, j);\n                let z = 0;\n\n                while (z != 1) {\n                  const p = Math.floor(Math.random() * (i + 1));\n\n                  if (array[p] == 100 && array[p - 1] == 100) {\n                    console.log(p);\n                    array[p] = -1;\n                    array[p - 1] = -1;\n                    combine[p] = hms4[k2];\n                    combine[p - 1] = hms4[k2];\n                    z = 1;\n                  } else if (array[p] == 100 && array[p + 1] == 100) {\n                    console.log(p);\n                    array[p] = -1;\n                    array[p + 1] = -1;\n                    combine[p] = hms4[k2];\n                    combine[p + 1] = hms4[k2];\n                    z = 1;\n                  }\n                }\n\n                c = 1;\n              }\n            }\n          } // changeToZero(array)\n          // changeToZero(combine)\n\n\n          k2++;\n        } // for(let i = array.length-1;i>0;i--){\n        //     if(k3 < hms4.length){\n        //         checking_1(combine,array,hms4[k3])\n        //         checking_1_phe(combine,array,hms4[k3])\n        //         let c = 0\n        //         while(c != 1){\n        //             const j = Math.floor(Math.random()*(i+1));    \n        //             if(array[j] == 100 && array[j-1] == 100){\n        //                     array[j] = -1;\n        //                     array[j-1] = -1;\n        //                     combine[j] = hms4[k3];\n        //                     combine[j-1] = hms4[k3];\n        //                     c = 1\n        //             }\n        //             else if(array[j] == 100 && array[j+1] == 100){\n        //                     array[j] = -1;\n        //                     array[j+1] = -1;\n        //                     combine[j] = hms4[k3];\n        //                     combine[j+1] = hms4[k3];\n        //                     c = 1\n        //             }\n        //         }    \n        //     }\n        //     changeToZero(array)\n        //     changeToZero(combine)\n        //     k3++  \n        // }\n\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 100) {\n            arrayTemp100.push(array[i]);\n          }\n        } // for(let i = array.length-1;i>0;i--){\n        //     if(k4 < test.length){\n        //     let hourMS = test[k4][7]    \n        //     changeToZero(array)\n        //     changeToZero(combine)\n        //     if(hourMS == 4){\n        //         checking_minus_1(combine,array,test[k4]);\n        //         checking_plus_1(combine,array,test[k4])\n        //         const j = Math.floor(Math.random()*(i+1));\n        //             if(array[i] == 100 && array[i-1] == 100 ){\n        //                 array[i] = array[j];\n        //                 array[i-1] = array[j-1];\n        //                 array[j] = test[k4];\n        //                 array[j-1] = test[k4];\n        //                 combine[j] = test[k4];\n        //                 combine[j-1] = test[k4];\n        //                 changeRowtoZero_minus_1(combine,array,j,j-1);\n        //                 if(array[i] == 100 && array[i-1] == 100){\n        //                     array[i] = array[j];\n        //                     array[i-1] = array[j-1];\n        //                     array[j] = test[k4];\n        //                     array[j-1] = test[k4];\n        //                     combine[j] = test[k4];\n        //                     combine[j-1] = test[k4];\n        //                     changeRowtoZero_minus_1(combine,array,j,j-1);\n        //                 }\n        //                 else if(array[i] == 100 && array[i+1] == 100){\n        //                     array[i] = array[j];\n        //                     array[i+1] = array[j+1];\n        //                     array[j] = test[k4];\n        //                     array[j+1] = test[k4];\n        //                     combine[j] = test[k4];\n        //                     combine[j+1] = test[k4];\n        //                     changeRowtoZero_plus_1(combine,array,j,j-1);\n        //                 }\n        //                 else{\n        //                     remainderArraySlot1.push(test[k4]);\n        //                 }\n        //             }\n        //             else if(array[i] == 100 && array[i+1] == 100 ){\n        //                 array[i] = array[j];\n        //                 array[i+1] = array[j+1];\n        //                 array[j] = test[k4];\n        //                 array[j+1] = test[k4];\n        //                 combine[j] = test[k4];\n        //                 combine[j+1] = test[k4];\n        //                 changeRowtoZero_plus_1(combine,array,i,i-1);\n        //                 if(array[i] == 100 && array[i-1] == 100){\n        //                     array[i] = array[j];\n        //                     array[i-1] = array[j-1];\n        //                     array[j] = test[k4];\n        //                     array[j-1] = test[k4];\n        //                     combine[j] = test[k4];\n        //                     combine[j-1] = test[k4];\n        //                     changeRowtoZero_minus_1(combine,array,j,j-1);\n        //                 }\n        //                 else if(array[i] == 100 && array[i+1] == 100){\n        //                     array[i] = array[j];\n        //                     array[i+1] = array[j+1];\n        //                     array[j] = test[k4];\n        //                     array[j+1] = test[k4];\n        //                     combine[j] = test[k4];\n        //                     combine[j+1] = test[k4];\n        //                     changeRowtoZero_plus_1(combine,array,j,j-1);\n        //                 }\n        //                 else{\n        //                     remainderArraySlot1.push(test[k4]);\n        //                 }\n        //             }\n        //             else{\n        //                 remainderArray.push(test[k4]);\n        //             }\n        //     }\n        //     changeToZero(array);\n        //     changeToZero(combine);\n        //     }\n        //     k4++  \n        // }\n        // for(let i = array.length-1;i>0;i--){\n        //     if(k5 < test.length){\n        //     let hourMS = test[k5][7]    \n        //     changeToZero(array)\n        //     changeToZero(combine)\n        //     if(hourMS == 3){\n        //         const j = Math.floor(Math.random()*(i+1)); \n        //             checking_3(combine,array,test[k5]);\n        //             if( array[i] == 100 && array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\n        //                 array[i] = array[j];\n        //                 array[i-1] = array[j-1];\n        //                 array[i+1] = array[j+1];\n        //                 array[j] = test[k5];\n        //                 array[j-1] = test[k5];\n        //                 array[j+1] = test[k5];\n        //                 combine[j] = test[k5];\n        //                 combine[j-1] = test[k5];\n        //                 combine[j+1] = test[k5];\n        //                 changeRowtoZero_3_(combine,array,i,i-1,i+1)\n        //             }else if(array[i] == 100 && array[i-1] == 100){//slot 2 hours in 1 go\n        //                 array[i] = array[j];\n        //                 array[i-1] = array[j-1];\n        //                 array[j] = test[k5];\n        //                 array[j-1] = test[k5];\n        //                 combine[j] = test[k5];\n        //                 combine[j-1] = test[k5];\n        //                 insertedData50_Slot2_1.push(test[k5])\n        //                 changeRowtoZero_minus_1(combine,array,i,i-1)\n        //             }else if(array[i] == 100 && array[i+1] == 100){//slot 2 hours in 1 go\n        //                 array[i] = array[j];\n        //                 array[i+1] = array[j+1];\n        //                 array[j] = test[k5];\n        //                 array[j+1] = test[k5];\n        //                 combine[j] = test[k5];\n        //                 combine[j+1] = test[k5];\n        //                 insertedData50_Slot2_1.push(test[k5])\n        //                 changeRowtoZero_plus_1(combine,array,i,i-1);\n        //             }else if(array[i] == 100 ){//slot 1 hours in 1 go\n        //                 array[i] = array[j];\n        //                 array[j] = test[k5];\n        //                 combine[j] = test[k5];\n        //                 changeRowtoZero_1(combine,array,i)\n        //                 remainderArraySlot1.push(test[k5])\n        //             }\n        //     }\n        //     changeToZero(array);\n        //     changeToZero(combine);\n        //     }\n        //     k5++  \n        // }\n        //fullfill the slot 3\n        //  for(let x = 0; x< array.length; x++){\n        //     if(k3 < remainderArraySlot1.length){                \n        //         checking_plus_1(combine,array,remainderArraySlot1[k3])\n        //         if(array[x] == 100 && array[x+1] ==100){\n        //             array[x] = remainderArraySlot1[k3]\n        //             array[x+1] = remainderArraySlot1[k3]\n        //             combine[x] = remainderArraySlot1[k3]\n        //             combine[x+1] = remainderArraySlot1[k3]\n        //             changeRowtoZero_plus_1(combine,array,x,x+1)\n        //         }else{insertedData50_Slot2_2.push(remainderArraySlot1[k3])}\n        //      }\n        //      k3++   \n        //  }\n        //  changeToZero(array);\n        //  changeToZero(combine);\n        //  for(let x = 0; x< array.length; x++){\n        //     if(k2 < remainderArray.length){\n        //         checking_plus_1(combine,array,remainderArray[k2])\n        //          if(array[x] == 100 && array[x+1] ==100){\n        //                  array[x] = remainderArray[k2]\n        //                  array[x+1] = remainderArray[k2]\n        //                  combine[x] = remainderArray[k2]\n        //                  combine[x+1] = remainderArray[k2]\n        //                  changeRowtoZero_plus_1(combine,array,x,x+1)\n        //              }\n        //              try{\n        //                  let slot2 = remainderArray[k2][10]\n        //                  if(slot2 == 1){\n        //                      insertedData50_Slot2_1.push(remainderArray[k2])\n        //                  }\n        //                  if(slot2 == 2){\n        //                     insertedData50_Slot2_2.push(remainderArray[k2])\n        //                 }\n        //              }catch{}\n        //      }\n        //      k2++   \n        //  }\n        //   changeToZero(array)\n        //   changeToZero(combine)\n        //  if(array[-1] != undefined){\n        //      insertedData50_Slot2_1.push(array[-1]);\n        //  }\n\n\n        return array;\n      };\n\n      var AntArrIns50 = AntAlgoInsert50(AntArr50, AntArrCombine, pheAntArrCombine); //  const slot2Equal1for50= (array,combine) => {\n      //      let k = 0;\n      //      let test2 = []\n      //     let totalRoom = array.length / 38\n      //      for(let x = 0; x< array.length; x++){\n      //             if(array[x] == 100){\n      //                 if(k < insertedData50_Slot2_1.length){\n      //                     checking_only_1(combine,array,insertedData50_Slot2_1[k])\n      //                     array[x] = insertedData50_Slot2_1[k]\n      //                     combine[x] = insertedData50_Slot2_1[k]\n      //                 }\n      //                 k++   \n      //          }\n      //      }\n      //      changeToZero(array)\n      //      changeToZero(combine)\n      //      return array;\n      //  }\n      // slot2Equal1for50(AntArr50,AntArrCombine);\n      //  const slot2Equal2for50 = (array,combine) => {\n      //      let k = 0;\n      //     let totalRoom = array.length / 38\n      //      for(let x = 0; x< array.length; x++){\n      //          if(array[x] == 100 && array[x+1] ==100){\n      //             if(k < insertedData50_Slot2_2.length){\n      //                 checking_plus_1(combine,array,insertedData50_Slot2_2[k])\n      //                  array[x] = insertedData50_Slot2_2[k]\n      //                  array[x+1] = insertedData50_Slot2_2[k]\n      //                  combine[x] = insertedData50_Slot2_2[k]\n      //                  combine[x+1] = insertedData50_Slot2_2[k]\n      //              }\n      //              k++\n      //          }\n      //      }\n      //      changeToZero(array)\n      //      changeToZero(combine)\n      //      if(array[-1] != undefined){\n      //          insertedData50_Slot2_1.push(array[-1]);\n      //      }\n      //      return array;\n      //  }\n      //  slot2Equal2for50(AntArr50,AntArrCombine);\n\n      const checkAmountData50_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined && array[i] != 1) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_2 = checkAmountData50_2(AntArrIns50);\n      console.log(AntArrIns50);\n      console.log(checkAmount_2);\n\n      const checkAmountData50_0 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_0 = checkAmountData50_0(AntArr50);\n      console.log(checkAmount_0); //______________________________________________________________________________________________________________________________________________\n      //create 1d array for dataset less than 100\n      //create 1d array for dataset less than 100\n      //create 1d array for dataset less than 100\n      // const array1D100 = (data) => {\n      //     var result = []\n      //     for(let i = 0; i< data; i++){\n      //         result[i]= 100;\n      //     }\n      //     return result;\n      // }\n      // var AntArr100 = array1D100(DataArray100);\n      // let insertedData100_Slot2_2 = []\n      // let insertedData100_Slot2_1= []\n      // let arrayLength100 =  DataArray100\n      // const AntAlgoInsert100 = (array,combine) => {\n      //     //array.length = 1064 (last index = 1063)\n      //     //array.length = 646 (last index = 645)\n      //     let test = []\n      //     let k = 0;\n      //     let k2 =0\n      //     let k3 =0\n      //     let k4=0\n      //     let k5 =0\n      //     let count = 0;\n      //     let b = 1\n      //     let remainderArray = []\n      //     let remainderArraySlot1 = []\n      //     let totalRoom = array.length / 38\n      //     for(let x=0; x<filterData100.length;x++){\n      //         test.push(filterData100[x]);\n      //     }\n      //         //for(let i = array.length-1;i>0;i--){\n      //         for(let i = array.length-1;i>0;i--){\n      //             if(k < test.length){\n      //             let hourMS = test[k][7]    \n      //             //checkTest(AntArr100,test[k])\n      //             changeToZero(array);\n      //             changeToZero(combine);\n      //             if(hourMS == 2){\n      //                 //changeToZero(array)\n      //                 const j = Math.floor(Math.random()*(i+1));\n      //                 // checking_minus_1(array,test[k])\n      //                 // checking_plus_1(array,test[k])\n      //                 checking_minus_1(combine,array,test[k])\n      //                 checking_plus_1(combine,array,test[k])\n      //                 //checking_only_1(array,test[k])\n      //                 //checkTest(AntArr100,test[k])\n      //                 if(array[i] == 100 && array[i-1] == 100){\n      //                         array[i] = array[j];\n      //                         array[i-1] = array[j-1];\n      //                         array[j] = test[k];\n      //                         array[j-1] = test[k];\n      //                         combine[j+startIndex100] = test[k];\n      //                         combine[j+startIndex100-1] = test[k];\n      //                         //changeRowtoZero_minus_1(array,i,i-1)\n      //                         changeRowtoZero_minus_1(combine,array,i,i-1)\n      //                         //checking_minus_1(array,test[k])\n      //                  }\n      //                  else if(array[i] == 100 && array[i+1] == 100){\n      //                         //checking_plus_1(array,test[k])\n      //                         array[i] = array[j];\n      //                         array[i+1] = array[j+1];\n      //                         array[j] = test[k];\n      //                         array[j+1] = test[k];\n      //                         combine[j+startIndex100] = test[k];\n      //                         combine[j+startIndex100+1] = test[k];\n      //                         //changeRowtoZero_plus_1(array,i,i+1)\n      //                         changeRowtoZero_plus_1(combine,i,i+1)\n      //                         //checking_plus_1(array,test[k])\n      //                 }\n      //                 else{\n      //                     remainderArray.push(test[k]);\n      //                 }\n      //             }\n      //             // changeToZero(array);\n      //             // changeToZero(combine);\n      //             }\n      //             k++  \n      //         }\n      //         for(let i = array.length-1;i>0;i--){\n      //             if(k4 < test.length){\n      //             let hourMS = test[k4][7]    \n      //             //checkTest(AntArr100,test[k])\n      //             changeToZero(array)\n      //             changeToZero(combine)\n      //             if(hourMS == 4){\n      //                 // checking_minus_1(array,test[k]);\n      //                 checking_minus_1(combine,array,test[k4]);\n      //                 checking_plus_1(combine,array,test[k4])\n      //                 //checking_only_1(array,test[k])\n      //                 //checkTest(AntArr100,test[k])\n      //                 const j = Math.floor(Math.random()*(i+1));\n      //                     if(array[i] == 100 && array[i-1] == 100 ){\n      //                         array[i] = array[j];\n      //                         array[i-1] = array[j-1];\n      //                         array[j] = test[k4];\n      //                         array[j-1] = test[k4];\n      //                         combine[j+startIndex100] = test[k4];\n      //                         combine[j+startIndex100-1] = test[k4];\n      //                         //const j = Math.floor(Math.random()*(i+1));\n      //                         changeRowtoZero_minus_1(combine,array,j,j-1);\n      //                         if(array[i] == 100 && array[i-1] == 100){\n      //                             //checking_minus_1(array,test[k]);\n      //                             array[i] = array[j];\n      //                             array[i-1] = array[j-1];\n      //                             array[j] = test[k4];\n      //                             array[j-1] = test[k4];\n      //                             combine[j+startIndex100] = test[k4];\n      //                             combine[j+startIndex100-1] = test[k4];\n      //                             //changeRowtoZero_minus_1(array,i,i-1)\n      //                             changeRowtoZero_minus_1(combine,array,j,j-1);\n      //                         }\n      //                         else if(array[i] == 100 && array[i+1] == 100){\n      //                             //checking_plus_1(array,test[k]);\n      //                             array[i] = array[j];\n      //                             array[i+1] = array[j+1];\n      //                             array[j] = test[k4];\n      //                             array[j+1] = test[k4];\n      //                             combine[j+startIndex100] = test[k4];\n      //                             combine[j+startIndex100+1] = test[k4];\n      //                             //changeRowtoZero_plus_1(array,j,j-1);\n      //                             changeRowtoZero_plus_1(combine,array,j,j-1);\n      //                         }\n      //                         else{\n      //                             remainderArraySlot1.push(test[k4]);\n      //                         }\n      //                         //count += 1\n      //                     }\n      //                     else if(array[i] == 100 && array[i+1] == 100 ){\n      //                         //checking_plus_1(array,test[k]);\n      //                         array[i] = array[j];\n      //                         array[i+1] = array[j+1];\n      //                         array[j] = test[k4];\n      //                         array[j+1] = test[k4];\n      //                         combine[j+startIndex100] = test[k4];\n      //                         combine[j+startIndex100+1] = test[k4];\n      //                         changeRowtoZero_plus_1(combine,array,i,i-1);\n      //                         //const j = Math.floor(Math.random()*(i+1));\n      //                         if(array[i] == 100 && array[i-1] == 100){\n      //                         //checking_minus_1(array,test[k]);\n      //                             array[i] = array[j];\n      //                             array[i-1] = array[j-1];\n      //                             array[j] = test[k4];\n      //                             array[j-1] = test[k4];\n      //                             combine[j+startIndex100] = test[k4];\n      //                             combine[j+startIndex100-1] = test[k4];\n      //                             //changeRowtoZero_minus_1(array,i,i-1)\n      //                             changeRowtoZero_minus_1(combine,array,j,j-1);\n      //                         }\n      //                         else if(array[i] == 100 && array[i+1] == 100){\n      //                             //checking_plus_1(array,test[k]);\n      //                             array[i] = array[j];\n      //                             array[i+1] = array[j+1];\n      //                             array[j] = test[k4];\n      //                             array[j+1] = test[k4];\n      //                             combine[j+startIndex100] = test[k4];\n      //                             combine[j+startIndex100+1] = test[k4];\n      //                             //changeRowtoZero_plus_1(array,i,i-1);\n      //                             changeRowtoZero_plus_1(combine,array,j,j-1);\n      //                         }\n      //                         else{\n      //                             remainderArraySlot1.push(test[k4]);\n      //                         }\n      //                     }\n      //                     else{\n      //                         remainderArray.push(test[k4]);\n      //                     }\n      //             }\n      //             changeToZero(array);\n      //             changeToZero(combine);\n      //             }\n      //             k4++  \n      //         }\n      //         for(let i = array.length-1;i>0;i--){\n      //             if(k5 < test.length){\n      //             let hourMS = test[k5][7]    \n      //             //checkTest(AntArr100,test[k])\n      //             changeToZero(array)\n      //             changeToZero(combine)\n      //             if(hourMS == 3){\n      //                 const j = Math.floor(Math.random()*(i+1)); \n      //                     checking_3(combine,array,test[k5]);\n      //                     //checking_only_1(array,test[k])\n      //                     //checkTest(AntArr100,test[k])\n      //                     if( array[i] == 100 && array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\n      //                         //checking_3(array,test[k]);\n      //                         array[i] = array[j];\n      //                         array[i-1] = array[j-1];\n      //                         array[i+1] = array[j+1];\n      //                         array[j] = test[k5];\n      //                         array[j-1] = test[k5];\n      //                         array[j+1] = test[k5];\n      //                         combine[j+startIndex100] = test[k5];\n      //                         combine[j+startIndex100-1] = test[k5];\n      //                         combine[j+startIndex100+1] = test[k5];\n      //                         changeRowtoZero_3_(combine,array,i,i-1,i+1)\n      //                     }else if(array[i] == 100 && array[i-1] == 100){//slot 2 hours in 1 go\n      //                         //checking_minus_1(array,test[k]);\n      //                         array[i] = array[j];\n      //                         array[i-1] = array[j-1];\n      //                         array[j] = test[k5];\n      //                         array[j-1] = test[k5];\n      //                         combine[j+startIndex100] = test[k5];\n      //                         combine[j+startIndex100-1] = test[k5];\n      //                         insertedData100_Slot2_1.push(test[k5])\n      //                         changeRowtoZero_minus_1(combine,array,i,i-1)\n      //                     }else if(array[i] == 100 && array[i+1] == 100){//slot 2 hours in 1 go\n      //                         //checking_plus_1(array,test[k]);\n      //                         array[i] = array[j];\n      //                         array[i+1] = array[j+1];\n      //                         array[j] = test[k5];\n      //                         array[j+1] = test[k5];\n      //                         combine[j+startIndex100] = test[k5];\n      //                         combine[j+startIndex100+1] = test[k5];\n      //                         insertedData100_Slot2_1.push(test[k5])\n      //                         changeRowtoZero_plus_1(combine,array,i,i-1);\n      //                     }else if(array[i] == 100 ){//slot 1 hours in 1 go\n      //                         //checking_only_1(array,test[k]);\n      //                         array[i] = array[j];\n      //                         array[j] = test[k5];\n      //                         combine[j+startIndex100] = test[k5];\n      //                         changeRowtoZero_1(combine,array,i)\n      //                         remainderArraySlot1.push(test[k5])\n      //                     }\n      //             }\n      //             changeToZero(array);\n      //             changeToZero(combine);\n      //             }\n      //             k5++  \n      //         }\n      //  //changeToZero(array) \n      //  //fullfill the slot 3\n      //  for(let x = 0; x< array.length; x++){\n      //     if(k3 < remainderArraySlot1.length){                \n      //         //checking_only_1(array, remainderArraySlot1[k3])\n      //         //checkTest(AntArr100,remainderArraySlot1[k3])\n      //         checking_plus_1(combine,array,remainderArraySlot1[k3])\n      //         if(array[x] == 100 && array[x+1] ==100){\n      //             //changeRowtoZero_plus_1(array,remainderArraySlot1[k3])\n      //             array[x] = remainderArraySlot1[k3]\n      //             array[x+1] = remainderArraySlot1[k3]\n      //             combine[x+startIndex100] = remainderArraySlot1[k3]\n      //             combine[x+startIndex100+1] = remainderArraySlot1[k3]\n      //             changeRowtoZero_plus_1(combine,array,x,x+1)\n      //         }else{insertedData100_Slot2_2.push(remainderArraySlot1[k3])}\n      //      }\n      //      k3++   \n      //  }\n      //  changeToZero(array);\n      //  changeToZero(combine);\n      //  for(let x = 0; x< array.length; x++){\n      //     if(k2 < remainderArray.length){\n      //         //checkTest(AntArr100,remainderArray[k2])\n      //         checking_plus_1(combine,array,remainderArray[k2])\n      //          if(array[x] == 100 && array[x+1] ==100){\n      //              //if(k2 < remainderArray.length){\n      //                 //changeRowtoZero_plus_1(array,remainderArraySlot1[k2])\n      //                  array[x] = remainderArray[k2]\n      //                  array[x+1] = remainderArray[k2]\n      //                  combine[x+startIndex100] = remainderArray[k2]\n      //                  combine[x+startIndex100+1] = remainderArray[k2]\n      //                  changeRowtoZero_plus_1(combine,array,x,x+1)\n      //              }\n      //              try{\n      //                  let slot2 = remainderArray[k2][10]\n      //                  if(slot2 == 1){\n      //                      insertedData100_Slot2_1.push(remainderArray[k2])\n      //                  }\n      //                  if(slot2 == 2){\n      //                     insertedData100_Slot2_2.push(remainderArray[k2])\n      //                 }\n      //              }catch{}\n      //      }\n      //      k2++   \n      //  }\n      //   changeToZero(array)\n      //   changeToZero(combine)\n      // //  for(let i = 0; i < array.length; i++){\n      // //     if(array[i] != 100 && array[i] !=100 && array[i] != 0 && array[i] != undefined && array[i] != 1){\n      // //         count += 1\n      // //     }\n      // // }\n      // //console.log(count);\n      //  if(array[-1] != undefined){\n      //      insertedData100_Slot2_1.push(array[-1]);\n      //  }\n      //     return array;\n      // }\n      // //var AntArrIns100 = AntAlgoInsert100(AntArr100);\n      // var AntArrIns100 = AntAlgoInsert100(AntArr100,AntArrCombine);\n      // //console.log(AntArrIns100);\n      //  const slot2Equal1for100= (array,combine) => {\n      //      let k = 0;\n      //      let test2 = []\n      //     let totalRoom = array.length / 38\n      //      for(let x = 0; x< array.length; x++){\n      //             if(array[x] == 100){\n      //                 if(k < insertedData100_Slot2_1.length){\n      //                     checking_only_1(combine,array,insertedData100_Slot2_1[k])\n      //                     array[x] = insertedData100_Slot2_1[k]\n      //                     combine[x+startIndex100] = insertedData100_Slot2_1[k]\n      //                 //changeRowtoZero_1(array,x)\n      //                 }\n      //                 k++   \n      //          }\n      //      }\n      //      changeToZero(array)\n      //      changeToZero(combine)\n      //      return array;\n      //  }\n      // slot2Equal1for100(AntArr100,AntArrCombine);\n      // //slot2Equal1for100(AntArrCombine);\n      //  const slot2Equal2for100 = (array,combine) => {\n      //      let k = 0;\n      //     let totalRoom = array.length / 38\n      //      for(let x = 0; x< array.length; x++){\n      //          if(array[x] == 100 && array[x+1] ==100){\n      //             if(k < insertedData100_Slot2_2.length){\n      //                 //checking_only_1(array,insertedData100_Slot2_2[k])\n      //                 //checkTest(AntArr100,insertedData100_Slot2_2[k])\n      //                 checking_plus_1(combine,array,insertedData100_Slot2_2[k])\n      //                  array[x] = insertedData100_Slot2_2[k]\n      //                  array[x+1] = insertedData100_Slot2_2[k]\n      //                  combine[x+startIndex100] = insertedData100_Slot2_2[k]\n      //                  combine[x+startIndex100+1] = insertedData100_Slot2_2[k]\n      //                  //changeRowtoZero_plus_1(array,x,x+1)\n      //              }\n      //              k++\n      //          }\n      //      }\n      //      changeToZero(array)\n      //      changeToZero(combine)\n      //      if(array[-1] != undefined){\n      //          insertedData100_Slot2_1.push(array[-1]);\n      //      }\n      //      return array;\n      //  }\n      //  slot2Equal2for100(AntArr100,AntArrCombine);\n      //  //slot2Equal2for100(AntArrCombine);\n      // const checkAmountData100_2 = (array) => {\n      //     let count = 0\n      //     for(let i = 0; i < array.length; i++){\n      //             if(array[i] != 100 && array[i] !=100 && array[i] != 0 && array[i] != undefined && array[i] != 1){\n      //                 count += 1\n      //             }\n      //     }\n      //     return count\n      // }\n      // //var checkAmount_2 = checkAmountData100_2(AntArrIns100)\n      // var checkAmount_2 = checkAmountData100_2(AntArrIns100)\n      // //console.log(AntArrIns100)\n      // //console.log(\"Amount of data: \" +checkAmount_2);\n      // const checkAmountData100_0 = (array) => {\n      //     let count = 0\n      //     for(let i = 0; i < array.length; i++){\n      //             if( array[i] == 0 ){\n      //                 count += 1\n      //             }\n      //     }\n      //     return count\n      // }\n      //  //var checkAmount_0 = checkAmountData100_0(AntArr100)\n      //  var checkAmount_0 = checkAmountData100_0(AntArr100)\n      // //console.log(\"zero counter: \"+checkAmount_0);\n      // // _____________________________________________________________________________________________________________________________________________________\n      // const array1D200 = (data) => {\n      //     var result = []\n      //     for(let i = 0; i< data; i++){\n      //         result[i]= 100;\n      //     }\n      //     return result;\n      // }\n      // var AntArr200 = array1D200(DataArray200);\n      // let insertedData200_Slot2_2 = []\n      // let insertedData200_Slot2_1= []\n      // let arrayLength200 =  DataArray200\n      // const AntAlgoInsert200 = (array,combine) => {\n      //     //array.length = 1064 (last index = 1063)\n      //     //array.length = 646 (last index = 645)\n      //     let test = []\n      //     let k = 0;\n      //     let k2 =0\n      //     let k3 =0\n      //     let k4=0\n      //     let k5 =0\n      //     let count = 0;\n      //     let b = 1\n      //     let remainderArray = []\n      //     let remainderArraySlot1 = []\n      //     let totalRoom = array.length / 38\n      //     for(let x=0; x<filterData200.length;x++){\n      //         test.push(filterData200[x]);\n      //     }\n      //         //for(let i = array.length-1;i>0;i--){\n      //         for(let i = array.length-1;i>0;i--){\n      //             if(k < test.length){\n      //             let hourMS = test[k][7]    \n      //             //checkTest(AntArr200,test[k])\n      //             changeToZero(array);\n      //             changeToZero(combine);\n      //             if(hourMS == 2){\n      //                 //changeToZero(array)\n      //                 const j = Math.floor(Math.random()*(i+1));\n      //                 // checking_minus_1(array,test[k])\n      //                 // checking_plus_1(array,test[k])\n      //                 checking_minus_1(combine,array,test[k])\n      //                 checking_plus_1(combine,array,test[k])\n      //                 //checking_only_1(array,test[k])\n      //                 //checkTest(AntArr200,test[k])\n      //                 if(array[i] == 100 && array[i-1] == 100){\n      //                         array[i] = array[j];\n      //                         array[i-1] = array[j-1];\n      //                         array[j] = test[k];\n      //                         array[j-1] = test[k];\n      //                         combine[j+startIndex100] = test[k];\n      //                         combine[j+startIndex100-1] = test[k];\n      //                         //changeRowtoZero_minus_1(array,i,i-1)\n      //                         changeRowtoZero_minus_1(combine,array,i,i-1)\n      //                         //checking_minus_1(array,test[k])\n      //                  }\n      //                  else if(array[i] == 100 && array[i+1] == 100){\n      //                         //checking_plus_1(array,test[k])\n      //                         array[i] = array[j];\n      //                         array[i+1] = array[j+1];\n      //                         array[j] = test[k];\n      //                         array[j+1] = test[k];\n      //                         combine[j+startIndex100] = test[k];\n      //                         combine[j+startIndex100+1] = test[k];\n      //                         //changeRowtoZero_plus_1(array,i,i+1)\n      //                         changeRowtoZero_plus_1(combine,i,i+1)\n      //                         //checking_plus_1(array,test[k])\n      //                 }\n      //                 else{\n      //                     remainderArray.push(test[k]);\n      //                 }\n      //             }\n      //             // changeToZero(array);\n      //             // changeToZero(combine);\n      //             }\n      //             k++  \n      //         }\n      //         for(let i = array.length-1;i>0;i--){\n      //             if(k4 < test.length){\n      //             let hourMS = test[k4][7]    \n      //             //checkTest(AntArr200,test[k])\n      //             changeToZero(array)\n      //             changeToZero(combine)\n      //             if(hourMS == 4){\n      //                 // checking_minus_1(array,test[k]);\n      //                 checking_minus_1(combine,array,test[k4]);\n      //                 checking_plus_1(combine,array,test[k4])\n      //                 //checking_only_1(array,test[k])\n      //                 //checkTest(AntArr200,test[k])\n      //                 const j = Math.floor(Math.random()*(i+1));\n      //                     if(array[i] == 100 && array[i-1] == 100 ){\n      //                         array[i] = array[j];\n      //                         array[i-1] = array[j-1];\n      //                         array[j] = test[k4];\n      //                         array[j-1] = test[k4];\n      //                         combine[j+startIndex100] = test[k4];\n      //                         combine[j+startIndex100-1] = test[k4];\n      //                         //const j = Math.floor(Math.random()*(i+1));\n      //                         changeRowtoZero_minus_1(combine,array,j,j-1);\n      //                         if(array[i] == 100 && array[i-1] == 100){\n      //                             //checking_minus_1(array,test[k]);\n      //                             array[i] = array[j];\n      //                             array[i-1] = array[j-1];\n      //                             array[j] = test[k4];\n      //                             array[j-1] = test[k4];\n      //                             combine[j+startIndex100] = test[k4];\n      //                             combine[j+startIndex100-1] = test[k4];\n      //                             //changeRowtoZero_minus_1(array,i,i-1)\n      //                             changeRowtoZero_minus_1(combine,array,j,j-1);\n      //                         }\n      //                         else if(array[i] == 100 && array[i+1] == 100){\n      //                             //checking_plus_1(array,test[k]);\n      //                             array[i] = array[j];\n      //                             array[i+1] = array[j+1];\n      //                             array[j] = test[k4];\n      //                             array[j+1] = test[k4];\n      //                             combine[j+startIndex100] = test[k4];\n      //                             combine[j+startIndex100+1] = test[k4];\n      //                             //changeRowtoZero_plus_1(array,j,j-1);\n      //                             changeRowtoZero_plus_1(combine,array,j,j-1);\n      //                         }\n      //                         else{\n      //                             remainderArraySlot1.push(test[k4]);\n      //                         }\n      //                         //count += 1\n      //                     }\n      //                     else if(array[i] == 100 && array[i+1] == 100 ){\n      //                         //checking_plus_1(array,test[k]);\n      //                         array[i] = array[j];\n      //                         array[i+1] = array[j+1];\n      //                         array[j] = test[k4];\n      //                         array[j+1] = test[k4];\n      //                         combine[j+startIndex100] = test[k4];\n      //                         combine[j+startIndex100+1] = test[k4];\n      //                         changeRowtoZero_plus_1(combine,array,i,i-1);\n      //                         //const j = Math.floor(Math.random()*(i+1));\n      //                         if(array[i] == 100 && array[i-1] == 100){\n      //                         //checking_minus_1(array,test[k]);\n      //                             array[i] = array[j];\n      //                             array[i-1] = array[j-1];\n      //                             array[j] = test[k4];\n      //                             array[j-1] = test[k4];\n      //                             combine[j+startIndex100] = test[k4];\n      //                             combine[j+startIndex100-1] = test[k4];\n      //                             //changeRowtoZero_minus_1(array,i,i-1)\n      //                             changeRowtoZero_minus_1(combine,array,j,j-1);\n      //                         }\n      //                         else if(array[i] == 100 && array[i+1] == 100){\n      //                             //checking_plus_1(array,test[k]);\n      //                             array[i] = array[j];\n      //                             array[i+1] = array[j+1];\n      //                             array[j] = test[k4];\n      //                             array[j+1] = test[k4];\n      //                             combine[j+startIndex100] = test[k4];\n      //                             combine[j+startIndex100+1] = test[k4];\n      //                             //changeRowtoZero_plus_1(array,i,i-1);\n      //                             changeRowtoZero_plus_1(combine,array,j,j-1);\n      //                         }\n      //                         else{\n      //                             remainderArraySlot1.push(test[k4]);\n      //                         }\n      //                     }\n      //                     else{\n      //                         remainderArray.push(test[k4]);\n      //                     }\n      //             }\n      //             changeToZero(array);\n      //             changeToZero(combine);\n      //             }\n      //             k4++  \n      //         }\n      //         for(let i = array.length-1;i>0;i--){\n      //             if(k5 < test.length){\n      //             let hourMS = test[k5][7]    \n      //             //checkTest(AntArr200,test[k])\n      //             changeToZero(array)\n      //             changeToZero(combine)\n      //             if(hourMS == 3){\n      //                 const j = Math.floor(Math.random()*(i+1)); \n      //                     checking_3(combine,array,test[k5]);\n      //                     //checking_only_1(array,test[k])\n      //                     //checkTest(AntArr200,test[k])\n      //                     if( array[i] == 100 && array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\n      //                         //checking_3(array,test[k]);\n      //                         array[i] = array[j];\n      //                         array[i-1] = array[j-1];\n      //                         array[i+1] = array[j+1];\n      //                         array[j] = test[k5];\n      //                         array[j-1] = test[k5];\n      //                         array[j+1] = test[k5];\n      //                         combine[j+startIndex100] = test[k5];\n      //                         combine[j+startIndex100-1] = test[k5];\n      //                         combine[j+startIndex100+1] = test[k5];\n      //                         changeRowtoZero_3_(combine,array,i,i-1,i+1)\n      //                     }else if(array[i] == 100 && array[i-1] == 100){//slot 2 hours in 1 go\n      //                         //checking_minus_1(array,test[k]);\n      //                         array[i] = array[j];\n      //                         array[i-1] = array[j-1];\n      //                         array[j] = test[k5];\n      //                         array[j-1] = test[k5];\n      //                         combine[j+startIndex100] = test[k5];\n      //                         combine[j+startIndex100-1] = test[k5];\n      //                         insertedData200_Slot2_1.push(test[k5])\n      //                         changeRowtoZero_minus_1(combine,array,i,i-1)\n      //                     }else if(array[i] == 100 && array[i+1] == 100){//slot 2 hours in 1 go\n      //                         //checking_plus_1(array,test[k]);\n      //                         array[i] = array[j];\n      //                         array[i+1] = array[j+1];\n      //                         array[j] = test[k5];\n      //                         array[j+1] = test[k5];\n      //                         combine[j+startIndex100] = test[k5];\n      //                         combine[j+startIndex100+1] = test[k5];\n      //                         insertedData200_Slot2_1.push(test[k5])\n      //                         changeRowtoZero_plus_1(combine,array,i,i-1);\n      //                     }else if(array[i] == 100 ){//slot 1 hours in 1 go\n      //                         //checking_only_1(array,test[k]);\n      //                         array[i] = array[j];\n      //                         array[j] = test[k5];\n      //                         combine[j+startIndex100] = test[k5];\n      //                         changeRowtoZero_1(combine,array,i)\n      //                         remainderArraySlot1.push(test[k5])\n      //                     }\n      //             }\n      //             changeToZero(array);\n      //             changeToZero(combine);\n      //             }\n      //             k5++  \n      //         }\n      //  //changeToZero(array) \n      //  //fullfill the slot 3\n      //  for(let x = 0; x< array.length; x++){\n      //     if(k3 < remainderArraySlot1.length){                \n      //         //checking_only_1(array, remainderArraySlot1[k3])\n      //         //checkTest(AntArr200,remainderArraySlot1[k3])\n      //         checking_plus_1(combine,array,remainderArraySlot1[k3])\n      //         if(array[x] == 100 && array[x+1] ==100){\n      //             //changeRowtoZero_plus_1(array,remainderArraySlot1[k3])\n      //             array[x] = remainderArraySlot1[k3]\n      //             array[x+1] = remainderArraySlot1[k3]\n      //             combine[x+startIndex200] = remainderArraySlot1[k3]\n      //             combine[x+startIndex200+1] = remainderArraySlot1[k3]\n      //             changeRowtoZero_plus_1(combine,array,x,x+1)\n      //         }else{insertedData200_Slot2_2.push(remainderArraySlot1[k3])}\n      //      }\n      //      k3++   \n      //  }\n      //  changeToZero(array);\n      //  changeToZero(combine);\n      //  for(let x = 0; x< array.length; x++){\n      //     if(k2 < remainderArray.length){\n      //         //checkTest(AntArr200,remainderArray[k2])\n      //         checking_plus_1(combine,array,remainderArray[k2])\n      //          if(array[x] == 100 && array[x+1] ==100){\n      //              //if(k2 < remainderArray.length){\n      //                 //changeRowtoZero_plus_1(array,remainderArraySlot1[k2])\n      //                  array[x] = remainderArray[k2]\n      //                  array[x+1] = remainderArray[k2]\n      //                  combine[x+startIndex200] = remainderArray[k2]\n      //                  combine[x+startIndex200+1] = remainderArray[k2]\n      //                  changeRowtoZero_plus_1(combine,array,x,x+1)\n      //              }\n      //              try{\n      //                  let slot2 = remainderArray[k2][10]\n      //                  if(slot2 == 1){\n      //                      insertedData200_Slot2_1.push(remainderArray[k2])\n      //                  }\n      //                  if(slot2 == 2){\n      //                     insertedData200_Slot2_2.push(remainderArray[k2])\n      //                 }\n      //              }catch{}\n      //      }\n      //      k2++   \n      //  }\n      //   changeToZero(array)\n      //   changeToZero(combine)\n      // //  for(let i = 0; i < array.length; i++){\n      // //     if(array[i] != 100 && array[i] !=200 && array[i] != 0 && array[i] != undefined && array[i] != 1){\n      // //         count += 1\n      // //     }\n      // // }\n      // //console.log(count);\n      //  if(array[-1] != undefined){\n      //      insertedData200_Slot2_1.push(array[-1]);\n      //  }\n      //     return array;\n      // }\n      // //var AntArrIns200 = AntAlgoInsert200(AntArr200);\n      // var AntArrIns200 = AntAlgoInsert200(AntArr200,AntArrCombine);\n      // //console.log(AntArrIns200);\n      //  const slot2Equal1for200= (array,combine) => {\n      //      let k = 0;\n      //      let test2 = []\n      //     let totalRoom = array.length / 38\n      //      for(let x = 0; x< array.length; x++){\n      //             if(array[x] == 100){\n      //                 if(k < insertedData200_Slot2_1.length){\n      //                     checking_only_1(combine,array,insertedData200_Slot2_1[k])\n      //                     array[x] = insertedData200_Slot2_1[k]\n      //                     combine[x+startIndex200] = insertedData200_Slot2_1[k]\n      //                 //changeRowtoZero_1(array,x)\n      //                 }\n      //                 k++   \n      //          }\n      //      }\n      //      changeToZero(array)\n      //      changeToZero(combine)\n      //      return array;\n      //  }\n      // slot2Equal1for200(AntArr200,AntArrCombine);\n      // //slot2Equal1for200(AntArrCombine);\n      //  const slot2Equal2for200 = (array,combine) => {\n      //      let k = 0;\n      //     let totalRoom = array.length / 38\n      //      for(let x = 0; x< array.length; x++){\n      //          if(array[x] == 100 && array[x+1] ==100){\n      //             if(k < insertedData200_Slot2_2.length){\n      //                 //checking_only_1(array,insertedData200_Slot2_2[k])\n      //                 //checkTest(AntArr200,insertedData200_Slot2_2[k])\n      //                 checking_plus_1(combine,array,insertedData200_Slot2_2[k])\n      //                  array[x] = insertedData200_Slot2_2[k]\n      //                  array[x+1] = insertedData200_Slot2_2[k]\n      //                  combine[x+startIndex200] = insertedData200_Slot2_2[k]\n      //                  combine[x+startIndex200+1] = insertedData200_Slot2_2[k]\n      //                  //changeRowtoZero_plus_1(array,x,x+1)\n      //              }\n      //              k++\n      //          }\n      //      }\n      //      changeToZero(array)\n      //      changeToZero(combine)\n      //      if(array[-1] != undefined){\n      //          insertedData200_Slot2_1.push(array[-1]);\n      //      }\n      //      return array;\n      //  }\n      //  slot2Equal2for200(AntArr200,AntArrCombine);\n      //  //slot2Equal2for200(AntArrCombine);\n      // const checkAmountData200_2 = (array) => {\n      //     let count = 0\n      //     for(let i = 0; i < array.length; i++){\n      //             if(array[i] != 100 && array[i] !=200 && array[i] != 0 && array[i] != undefined && array[i] != 1){\n      //                 count += 1\n      //             }\n      //     }\n      //     return count\n      // }\n      // //var checkAmount_2 = checkAmountData200_2(AntArrIns200)\n      // var checkAmount_2 = checkAmountData200_2(AntArrIns200)\n      // // console.log(AntArrIns200)\n      // // console.log(\"Amount of data: \" +checkAmount_2);\n      // const checkAmountData200_0 = (array) => {\n      //     let count = 0\n      //     for(let i = 0; i < array.length; i++){\n      //             if( array[i] == 0 ){\n      //                 count += 1\n      //             }\n      //     }\n      //     return count\n      // }\n      //  //var checkAmount_0 = checkAmountData200_0(AntArr200)\n      //  var checkAmount_0 = checkAmountData200_0(AntArr200)\n      // //console.log(\"zero counter: \"+checkAmount_0);\n      // //________________________________________________________________________________________________________________________________________________________\n      // const array1D500 = (data) => {\n      //     var result = []\n      //     for(let i = 0; i< data; i++){\n      //         result[i]= 100;\n      //     }\n      //     return result;\n      // }\n      // var AntArr500 = array1D500(DataArray500);\n      // let insertedData500_Slot2_2 = []\n      // let insertedData500_Slot2_1= []\n      // let arrayLength500 =  DataArray500\n      // const AntAlgoInsert500 = (array,combine) => {\n      //     //array.length = 1064 (last index = 1063)\n      //     //array.length = 646 (last index = 645)\n      //     let test = []\n      //     let k = 0;\n      //     let k2 =0\n      //     let k3 =0\n      //     let k4=0\n      //     let k5 =0\n      //     let count = 0;\n      //     let b = 1\n      //     let remainderArray = []\n      //     let remainderArraySlot1 = []\n      //     let totalRoom = array.length / 38\n      //     for(let x=0; x<filterData500.length;x++){\n      //         test.push(filterData500[x]);\n      //     }\n      //         //for(let i = array.length-1;i>0;i--){\n      //         for(let i = array.length-1;i>0;i--){\n      //             if(k < test.length){\n      //             let hourMS = test[k][7]    \n      //             //checkTest(AntArr500,test[k])\n      //             changeToZero(array);\n      //             changeToZero(combine);\n      //             if(hourMS == 2){\n      //                 //changeToZero(array)\n      //                 const j = Math.floor(Math.random()*(i+1));\n      //                 // checking_minus_1(array,test[k])\n      //                 // checking_plus_1(array,test[k])\n      //                 checking_minus_1(combine,array,test[k])\n      //                 checking_plus_1(combine,array,test[k])\n      //                 //checking_only_1(array,test[k])\n      //                 //checkTest(AntArr500,test[k])\n      //                 if(array[i] == 100 && array[i-1] == 100){\n      //                         array[i] = array[j];\n      //                         array[i-1] = array[j-1];\n      //                         array[j] = test[k];\n      //                         array[j-1] = test[k];\n      //                         combine[j+startIndex100] = test[k];\n      //                         combine[j+startIndex100-1] = test[k];\n      //                         //changeRowtoZero_minus_1(array,i,i-1)\n      //                         changeRowtoZero_minus_1(combine,array,i,i-1)\n      //                         //checking_minus_1(array,test[k])\n      //                  }\n      //                  else if(array[i] == 100 && array[i+1] == 100){\n      //                         //checking_plus_1(array,test[k])\n      //                         array[i] = array[j];\n      //                         array[i+1] = array[j+1];\n      //                         array[j] = test[k];\n      //                         array[j+1] = test[k];\n      //                         combine[j+startIndex100] = test[k];\n      //                         combine[j+startIndex100+1] = test[k];\n      //                         //changeRowtoZero_plus_1(array,i,i+1)\n      //                         changeRowtoZero_plus_1(combine,i,i+1)\n      //                         //checking_plus_1(array,test[k])\n      //                 }\n      //                 else{\n      //                     remainderArray.push(test[k]);\n      //                 }\n      //             }\n      //             // changeToZero(array);\n      //             // changeToZero(combine);\n      //             }\n      //             k++  \n      //         }\n      //         for(let i = array.length-1;i>0;i--){\n      //             if(k4 < test.length){\n      //             let hourMS = test[k4][7]    \n      //             //checkTest(AntArr500,test[k])\n      //             changeToZero(array)\n      //             changeToZero(combine)\n      //             if(hourMS == 4){\n      //                 // checking_minus_1(array,test[k]);\n      //                 checking_minus_1(combine,array,test[k4]);\n      //                 checking_plus_1(combine,array,test[k4])\n      //                 //checking_only_1(array,test[k])\n      //                 //checkTest(AntArr500,test[k])\n      //                 const j = Math.floor(Math.random()*(i+1));\n      //                     if(array[i] == 100 && array[i-1] == 100 ){\n      //                         array[i] = array[j];\n      //                         array[i-1] = array[j-1];\n      //                         array[j] = test[k4];\n      //                         array[j-1] = test[k4];\n      //                         combine[j+startIndex100] = test[k4];\n      //                         combine[j+startIndex100-1] = test[k4];\n      //                         //const j = Math.floor(Math.random()*(i+1));\n      //                         changeRowtoZero_minus_1(combine,array,j,j-1);\n      //                         if(array[i] == 100 && array[i-1] == 100){\n      //                             //checking_minus_1(array,test[k]);\n      //                             array[i] = array[j];\n      //                             array[i-1] = array[j-1];\n      //                             array[j] = test[k4];\n      //                             array[j-1] = test[k4];\n      //                             combine[j+startIndex100] = test[k4];\n      //                             combine[j+startIndex100-1] = test[k4];\n      //                             //changeRowtoZero_minus_1(array,i,i-1)\n      //                             changeRowtoZero_minus_1(combine,array,j,j-1);\n      //                         }\n      //                         else if(array[i] == 100 && array[i+1] == 100){\n      //                             //checking_plus_1(array,test[k]);\n      //                             array[i] = array[j];\n      //                             array[i+1] = array[j+1];\n      //                             array[j] = test[k4];\n      //                             array[j+1] = test[k4];\n      //                             combine[j+startIndex100] = test[k4];\n      //                             combine[j+startIndex100+1] = test[k4];\n      //                             //changeRowtoZero_plus_1(array,j,j-1);\n      //                             changeRowtoZero_plus_1(combine,array,j,j-1);\n      //                         }\n      //                         else{\n      //                             remainderArraySlot1.push(test[k4]);\n      //                         }\n      //                         //count += 1\n      //                     }\n      //                     else if(array[i] == 100 && array[i+1] == 100 ){\n      //                         //checking_plus_1(array,test[k]);\n      //                         array[i] = array[j];\n      //                         array[i+1] = array[j+1];\n      //                         array[j] = test[k4];\n      //                         array[j+1] = test[k4];\n      //                         combine[j+startIndex100] = test[k4];\n      //                         combine[j+startIndex100+1] = test[k4];\n      //                         changeRowtoZero_plus_1(combine,array,i,i-1);\n      //                         //const j = Math.floor(Math.random()*(i+1));\n      //                         if(array[i] == 100 && array[i-1] == 100){\n      //                         //checking_minus_1(array,test[k]);\n      //                             array[i] = array[j];\n      //                             array[i-1] = array[j-1];\n      //                             array[j] = test[k4];\n      //                             array[j-1] = test[k4];\n      //                             combine[j+startIndex100] = test[k4];\n      //                             combine[j+startIndex100-1] = test[k4];\n      //                             //changeRowtoZero_minus_1(array,i,i-1)\n      //                             changeRowtoZero_minus_1(combine,array,j,j-1);\n      //                         }\n      //                         else if(array[i] == 100 && array[i+1] == 100){\n      //                             //checking_plus_1(array,test[k]);\n      //                             array[i] = array[j];\n      //                             array[i+1] = array[j+1];\n      //                             array[j] = test[k4];\n      //                             array[j+1] = test[k4];\n      //                             combine[j+startIndex100] = test[k4];\n      //                             combine[j+startIndex100+1] = test[k4];\n      //                             //changeRowtoZero_plus_1(array,i,i-1);\n      //                             changeRowtoZero_plus_1(combine,array,j,j-1);\n      //                         }\n      //                         else{\n      //                             remainderArraySlot1.push(test[k4]);\n      //                         }\n      //                     }\n      //                     else{\n      //                         remainderArray.push(test[k4]);\n      //                     }\n      //             }\n      //             changeToZero(array);\n      //             changeToZero(combine);\n      //             }\n      //             k4++  \n      //         }\n      //         for(let i = array.length-1;i>0;i--){\n      //             if(k5 < test.length){\n      //             let hourMS = test[k5][7]    \n      //             //checkTest(AntArr500,test[k])\n      //             changeToZero(array)\n      //             changeToZero(combine)\n      //             if(hourMS == 3){\n      //                 const j = Math.floor(Math.random()*(i+1)); \n      //                     checking_3(combine,array,test[k5]);\n      //                     //checking_only_1(array,test[k])\n      //                     //checkTest(AntArr500,test[k])\n      //                     if( array[i] == 100 && array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\n      //                         //checking_3(array,test[k]);\n      //                         array[i] = array[j];\n      //                         array[i-1] = array[j-1];\n      //                         array[i+1] = array[j+1];\n      //                         array[j] = test[k5];\n      //                         array[j-1] = test[k5];\n      //                         array[j+1] = test[k5];\n      //                         combine[j+startIndex100] = test[k5];\n      //                         combine[j+startIndex100-1] = test[k5];\n      //                         combine[j+startIndex100+1] = test[k5];\n      //                         changeRowtoZero_3_(combine,array,i,i-1,i+1)\n      //                     }else if(array[i] == 100 && array[i-1] == 100){//slot 2 hours in 1 go\n      //                         //checking_minus_1(array,test[k]);\n      //                         array[i] = array[j];\n      //                         array[i-1] = array[j-1];\n      //                         array[j] = test[k5];\n      //                         array[j-1] = test[k5];\n      //                         combine[j+startIndex100] = test[k5];\n      //                         combine[j+startIndex100-1] = test[k5];\n      //                         insertedData500_Slot2_1.push(test[k5])\n      //                         changeRowtoZero_minus_1(combine,array,i,i-1)\n      //                     }else if(array[i] == 100 && array[i+1] == 100){//slot 2 hours in 1 go\n      //                         //checking_plus_1(array,test[k]);\n      //                         array[i] = array[j];\n      //                         array[i+1] = array[j+1];\n      //                         array[j] = test[k5];\n      //                         array[j+1] = test[k5];\n      //                         combine[j+startIndex100] = test[k5];\n      //                         combine[j+startIndex100+1] = test[k5];\n      //                         insertedData500_Slot2_1.push(test[k5])\n      //                         changeRowtoZero_plus_1(combine,array,i,i-1);\n      //                     }else if(array[i] == 100 ){//slot 1 hours in 1 go\n      //                         //checking_only_1(array,test[k]);\n      //                         array[i] = array[j];\n      //                         array[j] = test[k5];\n      //                         combine[j+startIndex100] = test[k5];\n      //                         changeRowtoZero_1(combine,array,i)\n      //                         remainderArraySlot1.push(test[k5])\n      //                     }\n      //             }\n      //             changeToZero(array);\n      //             changeToZero(combine);\n      //             }\n      //             k5++  \n      //         }\n      //  //changeToZero(array) \n      //  //fullfill the slot 3\n      //  for(let x = 0; x< array.length; x++){\n      //     if(k3 < remainderArraySlot1.length){                \n      //         //checking_only_1(array, remainderArraySlot1[k3])\n      //         //checkTest(AntArr500,remainderArraySlot1[k3])\n      //         checking_plus_1(combine,array,remainderArraySlot1[k3])\n      //         if(array[x] == 100 && array[x+1] ==100){\n      //             //changeRowtoZero_plus_1(array,remainderArraySlot1[k3])\n      //             array[x] = remainderArraySlot1[k3]\n      //             array[x+1] = remainderArraySlot1[k3]\n      //             combine[x+startIndex500] = remainderArraySlot1[k3]\n      //             combine[x+startIndex500+1] = remainderArraySlot1[k3]\n      //             changeRowtoZero_plus_1(combine,array,x,x+1)\n      //         }else{insertedData500_Slot2_2.push(remainderArraySlot1[k3])}\n      //      }\n      //      k3++   \n      //  }\n      //  changeToZero(array);\n      //  changeToZero(combine);\n      //  for(let x = 0; x< array.length; x++){\n      //     if(k2 < remainderArray.length){\n      //         //checkTest(AntArr500,remainderArray[k2])\n      //         checking_plus_1(combine,array,remainderArray[k2])\n      //          if(array[x] == 100 && array[x+1] ==100){\n      //              //if(k2 < remainderArray.length){\n      //                 //changeRowtoZero_plus_1(array,remainderArraySlot1[k2])\n      //                  array[x] = remainderArray[k2]\n      //                  array[x+1] = remainderArray[k2]\n      //                  combine[x+startIndex500] = remainderArray[k2]\n      //                  combine[x+startIndex500+1] = remainderArray[k2]\n      //                  changeRowtoZero_plus_1(combine,array,x,x+1)\n      //              }\n      //              try{\n      //                  let slot2 = remainderArray[k2][10]\n      //                  if(slot2 == 1){\n      //                      insertedData500_Slot2_1.push(remainderArray[k2])\n      //                  }\n      //                  if(slot2 == 2){\n      //                     insertedData500_Slot2_2.push(remainderArray[k2])\n      //                 }\n      //              }catch{}\n      //      }\n      //      k2++   \n      //  }\n      //   changeToZero(array)\n      //   changeToZero(combine)\n      // //  for(let i = 0; i < array.length; i++){\n      // //     if(array[i] != 100 && array[i] !=500 && array[i] != 0 && array[i] != undefined && array[i] != 1){\n      // //         count += 1\n      // //     }\n      // // }\n      // //console.log(count);\n      //  if(array[-1] != undefined){\n      //      insertedData500_Slot2_1.push(array[-1]);\n      //  }\n      //     return array;\n      // }\n      // //var AntArrIns500 = AntAlgoInsert500(AntArr500);\n      // var AntArrIns500 = AntAlgoInsert500(AntArr500,AntArrCombine);\n      // //console.log(AntArrIns500);\n      //  const slot2Equal1for500= (array,combine) => {\n      //      let k = 0;\n      //      let test2 = []\n      //     let totalRoom = array.length / 38\n      //      for(let x = 0; x< array.length; x++){\n      //             if(array[x] == 100){\n      //                 if(k < insertedData500_Slot2_1.length){\n      //                     checking_only_1(combine,array,insertedData500_Slot2_1[k])\n      //                     array[x] = insertedData500_Slot2_1[k]\n      //                     combine[x+startIndex500] = insertedData500_Slot2_1[k]\n      //                 //changeRowtoZero_1(array,x)\n      //                 }\n      //                 k++   \n      //          }\n      //      }\n      //      changeToZero(array)\n      //      changeToZero(combine)\n      //      return array;\n      //  }\n      // slot2Equal1for500(AntArr500,AntArrCombine);\n      // //slot2Equal1for500(AntArrCombine);\n      //  const slot2Equal2for500 = (array,combine) => {\n      //      let k = 0;\n      //     let totalRoom = array.length / 38\n      //      for(let x = 0; x< array.length; x++){\n      //          if(array[x] == 100 && array[x+1] ==100){\n      //             if(k < insertedData500_Slot2_2.length){\n      //                 //checking_only_1(array,insertedData500_Slot2_2[k])\n      //                 //checkTest(AntArr500,insertedData500_Slot2_2[k])\n      //                 checking_plus_1(combine,array,insertedData500_Slot2_2[k])\n      //                  array[x] = insertedData500_Slot2_2[k]\n      //                  array[x+1] = insertedData500_Slot2_2[k]\n      //                  combine[x+startIndex500] = insertedData500_Slot2_2[k]\n      //                  combine[x+startIndex500+1] = insertedData500_Slot2_2[k]\n      //                  //changeRowtoZero_plus_1(array,x,x+1)\n      //              }\n      //              k++\n      //          }\n      //      }\n      //      changeToZero(array)\n      //      changeToZero(combine)\n      //      if(array[-1] != undefined){\n      //          insertedData500_Slot2_1.push(array[-1]);\n      //      }\n      //      return array;\n      //  }\n      //  slot2Equal2for500(AntArr500,AntArrCombine);\n      //  //slot2Equal2for500(AntArrCombine);\n      // const checkAmountData500_2 = (array) => {\n      //     let count = 0\n      //     for(let i = 0; i < array.length; i++){\n      //             if(array[i] != 100 && array[i] !=500 && array[i] != 0 && array[i] != undefined && array[i] != 1){\n      //                 count += 1\n      //             }\n      //     }\n      //     return count\n      // }\n      // //var checkAmount_2 = checkAmountData500_2(AntArrIns500)\n      // var checkAmount_2 = checkAmountData500_2(AntArrIns500)\n      // // console.log(AntArrIns500)\n      // // console.log(\"Amount of data: \" +checkAmount_2);\n      // const checkAmountData500_0 = (array) => {\n      //     let count = 0\n      //     for(let i = 0; i < array.length; i++){\n      //             if( array[i] == 0 ){\n      //                 count += 1\n      //             }\n      //     }\n      //     return count\n      // }\n      //  //var checkAmount_0 = checkAmountData500_0(AntArr500)\n      //  var checkAmount_0 = checkAmountData500_0(AntArr500)\n      // //console.log(\"zero counter: \"+checkAmount_0);\n      //______________________________________________________________________________________________________________________________________________\n\n      const checkAmountDataCombine_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 100 && array[i] != 0 && array[i] != undefined && array[i] != 1) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_combine = checkAmountDataCombine_2(AntArrCombine);\n      console.log(AntArrCombine);\n      console.log(\"Amount of data: \" + checkAmount_combine); //  var phecheckAmount_combine = checkAmountDataCombine_2(pheAntArrCombine)\n      //  console.log(pheAntArrCombine)\n      //  console.log(\"Amount of data: \" + phecheckAmount_combine);\n\n      const checkAmountDataCombine = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      }; //var checkAmount_0 = checkAmountData100_0(AntArr100)\n\n\n      var checkAmount_combineData = checkAmountDataCombine(AntArrCombine); //console.log(\"zero counter: \"+checkAmount_combineData);\n      //---------------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------------\n      //console.log(dataCombine)\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n      // Hard Constraint \n      // H1: No student attend more than one class/ event at the same time\n      // H2: The room is large enough to accomodate all of the student in attendace while also meeting the requirement \n      // H3: At any given time, each room can onle have one course booked\n      // H4: No student attend class during 12:00 pm -2:00 due to solat jumaat\n      // H5: One teacher can only teach one class at one time.\n      //Check for the H1 violation: same group attend more than 1 class at 1 time\n\n      const check1Group = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n        }\n\n        for (let x = 1; x <= totalRoom; x++) {\n          try {\n            for (let i = 0; i < array.length; i++) {\n              indexArray = x * 37;\n\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined && array[i + indexArray] != 1 && array[i + indexArray] != 0) {\n                try {\n                  if (array[i][6] == array[i + indexArray][6] && array[i][5] == array[i + indexArray][5]) {\n                    try {\n                      console.log(array[i]);\n                      console.log(array[i][6]);\n                      console.log(array[i + indexArray]);\n                      console.log(array[i + indexArray][6]);\n                      count += 1;\n                    } catch {}\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH1_ALL = check1Group(AntArrCombine); //Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\n\n      const checkRoomQuota = array => {\n        let count = 0;\n        return count;\n      }; //Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\n\n\n      const checkSolatJummat = array => {\n        let count = 0;\n        return count;\n      }; //Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\n\n\n      const check1Teacher = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n\n          try {\n            for (let i = 1; i < array.length; i++) {\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined && array[i + indexArray] != 1 && array[i + indexArray] != 0) {\n                try {\n                  if (array[i][5] == array[i + indexArray][5]) {\n                    console.log(array[i]);\n                    console.log(array[i][5]);\n                    console.log(array[i + indexArray]);\n                    console.log(array[i + indexArray][5]);\n                    count += 1;\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH5_ALL = check1Teacher(AntArrCombine);\n\n      const checkHC = (data1, data2) => {\n        let count = 0; // if(data1 != 0){\n        //     count +=1\n        // }\n        // if(data2 != 0){\n        //     count +=1\n        // }\n\n        count = data1 + data2;\n        return count;\n      };\n\n      let checkTotalHardContraints = checkHC(checkH5_ALL, checkH1_ALL);\n      console.log(\"Total Hard Constraint: \" + checkTotalHardContraints); //----------------------------------------------------------------------------------------------------------------------------------------\n      // Soft Constraint \n      // S1: A student has a class schedule toward the end of the day\n      // S2: A student have more than two class in a row\n      //Check for the S1 violation: student have class at the end of the day\n\n      const checkEndOfClass = array => {\n        let count = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          let indexArray = x * 37;\n\n          if (array[indexArray] != 100) {\n            count = 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkSC1_ALL = checkEndOfClass(AntArrCombine); //Check for the S2 violation: student have 2 class in a row\n\n      const check2ClassInARow = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          try {\n            if (array[i][5] != undefined && array[i + 3][5] != undefined && array[i + 2][5] != undefined && array[i + 4][5] != undefined) {\n              if (array[i][6] == array[i + 3][6] && array[i + 2][6] == array[i + 4][6]) {\n                count = 1;\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkSC2_ALL = checkEndOfClass(AntArrCombine); //----------------------------------------------------------------------------------------------------------------------------------------------\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n\n      const checkTotalSoftContraint = () => {\n        let count = 0;\n        let totalSC = checkSC1_ALL + checkSC2_ALL; // let totalS1 = checkS1_50 + checkS1_100 + checkS1_200 + checkS1_500 + checkS1_Elective50 + checkS1_Elective100 + checkS1_Elective200 + checkS1_Elective500\n        // let totalS2 = checkS2_50 + checkS2_100 + checkS2_200 + checkS2_500 + checkS2_Elective50 + checkS2_Elective100 + checkS2_Elective200 + checkS2_Elective500\n\n        if (totalSC != 0) {\n          count += 1;\n        }\n\n        return count;\n      };\n\n      var checkTotalSoftContraints = checkTotalSoftContraint();\n      console.log(\"Total Soft Constraint: \" + checkTotalSoftContraints); //----------------------------------------------------------------------------------------------------------------------------------------------\n\n      const change100ToEmpty = data => {\n        for (let i = 0; i < data.length; i++) {\n          if (data[i] == 100) {\n            data[i] = [];\n          }\n        }\n\n        return data;\n      };\n\n      let finalData = change100ToEmpty(AntArrCombine);\n\n      const change100ToEmptyElective = data => {\n        for (let i = 0; i < data.length; i++) {\n          if (data[i] == 100) {\n            data[i] = [];\n          }\n        }\n\n        return data;\n      }; // const checkMissingData = (data50,data100,data200,data500,dataE50,dataE100,dataE200,dataE500) => {\n      //     let countData = []\n      //     for(let i = 0; i< courseData[0].length;i++){\n      //         for(let j = 0; j <courseData[0][i][7]; j++){\n      //             countData.push(courseData[0][i]);\n      //         }\n      //     }\n      //     let totalGenerateScheduleData = data50 + data100 + data200 + data500 + dataE50 + dataE100 + dataE200 + dataE500\n      //     if(countData.length == totalGenerateScheduleData){\n      //     }else{\n      //     }\n      // }\n      // //checkMissingData(checkAmount50,checkAmount100,checkAmount200,checkAmount500,checkAmountElective50,checkAmountElective100,checkAmountElective200,checkAmountElective500)\n\n\n      checkTotalHardContraintsAll = checkTotalHardContraints;\n      checkTotalSoftContraintsAll = checkTotalSoftContraints;\n      finalDataAll.push(finalData);\n      return {\n        checkTotalHardContraints,\n        checkTotalSoftContraints,\n        finalData\n      }; ////return {checkTotalHardContraints,checkTotalSoftContraints}\n    }; // for(let i = 1; i <= 1; i++){\n    //     console.log(\"iteration: \" + i)\n    //     let antSystemAlgo = antSystem();\n    // }\n    // -------------------------------------------------------------------------------------------------------------------------------------------\n\n\n    let trigger = 0;\n    var t0 = performance.now();\n\n    const iteration = () => {\n      //antSystem()\n      let globalBestHS = checkTotalHardContraintsAll;\n      let globalBestSS = checkTotalSoftContraintsAll;\n      let globalBestScehdule = finalDataAll[0]; // let globalBestScehduleElective = finalDataAllElective[0]\n\n      for (let i = 1; i <= 1; i++) {\n        antSystem();\n        let localBestHS = checkTotalHardContraintsAll;\n        let localBestSS = checkTotalSoftContraintsAll;\n        let localBestScehdule = finalDataAll[0]; // let localBestScehduleElective = finalDataAllElective[0]\n\n        console.log(\"iteraion: \" + i);\n\n        if (globalBestHS > localBestHS) {\n          globalBestHS = localBestHS;\n          globalBestSS = localBestSS;\n          globalBestScehdule = localBestScehdule; // globalBestScehduleElective = localBestScehduleElective\n        }\n\n        if (localBestHS == 0) {\n          console.log(\"iteraion: \" + i);\n          console.log(\"workable solution is found\");\n          globalBestHS = localBestHS;\n          globalBestSS = localBestSS;\n          globalBestScehdule = localBestScehdule; // globalBestScehduleElective = localBestScehduleElective\n\n          console.log(\"Workable Gloabal best HS: \" + globalBestHS);\n          console.log(\"Workable Gloabal best SS: \" + globalBestSS); //console.log(finalDataAll[0])\n\n          trigger = 1; //return [finalDataAll[0], finalDataAllElective[0]]\n\n          return [finalDataAll[0]];\n        } else if (localBestHS == 0 && localBestSS == 0) {\n          console.log(\"iteraion: \" + i);\n          console.log(\"perfect solution is found\");\n          globalBestHS = localBestHS;\n          globalBestSS = localBestSS;\n          globalBestScehdule = localBestScehdule;\n          console.log(\"Perfect Gloabal best HS: \" + globalBestHS);\n          console.log(\"Perfect Gloabal best SS: \" + globalBestSS);\n          console.log(finalDataAll[0]);\n          trigger = 1; //return [finalDataAll[0], finalDataAllElective[0]]\n\n          return [finalDataAll[0]];\n        }\n      } //return [finalDataAll[0], finalDataAllElective[0]]\n\n\n      return [finalDataAll[0]];\n    };\n\n    let interations = iteration();\n    let presentableData = []; //let presentableDataElective = []\n\n    if (trigger == 1) {\n      //shot course code, course name and lecturer    \n      const changeToPresentationData = data => {\n        for (let i = 0; i <= data[0].length; i++) {\n          try {\n            presentableData.push([data[0][i][1], data[0][i][2], data[0][i][5]]);\n          } catch (error) {}\n        }\n      };\n\n      changeToPresentationData(interations);\n      let allRoomName = [];\n\n      for (let i = 0; i < roomData[0].length; i++) {\n        allRoomName.push(roomData[0][i][0]);\n      }\n\n      allRoomName.unshift(\"Room\");\n\n      if (allRoomName.pop() == undefined) {}\n\n      let weekday = ['Monday', 'Monday', 'Monday', 'Monday', 'Monday', 'Monday', 'Monday', 'Monday', 'Monday', 'Monday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Friday', 'Friday', 'Friday', 'Friday', 'Friday', 'Friday', 'Friday', 'Friday'];\n\n      const create2dArray = (weekdayArray, partDay, arrayAll, partAll) => {\n        var tmp = [];\n\n        for (var i = 0; i < weekdayArray.length; i += partDay) {\n          tmp.push(weekdayArray.slice(i, i + partDay));\n        }\n\n        for (var i = 0; i < arrayAll.length; i += partAll) {\n          tmp.push(arrayAll.slice(i, i + partAll));\n        }\n\n        return tmp;\n      };\n\n      let dataset = create2dArray(weekday, 38, presentableData, 38);\n      console.log(dataset);\n\n      const insertRoomName = (roomData, array) => {\n        for (let i = 0; i < array.length; i++) {\n          array[i].unshift(roomData[i]);\n        }\n\n        return array;\n      };\n\n      insertRoomName(allRoomName, dataset);\n      /** Convert a 2D array into a CSV string\r\n       */\n\n      function arrayToCsv(data) {\n        //console.log(data)\n        return data.map(row => row.map(String) // convert every value to String\n        .map(v => v.replaceAll('\"', '\"\"')) // escape double colons\n        .map(v => `\"${v}\"`) // quote it\n        .join(',') // comma-separated\n        ).join('\\r\\n'); // rows starting on new lines\n      }\n\n      let csv = arrayToCsv(dataset);\n\n      function downloadBlob(content, filename, contentType) {\n        // Create a blob\n        var blob = new Blob([content], {\n          type: contentType\n        });\n        var url = URL.createObjectURL(blob); // Create a link to download it\n\n        var pom = document.createElement('a');\n        pom.href = url;\n        pom.setAttribute('download', filename);\n        pom.click();\n      }\n      /** Convert a 2D array into a CSV string\r\n       * elective\r\n      */\n\n\n      function downloadBlobElective(content, filename, contentType) {\n        // Create a blob\n        var blob = new Blob([content], {\n          type: contentType\n        });\n        var url = URL.createObjectURL(blob); // Create a link to download it\n\n        var pom = document.createElement('a');\n        pom.href = url;\n        pom.setAttribute('download', filename);\n        pom.click();\n      }\n\n      var t1 = performance.now();\n      console.log(\"Duration: \" + (t1 - t0)); //downloadBlob(csv, 'ModifiedAntSystem_GeneratedSchedule.csv', 'text/csv;charset=utf-8;')\n      //downloadBlobElective(csvElective, 'ModifiedAntSystemElective_GeneratedSchedule.csv', 'text/csv;charset=utf-8;')\n    } else {\n      var t1 = performance.now();\n      console.log(\"Duration: \" + (t1 - t0) + \" milliseconds\"); //alert(\"no workable solution found, please refersh until get workable solution\")\n    } //----------------------------------------------------------------------------------------------------------------------------------------\n\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3095,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3096,\n      columnNumber: 13\n    }\n  }, \"Please wait while generating schedule\"));\n};\n\nexport default ArraySchedule;","map":{"version":3,"sources":["C:/Users/acit/Desktop/FYP Code/FYP Code/frontend/src/components/GenerateSchedulePage/GenerateSchedulePage.js"],"names":["concat","create","find","forEach","indexOf","React","useEffect","useState","useContext","useParams","_","CSVLink","LoadingSpinner","finalDataAll","finalDataAllElective","checkHardConstraintOutsite","checkSoftConstraintOutsite","ArraySchedule","props","isLoading","setIsLoading","loadedFile","setLoaadedFile","roomData","setroomData","courseData","setcourseData","CsvData","setCsvData","userId","sendRequest","response","fetch","responsedata","json","stringifyData","JSON","stringify","userWithFiles","Dataset","ertRoom","map","ertCourse","ok","Error","message","err","console","log","EnrollmentQuota","CourseCode","HMS","lecturerData","roomName","roomSize","filterData50","filterData100","filterData200","filterData500","filterDataElective50","filterDataElective100","filterDataElective200","filterDataElective500","room","push","i","length","enrollment","code","hms","lecturer","reduce","results","item","index","array","name","size","notDuplicatesRoom","filter","notDuplicatesLecturer","pop","courseDataXElective","courseDataWithElective","splice","roomUnder50","roomUnder100","roomUnder200","roomUnder500","checkNumberofRoom","createArray","data","result","DataArray50","DataArray100","DataArray200","DataArray500","combineArray","pheCombineArray","startIndex100","startIndex200","startIndex500","checkTotalHardContraintsAll","checkTotalSoftContraintsAll","sleep","ms","Promise","resolve","setTimeout","antSystem","checking_minus_1","array2","k","b","totalRoom","totalRoom2","u","indexArray","checking_minus_1_phe","checking_plus_1","checking_plus_1_phe","checking_3","indexArray2","checking_only_1","changeRowtoZero_minus_1","index1","index2","changeRowtoZero_plus_1","changeRowtoZero_1","changeRowtoZero_3_","index3","changeToZero","checkTest","data1","count","x","checking_1","checking_1_phe","array1DCombine","AntArrCombine","pheAntArrCombine","checkDay","combine","c","z","zeroMonday","zeroMondayCom","zeroTuesday","zeroTuesdayCom","zeroThursday","zeroThursdayCom","zeroFriday","zeroFridayCom","array1D50","AntArr50","insertedData50_Slot2_2","insertedData50_Slot2_1","AntAlgoInsert50","test","k2","k3","k4","k5","hms2","hms3","hms4","hms2Remainder","arrayTemp100","remainderArray","remainderArraySlot1","j","Math","floor","random","v","p","AntArrIns50","checkAmountData50_2","undefined","checkAmount_2","checkAmountData50_0","checkAmount_0","checkAmountDataCombine_2","checkAmount_combine","checkAmountDataCombine","checkAmount_combineData","check1Group","checkH1_ALL","checkRoomQuota","checkSolatJummat","check1Teacher","checkH5_ALL","checkHC","data2","checkTotalHardContraints","checkEndOfClass","checkSC1_ALL","check2ClassInARow","checkSC2_ALL","checkTotalSoftContraint","totalSC","checkTotalSoftContraints","change100ToEmpty","finalData","change100ToEmptyElective","trigger","t0","performance","now","iteration","globalBestHS","globalBestSS","globalBestScehdule","localBestHS","localBestSS","localBestScehdule","interations","presentableData","changeToPresentationData","error","allRoomName","unshift","weekday","create2dArray","weekdayArray","partDay","arrayAll","partAll","tmp","slice","dataset","insertRoomName","arrayToCsv","row","String","replaceAll","join","csv","downloadBlob","content","filename","contentType","blob","Blob","type","url","URL","createObjectURL","pom","document","createElement","href","setAttribute","click","downloadBlobElective","t1"],"mappings":"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","sourcesContent":["import { concat, create, find, forEach, indexOf } from \"lodash\";\r\nimport React,{ useEffect,useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport _ from 'lodash';\r\nimport { CSVLink } from \"react-csv\";\r\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\r\n\r\n\r\nlet finalDataAll = [];\r\nlet finalDataAllElective = [];\r\nlet checkHardConstraintOutsite = 0;\r\nlet checkSoftConstraintOutsite = 0;\r\n\r\nconst ArraySchedule = (props) => {\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [loadedFile, setLoaadedFile] = useState(false);\r\n    const [roomData, setroomData] = useState();\r\n    const [courseData, setcourseData] = useState();\r\n    const [CsvData, setCsvData] = useState();\r\n    // const [Keys, setKeys] = useState();\r\n    //const [uploadedData, setUploadedData] = useState([]);\r\n    //console.log(\"props dataset:\"+ props.test)\r\n\r\n    const userId = useParams().userId;\r\n    useEffect(()=>{\r\n        const sendRequest = async () =>{\r\n            setIsLoading(true);\r\n            try{\r\n            const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875');\r\n            //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\r\n            //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\r\n            const responsedata = await response.json();\r\n            let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset);\r\n\r\n            // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\r\n            const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset =>[Dataset['Room'],Dataset['Size']]); //Extract Room\r\n            setroomData([ertRoom]);\r\n\r\n            const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'],Dataset['Course Code'],Dataset['Course Name'],Dataset['Year'],Dataset['Semester'],Dataset['Lecturer'],Dataset['Group'],Dataset['HMS'],Dataset['Programme Code'],Dataset['Slot1'],Dataset['Slot2']]); //Extract Enrollment Quota\r\n            setcourseData([ertCourse]);\r\n\r\n            if (!response.ok){\r\n                throw new Error(responsedata.message);\r\n            }\r\n            setLoaadedFile(stringifyData);\r\n            setIsLoading(true);\r\n            }catch(err){\r\n                console.log(err.message);\r\n            }\r\n            setIsLoading(false);\r\n            \r\n        };\r\n        sendRequest();\r\n    },[userId]);\r\n\r\n        if(!isLoading && loadedFile){\r\n            const EnrollmentQuota = [];\r\n            const CourseCode = [];\r\n            const HMS = [];\r\n            const lecturerData = []\r\n            const roomName = [];\r\n            const roomSize = [];\r\n            const filterData50  = [];\r\n            const filterData100  = [];\r\n            const filterData200  = [];\r\n            const filterData500  = [];\r\n            const filterDataElective50  = [];\r\n            const filterDataElective100  = [];\r\n            const filterDataElective200  = [];\r\n            const filterDataElective500  = [];\r\n            const room = []\r\n            room.push(roomData[0])\r\n            \r\n\r\n            for(let i = 0; i <courseData[0].length; i++){\r\n                let enrollment = [courseData[0][i][0]];\r\n                let code = [courseData[0][i][1]];\r\n                let hms = [courseData[0][i][7]];\r\n                let lecturer = [courseData[0][i][5]];\r\n                enrollment.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    EnrollmentQuota.push(item);\r\n                },{});\r\n                code.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    CourseCode.push(item);\r\n                },{});\r\n                hms.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    HMS.push(item);\r\n                },{});\r\n                lecturer.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    lecturerData.push(item);\r\n                },{});\r\n            }\r\n\r\n            for(let i = 0; i <roomData[0].length; i++){\r\n                let name = [roomData[0][i][0]];\r\n                let size = [roomData[0][i][1]];\r\n                name.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomName.push(item);\r\n                },{});\r\n                size.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomSize.push(item);\r\n                },{});\r\n            }\r\n \r\n            \r\n            const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\r\n\r\n            const notDuplicatesLecturer = lecturerData.filter((item, index) => index == lecturerData.indexOf(item));\r\n            notDuplicatesLecturer.pop();\r\n\r\n\r\n            let courseDataXElective = []\r\n            let courseDataWithElective = []\r\n            courseData[0].pop()\r\n\r\n            //saparate faculty course with the elective course\r\n            for(let i=0; i< courseData[0].length; i++){\r\n                if(courseData[0][i][8] != 'ELECTIVE'){\r\n                //if(courseData[0][i][1].slice(0,3) != 'TMU'){\r\n                    courseData[0][i].splice()\r\n                    courseDataXElective.push(courseData[0][i])\r\n                    // if(  courseData[0][i][1].slice(0,3) != 'TMX'){\r\n                    //     courseData[0][i].splice()\r\n                    //     courseDataXElective.push(courseData[0][i])\r\n                    // }\r\n                }\r\n            }\r\n\r\n            //saparate elective course with the faculty course\r\n            for(let i=0; i< courseData[0].length; i++){\r\n                //console.log(courseData[0][i][8])\r\n                //if(courseData[0][i][1].slice(0,3) == 'TMU' ||  courseData[0][i][1].slice(0,3) == 'TMX'){\r\n                if(courseData[0][i][8] == 'ELECTIVE'){\r\n                    courseDataWithElective.push(courseData[0][i])\r\n                }\r\n            }\r\n\r\n            //insert data without elective courses into correct room capacity\r\n                for(let i = 0; i< courseDataXElective.length;i++){\r\n                        if (courseDataXElective[i][0] < 50) {\r\n                            filterData50.push(courseDataXElective[i]);\r\n                        }\r\n                        if (courseDataXElective[i][0] >= 50 && courseDataXElective[i][0] < 100) {\r\n                            \r\n                            filterData100.push(courseDataXElective[i]);\r\n                        }\r\n                        if (courseDataXElective[i][0] >= 100 && courseDataXElective[i][0] < 200 ) {\r\n                            filterData200.push(courseDataXElective[i]);\r\n                        }\r\n                        if (courseDataXElective[i][0] >= 200 && courseDataXElective[i][0] < 500) {\r\n                            filterData500.push(courseDataXElective[i]);\r\n                        }\r\n                }\r\n                //console.log(filterData50)\r\n\r\n                //insert data without faculty courses into correct room capacity\r\n                for(let i = 0; i< courseDataWithElective.length;i++){\r\n                    if (courseDataWithElective[i][0] < 50) {\r\n                        filterDataElective50.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 50 && courseDataWithElective[i][0] < 100) {\r\n                        \r\n                        filterDataElective100.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 100 && courseDataWithElective[i][0] < 200 ) {\r\n                        filterDataElective200.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 200 && courseDataWithElective[i][0] < 500) {\r\n                        filterDataElective500.push(courseDataWithElective[i]);\r\n                    }\r\n                }\r\n\r\n\r\n            let roomUnder50 = []\r\n            let roomUnder100 = []\r\n            let roomUnder200 = []\r\n            let roomUnder500 = []\r\n\r\n            //separate room \r\n            const checkNumberofRoom = () => {\r\n                for(let i = 0; i < roomData[0].length; i++){\r\n                    let room = roomData[0][i][1]\r\n                    if(room < 50){\r\n                        roomUnder50.push(room)\r\n                    }else if(room > 50 && room < 100){\r\n                        roomUnder100.push(room)\r\n\r\n                    }else if(room > 100 && room < 200){\r\n                        roomUnder200.push(room)\r\n\r\n                    }else if(room > 200){\r\n                        roomUnder500.push(room)\r\n                    }\r\n                }\r\n            }\r\n            checkNumberofRoom();\r\n\r\n\r\n            const createArray = (data) => {\r\n                var result = []\r\n\r\n                    for(let i = 0; i<data; i++){\r\n                        result[i] = []\r\n                    }\r\n                return result;\r\n            }\r\n\r\n            let DataArray50 = roomUnder50.length * 38;\r\n            let DataArray100 = roomUnder100.length * 38;\r\n            let DataArray200 = roomUnder200.length * 38;\r\n            let DataArray500 = roomUnder500.length * 38;\r\n            let combineArray = DataArray50 + DataArray100 + DataArray200 + DataArray500\r\n            let pheCombineArray = DataArray50 + DataArray100 + DataArray200 + DataArray500\r\n\r\n            let startIndex100 = DataArray50-1\r\n            let startIndex200 = DataArray50+ DataArray100-1\r\n            let startIndex500 = DataArray50 +DataArray100+DataArray200-1\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nvar checkTotalHardContraintsAll = 0\r\nvar checkTotalSoftContraintsAll = 0\r\n\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\nconst antSystem = () => {\r\n\r\n//______________________________________________________________________________________________________________________________________________\r\n//Faculty courses\r\n\r\nconst checking_minus_1 = (array,array2,data) => {\r\n    let k =0\r\n    let b =0\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u-1] != 100 && array[u-1][5] == data[5]){\r\n            if(array[u] != 100 && data[5] != array[u][5] || data[6] == array[u][6] && array[u-1] != 100 && data[5] == array[u-1][5] || data[6] == array[u-1][6]){\r\n                for(let b =0; b < totalRoom; b++){\r\n                    let indexArray = b*38\r\n                    if( array[u+indexArray] ==100 && array[u+indexArray-1] ==100){\r\n                        array[u+indexArray] = 0\r\n                        array[u+indexArray-1] = 0\r\n                        array2[u+indexArray] = 0\r\n                        array2[u+indexArray-1] = 0\r\n                    }\r\n                    if( array[u-indexArray] ==100 && array[u-indexArray-1] ==100){\r\n                        array[u-indexArray] = 0\r\n                        array[u-indexArray-1] = 0\r\n                        array2[u-indexArray] = 0\r\n                        array2[u-indexArray-1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array\r\n\r\n\r\n}\r\n\r\nconst checking_minus_1_phe = (array,array2,data) => {\r\n    let k =0\r\n    let b =0\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u-1] != 100 && array[u-1][5] == data[5]){\r\n            if(array[u] != 100 && data[5] != array[u][5] || data[6] == array[u][6] && array[u-1] != 100 && data[5] == array[u-1][5] || data[6] == array[u-1][6]){\r\n                for(let b =0; b < totalRoom2; b++){\r\n                    let indexArray = b*38\r\n                    //if( array[u+indexArray] ==100 && array[u+indexArray-1] ==100){\r\n                    if( array2[u+indexArray] ==100 && array2[u+indexArray-1] ==100){\r\n                        // array[u+indexArray] = 0\r\n                        // array[u+indexArray-1] = 0\r\n                        array2[u+indexArray] = 0\r\n                        array2[u+indexArray-1] = 0\r\n                    }\r\n                    //if( array[u-indexArray] ==100 && array[u-indexArray-1] ==100){\r\n                    if( array2[u-indexArray] ==100 && array2[u-indexArray-1] ==100){\r\n                        // array[u-indexArray] = 0\r\n                        // array[u-indexArray-1] = 0\r\n                        array2[u-indexArray] = 0\r\n                        array2[u-indexArray-1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array2\r\n\r\n\r\n}\r\n\r\nconst checking_plus_1 = (array,array2,data) => {\r\n\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\r\n            if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6] && array[u+1] != 100 && data[5] == array[u+1][5] || data[6] == array[u+1][6]){\r\n                for(let b =0; b < totalRoom; b++){\r\n                    let indexArray = b*38\r\n                    if( array[u+indexArray] ==100 && array[u+indexArray+1] ==100){\r\n                        array[u+indexArray] = 0\r\n                        array[u+indexArray+1] = 0\r\n                        array2[u+indexArray] = 0\r\n                        array2[u+indexArray+1] = 0\r\n                    }\r\n                    if( array[u-indexArray] ==100 && array[u-indexArray+1] ==100){\r\n                        array[u-indexArray] = 0\r\n                        array[u-indexArray+1] = 0\r\n                        array2[u-indexArray] = 0\r\n                        array2[u-indexArray+1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array\r\n}\r\n\r\nconst checking_plus_1_phe = (array,array2,data) => {\r\n\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\r\n            if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6] && array[u+1] != 100 && data[5] == array[u+1][5] || data[6] == array[u+1][6]){\r\n                for(let b =0; b < totalRoom2; b++){\r\n                    let indexArray = b*38\r\n                    //if( array[u+indexArray] ==100 && array[u+indexArray+1] ==100){\r\n                    if( array2[u+indexArray] ==100 && array2[u+indexArray+1] ==100){\r\n                        // array[u+indexArray] = 0\r\n                        // array[u+indexArray+1] = 0\r\n                        array2[u+indexArray] = 0\r\n                        array2[u+indexArray+1] = 0\r\n                    }\r\n                    //if( array[u-indexArray] ==100 && array[u-indexArray+1] ==100){\r\n                    if( array2[u-indexArray] ==100 && array2[u-indexArray+1] ==100){\r\n                        // array[u-indexArray] = 0\r\n                        // array[u-indexArray+1] = 0\r\n                        array2[u-indexArray] = 0\r\n                        array2[u-indexArray+1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array2\r\n}\r\n\r\nconst checking_3 = (array,array2,data) =>{\r\n\r\n\r\n    let k =0\r\n    let b =0\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u-1] != 100 && array[u-1][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\r\n            if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]  && array[u-1] != 100 && data[5] == array[u-1][5] && array[u+1] != 100 && data[5] == array[u+1][5] || data[6] == array[u-1][6] && array[u+1] != 100 && data[6] == array[u+1][6]){\r\n                for(let b =0; b < totalRoom; b++){\r\n                    let indexArray = b*38\r\n\r\n                    if( array[u+indexArray] ==100 && array[u+indexArray-1] ==100){\r\n                        array[u+indexArray] = 0\r\n                        array[u+indexArray-1] = 0\r\n                    }\r\n                    if( array[u-indexArray] ==100 && array[u-indexArray-1] ==100){\r\n                        array[u-indexArray] = 0\r\n                        array[u-indexArray-1] = 0\r\n                    }\r\n                    if( array[u+indexArray] ==100 && array[u+indexArray+1] ==100){\r\n                        array[u+indexArray] = 0\r\n                        array[u+indexArray+1] = 0\r\n                    }\r\n                    if( array[u-indexArray] ==100 && array[u-indexArray+1] ==100){\r\n                        array[u-indexArray] = 0\r\n                        array[u-indexArray+1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n\r\n    for(let u = 0; u < array2.length; u++){\r\n        try{\r\n            //if( array2[u] != 100 && array2[u][5] == data[5] && array2[u-1] != 100 && array2[u-1][5] == data[5] && array2[u+1] != 100 && array2[u+1][5] == data[5]){\r\n            if( array2[u] != 100 && data[5] == array2[u][5] || data[6] == array2[u][6]  && array2[u-1] != 100 && data[5] == array2[u-1][5] && array2[u+1] != 100 && data[5] == array2[u+1][5] || data[6] == array2[u-1][6] && array2[u+1] != 100 && data[6] == array2[u+1][6]){\r\n                for(let b =0; b < totalRoom2; b++){\r\n                    let indexArray2 = b*38\r\n\r\n                    if( array2[u+indexArray2] ==100 && array2[u+indexArray2-1] ==100){\r\n                        array2[u+indexArray2] = 0\r\n                        array2[u+indexArray2-1] = 0\r\n                    }\r\n                    if( array2[u-indexArray2] ==100 && array2[u-indexArray2-1] ==100){\r\n                        array2[u-indexArray2] = 0\r\n                        array2[u-indexArray2-1] = 0\r\n                    }\r\n                    if( array2[u+indexArray2] ==100 && array2[u+indexArray2+1] ==100){\r\n                        array2[u+indexArray2] = 0\r\n                        array2[u+indexArray2+1] = 0\r\n                    }\r\n                    if( array2[u-indexArray2] ==100 && array2[u-indexArray2+1] ==100){\r\n                        array2[u-indexArray2] = 0\r\n                        array2[u-indexArray2+1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array\r\n}\r\n\r\nconst checking_only_1 = (array,array2,data) => {\r\n\r\n    let k =0\r\n    let b =0\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]){\r\n                for(let b =0; b < totalRoom; b++){\r\n                    if( array[u+38*b] ==100){\r\n                        array[u+38*b] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    for(let u = 0; u < array2.length; u++){\r\n        try{\r\n            if( array2[u] != 100 && data[5] == array2[u][5] || data[6] == array2[u][6]){\r\n                for(let b =0; b < totalRoom2; b++){\r\n                    if( array2[u+38*b] ==100){\r\n                        array2[u+38*b] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array\r\n\r\n}\r\n\r\nconst changeRowtoZero_minus_1 = (array,array2,index1,index2) => {\r\n    let k =0\r\n    let b =0\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            if( u == index1 && u-1 == index2){\r\n                for(let b =0; b < totalRoom; b++){\r\n                    let indexArray = b*38\r\n                    if( array[u+indexArray] ==100 && array[u+indexArray-1] ==100){\r\n                        array[u+indexArray] = 0\r\n                        array[u+indexArray-1] = 0\r\n                    }\r\n                    if( array[u-indexArray]==100 && array[u-indexArray-1] == 100){\r\n                        array[u-indexArray] = 0\r\n                        array[u-indexArray-1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n\r\n    for(let u = 0; u < array2.length; u++){\r\n        try{\r\n            if( u == index1 && u-1 == index2){\r\n                for(let b =0; b < totalRoom2; b++){\r\n                    let indexArray2 = b*38\r\n                    if( array2[u+indexArray2] ==100 && array2[u+indexArray2-1] ==100){\r\n                        array2[u+indexArray2] = 0\r\n                        array2[u+indexArray2-1] = 0\r\n                    }\r\n                    if( array2[u-indexArray2]==100 && array2[u-indexArray2-1] == 100){\r\n                        array2[u-indexArray2] = 0\r\n                        array2[u-indexArray2-1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array    \r\n}\r\n\r\nconst changeRowtoZero_plus_1 = (array,array2,index1,index2) => {\r\n    let k =0\r\n    let b =0\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            if( u == index1 && u-1 == index2){\r\n                for(let b =0; b < totalRoom; b++){\r\n                    let indexArray = b*38\r\n                    if( array[u+indexArray] ==100 && array[u+indexArray+1] ==100){\r\n                        array[u+indexArray] = 0\r\n                        array[u+indexArray+1] = 0\r\n                    }\r\n                    if( array[u-indexArray]==100 && array[u-indexArray+1] == 100){\r\n                        array[u-indexArray] = 0\r\n                        array[u-indexArray+1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n\r\n    for(let u = 0; u < array2.length; u++){\r\n        try{\r\n            if( u == index1 && u-1 == index2){\r\n                for(let b =0; b < totalRoom2; b++){\r\n                    let indexArray2 = b*38\r\n                    if( array2[u+indexArray2] ==100 && array2[u+indexArray2+1] ==100){\r\n                        array2[u+indexArray2] = 0\r\n                        array2[u+indexArray2+1] = 0\r\n                    }\r\n                    if( array2[u-indexArray2]==100 && array2[u-indexArray2+1] == 100){\r\n                        array2[u-indexArray2] = 0\r\n                        array2[u-indexArray2+1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array    \r\n}\r\n\r\nconst changeRowtoZero_1 = (array,array2,index1) => {\r\n    let k =0\r\n    let b =0\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            if( u == index1){\r\n                for(let b =0; b < totalRoom; b++){\r\n                    let indexArray = b*38\r\n                    if( array[u+indexArray] ==100 ){\r\n                        array[u+indexArray] = 0\r\n                    }\r\n                    if( array[u-indexArray] ==100 ){\r\n                        array[u-indexArray] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n\r\n    for(let u = 0; u < array2.length; u++){\r\n        try{\r\n            if( u == index1){\r\n                for(let b =0; b < totalRoom2; b++){\r\n                    let indexArray2 = b*38\r\n                    if( array2[u+indexArray2] ==100 ){\r\n                        array2[u+indexArray2] = 0\r\n                    }\r\n                    if( array2[u-indexArray2] ==100 ){\r\n                        array2[u-indexArray2] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array    \r\n}\r\n\r\nconst changeRowtoZero_3_ = (array,array2,index1,index2,index3) => {\r\n    let k =0\r\n    let b =0\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            if( u == index1 && u-1 == index2 && u+1 == index3){\r\n                for(let b =0; b < totalRoom; b++){\r\n                    let indexArray = b*38\r\n                    if( array[u+indexArray] ==100 && array[u+indexArray-1] ==100  && array[u+indexArray+1] == 100 ){\r\n                        array[u+indexArray] = 0\r\n                        array[u+indexArray-1] = 0\r\n                        array[u+indexArray+1] = 0\r\n                    }\r\n                    if( array[u-indexArray] ==100 && array[u-indexArray-1] ==100  && array[u-indexArray+1] == 100){\r\n                        array[u-indexArray] = 0\r\n                        array[u-indexArray-1] = 0\r\n                        array[u-indexArray+1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n\r\n\r\n    for(let u = 0; u < array2.length; u++){\r\n        try{\r\n            if( u == index1 && u-1 == index2 && u+1 == index3){\r\n                for(let b =0; b < totalRoom2; b++){\r\n                    let indexArray = b*38\r\n                    if( array2[u+indexArray] ==100 && array2[u+indexArray-1] ==100  && array2[u+indexArray+1] == 100 ){\r\n                        array2[u+indexArray] = 0\r\n                        array2[u+indexArray-1] = 0\r\n                        array2[u+indexArray+1] = 0\r\n                    }\r\n                    if( array2[u-indexArray] ==100 && array2[u-indexArray-1] ==100  && array2[u-indexArray+1] == 100){\r\n                        array2[u-indexArray] = 0\r\n                        array2[u-indexArray-1] = 0\r\n                        array2[u-indexArray+1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array    \r\n}\r\n\r\nconst changeToZero = (array) => {\r\n    for(let i = 0; i < array.length; i++){\r\n        if(array[i] == 0){\r\n            array[i] = 100\r\n        }\r\n    }\r\n    return array;\r\n}\r\n\r\n\r\nconst checkTest = (array,array2,data1) => {\r\n    let count =0\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n     let indexArray = (x * 38)\r\n        try{\r\n         for(let i = 1; i<array.length ; i++){\r\n                //if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 1 && array[i+indexArray] != 0 ){\r\n                    try{\r\n                        if(data1 == array[i][5]){\r\n                            if(array[i+indexArray] == 100){\r\n                                array[i+indexArray] = 0\r\n                            }\r\n\r\n                         }\r\n                    }catch{}\r\n                //}    \r\n            }\r\n        }catch{}\r\n    }\r\n\r\n    for(let x= 1 ; x <= totalRoom2 ; x++){\r\n        let indexArray2 = (x * 38)\r\n           try{\r\n            for(let i = 1; i<array2.length ; i++){\r\n                   //if(array2[i+indexArray2] != 100 && array2[i+indexArray2] != undefined && array2[i+indexArray2] != 1 && array2[i+indexArray2] != 0 ){\r\n                       try{\r\n                           if(data1 == array2[i][5]){\r\n                               if(array2[i+indexArray2] == 100){\r\n                                   array2[i+indexArray2] = 0\r\n                               }\r\n   \r\n                            }\r\n                       }catch{}\r\n                   //}    \r\n               }\r\n           }catch{}\r\n       }\r\n    return array\r\n}\r\n\r\nconst checking_1 = (array,array2,data) => {\r\n\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\r\n            //if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]){\r\n            if( array[u] != 100 ){\r\n                if(data[5] == array[u][5] || data[6] == array[u][6]){\r\n                    for(let b =0; b < totalRoom; b++){\r\n                        let indexArray = b*38\r\n                        if( array[u+indexArray] ==100){\r\n                            array[u+indexArray] = 0\r\n                            //array2[u+indexArray] = 0\r\n                        }\r\n                        if( array[u-indexArray] ==100){\r\n                            array[u-indexArray] = 0\r\n                            //array2[u-indexArray] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array\r\n}\r\n\r\nconst checking_1_phe = (array,array2,data) => {\r\n\r\n    //let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\r\n            //if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]){\r\n            if( array[u] != 100 ){\r\n                if(data[5] == array[u][5] || data[6] == array[u][6]){\r\n                    for(let b =0; b < totalRoom2; b++){\r\n                        let indexArray = b*38\r\n                        if( array2[u+indexArray] ==100){\r\n                            //array[u+indexArray] = 0\r\n                            array2[u+indexArray] = 0\r\n                        }\r\n                        if( array2[u-indexArray] ==100){\r\n                            //array[u-indexArray] = 0\r\n                            array2[u-indexArray] = 0\r\n                        }\r\n                    }   \r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array2\r\n}\r\n\r\n\r\n\r\n\r\nconst array1DCombine = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrCombine = array1DCombine(combineArray);\r\nvar pheAntArrCombine = array1DCombine(pheCombineArray);\r\n\r\nconst checkDay = (combine,array,index) => {\r\n    //for(let x =0; x < combine.length ; x++){}\r\n    let c = 0\r\n    let z = index\r\n    while (c != 1){\r\n        if(z >= 0 && z < 10){\r\n            //console.log(\"Monday\")\r\n            zeroMonday(array)\r\n            zeroMondayCom(combine)\r\n            c = 1\r\n        }\r\n        else if( z >= 10 && z < 20){\r\n            //console.log(\"Tuesday\")   \r\n            zeroTuesday(array)\r\n            zeroTuesdayCom(combine)\r\n            c = 1\r\n        }\r\n        else if( z >= 20 && z < 30){\r\n            //console.log(\"Thursday\")   \r\n            zeroThursday(array)\r\n            zeroThursdayCom(combine)\r\n            c = 1\r\n        }\r\n        else if( z >= 30 && z< 38){\r\n            //console.log(\"Friday\")   \r\n            zeroFriday(array)\r\n            zeroFridayCom(combine)\r\n            c = 1\r\n        }\r\n        else(\r\n            z -= 38\r\n        )\r\n    }\r\n}\r\n\r\nconst zeroMonday = (array) => {\r\n    let totalRoom2 = array.length / 38\r\n\r\n    for(let u = 0; u < 10; u++){\r\n        try{\r\n            for(let b =0; b < totalRoom2; b++){\r\n                let indexArray = b*38\r\n                if( array[u+indexArray] ==100){\r\n                    array[u+indexArray] = 0\r\n                }\r\n                if( array[u-indexArray] ==100){\r\n                    array[u-indexArray] = 0\r\n                }\r\n            }   \r\n        }catch{}\r\n    }\r\n    return array\r\n}\r\nconst zeroMondayCom = (combine) => {\r\n    let totalRoom2 = combine.length / 38\r\n\r\n    for(let u = 0; u < 10; u++){\r\n        try{\r\n            for(let b =0; b < totalRoom2; b++){\r\n                let indexArray = b*38\r\n                if( combine[u+indexArray] ==100){\r\n                    combine[u+indexArray] = 0\r\n                }\r\n                if( combine[u-indexArray] ==100){\r\n                    combine[u-indexArray] = 0\r\n                }\r\n            }   \r\n        }catch{}\r\n    }\r\n    return combine\r\n}\r\n\r\nconst zeroTuesday = (array) => {\r\n    let totalRoom2 = array.length / 38\r\n\r\n    for(let u = 10; u < 20; u++){\r\n        try{\r\n            for(let b =0; b < totalRoom2; b++){\r\n                let indexArray = b*38\r\n                if( array[u+indexArray] ==100){\r\n                    array[u+indexArray] = 0\r\n                }\r\n                if( array[u-indexArray] ==100){\r\n                    array[u-indexArray] = 0\r\n                }\r\n            }   \r\n        }catch{}\r\n    }\r\n    return array\r\n}\r\nconst zeroTuesdayCom = (combine) => {\r\n    let totalRoom2 = combine.length / 38\r\n\r\n    for(let u = 10; u < 20; u++){\r\n        try{\r\n            for(let b =0; b < totalRoom2; b++){\r\n                let indexArray = b*38\r\n                if( combine[u+indexArray] ==100){\r\n                    combine[u+indexArray] = 0\r\n                }\r\n                if( combine[u-indexArray] ==100){\r\n                    combine[u-indexArray] = 0\r\n                }\r\n            }   \r\n        }catch{}\r\n    }\r\n    return combine\r\n}\r\n\r\nconst zeroThursday = (array) => {\r\n    let totalRoom2 = array.length / 38\r\n\r\n    for(let u = 20; u < 30; u++){\r\n        try{\r\n            for(let b =0; b < totalRoom2; b++){\r\n                let indexArray = b*38\r\n                if( array[u+indexArray] ==100){\r\n                    array[u+indexArray] = 0\r\n                }\r\n                if( array[u-indexArray] ==100){\r\n                    array[u-indexArray] = 0\r\n                }\r\n            }   \r\n        }catch{}\r\n    }\r\n    return array\r\n}\r\nconst zeroThursdayCom = (combine) => {\r\n    let totalRoom2 = combine.length / 38\r\n\r\n    for(let u = 20; u < 30; u++){\r\n        try{\r\n            for(let b =0; b < totalRoom2; b++){\r\n                let indexArray = b*38\r\n                if( combine[u+indexArray] ==100){\r\n                    combine[u+indexArray] = 0\r\n                }\r\n                if( combine[u-indexArray] ==100){\r\n                    combine[u-indexArray] = 0\r\n                }\r\n            }   \r\n        }catch{}\r\n    }\r\n    return combine\r\n}\r\n\r\nconst zeroFriday = (array) => {\r\n    let totalRoom2 = array.length / 38\r\n\r\n    for(let u = 30; u < 38; u++){\r\n        try{\r\n            for(let b =0; b < totalRoom2; b++){\r\n                let indexArray = b*38\r\n                if( array[u+indexArray] ==100){\r\n                    array[u+indexArray] = 0\r\n                }\r\n                if( array[u-indexArray] ==100){\r\n                    array[u-indexArray] = 0\r\n                }\r\n            }   \r\n        }catch{}\r\n    }\r\n    return array\r\n}\r\nconst zeroFridayCom = (combine) => {\r\n    let totalRoom2 = combine.length / 38\r\n\r\n    for(let u = 30; u < 38; u++){\r\n        try{\r\n            for(let b =0; b < totalRoom2; b++){\r\n                let indexArray = b*38\r\n                if( combine[u+indexArray] ==100){\r\n                    combine[u+indexArray] = 0\r\n                }\r\n                if( combine[u-indexArray] ==100){\r\n                    combine[u-indexArray] = 0\r\n                }\r\n            }   \r\n        }catch{}\r\n    }\r\n    return combine\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//create 1d array for dataset less than 50\r\nconst array1D50 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArr50 = array1D50(DataArray50);\r\n\r\nlet insertedData50_Slot2_2 = []\r\nlet insertedData50_Slot2_1= []\r\n\r\nconst AntAlgoInsert50 = (array,combine) => {\r\n\r\n    //array.length = 1064 (last index = 1063)\r\n    //arrayLength50 = 646 (last index = 645)\r\n\r\n\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    let k4=0\r\n    let k5 =0\r\n    let count = 0;\r\n    let b = 1\r\n    let hms2 = []\r\n    let hms3 = []\r\n    let hms4 = []\r\n    let hms2Remainder = []\r\n    let arrayTemp100 = []\r\n\r\n    \r\n    let remainderArray = []\r\n    let remainderArraySlot1 = []\r\n    let totalRoom = array.length / 38\r\n\r\n\r\n        for(let x=0; x<filterData50.length;x++){\r\n            if(filterData50[x][7] == 2){\r\n                hms2.push(filterData50[x])\r\n            }\r\n            if(filterData50[x][7] == 4){\r\n                hms4.push(filterData50[x])\r\n            }\r\n            if(filterData50[x][7] == 3){\r\n                hms3.push(filterData50[x])\r\n            }\r\n            test.push(filterData50[x]);\r\n        }\r\n\r\n        // for(let i = array.length-1;i>0;i--){\r\n        //     if(k < hms2.length){\r\n        //         checking_1(combine,array,hms2[k])\r\n        //         checking_1_phe(combine,array,hms2[k])\r\n        //         let c = 0\r\n        //         while(c != 1){\r\n        //             const j = Math.floor(Math.random()*(i+1));    \r\n        //             if(array[j] == 100 && array[j-1] == 100){\r\n        //                     array[j] = -1;\r\n        //                     array[j-1] = -1;\r\n        //                     combine[j] = hms2[k];\r\n        //                     combine[j-1] = hms2[k];\r\n        //                     c = 1\r\n        //             }\r\n        //             else if(array[j] == 100 && array[j+1] == 100){\r\n        //                     array[j] = -1;\r\n        //                     array[j+1] = -1;\r\n        //                     combine[j] = hms2[k];\r\n        //                     combine[j+1] = hms2[k];\r\n        //                     c = 1\r\n        //             }\r\n        //         }    \r\n        //     }\r\n        //     changeToZero(array)\r\n        //     changeToZero(combine)\r\n        //     k++  \r\n        // }\r\n\r\n        // console.log(hms2.length)\r\n        // console.log(hms4.length)\r\n        // console.log(hms3.length)\r\n\r\n        for(let i = array.length-1;i>0;i--){\r\n            //if(k2 < hms4.length){\r\n            if(k2 < 1){\r\n                checking_1(combine,array,hms4[k2])\r\n                checking_1_phe(combine,array,hms4[k2])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    if(array[j] == 100 && array[j-1] == 100){\r\n                            console.log(j)\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j] = hms4[k2];\r\n                            combine[j-1] = hms4[k2];\r\n                            checkDay(combine,array,j)\r\n                            let b = 0 \r\n                            while(b != 1){\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                if(array[v] == 100 && array[v-1] == 100){\r\n                                    console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v-1] = -1;\r\n                                    combine[v] = hms4[k2];\r\n                                    combine[v-1] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                                else if(array[v] == 100 && array[v+1] == 100){\r\n                                    console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v+1] = -1;\r\n                                    combine[v] = hms4[k2];\r\n                                    combine[v+1] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    else if(array[j] == 100 && array[j+1] == 100){\r\n                            console.log(j)\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j] = hms4[k2];\r\n                            combine[j+1] = hms4[k2];\r\n                            checkDay(combine,array,j)\r\n                            let z = 0 \r\n                            while(z != 1){\r\n                                const p = Math.floor(Math.random()*(i+1));\r\n                                if(array[p] == 100 && array[p-1] == 100){\r\n                                    console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p-1] = -1;\r\n                                    combine[p] = hms4[k2];\r\n                                    combine[p-1] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                                else if(array[p] == 100 && array[p+1] == 100){\r\n                                    console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p+1] = -1;\r\n                                    combine[p] = hms4[k2];\r\n                                    combine[p+1] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            // changeToZero(array)\r\n            // changeToZero(combine)\r\n            k2++  \r\n        }\r\n\r\n        // for(let i = array.length-1;i>0;i--){\r\n        //     if(k3 < hms4.length){\r\n        //         checking_1(combine,array,hms4[k3])\r\n        //         checking_1_phe(combine,array,hms4[k3])\r\n        //         let c = 0\r\n        //         while(c != 1){\r\n        //             const j = Math.floor(Math.random()*(i+1));    \r\n        //             if(array[j] == 100 && array[j-1] == 100){\r\n        //                     array[j] = -1;\r\n        //                     array[j-1] = -1;\r\n        //                     combine[j] = hms4[k3];\r\n        //                     combine[j-1] = hms4[k3];\r\n        //                     c = 1\r\n        //             }\r\n        //             else if(array[j] == 100 && array[j+1] == 100){\r\n        //                     array[j] = -1;\r\n        //                     array[j+1] = -1;\r\n        //                     combine[j] = hms4[k3];\r\n        //                     combine[j+1] = hms4[k3];\r\n        //                     c = 1\r\n        //             }\r\n        //         }    \r\n        //     }\r\n        //     changeToZero(array)\r\n        //     changeToZero(combine)\r\n        //     k3++  \r\n        // }\r\n\r\n\r\n        for(let i = 0; i < array.length ; i++){\r\n            if(array[i] == 100){\r\n                arrayTemp100.push(array[i]);\r\n            }\r\n        }\r\n\r\n\r\n        // for(let i = array.length-1;i>0;i--){\r\n        //     if(k4 < test.length){\r\n        //     let hourMS = test[k4][7]    \r\n        //     changeToZero(array)\r\n        //     changeToZero(combine)\r\n        //     if(hourMS == 4){\r\n        //         checking_minus_1(combine,array,test[k4]);\r\n        //         checking_plus_1(combine,array,test[k4])\r\n        //         const j = Math.floor(Math.random()*(i+1));\r\n        //             if(array[i] == 100 && array[i-1] == 100 ){\r\n        //                 array[i] = array[j];\r\n        //                 array[i-1] = array[j-1];\r\n        //                 array[j] = test[k4];\r\n        //                 array[j-1] = test[k4];\r\n        //                 combine[j] = test[k4];\r\n        //                 combine[j-1] = test[k4];\r\n\r\n                        \r\n\r\n        //                 changeRowtoZero_minus_1(combine,array,j,j-1);\r\n        //                 if(array[i] == 100 && array[i-1] == 100){\r\n        //                     array[i] = array[j];\r\n        //                     array[i-1] = array[j-1];\r\n        //                     array[j] = test[k4];\r\n        //                     array[j-1] = test[k4];\r\n        //                     combine[j] = test[k4];\r\n        //                     combine[j-1] = test[k4];\r\n        //                     changeRowtoZero_minus_1(combine,array,j,j-1);\r\n        //                 }\r\n        //                 else if(array[i] == 100 && array[i+1] == 100){\r\n        //                     array[i] = array[j];\r\n        //                     array[i+1] = array[j+1];\r\n        //                     array[j] = test[k4];\r\n        //                     array[j+1] = test[k4];\r\n        //                     combine[j] = test[k4];\r\n        //                     combine[j+1] = test[k4];\r\n        //                     changeRowtoZero_plus_1(combine,array,j,j-1);\r\n        //                 }\r\n        //                 else{\r\n        //                     remainderArraySlot1.push(test[k4]);\r\n        //                 }\r\n        //             }\r\n        //             else if(array[i] == 100 && array[i+1] == 100 ){\r\n        //                 array[i] = array[j];\r\n        //                 array[i+1] = array[j+1];\r\n        //                 array[j] = test[k4];\r\n        //                 array[j+1] = test[k4];\r\n        //                 combine[j] = test[k4];\r\n        //                 combine[j+1] = test[k4];\r\n                    \r\n        //                 changeRowtoZero_plus_1(combine,array,i,i-1);\r\n        //                 if(array[i] == 100 && array[i-1] == 100){\r\n        //                     array[i] = array[j];\r\n        //                     array[i-1] = array[j-1];\r\n        //                     array[j] = test[k4];\r\n        //                     array[j-1] = test[k4];\r\n        //                     combine[j] = test[k4];\r\n        //                     combine[j-1] = test[k4];\r\n        //                     changeRowtoZero_minus_1(combine,array,j,j-1);\r\n        //                 }\r\n        //                 else if(array[i] == 100 && array[i+1] == 100){\r\n        //                     array[i] = array[j];\r\n        //                     array[i+1] = array[j+1];\r\n        //                     array[j] = test[k4];\r\n        //                     array[j+1] = test[k4];\r\n        //                     combine[j] = test[k4];\r\n        //                     combine[j+1] = test[k4];\r\n        //                     changeRowtoZero_plus_1(combine,array,j,j-1);\r\n        //                 }\r\n        //                 else{\r\n        //                     remainderArraySlot1.push(test[k4]);\r\n        //                 }\r\n        //             }\r\n        //             else{\r\n        //                 remainderArray.push(test[k4]);\r\n        //             }\r\n\r\n        //     }\r\n\r\n        //     changeToZero(array);\r\n        //     changeToZero(combine);\r\n        //     }\r\n        //     k4++  \r\n        // }\r\n\r\n        // for(let i = array.length-1;i>0;i--){\r\n        //     if(k5 < test.length){\r\n        //     let hourMS = test[k5][7]    \r\n        //     changeToZero(array)\r\n        //     changeToZero(combine)\r\n        //     if(hourMS == 3){\r\n        //         const j = Math.floor(Math.random()*(i+1)); \r\n        //             checking_3(combine,array,test[k5]);\r\n        //             if( array[i] == 100 && array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n        //                 array[i] = array[j];\r\n        //                 array[i-1] = array[j-1];\r\n        //                 array[i+1] = array[j+1];\r\n        //                 array[j] = test[k5];\r\n        //                 array[j-1] = test[k5];\r\n        //                 array[j+1] = test[k5];\r\n        //                 combine[j] = test[k5];\r\n        //                 combine[j-1] = test[k5];\r\n        //                 combine[j+1] = test[k5];\r\n        //                 changeRowtoZero_3_(combine,array,i,i-1,i+1)\r\n        //             }else if(array[i] == 100 && array[i-1] == 100){//slot 2 hours in 1 go\r\n        //                 array[i] = array[j];\r\n        //                 array[i-1] = array[j-1];\r\n        //                 array[j] = test[k5];\r\n        //                 array[j-1] = test[k5];\r\n        //                 combine[j] = test[k5];\r\n        //                 combine[j-1] = test[k5];\r\n        //                 insertedData50_Slot2_1.push(test[k5])\r\n        //                 changeRowtoZero_minus_1(combine,array,i,i-1)\r\n        //             }else if(array[i] == 100 && array[i+1] == 100){//slot 2 hours in 1 go\r\n        //                 array[i] = array[j];\r\n        //                 array[i+1] = array[j+1];\r\n        //                 array[j] = test[k5];\r\n        //                 array[j+1] = test[k5];\r\n        //                 combine[j] = test[k5];\r\n        //                 combine[j+1] = test[k5];\r\n        //                 insertedData50_Slot2_1.push(test[k5])\r\n        //                 changeRowtoZero_plus_1(combine,array,i,i-1);\r\n        //             }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n        //                 array[i] = array[j];\r\n        //                 array[j] = test[k5];\r\n        //                 combine[j] = test[k5];\r\n        //                 changeRowtoZero_1(combine,array,i)\r\n        //                 remainderArraySlot1.push(test[k5])\r\n        //             }\r\n        //     }\r\n\r\n        //     changeToZero(array);\r\n        //     changeToZero(combine);\r\n        //     }\r\n        //     k5++  \r\n        // }\r\n\r\n\r\n //fullfill the slot 3\r\n//  for(let x = 0; x< array.length; x++){\r\n//     if(k3 < remainderArraySlot1.length){                \r\n//         checking_plus_1(combine,array,remainderArraySlot1[k3])\r\n//         if(array[x] == 100 && array[x+1] ==100){\r\n//             array[x] = remainderArraySlot1[k3]\r\n//             array[x+1] = remainderArraySlot1[k3]\r\n//             combine[x] = remainderArraySlot1[k3]\r\n//             combine[x+1] = remainderArraySlot1[k3]\r\n//             changeRowtoZero_plus_1(combine,array,x,x+1)\r\n//         }else{insertedData50_Slot2_2.push(remainderArraySlot1[k3])}\r\n//      }\r\n//      k3++   \r\n//  }\r\n//  changeToZero(array);\r\n//  changeToZero(combine);\r\n\r\n \r\n//  for(let x = 0; x< array.length; x++){\r\n//     if(k2 < remainderArray.length){\r\n//         checking_plus_1(combine,array,remainderArray[k2])\r\n//          if(array[x] == 100 && array[x+1] ==100){\r\n//                  array[x] = remainderArray[k2]\r\n//                  array[x+1] = remainderArray[k2]\r\n//                  combine[x] = remainderArray[k2]\r\n//                  combine[x+1] = remainderArray[k2]\r\n//                  changeRowtoZero_plus_1(combine,array,x,x+1)\r\n//              }\r\n//              try{\r\n//                  let slot2 = remainderArray[k2][10]\r\n//                  if(slot2 == 1){\r\n//                      insertedData50_Slot2_1.push(remainderArray[k2])\r\n//                  }\r\n//                  if(slot2 == 2){\r\n//                     insertedData50_Slot2_2.push(remainderArray[k2])\r\n//                 }\r\n//              }catch{}\r\n//      }\r\n//      k2++   \r\n//  }\r\n//   changeToZero(array)\r\n//   changeToZero(combine)\r\n\r\n\r\n//  if(array[-1] != undefined){\r\n//      insertedData50_Slot2_1.push(array[-1]);\r\n//  }\r\n\r\n    return array;\r\n}\r\n\r\nvar AntArrIns50 = AntAlgoInsert50(AntArr50,AntArrCombine,pheAntArrCombine);\r\n\r\n//  const slot2Equal1for50= (array,combine) => {\r\n//      let k = 0;\r\n//      let test2 = []\r\n//     let totalRoom = array.length / 38\r\n\r\n//      for(let x = 0; x< array.length; x++){\r\n//             if(array[x] == 100){\r\n//                 if(k < insertedData50_Slot2_1.length){\r\n//                     checking_only_1(combine,array,insertedData50_Slot2_1[k])\r\n//                     array[x] = insertedData50_Slot2_1[k]\r\n//                     combine[x] = insertedData50_Slot2_1[k]\r\n//                 }\r\n//                 k++   \r\n//          }\r\n//      }\r\n//      changeToZero(array)\r\n//      changeToZero(combine)\r\n//      return array;\r\n//  }\r\n// slot2Equal1for50(AntArr50,AntArrCombine);\r\n\r\n\r\n\r\n//  const slot2Equal2for50 = (array,combine) => {\r\n//      let k = 0;\r\n//     let totalRoom = array.length / 38\r\n\r\n//      for(let x = 0; x< array.length; x++){\r\n//          if(array[x] == 100 && array[x+1] ==100){\r\n//             if(k < insertedData50_Slot2_2.length){\r\n//                 checking_plus_1(combine,array,insertedData50_Slot2_2[k])\r\n//                  array[x] = insertedData50_Slot2_2[k]\r\n//                  array[x+1] = insertedData50_Slot2_2[k]\r\n//                  combine[x] = insertedData50_Slot2_2[k]\r\n//                  combine[x+1] = insertedData50_Slot2_2[k]\r\n//              }\r\n//              k++\r\n//          }\r\n//      }\r\n//      changeToZero(array)\r\n//      changeToZero(combine)\r\n\r\n//      if(array[-1] != undefined){\r\n//          insertedData50_Slot2_1.push(array[-1]);\r\n//      }\r\n\r\n//      return array;\r\n//  }\r\n//  slot2Equal2for50(AntArr50,AntArrCombine);\r\n\r\nconst checkAmountData50_2 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_2 = checkAmountData50_2(AntArrIns50)\r\nconsole.log(AntArrIns50);\r\nconsole.log(checkAmount_2)\r\n\r\nconst checkAmountData50_0 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if( array[i] == 0 ){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_0 = checkAmountData50_0(AntArr50)\r\nconsole.log(checkAmount_0)\r\n\r\n//______________________________________________________________________________________________________________________________________________\r\n\r\n//create 1d array for dataset less than 100\r\n\r\n\r\n//create 1d array for dataset less than 100\r\n\r\n\r\n//create 1d array for dataset less than 100\r\n// const array1D100 = (data) => {\r\n//     var result = []\r\n\r\n//     for(let i = 0; i< data; i++){\r\n//         result[i]= 100;\r\n//     }\r\n//     return result;\r\n// }\r\n// var AntArr100 = array1D100(DataArray100);\r\n\r\n// let insertedData100_Slot2_2 = []\r\n// let insertedData100_Slot2_1= []\r\n\r\n// let arrayLength100 =  DataArray100\r\n// const AntAlgoInsert100 = (array,combine) => {\r\n\r\n//     //array.length = 1064 (last index = 1063)\r\n//     //array.length = 646 (last index = 645)\r\n\r\n\r\n//     let test = []\r\n//     let k = 0;\r\n//     let k2 =0\r\n//     let k3 =0\r\n//     let k4=0\r\n//     let k5 =0\r\n//     let count = 0;\r\n//     let b = 1\r\n\r\n    \r\n//     let remainderArray = []\r\n//     let remainderArraySlot1 = []\r\n//     let totalRoom = array.length / 38\r\n\r\n\r\n//     for(let x=0; x<filterData100.length;x++){\r\n//         test.push(filterData100[x]);\r\n//     }\r\n\r\n//         //for(let i = array.length-1;i>0;i--){\r\n//         for(let i = array.length-1;i>0;i--){\r\n//             if(k < test.length){\r\n//             let hourMS = test[k][7]    \r\n//             //checkTest(AntArr100,test[k])\r\n//             changeToZero(array);\r\n//             changeToZero(combine);\r\n//             if(hourMS == 2){\r\n//                 //changeToZero(array)\r\n//                 const j = Math.floor(Math.random()*(i+1));\r\n//                 // checking_minus_1(array,test[k])\r\n//                 // checking_plus_1(array,test[k])\r\n//                 checking_minus_1(combine,array,test[k])\r\n//                 checking_plus_1(combine,array,test[k])\r\n//                 //checking_only_1(array,test[k])\r\n//                 //checkTest(AntArr100,test[k])\r\n//                 if(array[i] == 100 && array[i-1] == 100){\r\n//                         array[i] = array[j];\r\n//                         array[i-1] = array[j-1];\r\n//                         array[j] = test[k];\r\n//                         array[j-1] = test[k];\r\n//                         combine[j+startIndex100] = test[k];\r\n//                         combine[j+startIndex100-1] = test[k];\r\n//                         //changeRowtoZero_minus_1(array,i,i-1)\r\n//                         changeRowtoZero_minus_1(combine,array,i,i-1)\r\n//                         //checking_minus_1(array,test[k])\r\n//                  }\r\n//                  else if(array[i] == 100 && array[i+1] == 100){\r\n//                         //checking_plus_1(array,test[k])\r\n//                         array[i] = array[j];\r\n//                         array[i+1] = array[j+1];\r\n//                         array[j] = test[k];\r\n//                         array[j+1] = test[k];\r\n//                         combine[j+startIndex100] = test[k];\r\n//                         combine[j+startIndex100+1] = test[k];\r\n//                         //changeRowtoZero_plus_1(array,i,i+1)\r\n//                         changeRowtoZero_plus_1(combine,i,i+1)\r\n//                         //checking_plus_1(array,test[k])\r\n//                 }\r\n//                 else{\r\n//                     remainderArray.push(test[k]);\r\n//                 }\r\n\r\n//             }\r\n\r\n//             // changeToZero(array);\r\n//             // changeToZero(combine);\r\n//             }\r\n//             k++  \r\n//         }\r\n\r\n\r\n//         for(let i = array.length-1;i>0;i--){\r\n//             if(k4 < test.length){\r\n//             let hourMS = test[k4][7]    \r\n//             //checkTest(AntArr100,test[k])\r\n//             changeToZero(array)\r\n//             changeToZero(combine)\r\n//             if(hourMS == 4){\r\n//                 // checking_minus_1(array,test[k]);\r\n//                 checking_minus_1(combine,array,test[k4]);\r\n//                 checking_plus_1(combine,array,test[k4])\r\n//                 //checking_only_1(array,test[k])\r\n//                 //checkTest(AntArr100,test[k])\r\n//                 const j = Math.floor(Math.random()*(i+1));\r\n//                     if(array[i] == 100 && array[i-1] == 100 ){\r\n//                         array[i] = array[j];\r\n//                         array[i-1] = array[j-1];\r\n//                         array[j] = test[k4];\r\n//                         array[j-1] = test[k4];\r\n//                         combine[j+startIndex100] = test[k4];\r\n//                         combine[j+startIndex100-1] = test[k4];\r\n\r\n                        \r\n    \r\n//                         //const j = Math.floor(Math.random()*(i+1));\r\n//                         changeRowtoZero_minus_1(combine,array,j,j-1);\r\n//                         if(array[i] == 100 && array[i-1] == 100){\r\n//                             //checking_minus_1(array,test[k]);\r\n//                             array[i] = array[j];\r\n//                             array[i-1] = array[j-1];\r\n//                             array[j] = test[k4];\r\n//                             array[j-1] = test[k4];\r\n//                             combine[j+startIndex100] = test[k4];\r\n//                             combine[j+startIndex100-1] = test[k4];\r\n//                             //changeRowtoZero_minus_1(array,i,i-1)\r\n//                             changeRowtoZero_minus_1(combine,array,j,j-1);\r\n//                         }\r\n//                         else if(array[i] == 100 && array[i+1] == 100){\r\n//                             //checking_plus_1(array,test[k]);\r\n//                             array[i] = array[j];\r\n//                             array[i+1] = array[j+1];\r\n//                             array[j] = test[k4];\r\n//                             array[j+1] = test[k4];\r\n//                             combine[j+startIndex100] = test[k4];\r\n//                             combine[j+startIndex100+1] = test[k4];\r\n//                             //changeRowtoZero_plus_1(array,j,j-1);\r\n//                             changeRowtoZero_plus_1(combine,array,j,j-1);\r\n//                         }\r\n//                         else{\r\n//                             remainderArraySlot1.push(test[k4]);\r\n//                         }\r\n//                         //count += 1\r\n//                     }\r\n//                     else if(array[i] == 100 && array[i+1] == 100 ){\r\n//                         //checking_plus_1(array,test[k]);\r\n//                         array[i] = array[j];\r\n//                         array[i+1] = array[j+1];\r\n//                         array[j] = test[k4];\r\n//                         array[j+1] = test[k4];\r\n//                         combine[j+startIndex100] = test[k4];\r\n//                         combine[j+startIndex100+1] = test[k4];\r\n                    \r\n//                         changeRowtoZero_plus_1(combine,array,i,i-1);\r\n//                         //const j = Math.floor(Math.random()*(i+1));\r\n//                         if(array[i] == 100 && array[i-1] == 100){\r\n//                         //checking_minus_1(array,test[k]);\r\n//                             array[i] = array[j];\r\n//                             array[i-1] = array[j-1];\r\n//                             array[j] = test[k4];\r\n//                             array[j-1] = test[k4];\r\n//                             combine[j+startIndex100] = test[k4];\r\n//                             combine[j+startIndex100-1] = test[k4];\r\n//                             //changeRowtoZero_minus_1(array,i,i-1)\r\n//                             changeRowtoZero_minus_1(combine,array,j,j-1);\r\n//                         }\r\n//                         else if(array[i] == 100 && array[i+1] == 100){\r\n//                             //checking_plus_1(array,test[k]);\r\n//                             array[i] = array[j];\r\n//                             array[i+1] = array[j+1];\r\n//                             array[j] = test[k4];\r\n//                             array[j+1] = test[k4];\r\n//                             combine[j+startIndex100] = test[k4];\r\n//                             combine[j+startIndex100+1] = test[k4];\r\n//                             //changeRowtoZero_plus_1(array,i,i-1);\r\n//                             changeRowtoZero_plus_1(combine,array,j,j-1);\r\n//                         }\r\n//                         else{\r\n//                             remainderArraySlot1.push(test[k4]);\r\n//                         }\r\n//                     }\r\n//                     else{\r\n//                         remainderArray.push(test[k4]);\r\n//                     }\r\n\r\n//             }\r\n\r\n//             changeToZero(array);\r\n//             changeToZero(combine);\r\n//             }\r\n//             k4++  \r\n//         }\r\n\r\n//         for(let i = array.length-1;i>0;i--){\r\n//             if(k5 < test.length){\r\n//             let hourMS = test[k5][7]    \r\n//             //checkTest(AntArr100,test[k])\r\n//             changeToZero(array)\r\n//             changeToZero(combine)\r\n//             if(hourMS == 3){\r\n//                 const j = Math.floor(Math.random()*(i+1)); \r\n\r\n//                     checking_3(combine,array,test[k5]);\r\n//                     //checking_only_1(array,test[k])\r\n//                     //checkTest(AntArr100,test[k])\r\n//                     if( array[i] == 100 && array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n//                         //checking_3(array,test[k]);\r\n//                         array[i] = array[j];\r\n//                         array[i-1] = array[j-1];\r\n//                         array[i+1] = array[j+1];\r\n//                         array[j] = test[k5];\r\n//                         array[j-1] = test[k5];\r\n//                         array[j+1] = test[k5];\r\n//                         combine[j+startIndex100] = test[k5];\r\n//                         combine[j+startIndex100-1] = test[k5];\r\n//                         combine[j+startIndex100+1] = test[k5];\r\n//                         changeRowtoZero_3_(combine,array,i,i-1,i+1)\r\n//                     }else if(array[i] == 100 && array[i-1] == 100){//slot 2 hours in 1 go\r\n//                         //checking_minus_1(array,test[k]);\r\n//                         array[i] = array[j];\r\n//                         array[i-1] = array[j-1];\r\n//                         array[j] = test[k5];\r\n//                         array[j-1] = test[k5];\r\n//                         combine[j+startIndex100] = test[k5];\r\n//                         combine[j+startIndex100-1] = test[k5];\r\n//                         insertedData100_Slot2_1.push(test[k5])\r\n//                         changeRowtoZero_minus_1(combine,array,i,i-1)\r\n//                     }else if(array[i] == 100 && array[i+1] == 100){//slot 2 hours in 1 go\r\n//                         //checking_plus_1(array,test[k]);\r\n//                         array[i] = array[j];\r\n//                         array[i+1] = array[j+1];\r\n//                         array[j] = test[k5];\r\n//                         array[j+1] = test[k5];\r\n//                         combine[j+startIndex100] = test[k5];\r\n//                         combine[j+startIndex100+1] = test[k5];\r\n//                         insertedData100_Slot2_1.push(test[k5])\r\n//                         changeRowtoZero_plus_1(combine,array,i,i-1);\r\n//                     }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n//                         //checking_only_1(array,test[k]);\r\n//                         array[i] = array[j];\r\n//                         array[j] = test[k5];\r\n//                         combine[j+startIndex100] = test[k5];\r\n//                         changeRowtoZero_1(combine,array,i)\r\n//                         remainderArraySlot1.push(test[k5])\r\n//                     }\r\n//             }\r\n\r\n//             changeToZero(array);\r\n//             changeToZero(combine);\r\n//             }\r\n//             k5++  \r\n//         }\r\n\r\n\r\n//  //changeToZero(array) \r\n\r\n//  //fullfill the slot 3\r\n//  for(let x = 0; x< array.length; x++){\r\n//     if(k3 < remainderArraySlot1.length){                \r\n//         //checking_only_1(array, remainderArraySlot1[k3])\r\n//         //checkTest(AntArr100,remainderArraySlot1[k3])\r\n//         checking_plus_1(combine,array,remainderArraySlot1[k3])\r\n//         if(array[x] == 100 && array[x+1] ==100){\r\n//             //changeRowtoZero_plus_1(array,remainderArraySlot1[k3])\r\n//             array[x] = remainderArraySlot1[k3]\r\n//             array[x+1] = remainderArraySlot1[k3]\r\n//             combine[x+startIndex100] = remainderArraySlot1[k3]\r\n//             combine[x+startIndex100+1] = remainderArraySlot1[k3]\r\n//             changeRowtoZero_plus_1(combine,array,x,x+1)\r\n//         }else{insertedData100_Slot2_2.push(remainderArraySlot1[k3])}\r\n//      }\r\n//      k3++   \r\n//  }\r\n//  changeToZero(array);\r\n//  changeToZero(combine);\r\n\r\n \r\n//  for(let x = 0; x< array.length; x++){\r\n//     if(k2 < remainderArray.length){\r\n//         //checkTest(AntArr100,remainderArray[k2])\r\n//         checking_plus_1(combine,array,remainderArray[k2])\r\n//          if(array[x] == 100 && array[x+1] ==100){\r\n//              //if(k2 < remainderArray.length){\r\n//                 //changeRowtoZero_plus_1(array,remainderArraySlot1[k2])\r\n//                  array[x] = remainderArray[k2]\r\n//                  array[x+1] = remainderArray[k2]\r\n//                  combine[x+startIndex100] = remainderArray[k2]\r\n//                  combine[x+startIndex100+1] = remainderArray[k2]\r\n//                  changeRowtoZero_plus_1(combine,array,x,x+1)\r\n//              }\r\n//              try{\r\n//                  let slot2 = remainderArray[k2][10]\r\n//                  if(slot2 == 1){\r\n//                      insertedData100_Slot2_1.push(remainderArray[k2])\r\n//                  }\r\n//                  if(slot2 == 2){\r\n//                     insertedData100_Slot2_2.push(remainderArray[k2])\r\n//                 }\r\n//              }catch{}\r\n//      }\r\n//      k2++   \r\n//  }\r\n//   changeToZero(array)\r\n//   changeToZero(combine)\r\n\r\n// //  for(let i = 0; i < array.length; i++){\r\n// //     if(array[i] != 100 && array[i] !=100 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n// //         count += 1\r\n// //     }\r\n// // }\r\n// //console.log(count);\r\n\r\n//  if(array[-1] != undefined){\r\n//      insertedData100_Slot2_1.push(array[-1]);\r\n//  }\r\n\r\n//     return array;\r\n// }\r\n\r\n// //var AntArrIns100 = AntAlgoInsert100(AntArr100);\r\n// var AntArrIns100 = AntAlgoInsert100(AntArr100,AntArrCombine);\r\n// //console.log(AntArrIns100);\r\n\r\n//  const slot2Equal1for100= (array,combine) => {\r\n//      let k = 0;\r\n//      let test2 = []\r\n//     let totalRoom = array.length / 38\r\n\r\n//      for(let x = 0; x< array.length; x++){\r\n//             if(array[x] == 100){\r\n//                 if(k < insertedData100_Slot2_1.length){\r\n//                     checking_only_1(combine,array,insertedData100_Slot2_1[k])\r\n//                     array[x] = insertedData100_Slot2_1[k]\r\n//                     combine[x+startIndex100] = insertedData100_Slot2_1[k]\r\n//                 //changeRowtoZero_1(array,x)\r\n//                 }\r\n//                 k++   \r\n//          }\r\n//      }\r\n//      changeToZero(array)\r\n//      changeToZero(combine)\r\n//      return array;\r\n//  }\r\n// slot2Equal1for100(AntArr100,AntArrCombine);\r\n// //slot2Equal1for100(AntArrCombine);\r\n\r\n\r\n//  const slot2Equal2for100 = (array,combine) => {\r\n//      let k = 0;\r\n//     let totalRoom = array.length / 38\r\n\r\n//      for(let x = 0; x< array.length; x++){\r\n//          if(array[x] == 100 && array[x+1] ==100){\r\n//             if(k < insertedData100_Slot2_2.length){\r\n//                 //checking_only_1(array,insertedData100_Slot2_2[k])\r\n//                 //checkTest(AntArr100,insertedData100_Slot2_2[k])\r\n//                 checking_plus_1(combine,array,insertedData100_Slot2_2[k])\r\n//                  array[x] = insertedData100_Slot2_2[k]\r\n//                  array[x+1] = insertedData100_Slot2_2[k]\r\n//                  combine[x+startIndex100] = insertedData100_Slot2_2[k]\r\n//                  combine[x+startIndex100+1] = insertedData100_Slot2_2[k]\r\n//                  //changeRowtoZero_plus_1(array,x,x+1)\r\n//              }\r\n//              k++\r\n//          }\r\n//      }\r\n//      changeToZero(array)\r\n//      changeToZero(combine)\r\n\r\n//      if(array[-1] != undefined){\r\n//          insertedData100_Slot2_1.push(array[-1]);\r\n//      }\r\n\r\n//      return array;\r\n//  }\r\n//  slot2Equal2for100(AntArr100,AntArrCombine);\r\n//  //slot2Equal2for100(AntArrCombine);\r\n\r\n// const checkAmountData100_2 = (array) => {\r\n//     let count = 0\r\n//     for(let i = 0; i < array.length; i++){\r\n//             if(array[i] != 100 && array[i] !=100 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n//                 count += 1\r\n//             }\r\n//     }\r\n//     return count\r\n// }\r\n// //var checkAmount_2 = checkAmountData100_2(AntArrIns100)\r\n// var checkAmount_2 = checkAmountData100_2(AntArrIns100)\r\n// //console.log(AntArrIns100)\r\n// //console.log(\"Amount of data: \" +checkAmount_2);\r\n\r\n// const checkAmountData100_0 = (array) => {\r\n//     let count = 0\r\n//     for(let i = 0; i < array.length; i++){\r\n//             if( array[i] == 0 ){\r\n//                 count += 1\r\n//             }\r\n//     }\r\n//     return count\r\n// }\r\n//  //var checkAmount_0 = checkAmountData100_0(AntArr100)\r\n//  var checkAmount_0 = checkAmountData100_0(AntArr100)\r\n// //console.log(\"zero counter: \"+checkAmount_0);\r\n\r\n// // _____________________________________________________________________________________________________________________________________________________\r\n\r\n// const array1D200 = (data) => {\r\n//     var result = []\r\n\r\n//     for(let i = 0; i< data; i++){\r\n//         result[i]= 100;\r\n//     }\r\n//     return result;\r\n// }\r\n// var AntArr200 = array1D200(DataArray200);\r\n\r\n// let insertedData200_Slot2_2 = []\r\n// let insertedData200_Slot2_1= []\r\n\r\n// let arrayLength200 =  DataArray200\r\n// const AntAlgoInsert200 = (array,combine) => {\r\n\r\n//     //array.length = 1064 (last index = 1063)\r\n//     //array.length = 646 (last index = 645)\r\n\r\n\r\n//     let test = []\r\n//     let k = 0;\r\n//     let k2 =0\r\n//     let k3 =0\r\n//     let k4=0\r\n//     let k5 =0\r\n//     let count = 0;\r\n//     let b = 1\r\n\r\n    \r\n//     let remainderArray = []\r\n//     let remainderArraySlot1 = []\r\n//     let totalRoom = array.length / 38\r\n\r\n\r\n//     for(let x=0; x<filterData200.length;x++){\r\n//         test.push(filterData200[x]);\r\n//     }\r\n\r\n//         //for(let i = array.length-1;i>0;i--){\r\n//         for(let i = array.length-1;i>0;i--){\r\n//             if(k < test.length){\r\n//             let hourMS = test[k][7]    \r\n//             //checkTest(AntArr200,test[k])\r\n//             changeToZero(array);\r\n//             changeToZero(combine);\r\n//             if(hourMS == 2){\r\n//                 //changeToZero(array)\r\n//                 const j = Math.floor(Math.random()*(i+1));\r\n//                 // checking_minus_1(array,test[k])\r\n//                 // checking_plus_1(array,test[k])\r\n//                 checking_minus_1(combine,array,test[k])\r\n//                 checking_plus_1(combine,array,test[k])\r\n//                 //checking_only_1(array,test[k])\r\n//                 //checkTest(AntArr200,test[k])\r\n//                 if(array[i] == 100 && array[i-1] == 100){\r\n//                         array[i] = array[j];\r\n//                         array[i-1] = array[j-1];\r\n//                         array[j] = test[k];\r\n//                         array[j-1] = test[k];\r\n//                         combine[j+startIndex100] = test[k];\r\n//                         combine[j+startIndex100-1] = test[k];\r\n//                         //changeRowtoZero_minus_1(array,i,i-1)\r\n//                         changeRowtoZero_minus_1(combine,array,i,i-1)\r\n//                         //checking_minus_1(array,test[k])\r\n//                  }\r\n//                  else if(array[i] == 100 && array[i+1] == 100){\r\n//                         //checking_plus_1(array,test[k])\r\n//                         array[i] = array[j];\r\n//                         array[i+1] = array[j+1];\r\n//                         array[j] = test[k];\r\n//                         array[j+1] = test[k];\r\n//                         combine[j+startIndex100] = test[k];\r\n//                         combine[j+startIndex100+1] = test[k];\r\n//                         //changeRowtoZero_plus_1(array,i,i+1)\r\n//                         changeRowtoZero_plus_1(combine,i,i+1)\r\n//                         //checking_plus_1(array,test[k])\r\n//                 }\r\n//                 else{\r\n//                     remainderArray.push(test[k]);\r\n//                 }\r\n\r\n//             }\r\n\r\n//             // changeToZero(array);\r\n//             // changeToZero(combine);\r\n//             }\r\n//             k++  \r\n//         }\r\n\r\n\r\n//         for(let i = array.length-1;i>0;i--){\r\n//             if(k4 < test.length){\r\n//             let hourMS = test[k4][7]    \r\n//             //checkTest(AntArr200,test[k])\r\n//             changeToZero(array)\r\n//             changeToZero(combine)\r\n//             if(hourMS == 4){\r\n//                 // checking_minus_1(array,test[k]);\r\n//                 checking_minus_1(combine,array,test[k4]);\r\n//                 checking_plus_1(combine,array,test[k4])\r\n//                 //checking_only_1(array,test[k])\r\n//                 //checkTest(AntArr200,test[k])\r\n//                 const j = Math.floor(Math.random()*(i+1));\r\n//                     if(array[i] == 100 && array[i-1] == 100 ){\r\n//                         array[i] = array[j];\r\n//                         array[i-1] = array[j-1];\r\n//                         array[j] = test[k4];\r\n//                         array[j-1] = test[k4];\r\n//                         combine[j+startIndex100] = test[k4];\r\n//                         combine[j+startIndex100-1] = test[k4];\r\n\r\n                        \r\n    \r\n//                         //const j = Math.floor(Math.random()*(i+1));\r\n//                         changeRowtoZero_minus_1(combine,array,j,j-1);\r\n//                         if(array[i] == 100 && array[i-1] == 100){\r\n//                             //checking_minus_1(array,test[k]);\r\n//                             array[i] = array[j];\r\n//                             array[i-1] = array[j-1];\r\n//                             array[j] = test[k4];\r\n//                             array[j-1] = test[k4];\r\n//                             combine[j+startIndex100] = test[k4];\r\n//                             combine[j+startIndex100-1] = test[k4];\r\n//                             //changeRowtoZero_minus_1(array,i,i-1)\r\n//                             changeRowtoZero_minus_1(combine,array,j,j-1);\r\n//                         }\r\n//                         else if(array[i] == 100 && array[i+1] == 100){\r\n//                             //checking_plus_1(array,test[k]);\r\n//                             array[i] = array[j];\r\n//                             array[i+1] = array[j+1];\r\n//                             array[j] = test[k4];\r\n//                             array[j+1] = test[k4];\r\n//                             combine[j+startIndex100] = test[k4];\r\n//                             combine[j+startIndex100+1] = test[k4];\r\n//                             //changeRowtoZero_plus_1(array,j,j-1);\r\n//                             changeRowtoZero_plus_1(combine,array,j,j-1);\r\n//                         }\r\n//                         else{\r\n//                             remainderArraySlot1.push(test[k4]);\r\n//                         }\r\n//                         //count += 1\r\n//                     }\r\n//                     else if(array[i] == 100 && array[i+1] == 100 ){\r\n//                         //checking_plus_1(array,test[k]);\r\n//                         array[i] = array[j];\r\n//                         array[i+1] = array[j+1];\r\n//                         array[j] = test[k4];\r\n//                         array[j+1] = test[k4];\r\n//                         combine[j+startIndex100] = test[k4];\r\n//                         combine[j+startIndex100+1] = test[k4];\r\n                    \r\n//                         changeRowtoZero_plus_1(combine,array,i,i-1);\r\n//                         //const j = Math.floor(Math.random()*(i+1));\r\n//                         if(array[i] == 100 && array[i-1] == 100){\r\n//                         //checking_minus_1(array,test[k]);\r\n//                             array[i] = array[j];\r\n//                             array[i-1] = array[j-1];\r\n//                             array[j] = test[k4];\r\n//                             array[j-1] = test[k4];\r\n//                             combine[j+startIndex100] = test[k4];\r\n//                             combine[j+startIndex100-1] = test[k4];\r\n//                             //changeRowtoZero_minus_1(array,i,i-1)\r\n//                             changeRowtoZero_minus_1(combine,array,j,j-1);\r\n//                         }\r\n//                         else if(array[i] == 100 && array[i+1] == 100){\r\n//                             //checking_plus_1(array,test[k]);\r\n//                             array[i] = array[j];\r\n//                             array[i+1] = array[j+1];\r\n//                             array[j] = test[k4];\r\n//                             array[j+1] = test[k4];\r\n//                             combine[j+startIndex100] = test[k4];\r\n//                             combine[j+startIndex100+1] = test[k4];\r\n//                             //changeRowtoZero_plus_1(array,i,i-1);\r\n//                             changeRowtoZero_plus_1(combine,array,j,j-1);\r\n//                         }\r\n//                         else{\r\n//                             remainderArraySlot1.push(test[k4]);\r\n//                         }\r\n//                     }\r\n//                     else{\r\n//                         remainderArray.push(test[k4]);\r\n//                     }\r\n\r\n//             }\r\n\r\n//             changeToZero(array);\r\n//             changeToZero(combine);\r\n//             }\r\n//             k4++  \r\n//         }\r\n\r\n//         for(let i = array.length-1;i>0;i--){\r\n//             if(k5 < test.length){\r\n//             let hourMS = test[k5][7]    \r\n//             //checkTest(AntArr200,test[k])\r\n//             changeToZero(array)\r\n//             changeToZero(combine)\r\n//             if(hourMS == 3){\r\n//                 const j = Math.floor(Math.random()*(i+1)); \r\n\r\n//                     checking_3(combine,array,test[k5]);\r\n//                     //checking_only_1(array,test[k])\r\n//                     //checkTest(AntArr200,test[k])\r\n//                     if( array[i] == 100 && array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n//                         //checking_3(array,test[k]);\r\n//                         array[i] = array[j];\r\n//                         array[i-1] = array[j-1];\r\n//                         array[i+1] = array[j+1];\r\n//                         array[j] = test[k5];\r\n//                         array[j-1] = test[k5];\r\n//                         array[j+1] = test[k5];\r\n//                         combine[j+startIndex100] = test[k5];\r\n//                         combine[j+startIndex100-1] = test[k5];\r\n//                         combine[j+startIndex100+1] = test[k5];\r\n//                         changeRowtoZero_3_(combine,array,i,i-1,i+1)\r\n//                     }else if(array[i] == 100 && array[i-1] == 100){//slot 2 hours in 1 go\r\n//                         //checking_minus_1(array,test[k]);\r\n//                         array[i] = array[j];\r\n//                         array[i-1] = array[j-1];\r\n//                         array[j] = test[k5];\r\n//                         array[j-1] = test[k5];\r\n//                         combine[j+startIndex100] = test[k5];\r\n//                         combine[j+startIndex100-1] = test[k5];\r\n//                         insertedData200_Slot2_1.push(test[k5])\r\n//                         changeRowtoZero_minus_1(combine,array,i,i-1)\r\n//                     }else if(array[i] == 100 && array[i+1] == 100){//slot 2 hours in 1 go\r\n//                         //checking_plus_1(array,test[k]);\r\n//                         array[i] = array[j];\r\n//                         array[i+1] = array[j+1];\r\n//                         array[j] = test[k5];\r\n//                         array[j+1] = test[k5];\r\n//                         combine[j+startIndex100] = test[k5];\r\n//                         combine[j+startIndex100+1] = test[k5];\r\n//                         insertedData200_Slot2_1.push(test[k5])\r\n//                         changeRowtoZero_plus_1(combine,array,i,i-1);\r\n//                     }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n//                         //checking_only_1(array,test[k]);\r\n//                         array[i] = array[j];\r\n//                         array[j] = test[k5];\r\n//                         combine[j+startIndex100] = test[k5];\r\n//                         changeRowtoZero_1(combine,array,i)\r\n//                         remainderArraySlot1.push(test[k5])\r\n//                     }\r\n//             }\r\n\r\n//             changeToZero(array);\r\n//             changeToZero(combine);\r\n//             }\r\n//             k5++  \r\n//         }\r\n\r\n\r\n//  //changeToZero(array) \r\n\r\n//  //fullfill the slot 3\r\n//  for(let x = 0; x< array.length; x++){\r\n//     if(k3 < remainderArraySlot1.length){                \r\n//         //checking_only_1(array, remainderArraySlot1[k3])\r\n//         //checkTest(AntArr200,remainderArraySlot1[k3])\r\n//         checking_plus_1(combine,array,remainderArraySlot1[k3])\r\n//         if(array[x] == 100 && array[x+1] ==100){\r\n//             //changeRowtoZero_plus_1(array,remainderArraySlot1[k3])\r\n//             array[x] = remainderArraySlot1[k3]\r\n//             array[x+1] = remainderArraySlot1[k3]\r\n//             combine[x+startIndex200] = remainderArraySlot1[k3]\r\n//             combine[x+startIndex200+1] = remainderArraySlot1[k3]\r\n//             changeRowtoZero_plus_1(combine,array,x,x+1)\r\n//         }else{insertedData200_Slot2_2.push(remainderArraySlot1[k3])}\r\n//      }\r\n//      k3++   \r\n//  }\r\n//  changeToZero(array);\r\n//  changeToZero(combine);\r\n\r\n \r\n//  for(let x = 0; x< array.length; x++){\r\n//     if(k2 < remainderArray.length){\r\n//         //checkTest(AntArr200,remainderArray[k2])\r\n//         checking_plus_1(combine,array,remainderArray[k2])\r\n//          if(array[x] == 100 && array[x+1] ==100){\r\n//              //if(k2 < remainderArray.length){\r\n//                 //changeRowtoZero_plus_1(array,remainderArraySlot1[k2])\r\n//                  array[x] = remainderArray[k2]\r\n//                  array[x+1] = remainderArray[k2]\r\n//                  combine[x+startIndex200] = remainderArray[k2]\r\n//                  combine[x+startIndex200+1] = remainderArray[k2]\r\n//                  changeRowtoZero_plus_1(combine,array,x,x+1)\r\n//              }\r\n//              try{\r\n//                  let slot2 = remainderArray[k2][10]\r\n//                  if(slot2 == 1){\r\n//                      insertedData200_Slot2_1.push(remainderArray[k2])\r\n//                  }\r\n//                  if(slot2 == 2){\r\n//                     insertedData200_Slot2_2.push(remainderArray[k2])\r\n//                 }\r\n//              }catch{}\r\n//      }\r\n//      k2++   \r\n//  }\r\n//   changeToZero(array)\r\n//   changeToZero(combine)\r\n\r\n// //  for(let i = 0; i < array.length; i++){\r\n// //     if(array[i] != 100 && array[i] !=200 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n// //         count += 1\r\n// //     }\r\n// // }\r\n// //console.log(count);\r\n\r\n//  if(array[-1] != undefined){\r\n//      insertedData200_Slot2_1.push(array[-1]);\r\n//  }\r\n\r\n//     return array;\r\n// }\r\n\r\n// //var AntArrIns200 = AntAlgoInsert200(AntArr200);\r\n// var AntArrIns200 = AntAlgoInsert200(AntArr200,AntArrCombine);\r\n// //console.log(AntArrIns200);\r\n\r\n//  const slot2Equal1for200= (array,combine) => {\r\n//      let k = 0;\r\n//      let test2 = []\r\n//     let totalRoom = array.length / 38\r\n\r\n//      for(let x = 0; x< array.length; x++){\r\n//             if(array[x] == 100){\r\n//                 if(k < insertedData200_Slot2_1.length){\r\n//                     checking_only_1(combine,array,insertedData200_Slot2_1[k])\r\n//                     array[x] = insertedData200_Slot2_1[k]\r\n//                     combine[x+startIndex200] = insertedData200_Slot2_1[k]\r\n//                 //changeRowtoZero_1(array,x)\r\n//                 }\r\n//                 k++   \r\n//          }\r\n//      }\r\n//      changeToZero(array)\r\n//      changeToZero(combine)\r\n//      return array;\r\n//  }\r\n// slot2Equal1for200(AntArr200,AntArrCombine);\r\n// //slot2Equal1for200(AntArrCombine);\r\n\r\n\r\n//  const slot2Equal2for200 = (array,combine) => {\r\n//      let k = 0;\r\n//     let totalRoom = array.length / 38\r\n\r\n//      for(let x = 0; x< array.length; x++){\r\n//          if(array[x] == 100 && array[x+1] ==100){\r\n//             if(k < insertedData200_Slot2_2.length){\r\n//                 //checking_only_1(array,insertedData200_Slot2_2[k])\r\n//                 //checkTest(AntArr200,insertedData200_Slot2_2[k])\r\n//                 checking_plus_1(combine,array,insertedData200_Slot2_2[k])\r\n//                  array[x] = insertedData200_Slot2_2[k]\r\n//                  array[x+1] = insertedData200_Slot2_2[k]\r\n//                  combine[x+startIndex200] = insertedData200_Slot2_2[k]\r\n//                  combine[x+startIndex200+1] = insertedData200_Slot2_2[k]\r\n//                  //changeRowtoZero_plus_1(array,x,x+1)\r\n//              }\r\n//              k++\r\n//          }\r\n//      }\r\n//      changeToZero(array)\r\n//      changeToZero(combine)\r\n\r\n//      if(array[-1] != undefined){\r\n//          insertedData200_Slot2_1.push(array[-1]);\r\n//      }\r\n\r\n//      return array;\r\n//  }\r\n//  slot2Equal2for200(AntArr200,AntArrCombine);\r\n//  //slot2Equal2for200(AntArrCombine);\r\n\r\n// const checkAmountData200_2 = (array) => {\r\n//     let count = 0\r\n//     for(let i = 0; i < array.length; i++){\r\n//             if(array[i] != 100 && array[i] !=200 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n//                 count += 1\r\n//             }\r\n//     }\r\n//     return count\r\n// }\r\n// //var checkAmount_2 = checkAmountData200_2(AntArrIns200)\r\n// var checkAmount_2 = checkAmountData200_2(AntArrIns200)\r\n// // console.log(AntArrIns200)\r\n// // console.log(\"Amount of data: \" +checkAmount_2);\r\n\r\n// const checkAmountData200_0 = (array) => {\r\n//     let count = 0\r\n//     for(let i = 0; i < array.length; i++){\r\n//             if( array[i] == 0 ){\r\n//                 count += 1\r\n//             }\r\n//     }\r\n//     return count\r\n// }\r\n//  //var checkAmount_0 = checkAmountData200_0(AntArr200)\r\n//  var checkAmount_0 = checkAmountData200_0(AntArr200)\r\n// //console.log(\"zero counter: \"+checkAmount_0);\r\n\r\n\r\n\r\n// //________________________________________________________________________________________________________________________________________________________\r\n\r\n\r\n// const array1D500 = (data) => {\r\n//     var result = []\r\n\r\n//     for(let i = 0; i< data; i++){\r\n//         result[i]= 100;\r\n//     }\r\n//     return result;\r\n// }\r\n// var AntArr500 = array1D500(DataArray500);\r\n\r\n// let insertedData500_Slot2_2 = []\r\n// let insertedData500_Slot2_1= []\r\n\r\n// let arrayLength500 =  DataArray500\r\n// const AntAlgoInsert500 = (array,combine) => {\r\n\r\n//     //array.length = 1064 (last index = 1063)\r\n//     //array.length = 646 (last index = 645)\r\n\r\n\r\n//     let test = []\r\n//     let k = 0;\r\n//     let k2 =0\r\n//     let k3 =0\r\n//     let k4=0\r\n//     let k5 =0\r\n//     let count = 0;\r\n//     let b = 1\r\n\r\n    \r\n//     let remainderArray = []\r\n//     let remainderArraySlot1 = []\r\n//     let totalRoom = array.length / 38\r\n\r\n\r\n//     for(let x=0; x<filterData500.length;x++){\r\n//         test.push(filterData500[x]);\r\n//     }\r\n\r\n//         //for(let i = array.length-1;i>0;i--){\r\n//         for(let i = array.length-1;i>0;i--){\r\n//             if(k < test.length){\r\n//             let hourMS = test[k][7]    \r\n//             //checkTest(AntArr500,test[k])\r\n//             changeToZero(array);\r\n//             changeToZero(combine);\r\n//             if(hourMS == 2){\r\n//                 //changeToZero(array)\r\n//                 const j = Math.floor(Math.random()*(i+1));\r\n//                 // checking_minus_1(array,test[k])\r\n//                 // checking_plus_1(array,test[k])\r\n//                 checking_minus_1(combine,array,test[k])\r\n//                 checking_plus_1(combine,array,test[k])\r\n//                 //checking_only_1(array,test[k])\r\n//                 //checkTest(AntArr500,test[k])\r\n//                 if(array[i] == 100 && array[i-1] == 100){\r\n//                         array[i] = array[j];\r\n//                         array[i-1] = array[j-1];\r\n//                         array[j] = test[k];\r\n//                         array[j-1] = test[k];\r\n//                         combine[j+startIndex100] = test[k];\r\n//                         combine[j+startIndex100-1] = test[k];\r\n//                         //changeRowtoZero_minus_1(array,i,i-1)\r\n//                         changeRowtoZero_minus_1(combine,array,i,i-1)\r\n//                         //checking_minus_1(array,test[k])\r\n//                  }\r\n//                  else if(array[i] == 100 && array[i+1] == 100){\r\n//                         //checking_plus_1(array,test[k])\r\n//                         array[i] = array[j];\r\n//                         array[i+1] = array[j+1];\r\n//                         array[j] = test[k];\r\n//                         array[j+1] = test[k];\r\n//                         combine[j+startIndex100] = test[k];\r\n//                         combine[j+startIndex100+1] = test[k];\r\n//                         //changeRowtoZero_plus_1(array,i,i+1)\r\n//                         changeRowtoZero_plus_1(combine,i,i+1)\r\n//                         //checking_plus_1(array,test[k])\r\n//                 }\r\n//                 else{\r\n//                     remainderArray.push(test[k]);\r\n//                 }\r\n\r\n//             }\r\n\r\n//             // changeToZero(array);\r\n//             // changeToZero(combine);\r\n//             }\r\n//             k++  \r\n//         }\r\n\r\n\r\n//         for(let i = array.length-1;i>0;i--){\r\n//             if(k4 < test.length){\r\n//             let hourMS = test[k4][7]    \r\n//             //checkTest(AntArr500,test[k])\r\n//             changeToZero(array)\r\n//             changeToZero(combine)\r\n//             if(hourMS == 4){\r\n//                 // checking_minus_1(array,test[k]);\r\n//                 checking_minus_1(combine,array,test[k4]);\r\n//                 checking_plus_1(combine,array,test[k4])\r\n//                 //checking_only_1(array,test[k])\r\n//                 //checkTest(AntArr500,test[k])\r\n//                 const j = Math.floor(Math.random()*(i+1));\r\n//                     if(array[i] == 100 && array[i-1] == 100 ){\r\n//                         array[i] = array[j];\r\n//                         array[i-1] = array[j-1];\r\n//                         array[j] = test[k4];\r\n//                         array[j-1] = test[k4];\r\n//                         combine[j+startIndex100] = test[k4];\r\n//                         combine[j+startIndex100-1] = test[k4];\r\n\r\n                        \r\n    \r\n//                         //const j = Math.floor(Math.random()*(i+1));\r\n//                         changeRowtoZero_minus_1(combine,array,j,j-1);\r\n//                         if(array[i] == 100 && array[i-1] == 100){\r\n//                             //checking_minus_1(array,test[k]);\r\n//                             array[i] = array[j];\r\n//                             array[i-1] = array[j-1];\r\n//                             array[j] = test[k4];\r\n//                             array[j-1] = test[k4];\r\n//                             combine[j+startIndex100] = test[k4];\r\n//                             combine[j+startIndex100-1] = test[k4];\r\n//                             //changeRowtoZero_minus_1(array,i,i-1)\r\n//                             changeRowtoZero_minus_1(combine,array,j,j-1);\r\n//                         }\r\n//                         else if(array[i] == 100 && array[i+1] == 100){\r\n//                             //checking_plus_1(array,test[k]);\r\n//                             array[i] = array[j];\r\n//                             array[i+1] = array[j+1];\r\n//                             array[j] = test[k4];\r\n//                             array[j+1] = test[k4];\r\n//                             combine[j+startIndex100] = test[k4];\r\n//                             combine[j+startIndex100+1] = test[k4];\r\n//                             //changeRowtoZero_plus_1(array,j,j-1);\r\n//                             changeRowtoZero_plus_1(combine,array,j,j-1);\r\n//                         }\r\n//                         else{\r\n//                             remainderArraySlot1.push(test[k4]);\r\n//                         }\r\n//                         //count += 1\r\n//                     }\r\n//                     else if(array[i] == 100 && array[i+1] == 100 ){\r\n//                         //checking_plus_1(array,test[k]);\r\n//                         array[i] = array[j];\r\n//                         array[i+1] = array[j+1];\r\n//                         array[j] = test[k4];\r\n//                         array[j+1] = test[k4];\r\n//                         combine[j+startIndex100] = test[k4];\r\n//                         combine[j+startIndex100+1] = test[k4];\r\n                    \r\n//                         changeRowtoZero_plus_1(combine,array,i,i-1);\r\n//                         //const j = Math.floor(Math.random()*(i+1));\r\n//                         if(array[i] == 100 && array[i-1] == 100){\r\n//                         //checking_minus_1(array,test[k]);\r\n//                             array[i] = array[j];\r\n//                             array[i-1] = array[j-1];\r\n//                             array[j] = test[k4];\r\n//                             array[j-1] = test[k4];\r\n//                             combine[j+startIndex100] = test[k4];\r\n//                             combine[j+startIndex100-1] = test[k4];\r\n//                             //changeRowtoZero_minus_1(array,i,i-1)\r\n//                             changeRowtoZero_minus_1(combine,array,j,j-1);\r\n//                         }\r\n//                         else if(array[i] == 100 && array[i+1] == 100){\r\n//                             //checking_plus_1(array,test[k]);\r\n//                             array[i] = array[j];\r\n//                             array[i+1] = array[j+1];\r\n//                             array[j] = test[k4];\r\n//                             array[j+1] = test[k4];\r\n//                             combine[j+startIndex100] = test[k4];\r\n//                             combine[j+startIndex100+1] = test[k4];\r\n//                             //changeRowtoZero_plus_1(array,i,i-1);\r\n//                             changeRowtoZero_plus_1(combine,array,j,j-1);\r\n//                         }\r\n//                         else{\r\n//                             remainderArraySlot1.push(test[k4]);\r\n//                         }\r\n//                     }\r\n//                     else{\r\n//                         remainderArray.push(test[k4]);\r\n//                     }\r\n\r\n//             }\r\n\r\n//             changeToZero(array);\r\n//             changeToZero(combine);\r\n//             }\r\n//             k4++  \r\n//         }\r\n\r\n//         for(let i = array.length-1;i>0;i--){\r\n//             if(k5 < test.length){\r\n//             let hourMS = test[k5][7]    \r\n//             //checkTest(AntArr500,test[k])\r\n//             changeToZero(array)\r\n//             changeToZero(combine)\r\n//             if(hourMS == 3){\r\n//                 const j = Math.floor(Math.random()*(i+1)); \r\n\r\n//                     checking_3(combine,array,test[k5]);\r\n//                     //checking_only_1(array,test[k])\r\n//                     //checkTest(AntArr500,test[k])\r\n//                     if( array[i] == 100 && array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n//                         //checking_3(array,test[k]);\r\n//                         array[i] = array[j];\r\n//                         array[i-1] = array[j-1];\r\n//                         array[i+1] = array[j+1];\r\n//                         array[j] = test[k5];\r\n//                         array[j-1] = test[k5];\r\n//                         array[j+1] = test[k5];\r\n//                         combine[j+startIndex100] = test[k5];\r\n//                         combine[j+startIndex100-1] = test[k5];\r\n//                         combine[j+startIndex100+1] = test[k5];\r\n//                         changeRowtoZero_3_(combine,array,i,i-1,i+1)\r\n//                     }else if(array[i] == 100 && array[i-1] == 100){//slot 2 hours in 1 go\r\n//                         //checking_minus_1(array,test[k]);\r\n//                         array[i] = array[j];\r\n//                         array[i-1] = array[j-1];\r\n//                         array[j] = test[k5];\r\n//                         array[j-1] = test[k5];\r\n//                         combine[j+startIndex100] = test[k5];\r\n//                         combine[j+startIndex100-1] = test[k5];\r\n//                         insertedData500_Slot2_1.push(test[k5])\r\n//                         changeRowtoZero_minus_1(combine,array,i,i-1)\r\n//                     }else if(array[i] == 100 && array[i+1] == 100){//slot 2 hours in 1 go\r\n//                         //checking_plus_1(array,test[k]);\r\n//                         array[i] = array[j];\r\n//                         array[i+1] = array[j+1];\r\n//                         array[j] = test[k5];\r\n//                         array[j+1] = test[k5];\r\n//                         combine[j+startIndex100] = test[k5];\r\n//                         combine[j+startIndex100+1] = test[k5];\r\n//                         insertedData500_Slot2_1.push(test[k5])\r\n//                         changeRowtoZero_plus_1(combine,array,i,i-1);\r\n//                     }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n//                         //checking_only_1(array,test[k]);\r\n//                         array[i] = array[j];\r\n//                         array[j] = test[k5];\r\n//                         combine[j+startIndex100] = test[k5];\r\n//                         changeRowtoZero_1(combine,array,i)\r\n//                         remainderArraySlot1.push(test[k5])\r\n//                     }\r\n//             }\r\n\r\n//             changeToZero(array);\r\n//             changeToZero(combine);\r\n//             }\r\n//             k5++  \r\n//         }\r\n\r\n\r\n//  //changeToZero(array) \r\n\r\n//  //fullfill the slot 3\r\n//  for(let x = 0; x< array.length; x++){\r\n//     if(k3 < remainderArraySlot1.length){                \r\n//         //checking_only_1(array, remainderArraySlot1[k3])\r\n//         //checkTest(AntArr500,remainderArraySlot1[k3])\r\n//         checking_plus_1(combine,array,remainderArraySlot1[k3])\r\n//         if(array[x] == 100 && array[x+1] ==100){\r\n//             //changeRowtoZero_plus_1(array,remainderArraySlot1[k3])\r\n//             array[x] = remainderArraySlot1[k3]\r\n//             array[x+1] = remainderArraySlot1[k3]\r\n//             combine[x+startIndex500] = remainderArraySlot1[k3]\r\n//             combine[x+startIndex500+1] = remainderArraySlot1[k3]\r\n//             changeRowtoZero_plus_1(combine,array,x,x+1)\r\n//         }else{insertedData500_Slot2_2.push(remainderArraySlot1[k3])}\r\n//      }\r\n//      k3++   \r\n//  }\r\n//  changeToZero(array);\r\n//  changeToZero(combine);\r\n\r\n \r\n//  for(let x = 0; x< array.length; x++){\r\n//     if(k2 < remainderArray.length){\r\n//         //checkTest(AntArr500,remainderArray[k2])\r\n//         checking_plus_1(combine,array,remainderArray[k2])\r\n//          if(array[x] == 100 && array[x+1] ==100){\r\n//              //if(k2 < remainderArray.length){\r\n//                 //changeRowtoZero_plus_1(array,remainderArraySlot1[k2])\r\n//                  array[x] = remainderArray[k2]\r\n//                  array[x+1] = remainderArray[k2]\r\n//                  combine[x+startIndex500] = remainderArray[k2]\r\n//                  combine[x+startIndex500+1] = remainderArray[k2]\r\n//                  changeRowtoZero_plus_1(combine,array,x,x+1)\r\n//              }\r\n//              try{\r\n//                  let slot2 = remainderArray[k2][10]\r\n//                  if(slot2 == 1){\r\n//                      insertedData500_Slot2_1.push(remainderArray[k2])\r\n//                  }\r\n//                  if(slot2 == 2){\r\n//                     insertedData500_Slot2_2.push(remainderArray[k2])\r\n//                 }\r\n//              }catch{}\r\n//      }\r\n//      k2++   \r\n//  }\r\n//   changeToZero(array)\r\n//   changeToZero(combine)\r\n\r\n// //  for(let i = 0; i < array.length; i++){\r\n// //     if(array[i] != 100 && array[i] !=500 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n// //         count += 1\r\n// //     }\r\n// // }\r\n// //console.log(count);\r\n\r\n//  if(array[-1] != undefined){\r\n//      insertedData500_Slot2_1.push(array[-1]);\r\n//  }\r\n\r\n//     return array;\r\n// }\r\n\r\n// //var AntArrIns500 = AntAlgoInsert500(AntArr500);\r\n// var AntArrIns500 = AntAlgoInsert500(AntArr500,AntArrCombine);\r\n// //console.log(AntArrIns500);\r\n\r\n//  const slot2Equal1for500= (array,combine) => {\r\n//      let k = 0;\r\n//      let test2 = []\r\n//     let totalRoom = array.length / 38\r\n\r\n//      for(let x = 0; x< array.length; x++){\r\n//             if(array[x] == 100){\r\n//                 if(k < insertedData500_Slot2_1.length){\r\n//                     checking_only_1(combine,array,insertedData500_Slot2_1[k])\r\n//                     array[x] = insertedData500_Slot2_1[k]\r\n//                     combine[x+startIndex500] = insertedData500_Slot2_1[k]\r\n//                 //changeRowtoZero_1(array,x)\r\n//                 }\r\n//                 k++   \r\n//          }\r\n//      }\r\n//      changeToZero(array)\r\n//      changeToZero(combine)\r\n//      return array;\r\n//  }\r\n// slot2Equal1for500(AntArr500,AntArrCombine);\r\n// //slot2Equal1for500(AntArrCombine);\r\n\r\n\r\n//  const slot2Equal2for500 = (array,combine) => {\r\n//      let k = 0;\r\n//     let totalRoom = array.length / 38\r\n\r\n//      for(let x = 0; x< array.length; x++){\r\n//          if(array[x] == 100 && array[x+1] ==100){\r\n//             if(k < insertedData500_Slot2_2.length){\r\n//                 //checking_only_1(array,insertedData500_Slot2_2[k])\r\n//                 //checkTest(AntArr500,insertedData500_Slot2_2[k])\r\n//                 checking_plus_1(combine,array,insertedData500_Slot2_2[k])\r\n//                  array[x] = insertedData500_Slot2_2[k]\r\n//                  array[x+1] = insertedData500_Slot2_2[k]\r\n//                  combine[x+startIndex500] = insertedData500_Slot2_2[k]\r\n//                  combine[x+startIndex500+1] = insertedData500_Slot2_2[k]\r\n//                  //changeRowtoZero_plus_1(array,x,x+1)\r\n//              }\r\n//              k++\r\n//          }\r\n//      }\r\n//      changeToZero(array)\r\n//      changeToZero(combine)\r\n\r\n//      if(array[-1] != undefined){\r\n//          insertedData500_Slot2_1.push(array[-1]);\r\n//      }\r\n\r\n//      return array;\r\n//  }\r\n//  slot2Equal2for500(AntArr500,AntArrCombine);\r\n//  //slot2Equal2for500(AntArrCombine);\r\n\r\n// const checkAmountData500_2 = (array) => {\r\n//     let count = 0\r\n//     for(let i = 0; i < array.length; i++){\r\n//             if(array[i] != 100 && array[i] !=500 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n//                 count += 1\r\n//             }\r\n//     }\r\n//     return count\r\n// }\r\n// //var checkAmount_2 = checkAmountData500_2(AntArrIns500)\r\n// var checkAmount_2 = checkAmountData500_2(AntArrIns500)\r\n// // console.log(AntArrIns500)\r\n// // console.log(\"Amount of data: \" +checkAmount_2);\r\n\r\n// const checkAmountData500_0 = (array) => {\r\n//     let count = 0\r\n//     for(let i = 0; i < array.length; i++){\r\n//             if( array[i] == 0 ){\r\n//                 count += 1\r\n//             }\r\n//     }\r\n//     return count\r\n// }\r\n//  //var checkAmount_0 = checkAmountData500_0(AntArr500)\r\n//  var checkAmount_0 = checkAmountData500_0(AntArr500)\r\n// //console.log(\"zero counter: \"+checkAmount_0);\r\n\r\n\r\n//______________________________________________________________________________________________________________________________________________\r\n\r\n\r\nconst checkAmountDataCombine_2 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=100 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_combine = checkAmountDataCombine_2(AntArrCombine)\r\n console.log(AntArrCombine)\r\n console.log(\"Amount of data: \" +checkAmount_combine);\r\n\r\n//  var phecheckAmount_combine = checkAmountDataCombine_2(pheAntArrCombine)\r\n//  console.log(pheAntArrCombine)\r\n//  console.log(\"Amount of data: \" + phecheckAmount_combine);\r\n\r\nconst checkAmountDataCombine = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if( array[i] == 0 ){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\n //var checkAmount_0 = checkAmountData100_0(AntArr100)\r\n var checkAmount_combineData = checkAmountDataCombine(AntArrCombine)\r\n//console.log(\"zero counter: \"+checkAmount_combineData);\r\n\r\n\r\n\r\n//---------------------------------------------------------------------------------------------------------------------------------------------\r\n//----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n//console.log(dataCombine)\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n// Hard Constraint \r\n// H1: No student attend more than one class/ event at the same time\r\n// H2: The room is large enough to accomodate all of the student in attendace while also meeting the requirement \r\n// H3: At any given time, each room can onle have one course booked\r\n// H4: No student attend class during 12:00 pm -2:00 due to solat jumaat\r\n// H5: One teacher can only teach one class at one time.\r\n\r\n//Check for the H1 violation: same group attend more than 1 class at 1 time\r\n\r\nconst check1Group = (array) => {\r\n   let count =0\r\n   let indexArray = 0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       indexArray = (x * 38)\r\n   }\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       try{\r\n            for(let i = 0; i<array.length ; i++){\r\n               indexArray = (x * 37)\r\n               if(array[i+indexArray] != 100 && array[i+indexArray] != undefined  && array[i+indexArray] != 1 && array[i+indexArray] != 0 ){\r\n                   try{\r\n                       if(array[i][6] == array[i+indexArray][6] && array[i][5] == array[i+indexArray][5]){\r\n                            try{\r\n                                console.log(array[i])\r\n                                console.log(array[i][6])\r\n                                console.log(array[i+indexArray])\r\n                                console.log(array[i+indexArray][6])\r\n                                count +=1\r\n                            }catch{}\r\n                       }\r\n                   }catch{}\r\n               }   \r\n           }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n}\r\n\r\nvar checkH1_ALL = check1Group(AntArrCombine)\r\n\r\n\r\n//Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\r\n\r\nconst checkRoomQuota = (array) => {\r\n   let count = 0\r\n   return count \r\n}\r\n\r\n\r\n//Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\r\nconst checkSolatJummat = (array) => {\r\n   let count = 0\r\n   return count \r\n}\r\n\r\n\r\n//Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\r\n\r\nconst check1Teacher = (array) => {\r\n   let count =0\r\n   let indexArray = 0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n    indexArray = (x * 38)\r\n       try{\r\n        for(let i = 1; i<array.length ; i++){\r\n               if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 1 && array[i+indexArray] != 0 ){\r\n                   try{\r\n                       if(array[i][5] == array[i+indexArray][5]){\r\n                           console.log(array[i])\r\n                           console.log(array[i][5])\r\n                           console.log(array[i+indexArray])\r\n                           console.log(array[i+indexArray][5])\r\n                           count +=1\r\n                        }\r\n                   }catch{}\r\n               }    \r\n           }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n\r\n}\r\nvar checkH5_ALL = check1Teacher(AntArrCombine)\r\n\r\nconst checkHC = (data1,data2) => {\r\n    let count =0;\r\n    // if(data1 != 0){\r\n    //     count +=1\r\n    // }\r\n    // if(data2 != 0){\r\n    //     count +=1\r\n    // }\r\n\r\n    count = data1 + data2 \r\n    return count;\r\n}\r\nlet checkTotalHardContraints = checkHC(checkH5_ALL,checkH1_ALL)\r\nconsole.log(\"Total Hard Constraint: \"+checkTotalHardContraints)\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n// Soft Constraint \r\n// S1: A student has a class schedule toward the end of the day\r\n// S2: A student have more than two class in a row\r\n\r\n\r\n//Check for the S1 violation: student have class at the end of the day\r\nconst checkEndOfClass = (array) => {\r\n   let count =0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       let indexArray = (x * 37)\r\n       if(array[indexArray] != 100 ){\r\n           count = 1\r\n       }\r\n   }\r\n   return count\r\n\r\n}\r\n\r\n var checkSC1_ALL = checkEndOfClass(AntArrCombine)\r\n\r\n\r\n\r\n//Check for the S2 violation: student have 2 class in a row\r\n\r\nconst check2ClassInARow = (array) => {\r\n   let count =0\r\n   for(let i = 0; i < array.length; i++){\r\n       try{\r\n        if(array[i][5] != undefined && array[i+3][5] != undefined && array[i+2][5] != undefined && array[i+4][5] != undefined){\r\n            if(array[i][6] == array[i+3][6] && array[i+2][6] == array[i+4][6]){\r\n                count = 1\r\n            }\r\n       }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n}\r\n\r\nvar checkSC2_ALL = checkEndOfClass(AntArrCombine)\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nconst checkTotalSoftContraint = () => {\r\n    let count =0\r\n    let totalSC = checkSC1_ALL + checkSC2_ALL\r\n    // let totalS1 = checkS1_50 + checkS1_100 + checkS1_200 + checkS1_500 + checkS1_Elective50 + checkS1_Elective100 + checkS1_Elective200 + checkS1_Elective500\r\n    // let totalS2 = checkS2_50 + checkS2_100 + checkS2_200 + checkS2_500 + checkS2_Elective50 + checkS2_Elective100 + checkS2_Elective200 + checkS2_Elective500\r\n    \r\n    if(totalSC != 0){\r\n        count +=1\r\n    }\r\n    return count\r\n}\r\nvar checkTotalSoftContraints = checkTotalSoftContraint()\r\nconsole.log(\"Total Soft Constraint: \"+checkTotalSoftContraints)\r\n//----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nconst change100ToEmpty = (data) => {\r\n    for(let i = 0; i< data.length; i++){\r\n        if(data[i] == 100){\r\n            data[i] = [];\r\n        }\r\n    }\r\n    return data;\r\n}\r\nlet finalData = change100ToEmpty(AntArrCombine);\r\n\r\nconst change100ToEmptyElective = (data) => {\r\n    for(let i = 0; i< data.length; i++){\r\n        if(data[i] == 100){\r\n            data[i] = [];\r\n        }\r\n    }\r\n    return data;\r\n}\r\n\r\n\r\n// const checkMissingData = (data50,data100,data200,data500,dataE50,dataE100,dataE200,dataE500) => {\r\n//     let countData = []\r\n//     for(let i = 0; i< courseData[0].length;i++){\r\n//         for(let j = 0; j <courseData[0][i][7]; j++){\r\n//             countData.push(courseData[0][i]);\r\n//         }\r\n//     }\r\n\r\n//     let totalGenerateScheduleData = data50 + data100 + data200 + data500 + dataE50 + dataE100 + dataE200 + dataE500\r\n\r\n//     if(countData.length == totalGenerateScheduleData){\r\n  \r\n//     }else{\r\n\r\n//     }\r\n// }\r\n// //checkMissingData(checkAmount50,checkAmount100,checkAmount200,checkAmount500,checkAmountElective50,checkAmountElective100,checkAmountElective200,checkAmountElective500)\r\n\r\n\r\ncheckTotalHardContraintsAll = checkTotalHardContraints\r\ncheckTotalSoftContraintsAll = checkTotalSoftContraints\r\nfinalDataAll.push(finalData)\r\nreturn {checkTotalHardContraints,checkTotalSoftContraints,finalData}\r\n ////return {checkTotalHardContraints,checkTotalSoftContraints}\r\n}\r\n// for(let i = 1; i <= 1; i++){\r\n//     console.log(\"iteration: \" + i)\r\n//     let antSystemAlgo = antSystem();\r\n// }\r\n// -------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nlet trigger = 0\r\nvar t0 = performance.now()\r\nconst iteration = () => {\r\n        //antSystem()\r\n        let globalBestHS = checkTotalHardContraintsAll \r\n        let globalBestSS = checkTotalSoftContraintsAll\r\n        let globalBestScehdule = finalDataAll[0]\r\n        // let globalBestScehduleElective = finalDataAllElective[0]\r\n    for(let i= 1; i <= 1; i++){\r\n        antSystem()\r\n        let localBestHS = checkTotalHardContraintsAll \r\n        let localBestSS = checkTotalSoftContraintsAll\r\n        let localBestScehdule = finalDataAll[0]\r\n        // let localBestScehduleElective = finalDataAllElective[0]\r\n            console.log(\"iteraion: \" + i)\r\n            if(globalBestHS > localBestHS ){\r\n                globalBestHS = localBestHS\r\n                globalBestSS = localBestSS\r\n                globalBestScehdule = localBestScehdule\r\n                // globalBestScehduleElective = localBestScehduleElective\r\n            }\r\n            if(localBestHS == 0){\r\n                console.log(\"iteraion: \" + i)\r\n                console.log(\"workable solution is found\")\r\n                globalBestHS = localBestHS\r\n                globalBestSS = localBestSS\r\n                globalBestScehdule = localBestScehdule\r\n                // globalBestScehduleElective = localBestScehduleElective\r\n                console.log(\"Workable Gloabal best HS: \"+globalBestHS)\r\n                console.log(\"Workable Gloabal best SS: \" +globalBestSS)\r\n                //console.log(finalDataAll[0])\r\n                trigger = 1\r\n                //return [finalDataAll[0], finalDataAllElective[0]]\r\n                return [finalDataAll[0]]\r\n            }\r\n            else if(localBestHS == 0 && localBestSS == 0){\r\n                console.log(\"iteraion: \" + i)\r\n                console.log(\"perfect solution is found\")\r\n                globalBestHS = localBestHS\r\n                globalBestSS = localBestSS\r\n                globalBestScehdule = localBestScehdule\r\n                console.log(\"Perfect Gloabal best HS: \"+globalBestHS)\r\n                console.log(\"Perfect Gloabal best SS: \" +globalBestSS)\r\n                console.log(finalDataAll[0])\r\n                trigger = 1\r\n                //return [finalDataAll[0], finalDataAllElective[0]]\r\n                return [finalDataAll[0]]\r\n            }\r\n    }\r\n    //return [finalDataAll[0], finalDataAllElective[0]]\r\n    return [finalDataAll[0]]\r\n}\r\nlet interations = iteration()\r\n\r\nlet presentableData = []\r\n//let presentableDataElective = []\r\n\r\nif(trigger == 1){\r\n//shot course code, course name and lecturer    \r\nconst changeToPresentationData = (data) => {\r\n    for(let i= 0; i <= data[0].length; i++){\r\n        try {\r\n            presentableData.push([data[0][i][1],data[0][i][2],data[0][i][5]])\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n}\r\nchangeToPresentationData(interations)\r\n\r\n\r\nlet allRoomName = []\r\nfor(let i = 0; i < roomData[0].length; i++){\r\n    allRoomName.push(roomData[0][i][0])\r\n}\r\nallRoomName.unshift(\"Room\");\r\nif(allRoomName.pop() == undefined){\r\n}\r\n\r\n\r\nlet weekday = ['Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday',\r\n'Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday',\r\n'Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday',\r\n'Friday','Friday','Friday','Friday','Friday','Friday','Friday','Friday']\r\n\r\n\r\n\r\nconst create2dArray = (weekdayArray,partDay,arrayAll, partAll) => {\r\n    var tmp = [];\r\n\r\n    for(var i = 0; i < weekdayArray.length; i += partDay) {\r\n        tmp.push(weekdayArray.slice(i, i + partDay));\r\n    }\r\n    for(var i = 0; i < arrayAll.length; i += partAll) {\r\n        tmp.push(arrayAll.slice(i, i + partAll));\r\n    }\r\n    return tmp;\r\n}\r\nlet dataset = create2dArray(weekday,38,presentableData,38)\r\nconsole.log(dataset);\r\n\r\n\r\n\r\nconst insertRoomName = (roomData,array) => {\r\n    for(let i= 0; i<array.length; i++){\r\n        array[i].unshift(roomData[i]);\r\n    }\r\n    return array;\r\n}\r\n\r\ninsertRoomName(allRoomName,dataset)\r\n\r\n\r\n/** Convert a 2D array into a CSV string\r\n */\r\n  function arrayToCsv(data){\r\n    //console.log(data)\r\n    return data.map(row =>\r\n      row\r\n      .map(String)  // convert every value to String\r\n      .map(v => v.replaceAll('\"', '\"\"'))  // escape double colons\r\n      .map(v => `\"${v}\"`)  // quote it\r\n      .join(',')  // comma-separated\r\n    ).join('\\r\\n');  // rows starting on new lines\r\n  }\r\n\r\nlet csv = arrayToCsv(\r\n    dataset\r\n);\r\n\r\nfunction downloadBlob(content, filename, contentType) {\r\n    // Create a blob\r\n    var blob = new Blob([content], { type: contentType });\r\n    var url = URL.createObjectURL(blob);\r\n  \r\n    // Create a link to download it\r\n    var pom = document.createElement('a');\r\n    pom.href = url;\r\n    pom.setAttribute('download', filename);\r\n    pom.click();\r\n  }\r\n\r\n  /** Convert a 2D array into a CSV string\r\n   * elective\r\n */\r\n\r\n\r\nfunction downloadBlobElective(content, filename, contentType) {\r\n    // Create a blob\r\n    var blob = new Blob([content], { type: contentType });\r\n    var url = URL.createObjectURL(blob);\r\n  \r\n    // Create a link to download it\r\n    var pom = document.createElement('a');\r\n    pom.href = url;\r\n    pom.setAttribute('download', filename);\r\n    pom.click();\r\n  }\r\n\r\n    var t1 = performance.now()\r\n    console.log(\"Duration: \" + (t1-t0))\r\n    //downloadBlob(csv, 'ModifiedAntSystem_GeneratedSchedule.csv', 'text/csv;charset=utf-8;')\r\n  //downloadBlobElective(csvElective, 'ModifiedAntSystemElective_GeneratedSchedule.csv', 'text/csv;charset=utf-8;')\r\n}else{\r\n    var t1 = performance.now()\r\n    console.log(\"Duration: \" + (t1-t0) + \" milliseconds\" )\r\n    //alert(\"no workable solution found, please refersh until get workable solution\")\r\n}\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n        }\r\n    return(\r\n        <React.Fragment>\r\n            <h1>\r\n                Please wait while generating schedule\r\n            </h1>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default ArraySchedule;"]},"metadata":{},"sourceType":"module"}