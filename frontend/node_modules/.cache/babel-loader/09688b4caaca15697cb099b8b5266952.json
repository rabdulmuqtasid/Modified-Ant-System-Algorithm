{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acit\\\\Desktop\\\\FYP Code\\\\FYP Code\\\\frontend\\\\src\\\\components\\\\WelcomePage\\\\StartBtn.js\";\nimport React, { useCallback, useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport './StartBtn.css';\n\nconst Button = () => {\n  const history = useNavigate();\n\n  const signUp = async event => {\n    //const [userId, setUserId] = useState(false)\n    event.preventDefault();\n\n    try {\n      //const response = await fetch('http://localhost:5000/api/uploadFile/', {\n      const response = await fetch('http://localhost:5000/api/users/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: \"1\"\n        })\n      }); //const  responsedata = await response.json();\n\n      const responsedata = await response.json();\n\n      if (!response.ok) {\n        throw new Error(responsedata.message);\n      } //console.log(responsedata);\n\n\n      history('/UploadPage'); //navigate the user to the next page\n    } catch (err) {\n      console.log(err); //setError(err.message  || 'Something went wrong');\n    } // const getUserId = useCallback((uid) =>{\n    //   setUserId(uid);\n    // });\n    // const clearUserId = useCallback(() => {\n    //   setUserId(null);\n    // });\n\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: signUp,\n    className: \"start-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"START\"));\n};\n\nexport default Button;","map":{"version":3,"sources":["C:/Users/acit/Desktop/FYP Code/FYP Code/frontend/src/components/WelcomePage/StartBtn.js"],"names":["React","useCallback","useState","useNavigate","Button","history","signUp","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","userId","responsedata","json","ok","Error","message","err","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AAEA,OAAO,gBAAP;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAMC,OAAO,GAAGF,WAAW,EAA3B;;AAEA,QAAMG,MAAM,GAAG,MAAMC,KAAN,IAAe;AAC5B;AACEA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI;AACA;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAD,EAA2C;AACrEC,QAAAA,MAAM,EAAE,MAD6D;AAErEC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF4D;AAKrEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,MAAM,EAAC;AADY,SAAf;AAL+D,OAA3C,CAA5B,CAFA,CAWA;;AACA,YAAMC,YAAY,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAA3B;;AACA,UAAI,CAACT,QAAQ,CAACU,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAUH,YAAY,CAACI,OAAvB,CAAN;AACD,OAfH,CAgBA;;;AACAhB,MAAAA,OAAO,CAAC,aAAD,CAAP,CAjBA,CAiBsB;AACvB,KAlBH,CAkBG,OAAMiB,GAAN,EAAU;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EADS,CAET;AACD,KAxBuB,CAyBxB;AACA;AACA;AACA;AACA;AACA;;AAEL,GAhCD;;AAkCA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAEhB,MAAjB;AAA0B,IAAA,SAAS,EAAC,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CADJ;AAKH,CA1CD;;AA4CA,eAAeF,MAAf","sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nimport './StartBtn.css';\r\n\r\nconst Button = () => {\r\n    const history = useNavigate();\r\n\r\n    const signUp = async event => {\r\n      //const [userId, setUserId] = useState(false)\r\n        event.preventDefault();\r\n        try {\r\n            //const response = await fetch('http://localhost:5000/api/uploadFile/', {\r\n            const response = await fetch('http://localhost:5000/api/users/signup', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify({\r\n                userId:\"1\"\r\n              })\r\n            });\r\n            //const  responsedata = await response.json();\r\n            const responsedata = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(responsedata.message);\r\n              }\r\n            //console.log(responsedata);\r\n            history('/UploadPage')//navigate the user to the next page\r\n          }catch(err){\r\n            console.log(err);\r\n            //setError(err.message  || 'Something went wrong');\r\n          }\r\n          // const getUserId = useCallback((uid) =>{\r\n          //   setUserId(uid);\r\n          // });\r\n          // const clearUserId = useCallback(() => {\r\n          //   setUserId(null);\r\n          // });\r\n        \r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <button onClick={signUp}  className=\"start-button\">START</button>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Button;"]},"metadata":{},"sourceType":"module"}