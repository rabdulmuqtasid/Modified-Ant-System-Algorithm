{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acit\\\\Desktop\\\\FYP Code\\\\FYP Code\\\\frontend\\\\src\\\\components\\\\GetDataset\\\\getDataset.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { CSVLink } from \"react-csv\";\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\n\nconst Dataset = props => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedFile, setLoaadedFile] = useState(false); //console.log(\"props dataset:\"+ props.test)\n\n  let SaveData = props.test;\n  console.log(\"props dataset:\" + SaveData);\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost:5000/api/uploadFile/1');\n        const responsedata = await response.json();\n        console.log(responsedata);\n\n        if (!response.ok) {\n          throw new Error(responsedata.message);\n        }\n\n        setLoaadedFile(responsedata);\n        setIsLoading(true);\n      } catch (err) {\n        console.log(err.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, []);\n\n  /*#__PURE__*/\n  React.createElement(\"div\", {\n    className: \"upload-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, props.test);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 51\n    }\n  })));\n};\n\nexport default Dataset;","map":{"version":3,"sources":["C:/Users/acit/Desktop/FYP Code/FYP Code/frontend/src/components/GetDataset/getDataset.js"],"names":["React","useEffect","useState","CSVLink","LoadingSpinner","Dataset","props","isLoading","setIsLoading","loadedFile","setLoaadedFile","SaveData","test","console","log","sendRequest","response","fetch","responsedata","json","ok","Error","message","err"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAyC,OAAzC;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAOC,cAAP,MAA2B,yBAA3B;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,UAAD,EAAaC,cAAb,IAA+BR,QAAQ,CAAC,KAAD,CAA7C,CAHuB,CAIvB;;AACA,MAAIS,QAAQ,GAAGL,KAAK,CAACM,IAArB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAkBH,QAA9B;AACAV,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMc,WAAW,GAAG,YAAW;AAC3BP,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAG;AACH,cAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAD,CAA5B;AACA,cAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAYI,YAAZ;;AACA,YAAI,CAACF,QAAQ,CAACI,EAAd,EAAiB;AACb,gBAAM,IAAIC,KAAJ,CAAUH,YAAY,CAACI,OAAvB,CAAN;AACH;;AACDZ,QAAAA,cAAc,CAACQ,YAAD,CAAd;AACAV,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACC,OATD,CASC,OAAMe,GAAN,EAAU;AACPV,QAAAA,OAAO,CAACC,GAAR,CAAYS,GAAG,CAACD,OAAhB;AACH;;AACDd,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAfD;;AAgBAO,IAAAA,WAAW;AACd,GAlBQ,EAkBN,EAlBM,CAAT;;AAmBA;AAAA;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BT,KAAK,CAACM,IAApC;AAEA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,SAAS,iBAAI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAwB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CADlB,CADJ;AAKH,CAjCD;;AAmCA,eAAeF,OAAf","sourcesContent":["import React,{ useEffect,useState } from \"react\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\r\n\r\nconst Dataset = (props) => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [loadedFile, setLoaadedFile] = useState(false);\r\n    //console.log(\"props dataset:\"+ props.test)\r\n    let SaveData = props.test;\r\n    console.log(\"props dataset:\"+ SaveData)\r\n    useEffect(()=>{\r\n        const sendRequest = async () =>{\r\n            setIsLoading(true);\r\n            try{\r\n            const response = await fetch('http://localhost:5000/api/uploadFile/1');\r\n            const responsedata = await response.json();\r\n            console.log(responsedata);\r\n            if (!response.ok){\r\n                throw new Error(responsedata.message);\r\n            }\r\n            setLoaadedFile(responsedata);\r\n            setIsLoading(true);\r\n            }catch(err){\r\n                console.log(err.message);\r\n            }\r\n            setIsLoading(false);\r\n        };\r\n        sendRequest();\r\n    }, []);\r\n    <div className=\"upload-file\">{props.test}</div>\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isLoading && <div className=\"center\"><LoadingSpinner/></div>}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Dataset;"]},"metadata":{},"sourceType":"module"}