{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acit\\\\Desktop\\\\FYP Code\\\\FYP Code\\\\frontend\\\\src\\\\components\\\\RandomSchedule\\\\heuristicalgo.js\";\nimport { create, find, forEach, indexOf } from \"lodash\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport _ from 'lodash';\nimport { CSVLink } from \"react-csv\";\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\nlet finalDataAll = [];\nlet finalDataAllElective = [];\nlet checkHardConstraintOutsite = 0;\nlet checkSoftConstraintOutsite = 0;\n\nconst HeuristicApproach = props => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedFile, setLoaadedFile] = useState(false);\n  const [roomData, setroomData] = useState();\n  const [courseData, setcourseData] = useState();\n  const [CsvData, setCsvData] = useState(); // const [Keys, setKeys] = useState();\n  //const [uploadedData, setUploadedData] = useState([]);\n  //console.log(\"props dataset:\"+ props.test)\n\n  const userId = useParams().userId;\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875'); //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\n        //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\n\n        const responsedata = await response.json();\n        let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset); // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\n\n        const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Room'], Dataset['Size']]); //Extract Room\n\n        setroomData([ertRoom]);\n        const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'], Dataset['Course Code'], Dataset['Course Name'], Dataset['Year'], Dataset['Semester'], Dataset['Lecturer'], Dataset['Group'], Dataset['HMS'], Dataset['Programme Code'], Dataset['Slot1'], Dataset['Slot2']]); //Extract Enrollment Quota\n\n        setcourseData([ertCourse]);\n\n        if (!response.ok) {\n          throw new Error(responsedata.message);\n        }\n\n        setLoaadedFile(stringifyData);\n        setIsLoading(true);\n      } catch (err) {\n        console.log(err.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, [userId]);\n\n  if (!isLoading && loadedFile) {\n    const testData = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const EnrollmentQuota = [];\n    const CourseCode = [];\n    const HMS = [];\n    const lecturerData = [];\n    const roomName = [];\n    const roomSize = [];\n    const filterData50 = [];\n    const filterData100 = [];\n    const filterData200 = [];\n    const filterData500 = [];\n    const filterDataElective50 = [];\n    const filterDataElective100 = [];\n    const filterDataElective200 = [];\n    const filterDataElective500 = [];\n    const dupeData = [];\n    const room = [];\n    room.push(roomData[0]);\n    let hardConstraintViolated = 0;\n    let softConstraintViolated = 0; //console.log(courseData[0][0][1]);\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      let enrollment = [courseData[0][i][0]];\n      let code = [courseData[0][i][1]];\n      let hms = [courseData[0][i][7]];\n      let lecturer = [courseData[0][i][5]];\n      enrollment.reduce(function (results, item, index, array) {\n        results[index] = item;\n        EnrollmentQuota.push(item); //console.log(results)\n      }, {});\n      code.reduce(function (results, item, index, array) {\n        results[index] = item;\n        CourseCode.push(item); //console.log(results)\n      }, {});\n      hms.reduce(function (results, item, index, array) {\n        results[index] = item;\n        HMS.push(item); //console.log(results)\n      }, {});\n      lecturer.reduce(function (results, item, index, array) {\n        results[index] = item;\n        lecturerData.push(item); //console.log(results)\n      }, {});\n    }\n\n    for (let i = 0; i < roomData[0].length; i++) {\n      let name = [roomData[0][i][0]];\n      let size = [roomData[0][i][1]];\n      name.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomName.push(item); //console.log(results)\n      }, {});\n      size.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomSize.push(item); //console.log(results)\n      }, {});\n    }\n\n    const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\n    const notDuplicatesLecturer = lecturerData.filter((item, index) => index == lecturerData.indexOf(item));\n    notDuplicatesLecturer.pop(); //console.log(notDuplicatesLecturer)\n\n    let courseDataXElective = [];\n    let courseDataWithElective = [];\n    courseData[0].pop(); //saparate faculty course with the elective course\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      if (courseData[0][i][1].slice(0, 3) != 'TMU') {\n        courseData[0][i].splice();\n\n        if (courseData[0][i][1].slice(0, 3) != 'TMX') {\n          courseData[0][i].splice();\n          courseDataXElective.push(courseData[0][i]);\n        }\n      }\n    } //saparate elective course with the faculty course\n\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      if (courseData[0][i][1].slice(0, 3) == 'TMU' || courseData[0][i][1].slice(0, 3) == 'TMX') {\n        courseDataWithElective.push(courseData[0][i]);\n      }\n    } //insert data without elective courses into correct room capacity\n\n\n    for (let i = 0; i < courseDataXElective.length; i++) {\n      if (courseDataXElective[i][0] < 50) {\n        filterData50.push(courseDataXElective[i]);\n      }\n\n      if (courseDataXElective[i][0] >= 50 && courseDataXElective[i][0] < 100) {\n        filterData100.push(courseDataXElective[i]);\n      }\n\n      if (courseDataXElective[i][0] >= 100 && courseDataXElective[i][0] < 200) {\n        filterData200.push(courseDataXElective[i]);\n      }\n\n      if (courseDataXElective[i][0] >= 200 && courseDataXElective[i][0] < 500) {\n        filterData500.push(courseDataXElective[i]);\n      }\n    } //console.log(filterData50)\n    //insert data without faculty courses into correct room capacity\n\n\n    for (let i = 0; i < courseDataWithElective.length; i++) {\n      if (courseDataWithElective[i][0] < 50) {\n        filterDataElective50.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 50 && courseDataWithElective[i][0] < 100) {\n        filterDataElective100.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 100 && courseDataWithElective[i][0] < 200) {\n        filterDataElective200.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 200 && courseDataWithElective[i][0] < 500) {\n        filterDataElective500.push(courseDataWithElective[i]);\n      }\n    } // console.log(filterDataElective50);\n    // console.log(filterDataElective100);\n    // console.log(filterDataElective200);\n    // console.log(filterDataElective500);\n\n\n    let roomUnder50 = [];\n    let roomUnder100 = [];\n    let roomUnder200 = [];\n    let roomUnder500 = [];\n\n    const checkNumberofRoom = () => {\n      for (let i = 0; i < roomData[0].length; i++) {\n        let room = roomData[0][i][1]; //console.log(roomData[0][i][1]);\n\n        if (room < 50) {\n          roomUnder50.push(room);\n        } else if (room > 50 && room < 100) {\n          roomUnder100.push(room);\n        } else if (room > 100 && room < 200) {\n          roomUnder200.push(room);\n        } else if (room > 200) {\n          roomUnder500.push(room);\n        }\n      }\n    };\n\n    checkNumberofRoom();\n\n    const createArray = data => {\n      var result = [];\n\n      for (let i = 0; i < data; i++) {\n        result[i] = [];\n      }\n\n      return result;\n    };\n\n    let DataArray50 = roomUnder50.length * 38;\n    let DataArray100 = roomUnder100.length * 38;\n    let DataArray200 = roomUnder200.length * 38;\n    let DataArray500 = roomUnder500.length * 38;\n    let DataArrayElective50 = roomUnder50.length * 10;\n    let DataArrayElective100 = roomUnder100.length * 10;\n    let DataArrayElective200 = roomUnder200.length * 10;\n    let DataArrayElective500 = roomUnder500.length * 10; //----------------------------------------------------------------------------------------------------------------------------------------\n\n    var checkTotalHardContraintsAll = 0;\n    var checkTotalSoftContraintsAll = 0;\n\n    const antSystem = () => {\n      //Faculty courses\n      //create 1d array for dataset 50\n      const array1D50 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr50 = array1D50(DataArray50);\n      let extraData50_Slot2_2 = [];\n      let extraData50_Slot2_1 = [];\n      let insertedData50_Slot2_2 = [];\n      let insertedData50_Slot2_1 = [];\n\n      const AntAlgoInsert50 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let zeroSlot = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterData50.length; x++) {\n          test.push(filterData50[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n\n            if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  const z = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[z];\n                      array[i - 1] = array[z - 1];\n                      array[i] = test[k];\n                      array[i - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[z];\n                      array[i + 1] = array[z + 1];\n                      array[z] = test[k];\n                      array[z + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                      zeroSlot.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                    zeroSlot.push(test[k]);\n                  }\n                } //slot in slot1 = 2\n                else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  const v = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[v];\n                      array[i - 1] = array[v - 1];\n                      array[v] = test[k];\n                      array[v - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[v];\n                      array[i + 1] = array[v + 1];\n                      array[v] = test[k];\n                      array[v + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                      zeroSlot.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                    zeroSlot.push(test[k]);\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                  zeroSlot.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n                zeroSlot.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = test[k];\n                  array[i - 1] = test[k];\n                  array[i + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = test[k];\n                  array[i - 1] = test[k];\n                  insertedData50_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = test[k];\n                  array[i + 1] = test[k];\n                  insertedData50_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                  zeroSlot.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n                zeroSlot.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = test[k];\n                  array[i - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = test[k];\n                  array[i + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                  zeroSlot.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n                zeroSlot.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              array[x] = remainderArraySlot1[k3];\n              array[x + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData50_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              array[x] = remainderArraySlot1[k3];\n              array[x + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData50_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              array[x] = remainderArray[k2];\n              array[x + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData50_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData50_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        }\n\n        if (array[-1] != undefined || array[-1] != 0) {\n          insertedData50_Slot2_1.push(array[-1]); // array[-1] = undefined\n        }\n\n        return array;\n      };\n\n      var AntArrIns50 = AntAlgoInsert50(AntArr50); //console.log(AntArrIns50)\n\n      const slot2Equal1for50 = array => {\n        let k = 0;\n        let test2 = [];\n        let totalRoom = array.length / 38; //console.log(insertedData50_Slot2_1)\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedData50_Slot2_1.length) {\n              array[x] = insertedData50_Slot2_1[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal1for50(AntArr50);\n\n      const slot2Equal2for50 = array => {\n        let k = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedData50_Slot2_2.length) {\n              array[x] = insertedData50_Slot2_2[k];\n              array[x + 1] = insertedData50_Slot2_2[k];\n            } else {\n              if (insertedData50_Slot2_2[k] != undefined) {\n                extraData50_Slot2_2.push(insertedData50_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < extraData50_Slot2_2.length) {\n              array[x] = extraData50_Slot2_2[k];\n              array[x + 1] = extraData50_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2for50(AntArr50);\n\n      const checkAmountData50 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount50 = checkAmountData50(AntArrIns50);\n      console.log(AntArrIns50);\n      console.log(checkAmount50); //----------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Data is more than or equal to 50 but less than 100\n      //create 1d array for dataset 100\n\n      const array1D100 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr100 = array1D100(DataArray100);\n      let extraData100_Slot2_2 = [];\n      let extraData100_Slot2_1 = [];\n      let insertedData100_Slot2_2 = [];\n      let insertedData100_Slot2_1 = [];\n\n      const AntAlgoInsert100 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let zeroSlot = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterData100.length; x++) {\n          test.push(filterData100[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n\n            if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  const z = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[z];\n                      array[i - 1] = array[z - 1];\n                      array[i] = test[k];\n                      array[i - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[z];\n                      array[i + 1] = array[z + 1];\n                      array[z] = test[k];\n                      array[z + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                      zeroSlot.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                    zeroSlot.push(test[k]);\n                  }\n                } //slot in slot1 = 2\n                else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  const v = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[v];\n                      array[i - 1] = array[v - 1];\n                      array[v] = test[k];\n                      array[v - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[v];\n                      array[i + 1] = array[v + 1];\n                      array[v] = test[k];\n                      array[v + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                      zeroSlot.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                    zeroSlot.push(test[k]);\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                  zeroSlot.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n                zeroSlot.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = test[k];\n                  array[i - 1] = test[k];\n                  array[i + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = test[k];\n                  array[i - 1] = test[k];\n                  insertedData100_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = test[k];\n                  array[i + 1] = test[k];\n                  insertedData100_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                  zeroSlot.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n                zeroSlot.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = test[k];\n                  array[i - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = test[k];\n                  array[i + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                  zeroSlot.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n                zeroSlot.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              array[x] = remainderArraySlot1[k3];\n              array[x + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData100_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              array[x] = remainderArraySlot1[k3];\n              array[x + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData100_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              array[x] = remainderArray[k2];\n              array[x + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData100_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData100_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        }\n\n        if (array[-1] != undefined || array[-1] != 0) {\n          insertedData100_Slot2_1.push(array[-1]); // array[-1] = undefined\n        }\n\n        return array;\n      };\n\n      var AntArrIns100 = AntAlgoInsert100(AntArr100); //console.log(AntArrIns100)\n\n      const slot2Equal1for100 = array => {\n        let k = 0;\n        let test2 = [];\n        let totalRoom = array.length / 38; //console.log(insertedData100_Slot2_1)\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedData100_Slot2_1.length) {\n              array[x] = insertedData100_Slot2_1[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal1for100(AntArr100);\n\n      const slot2Equal2for100 = array => {\n        let k = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedData100_Slot2_2.length) {\n              array[x] = insertedData100_Slot2_2[k];\n              array[x + 1] = insertedData100_Slot2_2[k];\n            } else {\n              if (insertedData100_Slot2_2[k] != undefined) {\n                extraData100_Slot2_2.push(insertedData100_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < extraData100_Slot2_2.length) {\n              array[x] = extraData100_Slot2_2[k];\n              array[x + 1] = extraData100_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2for100(AntArr100);\n\n      const checkAmountData100 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 100 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount100 = checkAmountData100(AntArrIns100);\n      console.log(AntArrIns100);\n      console.log(checkAmount100); //----------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Data is more than or equal to 100 but less than 200\n      //create 1d array for dataset 200\n\n      const array1D200 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr200 = array1D200(DataArray200);\n      let extraData200_Slot2_2 = [];\n      let extraData200_Slot2_1 = [];\n      let insertedData200_Slot2_2 = [];\n      let insertedData200_Slot2_1 = [];\n\n      const AntAlgoInsert200 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let zeroSlot = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterData200.length; x++) {\n          test.push(filterData200[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n\n            if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  const z = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[z];\n                      array[i - 1] = array[z - 1];\n                      array[i] = test[k];\n                      array[i - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[z];\n                      array[i + 1] = array[z + 1];\n                      array[z] = test[k];\n                      array[z + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                      zeroSlot.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                    zeroSlot.push(test[k]);\n                  }\n                } //slot in slot1 = 2\n                else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  const v = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[v];\n                      array[i - 1] = array[v - 1];\n                      array[v] = test[k];\n                      array[v - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[v];\n                      array[i + 1] = array[v + 1];\n                      array[v] = test[k];\n                      array[v + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                      zeroSlot.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                    zeroSlot.push(test[k]);\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                  zeroSlot.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n                zeroSlot.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = test[k];\n                  array[i - 1] = test[k];\n                  array[i + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = test[k];\n                  array[i - 1] = test[k];\n                  insertedData200_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = test[k];\n                  array[i + 1] = test[k];\n                  insertedData200_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                  zeroSlot.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n                zeroSlot.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = test[k];\n                  array[i - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = test[k];\n                  array[i + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                  zeroSlot.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n                zeroSlot.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              array[x] = remainderArraySlot1[k3];\n              array[x + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData200_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              array[x] = remainderArraySlot1[k3];\n              array[x + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData200_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              array[x] = remainderArray[k2];\n              array[x + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData200_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData200_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        }\n\n        if (array[-1] != undefined || array[-1] != 0) {\n          insertedData200_Slot2_1.push(array[-1]); // array[-1] = undefined\n        }\n\n        return array;\n      };\n\n      var AntArrIns200 = AntAlgoInsert200(AntArr200); //console.log(AntArrIns200)\n\n      const slot2Equal1for200 = array => {\n        let k = 0;\n        let test2 = [];\n        let totalRoom = array.length / 38; //console.log(insertedData200_Slot2_1)\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedData200_Slot2_1.length) {\n              array[x] = insertedData200_Slot2_1[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal1for200(AntArr200);\n\n      const slot2Equal2for200 = array => {\n        let k = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedData200_Slot2_2.length) {\n              array[x] = insertedData200_Slot2_2[k];\n              array[x + 1] = insertedData200_Slot2_2[k];\n            } else {\n              if (insertedData200_Slot2_2[k] != undefined) {\n                extraData200_Slot2_2.push(insertedData200_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < extraData200_Slot2_2.length) {\n              array[x] = extraData200_Slot2_2[k];\n              array[x + 1] = extraData200_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2for200(AntArr200);\n\n      const checkAmountData200 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 200 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount200 = checkAmountData200(AntArrIns200);\n      console.log(AntArrIns200);\n      console.log(checkAmount200); //----------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Data is more than or equal to 200 \n      //create 1d array for dataset 500\n\n      const array1D500 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr500 = array1D500(DataArray500);\n      let extraData500_Slot2_2 = [];\n      let extraData500_Slot2_1 = [];\n      let insertedData500_Slot2_2 = [];\n      let insertedData500_Slot2_1 = [];\n\n      const AntAlgoInsert500 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let zeroSlot = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterData500.length; x++) {\n          test.push(filterData500[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n\n            if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  const z = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[z];\n                      array[i - 1] = array[z - 1];\n                      array[i] = test[k];\n                      array[i - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[z];\n                      array[i + 1] = array[z + 1];\n                      array[z] = test[k];\n                      array[z + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                      zeroSlot.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                    zeroSlot.push(test[k]);\n                  }\n                } //slot in slot1 = 2\n                else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  const v = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[v];\n                      array[i - 1] = array[v - 1];\n                      array[v] = test[k];\n                      array[v - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[v];\n                      array[i + 1] = array[v + 1];\n                      array[v] = test[k];\n                      array[v + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                      zeroSlot.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                    zeroSlot.push(test[k]);\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                  zeroSlot.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n                zeroSlot.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = test[k];\n                  array[i - 1] = test[k];\n                  array[i + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = test[k];\n                  array[i - 1] = test[k];\n                  insertedData500_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = test[k];\n                  array[i + 1] = test[k];\n                  insertedData500_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                  zeroSlot.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n                zeroSlot.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = test[k];\n                  array[i - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = test[k];\n                  array[i + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                  zeroSlot.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n                zeroSlot.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              array[x] = remainderArraySlot1[k3];\n              array[x + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData500_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              array[x] = remainderArraySlot1[k3];\n              array[x + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData500_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              array[x] = remainderArray[k2];\n              array[x + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData500_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData500_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        }\n\n        if (array[-1] != undefined || array[-1] != 0) {\n          insertedData500_Slot2_1.push(array[-1]); // array[-1] = undefined\n        }\n\n        return array;\n      };\n\n      var AntArrIns500 = AntAlgoInsert500(AntArr500); //console.log(AntArrIns500)\n\n      const slot2Equal1for500 = array => {\n        let k = 0;\n        let test2 = [];\n        let totalRoom = array.length / 38; //console.log(insertedData500_Slot2_1)\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedData500_Slot2_1.length) {\n              array[x] = insertedData500_Slot2_1[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal1for500(AntArr500);\n\n      const slot2Equal2for500 = array => {\n        let k = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedData500_Slot2_2.length) {\n              array[x] = insertedData500_Slot2_2[k];\n              array[x + 1] = insertedData500_Slot2_2[k];\n            } else {\n              if (insertedData500_Slot2_2[k] != undefined) {\n                extraData500_Slot2_2.push(insertedData500_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < extraData500_Slot2_2.length) {\n              array[x] = extraData500_Slot2_2[k];\n              array[x + 1] = extraData500_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2for500(AntArr500);\n\n      const checkAmountData500 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 500 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount500 = checkAmountData500(AntArrIns500);\n      console.log(AntArrIns500);\n      console.log(checkAmount500); //---------------------------------------------------------------------------------------------------------------------------------------------\n      //---------------------------------------------------------------------------------------------------------------------------------------------\n      //Elective courses\n      //create 1d array for dataset 50\n\n      const array1DElective50 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective50 = array1DElective50(DataArrayElective50);\n      let extraDataElective50_Slot2_2 = [];\n      let extraData50Elective_Slot2_1 = [];\n      let insertedDataElective50_Slot2_2 = [];\n      let insertedDataElective50_Slot2_1 = [];\n\n      const AntAlgoInsertElective50 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterDataElective50.length; x++) {\n          test.push(filterDataElective50[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let slot1 = test[k][9];\n            let slot2 = test[k][10];\n\n            if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                //slot in slot1 = 2\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const z = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[z];\n                      array[i - 1] = array[z - 1];\n                      array[i] = test[k];\n                      array[i - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[z];\n                      array[i + 1] = array[z + 1];\n                      array[z] = test[k];\n                      array[z + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } //slot in slot1 = 2\n                else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const v = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[v];\n                      array[i - 1] = array[v - 1];\n                      array[v] = test[k];\n                      array[v - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[v];\n                      array[i + 1] = array[v + 1];\n                      array[v] = test[k];\n                      array[v + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  array[j + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  insertedDataElective50_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  insertedDataElective50_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = array[j];\n                  array[j] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //console.log(remainderArraySlot1);\n        //for(let x = 0; x < remainderArraySlot1.length; x++){\n\n\n        for (let z = 0; z < array.length; z++) {\n          for (let x = 0; x < remainderArraySlot1.length; x++) {\n            if (array[z] == remainderArraySlot1[x]) {\n              for (let b = 1; b <= totalRoom; b++) {\n                if (array[z + 38 * b] == 100 && array[z + 38 * b - 1] == 100) {\n                  array[z + 38 * b] = 0;\n                  array[z + 38 * b - 1] = 0;\n                }\n\n                if (array[z - 38 * b] == 100 && array[z - 38 * b - 1] == 100) {\n                  array[z - 38 * b] = 0;\n                  array[z - 38 * b - 1] = 0;\n                }\n              }\n            }\n          }\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedDataElective50_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedDataElective50_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const c = Math.floor(Math.random() * (x + 1));\n              array[x] = array[c];\n              array[x + 1] = array[c + 1];\n              array[c] = remainderArray[k2];\n              array[c + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedDataElective50_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedDataElective50_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const b = Math.floor(Math.random() * (x + 1));\n              array[x] = array[b];\n              array[x + 1] = array[b + 1];\n              array[b] = remainderArray[k2];\n              array[b + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedDataElective50_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedDataElective50_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        } //if there is array in -1, reslot in into the array\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedDataElective50_Slot2_1.push(array[-1]); // array[-1] = undefined\n        }\n\n        return array;\n      };\n\n      var AntArrInsElective50 = AntAlgoInsertElective50(AntArrElective50);\n\n      const checkAmountDataElective50B = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmountB = checkAmountDataElective50B(AntArrInsElective50);\n\n      const slot2Equal1forElective50 = array => {\n        let k = 0;\n        let test2 = []; //console.log(insertedDataElective50_Slot2_1)\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedDataElective50_Slot2_1.length) {\n              array[x] = insertedDataElective50_Slot2_1[k];\n            }\n\n            k++;\n          }\n        } //console.log(test2)\n\n\n        return array;\n      };\n\n      slot2Equal1forElective50(AntArrElective50);\n\n      const slot2Equal2forElective50 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedDataElective50_Slot2_2.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = insertedDataElective50_Slot2_2[k];\n              array[q + 1] = insertedDataElective50_Slot2_2[k];\n            } else {\n              if (insertedDataElective50_Slot2_2[k] != undefined) {\n                extraDataElective50_Slot2_2.push(insertedDataElective50_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < extraDataElective50_Slot2_2.length) {\n              array[x] = extraDataElective50_Slot2_2[k];\n              array[x + 1] = extraDataElective50_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2forElective50(AntArrElective50);\n\n      const checkAmountDataElective50 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmountElective50 = checkAmountDataElective50(AntArrInsElective50); //---------------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Data is more than or equal to 50 but less than 100\n      //create 1d array for dataset 100\n\n      const array1DElective100 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective100 = array1DElective100(DataArrayElective100);\n      let extraDataElective100_Slot2_2 = [];\n      let extraData100Elective_Slot2_1 = [];\n      let insertedDataElective100_Slot2_2 = [];\n      let insertedDataElective100_Slot2_1 = [];\n\n      const AntAlgoInsertElective100 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterDataElective100.length; x++) {\n          test.push(filterDataElective100[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let slot1 = test[k][9];\n            let slot2 = test[k][10];\n\n            if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                //slot in slot1 = 2\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const z = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[z];\n                      array[i - 1] = array[z - 1];\n                      array[i] = test[k];\n                      array[i - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[z];\n                      array[i + 1] = array[z + 1];\n                      array[z] = test[k];\n                      array[z + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } //slot in slot1 = 2\n                else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const v = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[v];\n                      array[i - 1] = array[v - 1];\n                      array[v] = test[k];\n                      array[v - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[v];\n                      array[i + 1] = array[v + 1];\n                      array[v] = test[k];\n                      array[v + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  array[j + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  insertedDataElective100_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  insertedDataElective100_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = array[j];\n                  array[j] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //console.log(remainderArraySlot1);\n        //for(let x = 0; x < remainderArraySlot1.length; x++){\n\n\n        for (let z = 0; z < array.length; z++) {\n          for (let x = 0; x < remainderArraySlot1.length; x++) {\n            if (array[z] == remainderArraySlot1[x]) {\n              for (let b = 1; b <= totalRoom; b++) {\n                if (array[z + 38 * b] == 100 && array[z + 38 * b - 1] == 100) {\n                  array[z + 38 * b] = 0;\n                  array[z + 38 * b - 1] = 0;\n                }\n\n                if (array[z - 38 * b] == 100 && array[z - 38 * b - 1] == 100) {\n                  array[z - 38 * b] = 0;\n                  array[z - 38 * b - 1] = 0;\n                }\n              }\n            }\n          }\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedDataElective100_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedDataElective100_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const c = Math.floor(Math.random() * (x + 1));\n              array[x] = array[c];\n              array[x + 1] = array[c + 1];\n              array[c] = remainderArray[k2];\n              array[c + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedDataElective100_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedDataElective100_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const b = Math.floor(Math.random() * (x + 1));\n              array[x] = array[b];\n              array[x + 1] = array[b + 1];\n              array[b] = remainderArray[k2];\n              array[b + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedDataElective100_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedDataElective100_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        } //if there is array in -1, reslot in into the array\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedDataElective100_Slot2_1.push(array[-1]); // array[-1] = undefined\n        }\n\n        return array;\n      };\n\n      var AntArrInsElective100 = AntAlgoInsertElective100(AntArrElective100);\n\n      const checkAmountDataElective100B = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 100 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmountB = checkAmountDataElective100B(AntArrInsElective100);\n\n      const slot2Equal1forElective100 = array => {\n        let k = 0;\n        let test2 = []; //console.log(insertedDataElective100_Slot2_1)\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedDataElective100_Slot2_1.length) {\n              array[x] = insertedDataElective100_Slot2_1[k];\n            }\n\n            k++;\n          }\n        } //console.log(test2)\n\n\n        return array;\n      };\n\n      slot2Equal1forElective100(AntArrElective100);\n\n      const slot2Equal2forElective100 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedDataElective100_Slot2_2.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = insertedDataElective100_Slot2_2[k];\n              array[q + 1] = insertedDataElective100_Slot2_2[k];\n            } else {\n              if (insertedDataElective100_Slot2_2[k] != undefined) {\n                extraDataElective100_Slot2_2.push(insertedDataElective100_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < extraDataElective100_Slot2_2.length) {\n              array[x] = extraDataElective100_Slot2_2[k];\n              array[x + 1] = extraDataElective100_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2forElective100(AntArrElective100);\n\n      const checkAmountDataElective100 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 100 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmountElective100 = checkAmountDataElective100(AntArrInsElective100); //----------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Data is more than or equal to 100 but less than 200\n      //create 1d array for dataset 200\n\n      const array1DElective200 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective200 = array1DElective200(DataArrayElective200);\n      let extraDataElective200_Slot2_2 = [];\n      let extraData200Elective_Slot2_1 = [];\n      let insertedDataElective200_Slot2_2 = [];\n      let insertedDataElective200_Slot2_1 = [];\n\n      const AntAlgoInsertElective200 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterDataElective200.length; x++) {\n          test.push(filterDataElective200[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let slot1 = test[k][9];\n            let slot2 = test[k][10];\n\n            if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                //slot in slot1 = 2\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const z = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[z];\n                      array[i - 1] = array[z - 1];\n                      array[i] = test[k];\n                      array[i - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[z];\n                      array[i + 1] = array[z + 1];\n                      array[z] = test[k];\n                      array[z + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } //slot in slot1 = 2\n                else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const v = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[v];\n                      array[i - 1] = array[v - 1];\n                      array[v] = test[k];\n                      array[v - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[v];\n                      array[i + 1] = array[v + 1];\n                      array[v] = test[k];\n                      array[v + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  array[j + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  insertedDataElective200_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  insertedDataElective200_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = array[j];\n                  array[j] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //console.log(remainderArraySlot1);\n        //for(let x = 0; x < remainderArraySlot1.length; x++){\n\n\n        for (let z = 0; z < array.length; z++) {\n          for (let x = 0; x < remainderArraySlot1.length; x++) {\n            if (array[z] == remainderArraySlot1[x]) {\n              for (let b = 1; b <= totalRoom; b++) {\n                if (array[z + 38 * b] == 100 && array[z + 38 * b - 1] == 100) {\n                  array[z + 38 * b] = 0;\n                  array[z + 38 * b - 1] = 0;\n                }\n\n                if (array[z - 38 * b] == 100 && array[z - 38 * b - 1] == 100) {\n                  array[z - 38 * b] = 0;\n                  array[z - 38 * b - 1] = 0;\n                }\n              }\n            }\n          }\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedDataElective200_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedDataElective200_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const c = Math.floor(Math.random() * (x + 1));\n              array[x] = array[c];\n              array[x + 1] = array[c + 1];\n              array[c] = remainderArray[k2];\n              array[c + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedDataElective200_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedDataElective200_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const b = Math.floor(Math.random() * (x + 1));\n              array[x] = array[b];\n              array[x + 1] = array[b + 1];\n              array[b] = remainderArray[k2];\n              array[b + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedDataElective200_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedDataElective200_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        } //if there is array in -1, reslot in into the array\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedDataElective200_Slot2_1.push(array[-1]); // array[-1] = undefined\n        }\n\n        return array;\n      };\n\n      var AntArrInsElective200 = AntAlgoInsertElective200(AntArrElective200);\n\n      const checkAmountDataElective200B = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 200 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmountB = checkAmountDataElective200B(AntArrInsElective200);\n\n      const slot2Equal1forElective200 = array => {\n        let k = 0;\n        let test2 = []; //console.log(insertedDataElective200_Slot2_1)\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedDataElective200_Slot2_1.length) {\n              array[x] = insertedDataElective200_Slot2_1[k];\n            }\n\n            k++;\n          }\n        } //console.log(test2)\n\n\n        return array;\n      };\n\n      slot2Equal1forElective200(AntArrElective200);\n\n      const slot2Equal2forElective200 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedDataElective200_Slot2_2.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = insertedDataElective200_Slot2_2[k];\n              array[q + 1] = insertedDataElective200_Slot2_2[k];\n            } else {\n              if (insertedDataElective200_Slot2_2[k] != undefined) {\n                extraDataElective200_Slot2_2.push(insertedDataElective200_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < extraDataElective200_Slot2_2.length) {\n              array[x] = extraDataElective200_Slot2_2[k];\n              array[x + 1] = extraDataElective200_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2forElective200(AntArrElective200);\n\n      const checkAmountDataElective200 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 200 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmountElective200 = checkAmountDataElective200(AntArrInsElective200); //----------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Data is more than or equal to 200 \n      //create 1d array for dataset 500\n\n      const array1DElective500 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective500 = array1DElective500(DataArrayElective500);\n      let extraDataElective500_Slot2_2 = [];\n      let extraData500Elective_Slot2_1 = [];\n      let insertedDataElective500_Slot2_2 = [];\n      let insertedDataElective500_Slot2_1 = [];\n\n      const AntAlgoInsertElective500 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterDataElective500.length; x++) {\n          test.push(filterDataElective500[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let slot1 = test[k][9];\n            let slot2 = test[k][10];\n\n            if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                //slot in slot1 = 2\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const z = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[z];\n                      array[i - 1] = array[z - 1];\n                      array[i] = test[k];\n                      array[i - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[z];\n                      array[i + 1] = array[z + 1];\n                      array[z] = test[k];\n                      array[z + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } //slot in slot1 = 2\n                else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const v = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[v];\n                      array[i - 1] = array[v - 1];\n                      array[v] = test[k];\n                      array[v - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[v];\n                      array[i + 1] = array[v + 1];\n                      array[v] = test[k];\n                      array[v + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  array[j + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  insertedDataElective500_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  insertedDataElective500_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = array[j];\n                  array[j] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //console.log(remainderArraySlot1);\n        //for(let x = 0; x < remainderArraySlot1.length; x++){\n\n\n        for (let z = 0; z < array.length; z++) {\n          for (let x = 0; x < remainderArraySlot1.length; x++) {\n            if (array[z] == remainderArraySlot1[x]) {\n              for (let b = 1; b <= totalRoom; b++) {\n                if (array[z + 38 * b] == 100 && array[z + 38 * b - 1] == 100) {\n                  array[z + 38 * b] = 0;\n                  array[z + 38 * b - 1] = 0;\n                }\n\n                if (array[z - 38 * b] == 100 && array[z - 38 * b - 1] == 100) {\n                  array[z - 38 * b] = 0;\n                  array[z - 38 * b - 1] = 0;\n                }\n              }\n            }\n          }\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedDataElective500_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedDataElective500_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const c = Math.floor(Math.random() * (x + 1));\n              array[x] = array[c];\n              array[x + 1] = array[c + 1];\n              array[c] = remainderArray[k2];\n              array[c + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedDataElective500_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedDataElective500_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const b = Math.floor(Math.random() * (x + 1));\n              array[x] = array[b];\n              array[x + 1] = array[b + 1];\n              array[b] = remainderArray[k2];\n              array[b + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedDataElective500_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedDataElective500_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        } //if there is array in -1, reslot in into the array\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedDataElective500_Slot2_1.push(array[-1]); // array[-1] = undefined\n        }\n\n        return array;\n      };\n\n      var AntArrInsElective500 = AntAlgoInsertElective500(AntArrElective500);\n\n      const checkAmountDataElective500B = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 500 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmountB = checkAmountDataElective500B(AntArrInsElective500);\n\n      const slot2Equal1forElective500 = array => {\n        let k = 0;\n        let test2 = []; //console.log(insertedDataElective500_Slot2_1)\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedDataElective500_Slot2_1.length) {\n              array[x] = insertedDataElective500_Slot2_1[k];\n            }\n\n            k++;\n          }\n        } //console.log(test2)\n\n\n        return array;\n      };\n\n      slot2Equal1forElective500(AntArrElective500);\n\n      const slot2Equal2forElective500 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedDataElective500_Slot2_2.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = insertedDataElective500_Slot2_2[k];\n              array[q + 1] = insertedDataElective500_Slot2_2[k];\n            } else {\n              if (insertedDataElective500_Slot2_2[k] != undefined) {\n                extraDataElective500_Slot2_2.push(insertedDataElective500_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < extraDataElective500_Slot2_2.length) {\n              array[x] = extraDataElective500_Slot2_2[k];\n              array[x + 1] = extraDataElective500_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2forElective500(AntArrElective500);\n\n      const checkAmountDataElective500 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 500 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmountElective500 = checkAmountDataElective500(AntArrInsElective500); //---------------------------------------------------------------------------------------------------------------------------------------------\n      //---------------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------------\n\n      let combineData = [];\n      let combineElectiveData = []; //Combine all dataset\n\n      const combine = (data1, data2, data3, data4) => {\n        for (let i = 0; i < data1.length; i++) {\n          combineData.push(data1[i]);\n        }\n\n        for (let i = 0; i < data2.length; i++) {\n          combineData.push(data2[i]);\n        }\n\n        for (let i = 0; i < data3.length; i++) {\n          combineData.push(data3[i]);\n        }\n\n        for (let i = 0; i < data4.length; i++) {\n          combineData.push(data4[i]);\n        }\n\n        return combineData;\n      };\n\n      let dataCombine = combine(AntArr50, AntArr100, AntArr200, AntArr500); //combine elective data\n\n      const combineElective = (data1, data2, data3, data4) => {\n        for (let i = 0; i < data1.length; i++) {\n          combineElectiveData.push(data1[i]);\n        }\n\n        for (let i = 0; i < data2.length; i++) {\n          combineElectiveData.push(data2[i]);\n        }\n\n        for (let i = 0; i < data3.length; i++) {\n          combineElectiveData.push(data3[i]);\n        }\n\n        for (let i = 0; i < data4.length; i++) {\n          combineElectiveData.push(data4[i]);\n        }\n\n        return combineElectiveData;\n      };\n\n      let dataCombineElective = combineElective(AntArrElective50, AntArrElective100, AntArrElective200, AntArrElective500); //console.log(dataCombine)\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n      // Hard Constraint \n      // H1: No student attend more than one class/ event at the same time\n      // H2: The room is large enough to accomodate all of the student in attendace while also meeting the requirement \n      // H3: At any given time, each room can onle have one course booked\n      // H4: No student attend class during 12:00 pm -2:00 due to solat jumaat\n      // H5: One teacher can only teach one class at one time.\n      //Check for the H1 violation: same group attend more than 1 class at 1 time\n\n      const check1Group = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 37;\n        }\n\n        for (let x = 1; x <= totalRoom; x++) {\n          try {\n            //for(let x= 1 ; x <= totalRoom ; x++){\n            for (let i = 0; i < array.length; i++) {\n              indexArray = x * 37;\n\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined) {\n                try {\n                  //if(array[i][6] == array[i+indexArray][6] && array[i+1][6] == array[i+indexArray+1][6] && array[i][5] == array[i+indexArray][5] && array[i+1][5] == array[i+indexArray+1][5]){\n                  if (array[i][6] == array[i + indexArray][6] && array[i][5] == array[i + indexArray][5]) {\n                    try {\n                      //console.log(array[i])\n                      //console.log(array[i+indexArray])\n                      count += 1;\n                    } catch {}\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH1_ALL = check1Group(dataCombine);\n      var checkH1_ALLElective = check1Group(dataCombineElective); // console.log(\"H1 All: \"+checkH1_ALL)\n      // console.log(\"H1 Elective: \"+checkH1_ALLElective)\n\n      var checkH1_50 = check1Group(AntArr50);\n      console.log(\"HS1 50: \" + checkH1_50); //Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\n\n      const checkRoomQuota = array => {\n        let count = 0;\n        return count;\n      };\n\n      var checkH2_ALL = checkRoomQuota(dataCombine);\n      var checkH2_ALLElective = checkRoomQuota(dataCombineElective); //Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\n\n      const checkSolatJummat = array => {\n        let count = 0;\n        return count;\n      };\n\n      var checkH4_ALL = checkSolatJummat(dataCombine);\n      var checkH4_ALLElective = checkSolatJummat(dataCombineElective); //Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\n\n      const check1Teacher = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n\n          try {\n            for (let i = 1; i < array.length; i++) {\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined) {\n                try {\n                  if (array[i][5] == array[i + indexArray][5]) {\n                    count += 1;\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH5_ALL = check1Teacher(dataCombine);\n      var checkH5_ALLElective = check1Group(dataCombineElective);\n      var checkH5_50 = check1Teacher(AntArr50);\n      console.log(\"HS5 50: \" + checkH5_50); // console.log(\"H5 All: \"+checkH5_ALL)\n      // console.log(\"H5 Elective: \"+checkH5_ALLElective)\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Soft Constraint \n      // S1: A student has a class schedule toward the end of the day\n      // S2: A student have more than two class in a row\n      //Check for the S1 violation: student have class at the end of the day\n\n      const checkEndOfClass = array => {\n        let count = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          let indexArray = x * 37;\n\n          if (array[indexArray] != 100) {\n            count = 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkS1_50 = checkEndOfClass(AntArr50);\n      var checkS1_100 = checkEndOfClass(AntArr100);\n      var checkS1_200 = checkEndOfClass(AntArr200);\n      var checkS1_500 = checkEndOfClass(AntArr500);\n      var checkS1_Elective50 = checkEndOfClass(AntArrElective50);\n      var checkS1_Elective100 = checkEndOfClass(AntArrElective100);\n      var checkS1_Elective200 = checkEndOfClass(AntArrElective200);\n      var checkS1_Elective500 = checkEndOfClass(AntArrElective500); //Check for the S2 violation: teacher have 2 class in a row\n\n      const check2ClassInARow = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          try {\n            if (array[i][5] != undefined && array[i + 3][5] != undefined && array[i + 2][5] != undefined && array[i + 4][5] != undefined) {\n              if (array[i][5] == array[i + 3][5] && array[i + 2][5] == array[i + 4][5]) {\n                count = 1;\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkS2_50 = check2ClassInARow(AntArr50);\n      var checkS2_100 = check2ClassInARow(AntArr100);\n      var checkS2_200 = check2ClassInARow(AntArr200);\n      var checkS2_500 = check2ClassInARow(AntArr500);\n      var checkS2_Elective50 = check2ClassInARow(AntArrElective50);\n      var checkS2_Elective100 = check2ClassInARow(AntArrElective100);\n      var checkS2_Elective200 = check2ClassInARow(AntArrElective200);\n      var checkS2_Elective500 = check2ClassInARow(AntArrElective500); //----------------------------------------------------------------------------------------------------------------------------------------------\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n      //Check total Hard Constraint\n\n      const checkTotalHardContraint = () => {\n        let count = 0;\n        let totalH1 = checkH1_ALL;\n        let totalH2 = checkH2_ALL;\n        let totalH4 = checkH4_ALL;\n        let totalH5 = checkH5_ALL;\n        let totalH1_Elective = checkH1_ALLElective;\n        let totalH2_Elective = checkH2_ALLElective;\n        let totalH4_Elective = checkH4_ALLElective;\n        let totalH5_Elective = checkH5_ALLElective;\n        let totalHC = totalH1 + totalH2 + totalH4 + totalH5 + totalH1_Elective + totalH2_Elective + totalH4_Elective + totalH5_Elective; //let totalHC = totalH1 + totalH2 + totalH4 + totalH5 \n\n        if (totalHC != 0) {\n          count += 1;\n        }\n\n        return count;\n      };\n\n      var checkTotalHardContraints = checkTotalHardContraint(); //console.log(\"Total Hard Constraint: \"+checkTotalHardContraints)\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n\n      const checkTotalSoftContraint = () => {\n        let count = 0;\n        let totalS1 = checkS1_50 + checkS1_100 + checkS1_200 + checkS1_500 + checkS1_Elective50 + checkS1_Elective100 + checkS1_Elective200 + checkS1_Elective500;\n        let totalS2 = checkS2_50 + checkS2_100 + checkS2_200 + checkS2_500 + checkS2_Elective50 + checkS2_Elective100 + checkS2_Elective200 + checkS2_Elective500;\n\n        if (totalS1 != 0) {\n          count += 1;\n        }\n\n        if (totalS2 != 0) {\n          count += 1;\n        }\n\n        return count;\n      };\n\n      var checkTotalSoftContraints = checkTotalSoftContraint(); //console.log(\"Total Soft Constraint: \"+checkTotalSoftContraints)\n      //----------------------------------------------------------------------------------------------------------------------------------------------\n\n      const change100ToEmpty = data => {\n        for (let i = 0; i < data.length; i++) {\n          if (data[i] == 100) {\n            data[i] = [];\n          }\n        }\n\n        return data;\n      };\n\n      let finalData = change100ToEmpty(combineData);\n\n      const change100ToEmptyElective = data => {\n        for (let i = 0; i < data.length; i++) {\n          if (data[i] == 100) {\n            data[i] = [];\n          }\n        }\n\n        return data;\n      };\n\n      let finalDataElective = change100ToEmptyElective(combineElectiveData);\n\n      const checkMissingData = (data50, data100, data200, data500, dataE50, dataE100, dataE200, dataE500) => {\n        let countData = [];\n\n        for (let i = 0; i < courseData[0].length; i++) {\n          for (let j = 0; j < courseData[0][i][7]; j++) {\n            countData.push(courseData[0][i]);\n          }\n        }\n\n        let totalGenerateScheduleData = data50 + data100 + data200 + data500 + dataE50 + dataE100 + dataE200 + dataE500;\n\n        if (countData.length == totalGenerateScheduleData) {} else {}\n      };\n\n      checkMissingData(checkAmount50, checkAmount100, checkAmount200, checkAmount500, checkAmountElective50, checkAmountElective100, checkAmountElective200, checkAmountElective500);\n      checkTotalHardContraintsAll = checkTotalHardContraints;\n      checkTotalSoftContraintsAll = checkTotalSoftContraints;\n      finalDataAll.push(finalData);\n      finalDataAllElective.push(finalDataElective);\n      return {\n        checkTotalHardContraints,\n        checkTotalSoftContraints,\n        finalData,\n        finalDataAllElective\n      };\n    };\n\n    let antSystemAlgo = antSystem(); // -------------------------------------------------------------------------------------------------------------------------------------------\n\n    let trigger = 0;\n\n    const iteration = () => {\n      antSystem();\n      let globalBestHS = checkTotalHardContraintsAll;\n      let globalBestSS = checkTotalSoftContraintsAll;\n      let globalBestScehdule = finalDataAll[0];\n      let globalBestScehduleElective = finalDataAllElective[0];\n\n      for (let i = 1; i <= 1; i++) {\n        antSystem();\n        let localBestHS = checkTotalHardContraintsAll;\n        let localBestSS = checkTotalSoftContraintsAll;\n        let localBestScehdule = finalDataAll[0];\n        let localBestScehduleElective = finalDataAllElective[0];\n        console.log(\"iteraion: \" + i);\n\n        if (globalBestHS > localBestHS) {\n          globalBestHS = localBestHS;\n          globalBestSS = localBestSS;\n          globalBestScehdule = localBestScehdule;\n          globalBestScehduleElective = localBestScehduleElective;\n        }\n\n        if (localBestHS == 0) {\n          console.log(\"iteraion: \" + i);\n          console.log(\"workable solution is found\");\n          globalBestHS = localBestHS;\n          globalBestSS = localBestSS;\n          globalBestScehdule = localBestScehdule;\n          globalBestScehduleElective = localBestScehduleElective;\n          console.log(\"Workable Gloabal best HS: \" + globalBestHS);\n          console.log(\"Workable Gloabal best SS: \" + globalBestSS); //console.log(finalDataAll[0])\n\n          trigger = 1;\n          return [finalDataAll[0], finalDataAllElective[0]];\n        } else if (localBestHS == 0 && localBestSS == 0) {\n          console.log(\"iteraion: \" + i);\n          console.log(\"perfect solution is found\");\n          globalBestHS = localBestHS;\n          globalBestSS = localBestSS;\n          globalBestScehdule = localBestScehdule;\n          console.log(\"Perfect Gloabal best HS: \" + globalBestHS);\n          console.log(\"Perfect Gloabal best SS: \" + globalBestSS);\n          console.log(finalDataAll[0]);\n          trigger = 1;\n          return [finalDataAll[0], finalDataAllElective[0]];\n        }\n      }\n\n      return [finalDataAll[0], finalDataAllElective[0]];\n    };\n\n    let interations = iteration();\n\n    if (trigger == 1) {} else {//alert(\"no workable solution found, please refersh until get workable solution\")\n    } //----------------------------------------------------------------------------------------------------------------------------------------\n\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3368,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3369,\n      columnNumber: 13\n    }\n  }, \"Generate Schedule Page Heuristic Approach\"));\n};\n\nexport default HeuristicApproach; //result[i][j]=Course.splice(Math.floor(Math.random()* Course.length),1)[0] // create random placement of Course Value\n//const Schedule = new Array(10).fill(Array(5).fill(null));\n//console.log(Schedule);\n// const Course = [['TE1',4],['TE1',4],['TE1',4],['TE1',3],['TE1',4],['TE1',2],['TE1',4],['TE1',4],['TE1',4],['TE1',3]];\n//const Course = [['TE1',2],['TE2',2],['TE3',3],['TE4',4],['TE5',3],['TE6',4],['TE7',4],['TE8',2],['TE9',4]];\n//const Course = ['TE1','TE2','TE3','TE4','TE5','TE6','TE7','TE8','TE9'];","map":{"version":3,"sources":["C:/Users/acit/Desktop/FYP Code/FYP Code/frontend/src/components/RandomSchedule/heuristicalgo.js"],"names":["create","find","forEach","indexOf","React","useEffect","useState","useContext","useParams","_","CSVLink","LoadingSpinner","finalDataAll","finalDataAllElective","checkHardConstraintOutsite","checkSoftConstraintOutsite","HeuristicApproach","props","isLoading","setIsLoading","loadedFile","setLoaadedFile","roomData","setroomData","courseData","setcourseData","CsvData","setCsvData","userId","sendRequest","response","fetch","responsedata","json","stringifyData","JSON","stringify","userWithFiles","Dataset","ertRoom","map","ertCourse","ok","Error","message","err","console","log","testData","EnrollmentQuota","CourseCode","HMS","lecturerData","roomName","roomSize","filterData50","filterData100","filterData200","filterData500","filterDataElective50","filterDataElective100","filterDataElective200","filterDataElective500","dupeData","room","push","hardConstraintViolated","softConstraintViolated","i","length","enrollment","code","hms","lecturer","reduce","results","item","index","array","name","size","notDuplicatesRoom","filter","notDuplicatesLecturer","pop","courseDataXElective","courseDataWithElective","slice","splice","roomUnder50","roomUnder100","roomUnder200","roomUnder500","checkNumberofRoom","createArray","data","result","DataArray50","DataArray100","DataArray200","DataArray500","DataArrayElective50","DataArrayElective100","DataArrayElective200","DataArrayElective500","checkTotalHardContraintsAll","checkTotalSoftContraintsAll","antSystem","array1D50","AntArr50","extraData50_Slot2_2","extraData50_Slot2_1","insertedData50_Slot2_2","insertedData50_Slot2_1","AntAlgoInsert50","test","k","k2","k3","remainderArray","remainderArraySlot1","zeroSlot","totalRoom","x","hourMS","j","Math","floor","random","z","v","undefined","slot2","AntArrIns50","slot2Equal1for50","test2","slot2Equal2for50","checkAmountData50","count","checkAmount50","array1D100","AntArr100","extraData100_Slot2_2","extraData100_Slot2_1","insertedData100_Slot2_2","insertedData100_Slot2_1","AntAlgoInsert100","AntArrIns100","slot2Equal1for100","slot2Equal2for100","checkAmountData100","checkAmount100","array1D200","AntArr200","extraData200_Slot2_2","extraData200_Slot2_1","insertedData200_Slot2_2","insertedData200_Slot2_1","AntAlgoInsert200","AntArrIns200","slot2Equal1for200","slot2Equal2for200","checkAmountData200","checkAmount200","array1D500","AntArr500","extraData500_Slot2_2","extraData500_Slot2_1","insertedData500_Slot2_2","insertedData500_Slot2_1","AntAlgoInsert500","AntArrIns500","slot2Equal1for500","slot2Equal2for500","checkAmountData500","checkAmount500","array1DElective50","AntArrElective50","extraDataElective50_Slot2_2","extraData50Elective_Slot2_1","insertedDataElective50_Slot2_2","insertedDataElective50_Slot2_1","AntAlgoInsertElective50","slot1","b","q","c","AntArrInsElective50","checkAmountDataElective50B","checkAmountB","slot2Equal1forElective50","slot2Equal2forElective50","checkAmountDataElective50","checkAmountElective50","array1DElective100","AntArrElective100","extraDataElective100_Slot2_2","extraData100Elective_Slot2_1","insertedDataElective100_Slot2_2","insertedDataElective100_Slot2_1","AntAlgoInsertElective100","AntArrInsElective100","checkAmountDataElective100B","slot2Equal1forElective100","slot2Equal2forElective100","checkAmountDataElective100","checkAmountElective100","array1DElective200","AntArrElective200","extraDataElective200_Slot2_2","extraData200Elective_Slot2_1","insertedDataElective200_Slot2_2","insertedDataElective200_Slot2_1","AntAlgoInsertElective200","AntArrInsElective200","checkAmountDataElective200B","slot2Equal1forElective200","slot2Equal2forElective200","checkAmountDataElective200","checkAmountElective200","array1DElective500","AntArrElective500","extraDataElective500_Slot2_2","extraData500Elective_Slot2_1","insertedDataElective500_Slot2_2","insertedDataElective500_Slot2_1","AntAlgoInsertElective500","AntArrInsElective500","checkAmountDataElective500B","slot2Equal1forElective500","slot2Equal2forElective500","checkAmountDataElective500","checkAmountElective500","combineData","combineElectiveData","combine","data1","data2","data3","data4","dataCombine","combineElective","dataCombineElective","check1Group","indexArray","checkH1_ALL","checkH1_ALLElective","checkH1_50","checkRoomQuota","checkH2_ALL","checkH2_ALLElective","checkSolatJummat","checkH4_ALL","checkH4_ALLElective","check1Teacher","checkH5_ALL","checkH5_ALLElective","checkH5_50","checkEndOfClass","checkS1_50","checkS1_100","checkS1_200","checkS1_500","checkS1_Elective50","checkS1_Elective100","checkS1_Elective200","checkS1_Elective500","check2ClassInARow","checkS2_50","checkS2_100","checkS2_200","checkS2_500","checkS2_Elective50","checkS2_Elective100","checkS2_Elective200","checkS2_Elective500","checkTotalHardContraint","totalH1","totalH2","totalH4","totalH5","totalH1_Elective","totalH2_Elective","totalH4_Elective","totalH5_Elective","totalHC","checkTotalHardContraints","checkTotalSoftContraint","totalS1","totalS2","checkTotalSoftContraints","change100ToEmpty","finalData","change100ToEmptyElective","finalDataElective","checkMissingData","data50","data100","data200","data500","dataE50","dataE100","dataE200","dataE500","countData","totalGenerateScheduleData","antSystemAlgo","trigger","iteration","globalBestHS","globalBestSS","globalBestScehdule","globalBestScehduleElective","localBestHS","localBestSS","localBestScehdule","localBestScehduleElective","interations"],"mappings":"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","sourcesContent":["import { create, find, forEach, indexOf } from \"lodash\";\r\nimport React,{ useEffect,useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport _ from 'lodash';\r\nimport { CSVLink } from \"react-csv\";\r\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\r\n\r\n\r\nlet finalDataAll = [];\r\nlet finalDataAllElective = [];\r\nlet checkHardConstraintOutsite = 0;\r\nlet checkSoftConstraintOutsite = 0;\r\n\r\nconst HeuristicApproach = (props) => {\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [loadedFile, setLoaadedFile] = useState(false);\r\n    const [roomData, setroomData] = useState();\r\n    const [courseData, setcourseData] = useState();\r\n    const [CsvData, setCsvData] = useState();\r\n    // const [Keys, setKeys] = useState();\r\n    //const [uploadedData, setUploadedData] = useState([]);\r\n    //console.log(\"props dataset:\"+ props.test)\r\n\r\n    const userId = useParams().userId;\r\n    useEffect(()=>{\r\n        const sendRequest = async () =>{\r\n            setIsLoading(true);\r\n            try{\r\n            const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875');\r\n            //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\r\n            //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\r\n            const responsedata = await response.json();\r\n            let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset);\r\n\r\n            // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\r\n            const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset =>[Dataset['Room'],Dataset['Size']]); //Extract Room\r\n            setroomData([ertRoom]);\r\n\r\n            const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'],Dataset['Course Code'],Dataset['Course Name'],Dataset['Year'],Dataset['Semester'],Dataset['Lecturer'],Dataset['Group'],Dataset['HMS'],Dataset['Programme Code'],Dataset['Slot1'],Dataset['Slot2']]); //Extract Enrollment Quota\r\n            setcourseData([ertCourse]);\r\n\r\n            if (!response.ok){\r\n                throw new Error(responsedata.message);\r\n            }\r\n            setLoaadedFile(stringifyData);\r\n            setIsLoading(true);\r\n            }catch(err){\r\n                console.log(err.message);\r\n            }\r\n            setIsLoading(false);\r\n            \r\n        };\r\n        sendRequest();\r\n    },[userId]);\r\n\r\n        if(!isLoading && loadedFile){\r\n            const testData = [1,2,3,4,5,6,7,8,9];\r\n            const EnrollmentQuota = [];\r\n            const CourseCode = [];\r\n            const HMS = [];\r\n            const lecturerData = []\r\n            const roomName = [];\r\n            const roomSize = [];\r\n            const filterData50  = [];\r\n            const filterData100  = [];\r\n            const filterData200  = [];\r\n            const filterData500  = [];\r\n            const filterDataElective50  = [];\r\n            const filterDataElective100  = [];\r\n            const filterDataElective200  = [];\r\n            const filterDataElective500  = [];\r\n            const dupeData  = [];\r\n            const room = []\r\n            room.push(roomData[0])\r\n            \r\n            let hardConstraintViolated = 0;\r\n            let softConstraintViolated = 0;\r\n            //console.log(courseData[0][0][1]);\r\n            for(let i = 0; i <courseData[0].length; i++){\r\n                let enrollment = [courseData[0][i][0]];\r\n                let code = [courseData[0][i][1]];\r\n                let hms = [courseData[0][i][7]];\r\n                let lecturer = [courseData[0][i][5]];\r\n                enrollment.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    EnrollmentQuota.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                code.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    CourseCode.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                hms.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    HMS.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                lecturer.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    lecturerData.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n            }\r\n\r\n            for(let i = 0; i <roomData[0].length; i++){\r\n                let name = [roomData[0][i][0]];\r\n                let size = [roomData[0][i][1]];\r\n                name.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomName.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                size.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomSize.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n            }\r\n \r\n            \r\n            const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\r\n\r\n            const notDuplicatesLecturer = lecturerData.filter((item, index) => index == lecturerData.indexOf(item));\r\n            notDuplicatesLecturer.pop();\r\n            //console.log(notDuplicatesLecturer)\r\n\r\n\r\n            let courseDataXElective = []\r\n            let courseDataWithElective = []\r\n            courseData[0].pop();\r\n\r\n            //saparate faculty course with the elective course\r\n            for(let i=0; i< courseData[0].length; i++){\r\n                if(courseData[0][i][1].slice(0,3) != 'TMU'){\r\n                    courseData[0][i].splice()\r\n                    if(  courseData[0][i][1].slice(0,3) != 'TMX'){\r\n                        courseData[0][i].splice()\r\n                        courseDataXElective.push(courseData[0][i])\r\n                    }\r\n                }\r\n            }\r\n\r\n            //saparate elective course with the faculty course\r\n            for(let i=0; i< courseData[0].length; i++){\r\n                if(courseData[0][i][1].slice(0,3) == 'TMU' ||  courseData[0][i][1].slice(0,3) == 'TMX'){\r\n                    courseDataWithElective.push(courseData[0][i])\r\n                }\r\n            }\r\n\r\n            //insert data without elective courses into correct room capacity\r\n                for(let i = 0; i< courseDataXElective.length;i++){\r\n                        if (courseDataXElective[i][0] < 50) {\r\n                            filterData50.push(courseDataXElective[i]);\r\n                        }\r\n                        if (courseDataXElective[i][0] >= 50 && courseDataXElective[i][0] < 100) {\r\n                            \r\n                            filterData100.push(courseDataXElective[i]);\r\n                        }\r\n                        if (courseDataXElective[i][0] >= 100 && courseDataXElective[i][0] < 200 ) {\r\n                            filterData200.push(courseDataXElective[i]);\r\n                        }\r\n                        if (courseDataXElective[i][0] >= 200 && courseDataXElective[i][0] < 500) {\r\n                            filterData500.push(courseDataXElective[i]);\r\n                        }\r\n                }\r\n                //console.log(filterData50)\r\n\r\n                //insert data without faculty courses into correct room capacity\r\n                for(let i = 0; i< courseDataWithElective.length;i++){\r\n                    if (courseDataWithElective[i][0] < 50) {\r\n                        filterDataElective50.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 50 && courseDataWithElective[i][0] < 100) {\r\n                        \r\n                        filterDataElective100.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 100 && courseDataWithElective[i][0] < 200 ) {\r\n                        filterDataElective200.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 200 && courseDataWithElective[i][0] < 500) {\r\n                        filterDataElective500.push(courseDataWithElective[i]);\r\n                    }\r\n                }\r\n                // console.log(filterDataElective50);\r\n                // console.log(filterDataElective100);\r\n                // console.log(filterDataElective200);\r\n                // console.log(filterDataElective500);\r\n\r\n\r\n            let roomUnder50 = []\r\n            let roomUnder100 = []\r\n            let roomUnder200 = []\r\n            let roomUnder500 = []\r\n            const checkNumberofRoom = () => {\r\n                for(let i = 0; i < roomData[0].length; i++){\r\n                    let room = roomData[0][i][1]\r\n                    //console.log(roomData[0][i][1]);\r\n                    if(room < 50){\r\n                        roomUnder50.push(room)\r\n                    }else if(room > 50 && room < 100){\r\n                        roomUnder100.push(room)\r\n\r\n                    }else if(room > 100 && room < 200){\r\n                        roomUnder200.push(room)\r\n\r\n                    }else if(room > 200){\r\n                        roomUnder500.push(room)\r\n                    }\r\n                }\r\n            }\r\n            checkNumberofRoom();\r\n\r\n\r\n            const createArray = (data) => {\r\n                var result = []\r\n\r\n                    for(let i = 0; i<data; i++){\r\n                        result[i] = []\r\n                    }\r\n                return result;\r\n            }\r\n\r\n            let DataArray50 = roomUnder50.length * 38;\r\n            let DataArray100 = roomUnder100.length * 38;\r\n            let DataArray200 = roomUnder200.length * 38;\r\n            let DataArray500 = roomUnder500.length * 38;\r\n\r\n            let DataArrayElective50 = roomUnder50.length * 10;\r\n            let DataArrayElective100 = roomUnder100.length * 10;\r\n            let DataArrayElective200 = roomUnder200.length * 10;\r\n            let DataArrayElective500 = roomUnder500.length * 10;\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nvar checkTotalHardContraintsAll = 0\r\nvar checkTotalSoftContraintsAll = 0\r\n\r\nconst antSystem = () => {\r\n\r\n    //Faculty courses\r\n\r\n    //create 1d array for dataset 50\r\n   const array1D50 = (data) => {\r\n       var result = []\r\n\r\n       for(let i = 0; i< data; i++){\r\n           result[i]= 100;\r\n       }\r\n       return result;\r\n   }\r\n   var AntArr50 = array1D50(DataArray50);\r\n\r\n   let extraData50_Slot2_2 = []\r\n   let extraData50_Slot2_1 = []\r\n   let insertedData50_Slot2_2 = []\r\n   let insertedData50_Slot2_1= []\r\n\r\n   const AntAlgoInsert50 = (array) => {\r\n       let test = []\r\n       let k = 0;\r\n       let k2 =0\r\n       let k3 =0\r\n\r\n       let remainderArray = []\r\n       let remainderArraySlot1 = []\r\n       let zeroSlot = []\r\n\r\n       let totalRoom = array.length / 38\r\n\r\n       for(let x=0; x<filterData50.length;x++){\r\n           test.push(filterData50[x]);\r\n       }\r\n\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k < test.length){\r\n            let hourMS = test[k][7]\r\n\r\n\r\n            if(hourMS == 4){\r\n               const j = Math.floor(Math.random()*(i+1));\r\n               if(array[i] == 100){\r\n                   if(array[i-1] == 100 ){\r\n                       array[i] = array[j];\r\n                       array[i-1] = array[j-1];\r\n                       array[j] = test[k];\r\n                       array[j-1] = test[k];\r\n\r\n                       const z = Math.floor(Math.random()*(i+1));\r\n                       if(array[i] == 100){\r\n                           //slot in slot1 = 2\r\n                           if(array[i-1] == 100 ){\r\n                               array[i] = array[z];\r\n                               array[i-1] = array[z-1];\r\n                               array[i] = test[k];\r\n                               array[i-1] = test[k];\r\n                           }\r\n                           else if(array[i+1] == 100 ){\r\n                                array[i] = array[z];\r\n                                array[i+1] = array[z+1];\r\n                                array[z] = test[k];\r\n                                array[z+1] = test[k];\r\n                           }\r\n                           else{\r\n                            remainderArraySlot1.push(test[k]);\r\n                            zeroSlot.push(test[k]);\r\n                            }\r\n                        }\r\n                        else{\r\n                            remainderArraySlot1.push(test[k]);\r\n                            zeroSlot.push(test[k]);\r\n                        }\r\n                   }\r\n                   //slot in slot1 = 2\r\n                   else if(array[i+1] == 100 ){\r\n                       array[i] = array[j];\r\n                       array[i+1] = array[j+1];\r\n                       array[j] = test[k];\r\n                       array[j+1] = test[k];\r\n                       \r\n                       const v = Math.floor(Math.random()*(i+1));\r\n                       if(array[i] == 100){\r\n                           //slot in slot1 = 2\r\n                           if(array[i-1] == 100 ){\r\n                               array[i] = array[v];\r\n                               array[i-1] = array[v-1];\r\n                               array[v] = test[k];\r\n                               array[v-1] = test[k];\r\n                           }\r\n                           else if(array[i+1] == 100){\r\n                                array[i] = array[v];\r\n                                array[i+1] = array[v+1];\r\n                                array[v] = test[k];\r\n                                array[v+1] = test[k];\r\n                           }\r\n                           else{\r\n                            remainderArraySlot1.push(test[k]);\r\n                            zeroSlot.push(test[k]);\r\n                            }\r\n                        }\r\n                        else{\r\n                            remainderArraySlot1.push(test[k]);\r\n                            zeroSlot.push(test[k]);\r\n                        }\r\n                   }\r\n                   else{\r\n                       remainderArray.push(test[k]);\r\n                       zeroSlot.push(test[k]);\r\n                   }\r\n               }else{\r\n                   remainderArray.push(test[k]);\r\n                   zeroSlot.push(test[k]);\r\n                   \r\n               }\r\n            }\r\n             \r\n            else if(hourMS == 3){\r\n                if(array[i] == 100){\r\n                    if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                        array[i] = test[k];\r\n                        array[i-1] = test[k];\r\n                        array[i+1] = test[k];\r\n                        \r\n                    }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                        array[i] = test[k];\r\n                        array[i-1] = test[k];\r\n                        insertedData50_Slot2_1.push(test[k])\r\n                        \r\n                    }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                        array[i] = test[k];\r\n                        array[i+1] = test[k];\r\n                        insertedData50_Slot2_1.push(test[k])\r\n                        \r\n                    }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                        array[i] = test[k];\r\n                        remainderArraySlot1.push(test[k])\r\n                        zeroSlot.push(test[k]);\r\n                        \r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                    zeroSlot.push(test[k]);\r\n                    \r\n                }\r\n                }\r\n\r\n             else if(hourMS == 2){\r\n                if(array[i] == 100){\r\n                    if(array[i-1] == 100 ){\r\n                        array[i] = test[k];\r\n                        array[i-1] = test[k];\r\n                        \r\n                    }else if(array[i+1] == 100){\r\n                        array[i] = test[k];\r\n                        array[i+1] = test[k];\r\n                        \r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                        zeroSlot.push(test[k]);\r\n                        \r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                    zeroSlot.push(test[k]);\r\n                }\r\n                }\r\n            }\r\n            k++  \r\n        }\r\n\r\n        //fullfill the slot 3\r\n        for(let x = 0; x< array.length; x++){\r\n            if(array[x] == 100 && array[x+1] == 100){\r\n                if(k3 < remainderArraySlot1.length){\r\n                        array[x] = remainderArraySlot1[k3]\r\n                        array[x+1] = remainderArraySlot1[k3]\r\n                }else{\r\n                    if(remainderArraySlot1[k3] != undefined){\r\n                        insertedData50_Slot2_2.push(remainderArraySlot1[k3])\r\n                    }\r\n                }\r\n                k3++   \r\n            }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                if(k3 < remainderArraySlot1.length){\r\n                        array[x] = remainderArraySlot1[k3]\r\n                        array[x+1] = remainderArraySlot1[k3]\r\n                }else{\r\n                    if(remainderArraySlot1[k3] != undefined){\r\n                        insertedData50_Slot2_2.push(remainderArraySlot1[k3])\r\n                    }\r\n                }\r\n                k3++   \r\n            }\r\n        }\r\n        //console.log(remainderArray);\r\n        for(let x = 0; x< array.length; x++){\r\n                if(array[x] == 100 && array[x+1] ==100 ){\r\n                    if(k2 < remainderArray.length){\r\n                        array[x] = remainderArray[k2]\r\n                        array[x+1] = remainderArray[k2]\r\n                    }\r\n                    try{\r\n                        let slot2 = remainderArray[k2][10]\r\n                        if(slot2 == 1){\r\n                            insertedData50_Slot2_1.push(remainderArray[k2])\r\n                        }\r\n                        if(slot2 == 2){\r\n                            insertedData50_Slot2_2.push(remainderArray[k2])\r\n                        }\r\n                    }catch{}\r\n                k2++   \r\n            }\r\n        }\r\n        if(array[-1] != undefined || array[-1] != 0){\r\n            insertedData50_Slot2_1.push(array[-1]);\r\n            // array[-1] = undefined\r\n        }\r\n\r\n       return array;\r\n   }\r\n   var AntArrIns50 = AntAlgoInsert50(AntArr50);\r\n\r\n   //console.log(AntArrIns50)\r\n\r\n    const slot2Equal1for50 = (array) => {\r\n        let k = 0;\r\n        let test2 = []\r\n        let totalRoom = array.length / 38\r\n        //console.log(insertedData50_Slot2_1)\r\n        for(let x = 0; x< array.length; x++){\r\n            if(array[x] == 100){\r\n                if(k < insertedData50_Slot2_1.length){\r\n                    array[x] = insertedData50_Slot2_1[k]\r\n                }\r\n            k++   \r\n            }\r\n        }\r\n        return array;\r\n    }\r\n     slot2Equal1for50(AntArr50);\r\n \r\n\r\n    const slot2Equal2for50 = (array) => {\r\n        let k = 0;\r\n        let totalRoom = array.length / 38\r\n\r\n        for(let x = 0; x< array.length; x++){\r\n            if(array[x] == 100 && array[x+1] ==100){\r\n                if(k < insertedData50_Slot2_2.length){    \r\n                        array[x] = insertedData50_Slot2_2[k]\r\n                        array[x+1] = insertedData50_Slot2_2[k]\r\n\r\n                }else{\r\n\r\n                    if(insertedData50_Slot2_2[k] != undefined){\r\n                        extraData50_Slot2_2.push(insertedData50_Slot2_2[k])\r\n                    }\r\n                }\r\n                k++   \r\n            }\r\n        }\r\n\r\n\r\n        for(let x = 0; x< array.length; x++){\r\n            if(array[x] == 100 && array[x+1] ==100){\r\n                if(k < extraData50_Slot2_2.length){\r\n                    array[x] = extraData50_Slot2_2[k]\r\n                    array[x+1] = extraData50_Slot2_2[k]\r\n                }\r\n            k++   \r\n            }\r\n        }\r\n\r\n        return array;\r\n}\r\n    slot2Equal2for50(AntArr50);\r\n\r\n   const checkAmountData50 = (array) => {\r\n       let count = 0\r\n       for(let i = 0; i < array.length; i++){\r\n               if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined){\r\n                   count += 1\r\n               }\r\n       }\r\n       return count\r\n   }\r\n   var checkAmount50 = checkAmountData50(AntArrIns50)\r\n   console.log(AntArrIns50)\r\n   console.log(checkAmount50)\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 50 but less than 100\r\n\r\n    //create 1d array for dataset 100\r\n    const array1D100 = (data) => {\r\n        var result = []\r\n    \r\n        for(let i = 0; i< data; i++){\r\n            result[i]= 100;\r\n        }\r\n        return result;\r\n    }\r\n    var AntArr100 = array1D100(DataArray100);\r\n    \r\n    let extraData100_Slot2_2 = []\r\n    let extraData100_Slot2_1 = []\r\n    let insertedData100_Slot2_2 = []\r\n    let insertedData100_Slot2_1= []\r\n    \r\n    const AntAlgoInsert100 = (array) => {\r\n        let test = []\r\n        let k = 0;\r\n        let k2 =0\r\n        let k3 =0\r\n    \r\n        let remainderArray = []\r\n        let remainderArraySlot1 = []\r\n        let zeroSlot = []\r\n    \r\n        let totalRoom = array.length / 38\r\n    \r\n        for(let x=0; x<filterData100.length;x++){\r\n            test.push(filterData100[x]);\r\n        }\r\n    \r\n         for(let i = array.length-1;i>0;i--){\r\n             if(k < test.length){\r\n             let hourMS = test[k][7]\r\n    \r\n    \r\n             if(hourMS == 4){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    if(array[i-1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n    \r\n                        const z = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[z];\r\n                                array[i-1] = array[z-1];\r\n                                array[i] = test[k];\r\n                                array[i-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100 ){\r\n                                 array[i] = array[z];\r\n                                 array[i+1] = array[z+1];\r\n                                 array[z] = test[k];\r\n                                 array[z+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             zeroSlot.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             zeroSlot.push(test[k]);\r\n                         }\r\n                    }\r\n                    //slot in slot1 = 2\r\n                    else if(array[i+1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        \r\n                        const v = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[v];\r\n                                array[i-1] = array[v-1];\r\n                                array[v] = test[k];\r\n                                array[v-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100){\r\n                                 array[i] = array[v];\r\n                                 array[i+1] = array[v+1];\r\n                                 array[v] = test[k];\r\n                                 array[v+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             zeroSlot.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             zeroSlot.push(test[k]);\r\n                         }\r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                        zeroSlot.push(test[k]);\r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                    zeroSlot.push(test[k]);\r\n                    \r\n                }\r\n             }\r\n              \r\n             else if(hourMS == 3){\r\n                 if(array[i] == 100){\r\n                     if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                         array[i] = test[k];\r\n                         array[i-1] = test[k];\r\n                         array[i+1] = test[k];\r\n                         \r\n                     }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                         array[i] = test[k];\r\n                         array[i-1] = test[k];\r\n                         insertedData100_Slot2_1.push(test[k])\r\n                         \r\n                     }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                         array[i] = test[k];\r\n                         array[i+1] = test[k];\r\n                         insertedData100_Slot2_1.push(test[k])\r\n                         \r\n                     }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                         array[i] = test[k];\r\n                         remainderArraySlot1.push(test[k])\r\n                         zeroSlot.push(test[k]);\r\n                         \r\n                     }\r\n                 }else{\r\n                     remainderArray.push(test[k]);\r\n                     zeroSlot.push(test[k]);\r\n                     \r\n                 }\r\n                 }\r\n    \r\n              else if(hourMS == 2){\r\n                 if(array[i] == 100){\r\n                     if(array[i-1] == 100 ){\r\n                         array[i] = test[k];\r\n                         array[i-1] = test[k];\r\n                         \r\n                     }else if(array[i+1] == 100){\r\n                         array[i] = test[k];\r\n                         array[i+1] = test[k];\r\n                         \r\n                     }\r\n                     else{\r\n                         remainderArray.push(test[k]);\r\n                         zeroSlot.push(test[k]);\r\n                         \r\n                     }\r\n                 }else{\r\n                     remainderArray.push(test[k]);\r\n                     zeroSlot.push(test[k]);\r\n                 }\r\n                 }\r\n             }\r\n             k++  \r\n         }\r\n    \r\n         //fullfill the slot 3\r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] == 100){\r\n                 if(k3 < remainderArraySlot1.length){\r\n                         array[x] = remainderArraySlot1[k3]\r\n                         array[x+1] = remainderArraySlot1[k3]\r\n                 }else{\r\n                     if(remainderArraySlot1[k3] != undefined){\r\n                         insertedData100_Slot2_2.push(remainderArraySlot1[k3])\r\n                     }\r\n                 }\r\n                 k3++   \r\n             }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                 if(k3 < remainderArraySlot1.length){\r\n                         array[x] = remainderArraySlot1[k3]\r\n                         array[x+1] = remainderArraySlot1[k3]\r\n                 }else{\r\n                     if(remainderArraySlot1[k3] != undefined){\r\n                         insertedData100_Slot2_2.push(remainderArraySlot1[k3])\r\n                     }\r\n                 }\r\n                 k3++   \r\n             }\r\n         }\r\n         //console.log(remainderArray);\r\n         for(let x = 0; x< array.length; x++){\r\n                 if(array[x] == 100 && array[x+1] ==100 ){\r\n                     if(k2 < remainderArray.length){\r\n                         array[x] = remainderArray[k2]\r\n                         array[x+1] = remainderArray[k2]\r\n                     }\r\n                     try{\r\n                         let slot2 = remainderArray[k2][10]\r\n                         if(slot2 == 1){\r\n                             insertedData100_Slot2_1.push(remainderArray[k2])\r\n                         }\r\n                         if(slot2 == 2){\r\n                             insertedData100_Slot2_2.push(remainderArray[k2])\r\n                         }\r\n                     }catch{}\r\n                 k2++   \r\n             }\r\n         }\r\n         if(array[-1] != undefined || array[-1] != 0){\r\n             insertedData100_Slot2_1.push(array[-1]);\r\n             // array[-1] = undefined\r\n         }\r\n    \r\n        return array;\r\n    }\r\n    var AntArrIns100 = AntAlgoInsert100(AntArr100);\r\n    \r\n    //console.log(AntArrIns100)\r\n\r\n    \r\n     const slot2Equal1for100 = (array) => {\r\n         let k = 0;\r\n         let test2 = []\r\n         let totalRoom = array.length / 38\r\n         //console.log(insertedData100_Slot2_1)\r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100){\r\n                 if(k < insertedData100_Slot2_1.length){\r\n                     array[x] = insertedData100_Slot2_1[k]\r\n                 }\r\n             k++   \r\n             }\r\n         }\r\n         return array;\r\n     }\r\n      slot2Equal1for100(AntArr100);\r\n    \r\n    \r\n     const slot2Equal2for100 = (array) => {\r\n         let k = 0;\r\n         let totalRoom = array.length / 38\r\n    \r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k < insertedData100_Slot2_2.length){    \r\n                         array[x] = insertedData100_Slot2_2[k]\r\n                         array[x+1] = insertedData100_Slot2_2[k]\r\n    \r\n                 }else{\r\n    \r\n                     if(insertedData100_Slot2_2[k] != undefined){\r\n                         extraData100_Slot2_2.push(insertedData100_Slot2_2[k])\r\n                     }\r\n                 }\r\n                 k++   \r\n             }\r\n         }\r\n    \r\n    \r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k < extraData100_Slot2_2.length){\r\n                     array[x] = extraData100_Slot2_2[k]\r\n                     array[x+1] = extraData100_Slot2_2[k]\r\n                 }\r\n             k++   \r\n             }\r\n         }\r\n    \r\n         return array;\r\n    }\r\n     slot2Equal2for100(AntArr100);\r\n    \r\n    const checkAmountData100 = (array) => {\r\n        let count = 0\r\n        for(let i = 0; i < array.length; i++){\r\n                if(array[i] != 100 && array[i] !=100 && array[i] != 0 && array[i] != undefined){\r\n                    count += 1\r\n                }\r\n        }\r\n        return count\r\n    }\r\n    var checkAmount100 = checkAmountData100(AntArrIns100)\r\n    console.log(AntArrIns100)\r\n    console.log(checkAmount100)\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 100 but less than 200\r\n\r\n    //create 1d array for dataset 200\r\n    const array1D200 = (data) => {\r\n        var result = []\r\n    \r\n        for(let i = 0; i< data; i++){\r\n            result[i]= 100;\r\n        }\r\n        return result;\r\n    }\r\n    var AntArr200 = array1D200(DataArray200);\r\n    \r\n    let extraData200_Slot2_2 = []\r\n    let extraData200_Slot2_1 = []\r\n    let insertedData200_Slot2_2 = []\r\n    let insertedData200_Slot2_1= []\r\n    \r\n    const AntAlgoInsert200 = (array) => {\r\n        let test = []\r\n        let k = 0;\r\n        let k2 =0\r\n        let k3 =0\r\n    \r\n        let remainderArray = []\r\n        let remainderArraySlot1 = []\r\n        let zeroSlot = []\r\n    \r\n        let totalRoom = array.length / 38\r\n    \r\n        for(let x=0; x<filterData200.length;x++){\r\n            test.push(filterData200[x]);\r\n        }\r\n    \r\n         for(let i = array.length-1;i>0;i--){\r\n             if(k < test.length){\r\n             let hourMS = test[k][7]\r\n    \r\n    \r\n             if(hourMS == 4){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    if(array[i-1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n    \r\n                        const z = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[z];\r\n                                array[i-1] = array[z-1];\r\n                                array[i] = test[k];\r\n                                array[i-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100 ){\r\n                                 array[i] = array[z];\r\n                                 array[i+1] = array[z+1];\r\n                                 array[z] = test[k];\r\n                                 array[z+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             zeroSlot.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             zeroSlot.push(test[k]);\r\n                         }\r\n                    }\r\n                    //slot in slot1 = 2\r\n                    else if(array[i+1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        \r\n                        const v = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[v];\r\n                                array[i-1] = array[v-1];\r\n                                array[v] = test[k];\r\n                                array[v-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100){\r\n                                 array[i] = array[v];\r\n                                 array[i+1] = array[v+1];\r\n                                 array[v] = test[k];\r\n                                 array[v+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             zeroSlot.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             zeroSlot.push(test[k]);\r\n                         }\r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                        zeroSlot.push(test[k]);\r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                    zeroSlot.push(test[k]);\r\n                    \r\n                }\r\n             }\r\n              \r\n             else if(hourMS == 3){\r\n                 if(array[i] == 100){\r\n                     if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                         array[i] = test[k];\r\n                         array[i-1] = test[k];\r\n                         array[i+1] = test[k];\r\n                         \r\n                     }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                         array[i] = test[k];\r\n                         array[i-1] = test[k];\r\n                         insertedData200_Slot2_1.push(test[k])\r\n                         \r\n                     }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                         array[i] = test[k];\r\n                         array[i+1] = test[k];\r\n                         insertedData200_Slot2_1.push(test[k])\r\n                         \r\n                     }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                         array[i] = test[k];\r\n                         remainderArraySlot1.push(test[k])\r\n                         zeroSlot.push(test[k]);\r\n                         \r\n                     }\r\n                 }else{\r\n                     remainderArray.push(test[k]);\r\n                     zeroSlot.push(test[k]);\r\n                     \r\n                 }\r\n                 }\r\n    \r\n              else if(hourMS == 2){\r\n                 if(array[i] == 100){\r\n                     if(array[i-1] == 100 ){\r\n                         array[i] = test[k];\r\n                         array[i-1] = test[k];\r\n                         \r\n                     }else if(array[i+1] == 100){\r\n                         array[i] = test[k];\r\n                         array[i+1] = test[k];\r\n                         \r\n                     }\r\n                     else{\r\n                         remainderArray.push(test[k]);\r\n                         zeroSlot.push(test[k]);\r\n                         \r\n                     }\r\n                 }else{\r\n                     remainderArray.push(test[k]);\r\n                     zeroSlot.push(test[k]);\r\n                 }\r\n                 }\r\n             }\r\n             k++  \r\n         }\r\n    \r\n         //fullfill the slot 3\r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] == 100){\r\n                 if(k3 < remainderArraySlot1.length){\r\n                         array[x] = remainderArraySlot1[k3]\r\n                         array[x+1] = remainderArraySlot1[k3]\r\n                 }else{\r\n                     if(remainderArraySlot1[k3] != undefined){\r\n                         insertedData200_Slot2_2.push(remainderArraySlot1[k3])\r\n                     }\r\n                 }\r\n                 k3++   \r\n             }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                 if(k3 < remainderArraySlot1.length){\r\n                         array[x] = remainderArraySlot1[k3]\r\n                         array[x+1] = remainderArraySlot1[k3]\r\n                 }else{\r\n                     if(remainderArraySlot1[k3] != undefined){\r\n                         insertedData200_Slot2_2.push(remainderArraySlot1[k3])\r\n                     }\r\n                 }\r\n                 k3++   \r\n             }\r\n         }\r\n         //console.log(remainderArray);\r\n         for(let x = 0; x< array.length; x++){\r\n                 if(array[x] == 100 && array[x+1] ==100 ){\r\n                     if(k2 < remainderArray.length){\r\n                         array[x] = remainderArray[k2]\r\n                         array[x+1] = remainderArray[k2]\r\n                     }\r\n                     try{\r\n                         let slot2 = remainderArray[k2][10]\r\n                         if(slot2 == 1){\r\n                             insertedData200_Slot2_1.push(remainderArray[k2])\r\n                         }\r\n                         if(slot2 == 2){\r\n                             insertedData200_Slot2_2.push(remainderArray[k2])\r\n                         }\r\n                     }catch{}\r\n                 k2++   \r\n             }\r\n         }\r\n         if(array[-1] != undefined || array[-1] != 0){\r\n             insertedData200_Slot2_1.push(array[-1]);\r\n             // array[-1] = undefined\r\n         }\r\n    \r\n        return array;\r\n    }\r\n    var AntArrIns200 = AntAlgoInsert200(AntArr200);\r\n    \r\n    //console.log(AntArrIns200)\r\n    \r\n    \r\n     const slot2Equal1for200 = (array) => {\r\n         let k = 0;\r\n         let test2 = []\r\n         let totalRoom = array.length / 38\r\n         //console.log(insertedData200_Slot2_1)\r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100){\r\n                 if(k < insertedData200_Slot2_1.length){\r\n                     array[x] = insertedData200_Slot2_1[k]\r\n                 }\r\n             k++   \r\n             }\r\n         }\r\n         return array;\r\n     }\r\n      slot2Equal1for200(AntArr200);\r\n    \r\n    \r\n     const slot2Equal2for200 = (array) => {\r\n         let k = 0;\r\n         let totalRoom = array.length / 38\r\n    \r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k < insertedData200_Slot2_2.length){    \r\n                         array[x] = insertedData200_Slot2_2[k]\r\n                         array[x+1] = insertedData200_Slot2_2[k]\r\n    \r\n                 }else{\r\n    \r\n                     if(insertedData200_Slot2_2[k] != undefined){\r\n                         extraData200_Slot2_2.push(insertedData200_Slot2_2[k])\r\n                     }\r\n                 }\r\n                 k++   \r\n             }\r\n         }\r\n    \r\n    \r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k < extraData200_Slot2_2.length){\r\n                     array[x] = extraData200_Slot2_2[k]\r\n                     array[x+1] = extraData200_Slot2_2[k]\r\n                 }\r\n             k++   \r\n             }\r\n         }\r\n    \r\n         return array;\r\n    }\r\n     slot2Equal2for200(AntArr200);\r\n    \r\n    const checkAmountData200 = (array) => {\r\n        let count = 0\r\n        for(let i = 0; i < array.length; i++){\r\n                if(array[i] != 100 && array[i] !=200 && array[i] != 0 && array[i] != undefined){\r\n                    count += 1\r\n                }\r\n        }\r\n        return count\r\n    }\r\n    var checkAmount200 = checkAmountData200(AntArrIns200)\r\n    console.log(AntArrIns200)\r\n    console.log(checkAmount200)\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 200 \r\n\r\n    //create 1d array for dataset 500\r\n    const array1D500 = (data) => {\r\n        var result = []\r\n    \r\n        for(let i = 0; i< data; i++){\r\n            result[i]= 100;\r\n        }\r\n        return result;\r\n    }\r\n    var AntArr500 = array1D500(DataArray500);\r\n    \r\n    let extraData500_Slot2_2 = []\r\n    let extraData500_Slot2_1 = []\r\n    let insertedData500_Slot2_2 = []\r\n    let insertedData500_Slot2_1= []\r\n    \r\n    const AntAlgoInsert500 = (array) => {\r\n        let test = []\r\n        let k = 0;\r\n        let k2 =0\r\n        let k3 =0\r\n    \r\n        let remainderArray = []\r\n        let remainderArraySlot1 = []\r\n        let zeroSlot = []\r\n    \r\n        let totalRoom = array.length / 38\r\n    \r\n        for(let x=0; x<filterData500.length;x++){\r\n            test.push(filterData500[x]);\r\n        }\r\n    \r\n         for(let i = array.length-1;i>0;i--){\r\n             if(k < test.length){\r\n             let hourMS = test[k][7]\r\n    \r\n    \r\n             if(hourMS == 4){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    if(array[i-1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n    \r\n                        const z = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[z];\r\n                                array[i-1] = array[z-1];\r\n                                array[i] = test[k];\r\n                                array[i-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100 ){\r\n                                 array[i] = array[z];\r\n                                 array[i+1] = array[z+1];\r\n                                 array[z] = test[k];\r\n                                 array[z+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             zeroSlot.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             zeroSlot.push(test[k]);\r\n                         }\r\n                    }\r\n                    //slot in slot1 = 2\r\n                    else if(array[i+1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        \r\n                        const v = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[v];\r\n                                array[i-1] = array[v-1];\r\n                                array[v] = test[k];\r\n                                array[v-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100){\r\n                                 array[i] = array[v];\r\n                                 array[i+1] = array[v+1];\r\n                                 array[v] = test[k];\r\n                                 array[v+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             zeroSlot.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             zeroSlot.push(test[k]);\r\n                         }\r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                        zeroSlot.push(test[k]);\r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                    zeroSlot.push(test[k]);\r\n                    \r\n                }\r\n             }\r\n              \r\n             else if(hourMS == 3){\r\n                 if(array[i] == 100){\r\n                     if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                         array[i] = test[k];\r\n                         array[i-1] = test[k];\r\n                         array[i+1] = test[k];\r\n                         \r\n                     }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                         array[i] = test[k];\r\n                         array[i-1] = test[k];\r\n                         insertedData500_Slot2_1.push(test[k])\r\n                         \r\n                     }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                         array[i] = test[k];\r\n                         array[i+1] = test[k];\r\n                         insertedData500_Slot2_1.push(test[k])\r\n                         \r\n                     }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                         array[i] = test[k];\r\n                         remainderArraySlot1.push(test[k])\r\n                         zeroSlot.push(test[k]);\r\n                         \r\n                     }\r\n                 }else{\r\n                     remainderArray.push(test[k]);\r\n                     zeroSlot.push(test[k]);\r\n                     \r\n                 }\r\n                 }\r\n    \r\n              else if(hourMS == 2){\r\n                 if(array[i] == 100){\r\n                     if(array[i-1] == 100 ){\r\n                         array[i] = test[k];\r\n                         array[i-1] = test[k];\r\n                         \r\n                     }else if(array[i+1] == 100){\r\n                         array[i] = test[k];\r\n                         array[i+1] = test[k];\r\n                         \r\n                     }\r\n                     else{\r\n                         remainderArray.push(test[k]);\r\n                         zeroSlot.push(test[k]);\r\n                         \r\n                     }\r\n                 }else{\r\n                     remainderArray.push(test[k]);\r\n                     zeroSlot.push(test[k]);\r\n                 }\r\n                 }\r\n             }\r\n             k++  \r\n         }\r\n    \r\n         //fullfill the slot 3\r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] == 100){\r\n                 if(k3 < remainderArraySlot1.length){\r\n                         array[x] = remainderArraySlot1[k3]\r\n                         array[x+1] = remainderArraySlot1[k3]\r\n                 }else{\r\n                     if(remainderArraySlot1[k3] != undefined){\r\n                         insertedData500_Slot2_2.push(remainderArraySlot1[k3])\r\n                     }\r\n                 }\r\n                 k3++   \r\n             }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                 if(k3 < remainderArraySlot1.length){\r\n                         array[x] = remainderArraySlot1[k3]\r\n                         array[x+1] = remainderArraySlot1[k3]\r\n                 }else{\r\n                     if(remainderArraySlot1[k3] != undefined){\r\n                         insertedData500_Slot2_2.push(remainderArraySlot1[k3])\r\n                     }\r\n                 }\r\n                 k3++   \r\n             }\r\n         }\r\n         //console.log(remainderArray);\r\n         for(let x = 0; x< array.length; x++){\r\n                 if(array[x] == 100 && array[x+1] ==100 ){\r\n                     if(k2 < remainderArray.length){\r\n                         array[x] = remainderArray[k2]\r\n                         array[x+1] = remainderArray[k2]\r\n                     }\r\n                     try{\r\n                         let slot2 = remainderArray[k2][10]\r\n                         if(slot2 == 1){\r\n                             insertedData500_Slot2_1.push(remainderArray[k2])\r\n                         }\r\n                         if(slot2 == 2){\r\n                             insertedData500_Slot2_2.push(remainderArray[k2])\r\n                         }\r\n                     }catch{}\r\n                 k2++   \r\n             }\r\n         }\r\n         if(array[-1] != undefined || array[-1] != 0){\r\n             insertedData500_Slot2_1.push(array[-1]);\r\n             // array[-1] = undefined\r\n         }\r\n    \r\n        return array;\r\n    }\r\n    var AntArrIns500 = AntAlgoInsert500(AntArr500);\r\n    \r\n    //console.log(AntArrIns500)\r\n    \r\n     const slot2Equal1for500 = (array) => {\r\n         let k = 0;\r\n         let test2 = []\r\n         let totalRoom = array.length / 38\r\n         //console.log(insertedData500_Slot2_1)\r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100){\r\n                 if(k < insertedData500_Slot2_1.length){\r\n                     array[x] = insertedData500_Slot2_1[k]\r\n                 }\r\n             k++   \r\n             }\r\n         }\r\n         return array;\r\n     }\r\n      slot2Equal1for500(AntArr500);\r\n    \r\n    \r\n     const slot2Equal2for500 = (array) => {\r\n         let k = 0;\r\n         let totalRoom = array.length / 38\r\n    \r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k < insertedData500_Slot2_2.length){    \r\n                         array[x] = insertedData500_Slot2_2[k]\r\n                         array[x+1] = insertedData500_Slot2_2[k]\r\n    \r\n                 }else{\r\n    \r\n                     if(insertedData500_Slot2_2[k] != undefined){\r\n                         extraData500_Slot2_2.push(insertedData500_Slot2_2[k])\r\n                     }\r\n                 }\r\n                 k++   \r\n             }\r\n         }\r\n    \r\n    \r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k < extraData500_Slot2_2.length){\r\n                     array[x] = extraData500_Slot2_2[k]\r\n                     array[x+1] = extraData500_Slot2_2[k]\r\n                 }\r\n             k++   \r\n             }\r\n         }\r\n    \r\n         return array;\r\n    }\r\n     slot2Equal2for500(AntArr500);\r\n    \r\n    const checkAmountData500 = (array) => {\r\n        let count = 0\r\n        for(let i = 0; i < array.length; i++){\r\n                if(array[i] != 100 && array[i] !=500 && array[i] != 0 && array[i] != undefined){\r\n                    count += 1\r\n                }\r\n        }\r\n        return count\r\n    }\r\n    var checkAmount500 = checkAmountData500(AntArrIns500)\r\n    console.log(AntArrIns500)\r\n    console.log(checkAmount500)\r\n\r\n\r\n//---------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n\r\n\r\n//---------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n//Elective courses\r\n\r\n    //create 1d array for dataset 50\r\n    const array1DElective50 = (data) => {\r\n        var result = []\r\n    \r\n        for(let i = 0; i< data; i++){\r\n            result[i]= 100;\r\n        }\r\n        return result;\r\n    }\r\n    var AntArrElective50 = array1DElective50(DataArrayElective50);\r\n    \r\n    let extraDataElective50_Slot2_2 = []\r\n    let extraData50Elective_Slot2_1 = []\r\n    let insertedDataElective50_Slot2_2 = []\r\n    let insertedDataElective50_Slot2_1= []\r\n    \r\n    const AntAlgoInsertElective50 = (array) => {\r\n        let test = []\r\n        let k = 0;\r\n        let k2 =0\r\n        let k3 =0\r\n    \r\n        let remainderArray = []\r\n        let remainderArraySlot1 = []\r\n    \r\n        let totalRoom = array.length / 38\r\n    \r\n        for(let x=0; x<filterDataElective50.length;x++){\r\n            test.push(filterDataElective50[x]);\r\n        }\r\n    \r\n         for(let i = array.length-1;i>0;i--){\r\n             if(k < test.length){\r\n             let hourMS = test[k][7]\r\n             let slot1 = test[k][9]\r\n             let slot2 = test[k][10]\r\n    \r\n             if(hourMS == 4){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    //slot in slot1 = 2\r\n                    if(array[i-1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        \r\n                        // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                             array[j+38*b] = 0         \r\n                             array[j+38*b-1] = 0\r\n                         }\r\n                         if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                             array[j-38*b] = 0         \r\n                             array[j-38*b-1] = 0\r\n                         }\r\n                        }\r\n                        const z = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[z];\r\n                                array[i-1] = array[z-1];\r\n                                array[i] = test[k];\r\n                                array[i-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100 ){\r\n                                 array[i] = array[z];\r\n                                 array[i+1] = array[z+1];\r\n                                 array[z] = test[k];\r\n                                 array[z+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                         }\r\n                         //revert back to 100\r\n                         for(let x =0; x<array.length; x++){\r\n                             if(array[x] == 0){\r\n                                 array[x] = 100\r\n                             }\r\n                         }\r\n                    }\r\n                    //slot in slot1 = 2\r\n                    else if(array[i+1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        \r\n                         // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                             array[j+38*b] = 0         \r\n                             array[j+38*b-1] = 0\r\n                         }\r\n                         if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                             array[j-38*b] = 0         \r\n                             array[j-38*b-1] = 0\r\n                         }\r\n                        }\r\n                        const v = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[v];\r\n                                array[i-1] = array[v-1];\r\n                                array[v] = test[k];\r\n                                array[v-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100){\r\n                                 array[i] = array[v];\r\n                                 array[i+1] = array[v+1];\r\n                                 array[v] = test[k];\r\n                                 array[v+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                         }\r\n                         //revert back to 100\r\n                         for(let x =0; x<array.length; x++){\r\n                             if(array[x] == 0){\r\n                                 array[x] = 100\r\n                             }\r\n                         }\r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                    \r\n                }\r\n             }\r\n    \r\n             else if(hourMS == 3){\r\n                 const j = Math.floor(Math.random()*(i+1));\r\n                 if(array[i] == 100){\r\n                     if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[i-1] = array[j-1];\r\n                         array[i+1] = array[j+1];\r\n                         array[j] = test[k];\r\n                         array[j-1] = test[k];\r\n                         array[j+1] = test[k];\r\n                         \r\n                     }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[i-1] = array[j-1];\r\n                         array[j] = test[k];\r\n                         array[j-1] = test[k];\r\n                         insertedDataElective50_Slot2_1.push(test[k])\r\n                         \r\n                     }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[i+1] = array[j+1];\r\n                         array[j] = test[k];\r\n                         array[j+1] = test[k];\r\n                         insertedDataElective50_Slot2_1.push(test[k])\r\n                         \r\n                     }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[j] = test[k];\r\n                         remainderArraySlot1.push(test[k])\r\n                         \r\n                     }\r\n                 }else{\r\n                     remainderArray.push(test[k]);\r\n                     \r\n                 }\r\n                 }\r\n    \r\n              else if(hourMS == 2){\r\n                 const j = Math.floor(Math.random()*(i+1));\r\n                 if(array[i] == 100){\r\n                     if(array[i-1] == 100 ){\r\n                         array[i] = array[j];\r\n                         array[i-1] = array[j-1];\r\n                         array[j] = test[k];\r\n                         array[j-1] = test[k];\r\n                         \r\n                     }else if(array[i+1] == 100){\r\n                         array[i] = array[j];\r\n                         array[i+1] = array[j+1];\r\n                         array[j] = test[k];\r\n                         array[j+1] = test[k];\r\n                         \r\n                     }\r\n                     else{\r\n                         remainderArray.push(test[k]);\r\n                         \r\n                     }\r\n                 }else{\r\n                     remainderArray.push(test[k]);\r\n                 }\r\n                 }\r\n             }\r\n             k++  \r\n         }\r\n         //console.log(remainderArraySlot1);\r\n         //for(let x = 0; x < remainderArraySlot1.length; x++){\r\n         for(let z =0; z< array.length; z++){\r\n             for(let x = 0; x < remainderArraySlot1.length; x++){\r\n                 if(array[z] == remainderArraySlot1[x]){\r\n                     for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[z+38*b]==100 && array[z+38*b-1]==100){\r\n                             array[z+38*b] = 0         \r\n                             array[z+38*b-1] = 0\r\n                         }\r\n                         if( array[z-38*b]==100 && array[z-38*b-1]==100){\r\n                             array[z-38*b] = 0         \r\n                             array[z-38*b-1] = 0\r\n                         }\r\n                        }\r\n                 }\r\n             }\r\n         }\r\n    \r\n         //fullfill the slot 3\r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] == 100){\r\n                 if(k3 < remainderArraySlot1.length){\r\n                     const q = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[q]\r\n                         array[x+1] = array[q+1]\r\n                         array[q] = remainderArraySlot1[k3]\r\n                         array[q+1] = remainderArraySlot1[k3]\r\n                 }else{\r\n                     if(remainderArraySlot1[k3] != undefined){\r\n                         insertedDataElective50_Slot2_2.push(remainderArraySlot1[k3])\r\n                     }\r\n                 }\r\n                 k3++   \r\n             }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                 if(k3 < remainderArraySlot1.length){\r\n                     const q = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[q]\r\n                         array[x+1] = array[q+1]\r\n                         array[q] = remainderArraySlot1[k3]\r\n                         array[q+1] = remainderArraySlot1[k3]\r\n                 }else{\r\n                     if(remainderArraySlot1[k3] != undefined){\r\n                         insertedDataElective50_Slot2_2.push(remainderArraySlot1[k3])\r\n                     }\r\n                 }\r\n                 k3++   \r\n             }\r\n         }\r\n    \r\n    \r\n         //console.log(remainderArray);\r\n         for(let x = 0; x< array.length; x++){\r\n                 if(array[x] == 100 && array[x+1] ==100 ){\r\n                     if(k2 < remainderArray.length){\r\n                         const c = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[c]\r\n                         array[x+1] = array[c+1]\r\n                         array[c] = remainderArray[k2]\r\n                         array[c+1] = remainderArray[k2]\r\n                     }\r\n                     try{\r\n                         let slot2 = remainderArray[k2][10]\r\n                         if(slot2 == 1){\r\n                             insertedDataElective50_Slot2_1.push(remainderArray[k2])\r\n                         }\r\n                         if(slot2 == 2){\r\n                             insertedDataElective50_Slot2_2.push(remainderArray[k2])\r\n                         }\r\n                     }catch{}\r\n                 k2++   \r\n             }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                 if(k2 < remainderArray.length){\r\n                     const b = Math.floor(Math.random()*(x+1));\r\n                     array[x] = array[b]\r\n                     array[x+1] = array[b+1]\r\n                     array[b] = remainderArray[k2]\r\n                     array[b+1] = remainderArray[k2]\r\n                 }\r\n                 try{\r\n                     let slot2 = remainderArray[k2][10]\r\n                     if(slot2 == 1){\r\n                         insertedDataElective50_Slot2_1.push(remainderArray[k2])\r\n                     }\r\n                     if(slot2 == 2){\r\n                         insertedDataElective50_Slot2_2.push(remainderArray[k2])\r\n                     }\r\n                 }catch{}\r\n             k2++   \r\n         }\r\n         }\r\n    \r\n         //if there is array in -1, reslot in into the array\r\n         for(let x =0; x<array.length; x++){\r\n             if(array[x] == 0){\r\n                 array[x] = 100\r\n             }\r\n         }\r\n         if(array[-1] != undefined){\r\n             insertedDataElective50_Slot2_1.push(array[-1]);\r\n             // array[-1] = undefined\r\n         }\r\n    \r\n        return array;\r\n    }\r\n    var AntArrInsElective50 = AntAlgoInsertElective50(AntArrElective50);\r\n    \r\n    const checkAmountDataElective50B = (array) => {\r\n     let count = 0\r\n     for(let i = 0; i < array.length; i++){\r\n             if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined){\r\n                 count += 1\r\n             }\r\n     }\r\n     return count\r\n     }\r\n    var checkAmountB = checkAmountDataElective50B(AntArrInsElective50)\r\n    \r\n    \r\n     const slot2Equal1forElective50 = (array) => {\r\n         let k = 0;\r\n         let test2 = []\r\n         //console.log(insertedDataElective50_Slot2_1)\r\n         \r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100){\r\n                 if(k < insertedDataElective50_Slot2_1.length){\r\n                     array[x] = insertedDataElective50_Slot2_1[k]\r\n                 }\r\n             k++   \r\n             }\r\n         }\r\n         //console.log(test2)\r\n         return array;\r\n     }\r\n     slot2Equal1forElective50(AntArrElective50);\r\n    \r\n    \r\n     const slot2Equal2forElective50 = (array) => {\r\n         let k = 0;\r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k < insertedDataElective50_Slot2_2.length){\r\n                     const q = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[q]\r\n                         array[x+1] = array[q+1]\r\n                         array[q] = insertedDataElective50_Slot2_2[k]\r\n                         array[q+1] = insertedDataElective50_Slot2_2[k]\r\n                 }else{\r\n                     if(insertedDataElective50_Slot2_2[k] != undefined){\r\n                         extraDataElective50_Slot2_2.push(insertedDataElective50_Slot2_2[k])\r\n                     }\r\n                 }\r\n                 k++   \r\n             }\r\n         }\r\n    \r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k < extraDataElective50_Slot2_2.length){\r\n                     array[x] = extraDataElective50_Slot2_2[k]\r\n                     array[x+1] = extraDataElective50_Slot2_2[k]\r\n                 }\r\n             k++   \r\n             }\r\n         }\r\n         return array;\r\n    }\r\n     slot2Equal2forElective50(AntArrElective50);\r\n    \r\n    const checkAmountDataElective50 = (array) => {\r\n        let count = 0\r\n        for(let i = 0; i < array.length; i++){\r\n                if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined){\r\n                    count += 1\r\n                }\r\n        }\r\n        return count\r\n    }\r\n    var checkAmountElective50 = checkAmountDataElective50(AntArrInsElective50)\r\n//---------------------------------------------------------------------------------------------------------------------------------------------\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 50 but less than 100\r\n\r\n    //create 1d array for dataset 100\r\n    const array1DElective100 = (data) => {\r\n        var result = []\r\n    \r\n        for(let i = 0; i< data; i++){\r\n            result[i]= 100;\r\n        }\r\n        return result;\r\n    }\r\n    var AntArrElective100 = array1DElective100(DataArrayElective100);\r\n    \r\n    let extraDataElective100_Slot2_2 = []\r\n    let extraData100Elective_Slot2_1 = []\r\n    let insertedDataElective100_Slot2_2 = []\r\n    let insertedDataElective100_Slot2_1= []\r\n    \r\n    const AntAlgoInsertElective100 = (array) => {\r\n        let test = []\r\n        let k = 0;\r\n        let k2 =0\r\n        let k3 =0\r\n    \r\n        let remainderArray = []\r\n        let remainderArraySlot1 = []\r\n    \r\n        let totalRoom = array.length / 38\r\n    \r\n        for(let x=0; x<filterDataElective100.length;x++){\r\n            test.push(filterDataElective100[x]);\r\n        }\r\n    \r\n         for(let i = array.length-1;i>0;i--){\r\n             if(k < test.length){\r\n             let hourMS = test[k][7]\r\n             let slot1 = test[k][9]\r\n             let slot2 = test[k][10]\r\n    \r\n             if(hourMS == 4){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    //slot in slot1 = 2\r\n                    if(array[i-1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        \r\n                        // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                             array[j+38*b] = 0         \r\n                             array[j+38*b-1] = 0\r\n                         }\r\n                         if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                             array[j-38*b] = 0         \r\n                             array[j-38*b-1] = 0\r\n                         }\r\n                        }\r\n                        const z = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[z];\r\n                                array[i-1] = array[z-1];\r\n                                array[i] = test[k];\r\n                                array[i-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100 ){\r\n                                 array[i] = array[z];\r\n                                 array[i+1] = array[z+1];\r\n                                 array[z] = test[k];\r\n                                 array[z+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                         }\r\n                         //revert back to 100\r\n                         for(let x =0; x<array.length; x++){\r\n                             if(array[x] == 0){\r\n                                 array[x] = 100\r\n                             }\r\n                         }\r\n                    }\r\n                    //slot in slot1 = 2\r\n                    else if(array[i+1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        \r\n                         // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                             array[j+38*b] = 0         \r\n                             array[j+38*b-1] = 0\r\n                         }\r\n                         if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                             array[j-38*b] = 0         \r\n                             array[j-38*b-1] = 0\r\n                         }\r\n                        }\r\n                        const v = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[v];\r\n                                array[i-1] = array[v-1];\r\n                                array[v] = test[k];\r\n                                array[v-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100){\r\n                                 array[i] = array[v];\r\n                                 array[i+1] = array[v+1];\r\n                                 array[v] = test[k];\r\n                                 array[v+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                         }\r\n                         //revert back to 100\r\n                         for(let x =0; x<array.length; x++){\r\n                             if(array[x] == 0){\r\n                                 array[x] = 100\r\n                             }\r\n                         }\r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                    \r\n                }\r\n             }\r\n    \r\n             else if(hourMS == 3){\r\n                 const j = Math.floor(Math.random()*(i+1));\r\n                 if(array[i] == 100){\r\n                     if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[i-1] = array[j-1];\r\n                         array[i+1] = array[j+1];\r\n                         array[j] = test[k];\r\n                         array[j-1] = test[k];\r\n                         array[j+1] = test[k];\r\n                         \r\n                     }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[i-1] = array[j-1];\r\n                         array[j] = test[k];\r\n                         array[j-1] = test[k];\r\n                         insertedDataElective100_Slot2_1.push(test[k])\r\n                         \r\n                     }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[i+1] = array[j+1];\r\n                         array[j] = test[k];\r\n                         array[j+1] = test[k];\r\n                         insertedDataElective100_Slot2_1.push(test[k])\r\n                         \r\n                     }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[j] = test[k];\r\n                         remainderArraySlot1.push(test[k])\r\n                         \r\n                     }\r\n                 }else{\r\n                     remainderArray.push(test[k]);\r\n                     \r\n                 }\r\n                 }\r\n    \r\n              else if(hourMS == 2){\r\n                 const j = Math.floor(Math.random()*(i+1));\r\n                 if(array[i] == 100){\r\n                     if(array[i-1] == 100 ){\r\n                         array[i] = array[j];\r\n                         array[i-1] = array[j-1];\r\n                         array[j] = test[k];\r\n                         array[j-1] = test[k];\r\n                         \r\n                     }else if(array[i+1] == 100){\r\n                         array[i] = array[j];\r\n                         array[i+1] = array[j+1];\r\n                         array[j] = test[k];\r\n                         array[j+1] = test[k];\r\n                         \r\n                     }\r\n                     else{\r\n                         remainderArray.push(test[k]);\r\n                         \r\n                     }\r\n                 }else{\r\n                     remainderArray.push(test[k]);\r\n                 }\r\n                 }\r\n             }\r\n             k++  \r\n         }\r\n         //console.log(remainderArraySlot1);\r\n         //for(let x = 0; x < remainderArraySlot1.length; x++){\r\n         for(let z =0; z< array.length; z++){\r\n             for(let x = 0; x < remainderArraySlot1.length; x++){\r\n                 if(array[z] == remainderArraySlot1[x]){\r\n                     for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[z+38*b]==100 && array[z+38*b-1]==100){\r\n                             array[z+38*b] = 0         \r\n                             array[z+38*b-1] = 0\r\n                         }\r\n                         if( array[z-38*b]==100 && array[z-38*b-1]==100){\r\n                             array[z-38*b] = 0         \r\n                             array[z-38*b-1] = 0\r\n                         }\r\n                        }\r\n                 }\r\n             }\r\n         }\r\n    \r\n         //fullfill the slot 3\r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] == 100){\r\n                 if(k3 < remainderArraySlot1.length){\r\n                     const q = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[q]\r\n                         array[x+1] = array[q+1]\r\n                         array[q] = remainderArraySlot1[k3]\r\n                         array[q+1] = remainderArraySlot1[k3]\r\n                 }else{\r\n                     if(remainderArraySlot1[k3] != undefined){\r\n                         insertedDataElective100_Slot2_2.push(remainderArraySlot1[k3])\r\n                     }\r\n                 }\r\n                 k3++   \r\n             }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                 if(k3 < remainderArraySlot1.length){\r\n                     const q = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[q]\r\n                         array[x+1] = array[q+1]\r\n                         array[q] = remainderArraySlot1[k3]\r\n                         array[q+1] = remainderArraySlot1[k3]\r\n                 }else{\r\n                     if(remainderArraySlot1[k3] != undefined){\r\n                         insertedDataElective100_Slot2_2.push(remainderArraySlot1[k3])\r\n                     }\r\n                 }\r\n                 k3++   \r\n             }\r\n         }\r\n    \r\n    \r\n         //console.log(remainderArray);\r\n         for(let x = 0; x< array.length; x++){\r\n                 if(array[x] == 100 && array[x+1] ==100 ){\r\n                     if(k2 < remainderArray.length){\r\n                         const c = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[c]\r\n                         array[x+1] = array[c+1]\r\n                         array[c] = remainderArray[k2]\r\n                         array[c+1] = remainderArray[k2]\r\n                     }\r\n                     try{\r\n                         let slot2 = remainderArray[k2][10]\r\n                         if(slot2 == 1){\r\n                             insertedDataElective100_Slot2_1.push(remainderArray[k2])\r\n                         }\r\n                         if(slot2 == 2){\r\n                             insertedDataElective100_Slot2_2.push(remainderArray[k2])\r\n                         }\r\n                     }catch{}\r\n                 k2++   \r\n             }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                 if(k2 < remainderArray.length){\r\n                     const b = Math.floor(Math.random()*(x+1));\r\n                     array[x] = array[b]\r\n                     array[x+1] = array[b+1]\r\n                     array[b] = remainderArray[k2]\r\n                     array[b+1] = remainderArray[k2]\r\n                 }\r\n                 try{\r\n                     let slot2 = remainderArray[k2][10]\r\n                     if(slot2 == 1){\r\n                         insertedDataElective100_Slot2_1.push(remainderArray[k2])\r\n                     }\r\n                     if(slot2 == 2){\r\n                         insertedDataElective100_Slot2_2.push(remainderArray[k2])\r\n                     }\r\n                 }catch{}\r\n             k2++   \r\n         }\r\n         }\r\n    \r\n         //if there is array in -1, reslot in into the array\r\n         for(let x =0; x<array.length; x++){\r\n             if(array[x] == 0){\r\n                 array[x] = 100\r\n             }\r\n         }\r\n         if(array[-1] != undefined){\r\n             insertedDataElective100_Slot2_1.push(array[-1]);\r\n             // array[-1] = undefined\r\n         }\r\n    \r\n        return array;\r\n    }\r\n    var AntArrInsElective100 = AntAlgoInsertElective100(AntArrElective100);\r\n    \r\n    const checkAmountDataElective100B = (array) => {\r\n     let count = 0\r\n     for(let i = 0; i < array.length; i++){\r\n             if(array[i] != 100 && array[i] !=100 && array[i] != 0 && array[i] != undefined){\r\n                 count += 1\r\n             }\r\n     }\r\n     return count\r\n     }\r\n     var checkAmountB = checkAmountDataElective100B(AntArrInsElective100)\r\n    \r\n    \r\n     const slot2Equal1forElective100 = (array) => {\r\n         let k = 0;\r\n         let test2 = []\r\n         //console.log(insertedDataElective100_Slot2_1)\r\n         \r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100){\r\n                 if(k < insertedDataElective100_Slot2_1.length){\r\n                     array[x] = insertedDataElective100_Slot2_1[k]\r\n                 }\r\n             k++   \r\n             }\r\n         }\r\n         //console.log(test2)\r\n         return array;\r\n     }\r\n     slot2Equal1forElective100(AntArrElective100);\r\n    \r\n    \r\n     const slot2Equal2forElective100 = (array) => {\r\n         let k = 0;\r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k < insertedDataElective100_Slot2_2.length){\r\n                     const q = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[q]\r\n                         array[x+1] = array[q+1]\r\n                         array[q] = insertedDataElective100_Slot2_2[k]\r\n                         array[q+1] = insertedDataElective100_Slot2_2[k]\r\n                 }else{\r\n                     if(insertedDataElective100_Slot2_2[k] != undefined){\r\n                         extraDataElective100_Slot2_2.push(insertedDataElective100_Slot2_2[k])\r\n                     }\r\n                 }\r\n                 k++   \r\n             }\r\n         }\r\n    \r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k < extraDataElective100_Slot2_2.length){\r\n                     array[x] = extraDataElective100_Slot2_2[k]\r\n                     array[x+1] = extraDataElective100_Slot2_2[k]\r\n                 }\r\n             k++   \r\n             }\r\n         }\r\n         return array;\r\n    }\r\n     slot2Equal2forElective100(AntArrElective100);\r\n    \r\n    const checkAmountDataElective100 = (array) => {\r\n        let count = 0\r\n        for(let i = 0; i < array.length; i++){\r\n                if(array[i] != 100 && array[i] !=100 && array[i] != 0 && array[i] != undefined){\r\n                    count += 1\r\n                }\r\n        }\r\n        return count\r\n    }\r\n    var checkAmountElective100 = checkAmountDataElective100(AntArrInsElective100)\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 100 but less than 200\r\n\r\n    //create 1d array for dataset 200\r\n    const array1DElective200 = (data) => {\r\n        var result = []\r\n    \r\n        for(let i = 0; i< data; i++){\r\n            result[i]= 100;\r\n        }\r\n        return result;\r\n    }\r\n    var AntArrElective200 = array1DElective200(DataArrayElective200);\r\n    \r\n    let extraDataElective200_Slot2_2 = []\r\n    let extraData200Elective_Slot2_1 = []\r\n    let insertedDataElective200_Slot2_2 = []\r\n    let insertedDataElective200_Slot2_1= []\r\n    \r\n    const AntAlgoInsertElective200 = (array) => {\r\n        let test = []\r\n        let k = 0;\r\n        let k2 =0\r\n        let k3 =0\r\n    \r\n        let remainderArray = []\r\n        let remainderArraySlot1 = []\r\n    \r\n        let totalRoom = array.length / 38\r\n    \r\n        for(let x=0; x<filterDataElective200.length;x++){\r\n            test.push(filterDataElective200[x]);\r\n        }\r\n    \r\n         for(let i = array.length-1;i>0;i--){\r\n             if(k < test.length){\r\n             let hourMS = test[k][7]\r\n             let slot1 = test[k][9]\r\n             let slot2 = test[k][10]\r\n    \r\n             if(hourMS == 4){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    //slot in slot1 = 2\r\n                    if(array[i-1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        \r\n                        // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                             array[j+38*b] = 0         \r\n                             array[j+38*b-1] = 0\r\n                         }\r\n                         if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                             array[j-38*b] = 0         \r\n                             array[j-38*b-1] = 0\r\n                         }\r\n                        }\r\n                        const z = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[z];\r\n                                array[i-1] = array[z-1];\r\n                                array[i] = test[k];\r\n                                array[i-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100 ){\r\n                                 array[i] = array[z];\r\n                                 array[i+1] = array[z+1];\r\n                                 array[z] = test[k];\r\n                                 array[z+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                         }\r\n                         //revert back to 100\r\n                         for(let x =0; x<array.length; x++){\r\n                             if(array[x] == 0){\r\n                                 array[x] = 100\r\n                             }\r\n                         }\r\n                    }\r\n                    //slot in slot1 = 2\r\n                    else if(array[i+1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        \r\n                         // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                             array[j+38*b] = 0         \r\n                             array[j+38*b-1] = 0\r\n                         }\r\n                         if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                             array[j-38*b] = 0         \r\n                             array[j-38*b-1] = 0\r\n                         }\r\n                        }\r\n                        const v = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[v];\r\n                                array[i-1] = array[v-1];\r\n                                array[v] = test[k];\r\n                                array[v-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100){\r\n                                 array[i] = array[v];\r\n                                 array[i+1] = array[v+1];\r\n                                 array[v] = test[k];\r\n                                 array[v+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                         }\r\n                         //revert back to 100\r\n                         for(let x =0; x<array.length; x++){\r\n                             if(array[x] == 0){\r\n                                 array[x] = 100\r\n                             }\r\n                         }\r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                    \r\n                }\r\n             }\r\n    \r\n             else if(hourMS == 3){\r\n                 const j = Math.floor(Math.random()*(i+1));\r\n                 if(array[i] == 100){\r\n                     if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[i-1] = array[j-1];\r\n                         array[i+1] = array[j+1];\r\n                         array[j] = test[k];\r\n                         array[j-1] = test[k];\r\n                         array[j+1] = test[k];\r\n                         \r\n                     }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[i-1] = array[j-1];\r\n                         array[j] = test[k];\r\n                         array[j-1] = test[k];\r\n                         insertedDataElective200_Slot2_1.push(test[k])\r\n                         \r\n                     }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[i+1] = array[j+1];\r\n                         array[j] = test[k];\r\n                         array[j+1] = test[k];\r\n                         insertedDataElective200_Slot2_1.push(test[k])\r\n                         \r\n                     }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[j] = test[k];\r\n                         remainderArraySlot1.push(test[k])\r\n                         \r\n                     }\r\n                 }else{\r\n                     remainderArray.push(test[k]);\r\n                     \r\n                 }\r\n                 }\r\n    \r\n              else if(hourMS == 2){\r\n                 const j = Math.floor(Math.random()*(i+1));\r\n                 if(array[i] == 100){\r\n                     if(array[i-1] == 100 ){\r\n                         array[i] = array[j];\r\n                         array[i-1] = array[j-1];\r\n                         array[j] = test[k];\r\n                         array[j-1] = test[k];\r\n                         \r\n                     }else if(array[i+1] == 100){\r\n                         array[i] = array[j];\r\n                         array[i+1] = array[j+1];\r\n                         array[j] = test[k];\r\n                         array[j+1] = test[k];\r\n                         \r\n                     }\r\n                     else{\r\n                         remainderArray.push(test[k]);\r\n                         \r\n                     }\r\n                 }else{\r\n                     remainderArray.push(test[k]);\r\n                 }\r\n                 }\r\n             }\r\n             k++  \r\n         }\r\n         //console.log(remainderArraySlot1);\r\n         //for(let x = 0; x < remainderArraySlot1.length; x++){\r\n         for(let z =0; z< array.length; z++){\r\n             for(let x = 0; x < remainderArraySlot1.length; x++){\r\n                 if(array[z] == remainderArraySlot1[x]){\r\n                     for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[z+38*b]==100 && array[z+38*b-1]==100){\r\n                             array[z+38*b] = 0         \r\n                             array[z+38*b-1] = 0\r\n                         }\r\n                         if( array[z-38*b]==100 && array[z-38*b-1]==100){\r\n                             array[z-38*b] = 0         \r\n                             array[z-38*b-1] = 0\r\n                         }\r\n                        }\r\n                 }\r\n             }\r\n         }\r\n    \r\n         //fullfill the slot 3\r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] == 100){\r\n                 if(k3 < remainderArraySlot1.length){\r\n                     const q = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[q]\r\n                         array[x+1] = array[q+1]\r\n                         array[q] = remainderArraySlot1[k3]\r\n                         array[q+1] = remainderArraySlot1[k3]\r\n                 }else{\r\n                     if(remainderArraySlot1[k3] != undefined){\r\n                         insertedDataElective200_Slot2_2.push(remainderArraySlot1[k3])\r\n                     }\r\n                 }\r\n                 k3++   \r\n             }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                 if(k3 < remainderArraySlot1.length){\r\n                     const q = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[q]\r\n                         array[x+1] = array[q+1]\r\n                         array[q] = remainderArraySlot1[k3]\r\n                         array[q+1] = remainderArraySlot1[k3]\r\n                 }else{\r\n                     if(remainderArraySlot1[k3] != undefined){\r\n                         insertedDataElective200_Slot2_2.push(remainderArraySlot1[k3])\r\n                     }\r\n                 }\r\n                 k3++   \r\n             }\r\n         }\r\n    \r\n    \r\n         //console.log(remainderArray);\r\n         for(let x = 0; x< array.length; x++){\r\n                 if(array[x] == 100 && array[x+1] ==100 ){\r\n                     if(k2 < remainderArray.length){\r\n                         const c = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[c]\r\n                         array[x+1] = array[c+1]\r\n                         array[c] = remainderArray[k2]\r\n                         array[c+1] = remainderArray[k2]\r\n                     }\r\n                     try{\r\n                         let slot2 = remainderArray[k2][10]\r\n                         if(slot2 == 1){\r\n                             insertedDataElective200_Slot2_1.push(remainderArray[k2])\r\n                         }\r\n                         if(slot2 == 2){\r\n                             insertedDataElective200_Slot2_2.push(remainderArray[k2])\r\n                         }\r\n                     }catch{}\r\n                 k2++   \r\n             }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                 if(k2 < remainderArray.length){\r\n                     const b = Math.floor(Math.random()*(x+1));\r\n                     array[x] = array[b]\r\n                     array[x+1] = array[b+1]\r\n                     array[b] = remainderArray[k2]\r\n                     array[b+1] = remainderArray[k2]\r\n                 }\r\n                 try{\r\n                     let slot2 = remainderArray[k2][10]\r\n                     if(slot2 == 1){\r\n                         insertedDataElective200_Slot2_1.push(remainderArray[k2])\r\n                     }\r\n                     if(slot2 == 2){\r\n                         insertedDataElective200_Slot2_2.push(remainderArray[k2])\r\n                     }\r\n                 }catch{}\r\n             k2++   \r\n         }\r\n         }\r\n    \r\n         //if there is array in -1, reslot in into the array\r\n         for(let x =0; x<array.length; x++){\r\n             if(array[x] == 0){\r\n                 array[x] = 100\r\n             }\r\n         }\r\n         if(array[-1] != undefined){\r\n             insertedDataElective200_Slot2_1.push(array[-1]);\r\n             // array[-1] = undefined\r\n         }\r\n    \r\n        return array;\r\n    }\r\n    var AntArrInsElective200 = AntAlgoInsertElective200(AntArrElective200);\r\n    \r\n    const checkAmountDataElective200B = (array) => {\r\n     let count = 0\r\n     for(let i = 0; i < array.length; i++){\r\n             if(array[i] != 100 && array[i] !=200 && array[i] != 0 && array[i] != undefined){\r\n                 count += 1\r\n             }\r\n     }\r\n     return count\r\n     }\r\n     var checkAmountB = checkAmountDataElective200B(AntArrInsElective200)\r\n    \r\n    \r\n     const slot2Equal1forElective200 = (array) => {\r\n         let k = 0;\r\n         let test2 = []\r\n         //console.log(insertedDataElective200_Slot2_1)\r\n         \r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100){\r\n                 if(k < insertedDataElective200_Slot2_1.length){\r\n                     array[x] = insertedDataElective200_Slot2_1[k]\r\n                 }\r\n             k++   \r\n             }\r\n         }\r\n         //console.log(test2)\r\n         return array;\r\n     }\r\n     slot2Equal1forElective200(AntArrElective200);\r\n    \r\n    \r\n     const slot2Equal2forElective200 = (array) => {\r\n         let k = 0;\r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k < insertedDataElective200_Slot2_2.length){\r\n                     const q = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[q]\r\n                         array[x+1] = array[q+1]\r\n                         array[q] = insertedDataElective200_Slot2_2[k]\r\n                         array[q+1] = insertedDataElective200_Slot2_2[k]\r\n                 }else{\r\n                     if(insertedDataElective200_Slot2_2[k] != undefined){\r\n                         extraDataElective200_Slot2_2.push(insertedDataElective200_Slot2_2[k])\r\n                     }\r\n                 }\r\n                 k++   \r\n             }\r\n         }\r\n    \r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k < extraDataElective200_Slot2_2.length){\r\n                     array[x] = extraDataElective200_Slot2_2[k]\r\n                     array[x+1] = extraDataElective200_Slot2_2[k]\r\n                 }\r\n             k++   \r\n             }\r\n         }\r\n         return array;\r\n    }\r\n     slot2Equal2forElective200(AntArrElective200);\r\n    \r\n    const checkAmountDataElective200 = (array) => {\r\n        let count = 0\r\n        for(let i = 0; i < array.length; i++){\r\n                if(array[i] != 100 && array[i] !=200 && array[i] != 0 && array[i] != undefined){\r\n                    count += 1\r\n                }\r\n        }\r\n        return count\r\n    }\r\n    var checkAmountElective200 = checkAmountDataElective200(AntArrInsElective200)\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 200 \r\n\r\n    //create 1d array for dataset 500\r\n    const array1DElective500 = (data) => {\r\n        var result = []\r\n    \r\n        for(let i = 0; i< data; i++){\r\n            result[i]= 100;\r\n        }\r\n        return result;\r\n    }\r\n    var AntArrElective500 = array1DElective500(DataArrayElective500);\r\n    \r\n    let extraDataElective500_Slot2_2 = []\r\n    let extraData500Elective_Slot2_1 = []\r\n    let insertedDataElective500_Slot2_2 = []\r\n    let insertedDataElective500_Slot2_1= []\r\n    \r\n    const AntAlgoInsertElective500 = (array) => {\r\n        let test = []\r\n        let k = 0;\r\n        let k2 =0\r\n        let k3 =0\r\n    \r\n        let remainderArray = []\r\n        let remainderArraySlot1 = []\r\n    \r\n        let totalRoom = array.length / 38\r\n    \r\n        for(let x=0; x<filterDataElective500.length;x++){\r\n            test.push(filterDataElective500[x]);\r\n        }\r\n    \r\n         for(let i = array.length-1;i>0;i--){\r\n             if(k < test.length){\r\n             let hourMS = test[k][7]\r\n             let slot1 = test[k][9]\r\n             let slot2 = test[k][10]\r\n    \r\n             if(hourMS == 4){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    //slot in slot1 = 2\r\n                    if(array[i-1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        \r\n                        // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                             array[j+38*b] = 0         \r\n                             array[j+38*b-1] = 0\r\n                         }\r\n                         if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                             array[j-38*b] = 0         \r\n                             array[j-38*b-1] = 0\r\n                         }\r\n                        }\r\n                        const z = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[z];\r\n                                array[i-1] = array[z-1];\r\n                                array[i] = test[k];\r\n                                array[i-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100 ){\r\n                                 array[i] = array[z];\r\n                                 array[i+1] = array[z+1];\r\n                                 array[z] = test[k];\r\n                                 array[z+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                         }\r\n                         //revert back to 100\r\n                         for(let x =0; x<array.length; x++){\r\n                             if(array[x] == 0){\r\n                                 array[x] = 100\r\n                             }\r\n                         }\r\n                    }\r\n                    //slot in slot1 = 2\r\n                    else if(array[i+1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        \r\n                         // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                             array[j+38*b] = 0         \r\n                             array[j+38*b-1] = 0\r\n                         }\r\n                         if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                             array[j-38*b] = 0         \r\n                             array[j-38*b-1] = 0\r\n                         }\r\n                        }\r\n                        const v = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[v];\r\n                                array[i-1] = array[v-1];\r\n                                array[v] = test[k];\r\n                                array[v-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100){\r\n                                 array[i] = array[v];\r\n                                 array[i+1] = array[v+1];\r\n                                 array[v] = test[k];\r\n                                 array[v+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                         }\r\n                         //revert back to 100\r\n                         for(let x =0; x<array.length; x++){\r\n                             if(array[x] == 0){\r\n                                 array[x] = 100\r\n                             }\r\n                         }\r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                    \r\n                }\r\n             }\r\n    \r\n             else if(hourMS == 3){\r\n                 const j = Math.floor(Math.random()*(i+1));\r\n                 if(array[i] == 100){\r\n                     if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[i-1] = array[j-1];\r\n                         array[i+1] = array[j+1];\r\n                         array[j] = test[k];\r\n                         array[j-1] = test[k];\r\n                         array[j+1] = test[k];\r\n                         \r\n                     }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[i-1] = array[j-1];\r\n                         array[j] = test[k];\r\n                         array[j-1] = test[k];\r\n                         insertedDataElective500_Slot2_1.push(test[k])\r\n                         \r\n                     }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[i+1] = array[j+1];\r\n                         array[j] = test[k];\r\n                         array[j+1] = test[k];\r\n                         insertedDataElective500_Slot2_1.push(test[k])\r\n                         \r\n                     }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[j] = test[k];\r\n                         remainderArraySlot1.push(test[k])\r\n                         \r\n                     }\r\n                 }else{\r\n                     remainderArray.push(test[k]);\r\n                     \r\n                 }\r\n                 }\r\n    \r\n              else if(hourMS == 2){\r\n                 const j = Math.floor(Math.random()*(i+1));\r\n                 if(array[i] == 100){\r\n                     if(array[i-1] == 100 ){\r\n                         array[i] = array[j];\r\n                         array[i-1] = array[j-1];\r\n                         array[j] = test[k];\r\n                         array[j-1] = test[k];\r\n                         \r\n                     }else if(array[i+1] == 100){\r\n                         array[i] = array[j];\r\n                         array[i+1] = array[j+1];\r\n                         array[j] = test[k];\r\n                         array[j+1] = test[k];\r\n                         \r\n                     }\r\n                     else{\r\n                         remainderArray.push(test[k]);\r\n                         \r\n                     }\r\n                 }else{\r\n                     remainderArray.push(test[k]);\r\n                 }\r\n                 }\r\n             }\r\n             k++  \r\n         }\r\n         //console.log(remainderArraySlot1);\r\n         //for(let x = 0; x < remainderArraySlot1.length; x++){\r\n         for(let z =0; z< array.length; z++){\r\n             for(let x = 0; x < remainderArraySlot1.length; x++){\r\n                 if(array[z] == remainderArraySlot1[x]){\r\n                     for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[z+38*b]==100 && array[z+38*b-1]==100){\r\n                             array[z+38*b] = 0         \r\n                             array[z+38*b-1] = 0\r\n                         }\r\n                         if( array[z-38*b]==100 && array[z-38*b-1]==100){\r\n                             array[z-38*b] = 0         \r\n                             array[z-38*b-1] = 0\r\n                         }\r\n                        }\r\n                 }\r\n             }\r\n         }\r\n    \r\n         //fullfill the slot 3\r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] == 100){\r\n                 if(k3 < remainderArraySlot1.length){\r\n                     const q = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[q]\r\n                         array[x+1] = array[q+1]\r\n                         array[q] = remainderArraySlot1[k3]\r\n                         array[q+1] = remainderArraySlot1[k3]\r\n                 }else{\r\n                     if(remainderArraySlot1[k3] != undefined){\r\n                         insertedDataElective500_Slot2_2.push(remainderArraySlot1[k3])\r\n                     }\r\n                 }\r\n                 k3++   \r\n             }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                 if(k3 < remainderArraySlot1.length){\r\n                     const q = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[q]\r\n                         array[x+1] = array[q+1]\r\n                         array[q] = remainderArraySlot1[k3]\r\n                         array[q+1] = remainderArraySlot1[k3]\r\n                 }else{\r\n                     if(remainderArraySlot1[k3] != undefined){\r\n                         insertedDataElective500_Slot2_2.push(remainderArraySlot1[k3])\r\n                     }\r\n                 }\r\n                 k3++   \r\n             }\r\n         }\r\n    \r\n    \r\n         //console.log(remainderArray);\r\n         for(let x = 0; x< array.length; x++){\r\n                 if(array[x] == 100 && array[x+1] ==100 ){\r\n                     if(k2 < remainderArray.length){\r\n                         const c = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[c]\r\n                         array[x+1] = array[c+1]\r\n                         array[c] = remainderArray[k2]\r\n                         array[c+1] = remainderArray[k2]\r\n                     }\r\n                     try{\r\n                         let slot2 = remainderArray[k2][10]\r\n                         if(slot2 == 1){\r\n                             insertedDataElective500_Slot2_1.push(remainderArray[k2])\r\n                         }\r\n                         if(slot2 == 2){\r\n                             insertedDataElective500_Slot2_2.push(remainderArray[k2])\r\n                         }\r\n                     }catch{}\r\n                 k2++   \r\n             }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                 if(k2 < remainderArray.length){\r\n                     const b = Math.floor(Math.random()*(x+1));\r\n                     array[x] = array[b]\r\n                     array[x+1] = array[b+1]\r\n                     array[b] = remainderArray[k2]\r\n                     array[b+1] = remainderArray[k2]\r\n                 }\r\n                 try{\r\n                     let slot2 = remainderArray[k2][10]\r\n                     if(slot2 == 1){\r\n                         insertedDataElective500_Slot2_1.push(remainderArray[k2])\r\n                     }\r\n                     if(slot2 == 2){\r\n                         insertedDataElective500_Slot2_2.push(remainderArray[k2])\r\n                     }\r\n                 }catch{}\r\n             k2++   \r\n         }\r\n         }\r\n    \r\n         //if there is array in -1, reslot in into the array\r\n         for(let x =0; x<array.length; x++){\r\n             if(array[x] == 0){\r\n                 array[x] = 100\r\n             }\r\n         }\r\n         if(array[-1] != undefined){\r\n             insertedDataElective500_Slot2_1.push(array[-1]);\r\n             // array[-1] = undefined\r\n         }\r\n    \r\n        return array;\r\n    }\r\n    var AntArrInsElective500 = AntAlgoInsertElective500(AntArrElective500);\r\n    \r\n    const checkAmountDataElective500B = (array) => {\r\n     let count = 0\r\n     for(let i = 0; i < array.length; i++){\r\n             if(array[i] != 100 && array[i] !=500 && array[i] != 0 && array[i] != undefined){\r\n                 count += 1\r\n             }\r\n     }\r\n     return count\r\n     }\r\n     var checkAmountB = checkAmountDataElective500B(AntArrInsElective500)\r\n    \r\n    \r\n     const slot2Equal1forElective500 = (array) => {\r\n         let k = 0;\r\n         let test2 = []\r\n         //console.log(insertedDataElective500_Slot2_1)\r\n         \r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100){\r\n                 if(k < insertedDataElective500_Slot2_1.length){\r\n                     array[x] = insertedDataElective500_Slot2_1[k]\r\n                 }\r\n             k++   \r\n             }\r\n         }\r\n         //console.log(test2)\r\n         return array;\r\n     }\r\n     slot2Equal1forElective500(AntArrElective500);\r\n    \r\n    \r\n     const slot2Equal2forElective500 = (array) => {\r\n         let k = 0;\r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k < insertedDataElective500_Slot2_2.length){\r\n                     const q = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[q]\r\n                         array[x+1] = array[q+1]\r\n                         array[q] = insertedDataElective500_Slot2_2[k]\r\n                         array[q+1] = insertedDataElective500_Slot2_2[k]\r\n                 }else{\r\n                     if(insertedDataElective500_Slot2_2[k] != undefined){\r\n                         extraDataElective500_Slot2_2.push(insertedDataElective500_Slot2_2[k])\r\n                     }\r\n                 }\r\n                 k++   \r\n             }\r\n         }\r\n    \r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k < extraDataElective500_Slot2_2.length){\r\n                     array[x] = extraDataElective500_Slot2_2[k]\r\n                     array[x+1] = extraDataElective500_Slot2_2[k]\r\n                 }\r\n             k++   \r\n             }\r\n         }\r\n         return array;\r\n    }\r\n     slot2Equal2forElective500(AntArrElective500);\r\n    \r\n    const checkAmountDataElective500 = (array) => {\r\n        let count = 0\r\n        for(let i = 0; i < array.length; i++){\r\n                if(array[i] != 100 && array[i] !=500 && array[i] != 0 && array[i] != undefined){\r\n                    count += 1\r\n                }\r\n        }\r\n        return count\r\n    }\r\n    var checkAmountElective500 = checkAmountDataElective500(AntArrInsElective500)\r\n\r\n\r\n//---------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n//---------------------------------------------------------------------------------------------------------------------------------------------\r\n//----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nlet combineData = []\r\nlet combineElectiveData = []\r\n\r\n//Combine all dataset\r\nconst combine = (data1,data2,data3,data4)  => {\r\n    for(let i = 0; i < data1.length; i++){\r\n        combineData.push(data1[i])\r\n    }\r\n    for(let i = 0; i < data2.length; i++){\r\n        combineData.push(data2[i])\r\n    }\r\n    for(let i = 0; i < data3.length; i++){\r\n        combineData.push(data3[i])\r\n    }\r\n    for(let i = 0; i < data4.length; i++){\r\n        combineData.push(data4[i])\r\n    }\r\n    return combineData;\r\n}\r\nlet dataCombine = combine(AntArr50,AntArr100,AntArr200,AntArr500)\r\n\r\n\r\n\r\n//combine elective data\r\nconst combineElective = (data1,data2,data3,data4)  => {\r\n    for(let i = 0; i < data1.length; i++){\r\n        combineElectiveData.push(data1[i])\r\n    }\r\n    for(let i = 0; i < data2.length; i++){\r\n        combineElectiveData.push(data2[i])\r\n    }\r\n    for(let i = 0; i < data3.length; i++){\r\n        combineElectiveData.push(data3[i])\r\n    }\r\n    for(let i = 0; i < data4.length; i++){\r\n        combineElectiveData.push(data4[i])\r\n    }\r\n    return combineElectiveData;\r\n}\r\nlet dataCombineElective = combineElective(AntArrElective50,AntArrElective100,AntArrElective200,AntArrElective500)\r\n//console.log(dataCombine)\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n// Hard Constraint \r\n// H1: No student attend more than one class/ event at the same time\r\n// H2: The room is large enough to accomodate all of the student in attendace while also meeting the requirement \r\n// H3: At any given time, each room can onle have one course booked\r\n// H4: No student attend class during 12:00 pm -2:00 due to solat jumaat\r\n// H5: One teacher can only teach one class at one time.\r\n\r\n//Check for the H1 violation: same group attend more than 1 class at 1 time\r\n\r\nconst check1Group = (array) => {\r\n   let count =0\r\n   let indexArray = 0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       indexArray = (x * 37)\r\n   }\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       try{\r\n           //for(let x= 1 ; x <= totalRoom ; x++){\r\n            for(let i = 0; i<array.length ; i++){\r\n               indexArray = (x * 37)\r\n               if(array[i+indexArray] != 100 && array[i+indexArray] != undefined ){\r\n                   try{\r\n                       //if(array[i][6] == array[i+indexArray][6] && array[i+1][6] == array[i+indexArray+1][6] && array[i][5] == array[i+indexArray][5] && array[i+1][5] == array[i+indexArray+1][5]){\r\n                       if(array[i][6] == array[i+indexArray][6] && array[i][5] == array[i+indexArray][5]){\r\n                            try{\r\n                                //console.log(array[i])\r\n                                //console.log(array[i+indexArray])\r\n                                count +=1\r\n                            }catch{}\r\n                       }\r\n                   }catch{}\r\n               }   \r\n           }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n}\r\n\r\nvar checkH1_ALL = check1Group(dataCombine)\r\nvar checkH1_ALLElective = check1Group(dataCombineElective)\r\n// console.log(\"H1 All: \"+checkH1_ALL)\r\n// console.log(\"H1 Elective: \"+checkH1_ALLElective)\r\nvar checkH1_50 = check1Group(AntArr50)\r\nconsole.log(\"HS1 50: \" + checkH1_50);\r\n\r\n\r\n\r\n\r\n//Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\r\n\r\nconst checkRoomQuota = (array) => {\r\n   let count = 0\r\n   return count \r\n}\r\nvar checkH2_ALL = checkRoomQuota(dataCombine)\r\nvar checkH2_ALLElective = checkRoomQuota(dataCombineElective)\r\n\r\n\r\n//Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\r\nconst checkSolatJummat = (array) => {\r\n   let count = 0\r\n   return count \r\n}\r\nvar checkH4_ALL = checkSolatJummat(dataCombine)\r\nvar checkH4_ALLElective = checkSolatJummat(dataCombineElective)\r\n\r\n//Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\r\n\r\nconst check1Teacher = (array) => {\r\n   let count =0\r\n   let indexArray = 0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n    indexArray = (x * 38)\r\n       try{\r\n        for(let i = 1; i<array.length ; i++){\r\n               if(array[i+indexArray] != 100 && array[i+indexArray] != undefined ){\r\n                   try{\r\n                       if(array[i][5] == array[i+indexArray][5]){\r\n                           count +=1\r\n                        }\r\n                   }catch{}\r\n               }    \r\n           }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n\r\n}\r\nvar checkH5_ALL = check1Teacher(dataCombine)\r\nvar checkH5_ALLElective = check1Group(dataCombineElective)\r\nvar checkH5_50 = check1Teacher(AntArr50)\r\nconsole.log(\"HS5 50: \" + checkH5_50);\r\n// console.log(\"H5 All: \"+checkH5_ALL)\r\n// console.log(\"H5 Elective: \"+checkH5_ALLElective)\r\n\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n// Soft Constraint \r\n// S1: A student has a class schedule toward the end of the day\r\n// S2: A student have more than two class in a row\r\n\r\n\r\n//Check for the S1 violation: student have class at the end of the day\r\nconst checkEndOfClass = (array) => {\r\n   let count =0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       let indexArray = (x * 37)\r\n       if(array[indexArray] != 100 ){\r\n           count = 1\r\n       }\r\n   }\r\n   return count\r\n\r\n}\r\nvar checkS1_50 = checkEndOfClass(AntArr50)\r\nvar checkS1_100 = checkEndOfClass(AntArr100)\r\nvar checkS1_200 = checkEndOfClass(AntArr200)\r\nvar checkS1_500 = checkEndOfClass(AntArr500)\r\nvar checkS1_Elective50 = checkEndOfClass(AntArrElective50)\r\nvar checkS1_Elective100 = checkEndOfClass(AntArrElective100)\r\nvar checkS1_Elective200 = checkEndOfClass(AntArrElective200)\r\nvar checkS1_Elective500 = checkEndOfClass(AntArrElective500)\r\n\r\n\r\n//Check for the S2 violation: teacher have 2 class in a row\r\n\r\nconst check2ClassInARow = (array) => {\r\n   let count =0\r\n   for(let i = 0; i < array.length; i++){\r\n       try{\r\n        if(array[i][5] != undefined && array[i+3][5] != undefined && array[i+2][5] != undefined && array[i+4][5] != undefined){\r\n            if(array[i][5] == array[i+3][5] && array[i+2][5] == array[i+4][5]){\r\n                count = 1\r\n            }\r\n       }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n}\r\nvar checkS2_50 = check2ClassInARow(AntArr50)\r\nvar checkS2_100 = check2ClassInARow(AntArr100)\r\nvar checkS2_200 = check2ClassInARow(AntArr200)\r\nvar checkS2_500 = check2ClassInARow(AntArr500)\r\nvar checkS2_Elective50 = check2ClassInARow(AntArrElective50)\r\nvar checkS2_Elective100 = check2ClassInARow(AntArrElective100)\r\nvar checkS2_Elective200 = check2ClassInARow(AntArrElective200)\r\nvar checkS2_Elective500 = check2ClassInARow(AntArrElective500)\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n//Check total Hard Constraint\r\n\r\nconst checkTotalHardContraint = () => {\r\n   let count =0\r\n   let totalH1 = checkH1_ALL\r\n   let totalH2 = checkH2_ALL\r\n   let totalH4 = checkH4_ALL\r\n   let totalH5 = checkH5_ALL\r\n\r\n   let totalH1_Elective = checkH1_ALLElective\r\n   let totalH2_Elective = checkH2_ALLElective\r\n   let totalH4_Elective = checkH4_ALLElective\r\n   let totalH5_Elective = checkH5_ALLElective\r\n   let totalHC = totalH1 + totalH2 + totalH4 + totalH5 + totalH1_Elective + totalH2_Elective + totalH4_Elective + totalH5_Elective\r\n   //let totalHC = totalH1 + totalH2 + totalH4 + totalH5 \r\n\r\n   if( totalHC != 0){\r\n       count +=1\r\n   }   \r\n\r\n   return count\r\n}\r\nvar checkTotalHardContraints = checkTotalHardContraint()\r\n//console.log(\"Total Hard Constraint: \"+checkTotalHardContraints)\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nconst checkTotalSoftContraint = () => {\r\n    let count =0\r\n    let totalS1 = checkS1_50 + checkS1_100 + checkS1_200 + checkS1_500 + checkS1_Elective50 + checkS1_Elective100 + checkS1_Elective200 + checkS1_Elective500\r\n    let totalS2 = checkS2_50 + checkS2_100 + checkS2_200 + checkS2_500 + checkS2_Elective50 + checkS2_Elective100 + checkS2_Elective200 + checkS2_Elective500\r\n    \r\n    if(totalS1 != 0){\r\n        count +=1\r\n    }\r\n    if(totalS2 != 0){\r\n        count +=1\r\n    }   \r\n    return count\r\n}\r\nvar checkTotalSoftContraints = checkTotalSoftContraint()\r\n//console.log(\"Total Soft Constraint: \"+checkTotalSoftContraints)\r\n//----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nconst change100ToEmpty = (data) => {\r\n    for(let i = 0; i< data.length; i++){\r\n        if(data[i] == 100){\r\n            data[i] = [];\r\n        }\r\n    }\r\n    return data;\r\n}\r\nlet finalData = change100ToEmpty(combineData)\r\n\r\nconst change100ToEmptyElective = (data) => {\r\n    for(let i = 0; i< data.length; i++){\r\n        if(data[i] == 100){\r\n            data[i] = [];\r\n        }\r\n    }\r\n    return data;\r\n}\r\nlet finalDataElective = change100ToEmptyElective(combineElectiveData)\r\n\r\n\r\nconst checkMissingData = (data50,data100,data200,data500,dataE50,dataE100,dataE200,dataE500) => {\r\n    let countData = []\r\n    for(let i = 0; i< courseData[0].length;i++){\r\n        for(let j = 0; j <courseData[0][i][7]; j++){\r\n            countData.push(courseData[0][i]);\r\n        }\r\n    }\r\n\r\n    let totalGenerateScheduleData = data50 + data100 + data200 + data500 + dataE50 + dataE100 + dataE200 + dataE500\r\n\r\n    if(countData.length == totalGenerateScheduleData){\r\n  \r\n    }else{\r\n\r\n    }\r\n}\r\ncheckMissingData(checkAmount50,checkAmount100,checkAmount200,checkAmount500,checkAmountElective50,checkAmountElective100,checkAmountElective200,checkAmountElective500)\r\n\r\n\r\ncheckTotalHardContraintsAll = checkTotalHardContraints\r\ncheckTotalSoftContraintsAll = checkTotalSoftContraints\r\nfinalDataAll.push(finalData)\r\nfinalDataAllElective.push(finalDataElective)\r\nreturn {checkTotalHardContraints,checkTotalSoftContraints,finalData,finalDataAllElective}\r\n}\r\nlet antSystemAlgo = antSystem();\r\n// -------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nlet trigger = 0\r\n\r\nconst iteration = () => {\r\n        antSystem()\r\n        let globalBestHS = checkTotalHardContraintsAll \r\n        let globalBestSS = checkTotalSoftContraintsAll\r\n        let globalBestScehdule = finalDataAll[0]\r\n        let globalBestScehduleElective = finalDataAllElective[0]\r\n    for(let i= 1; i <= 1; i++){\r\n        antSystem()\r\n        let localBestHS = checkTotalHardContraintsAll \r\n        let localBestSS = checkTotalSoftContraintsAll\r\n        let localBestScehdule = finalDataAll[0]\r\n        let localBestScehduleElective = finalDataAllElective[0]\r\n            console.log(\"iteraion: \" + i)\r\n            if(globalBestHS > localBestHS ){\r\n                globalBestHS = localBestHS\r\n                globalBestSS = localBestSS\r\n                globalBestScehdule = localBestScehdule\r\n                globalBestScehduleElective = localBestScehduleElective\r\n            }\r\n            if(localBestHS == 0){\r\n                console.log(\"iteraion: \" + i)\r\n                console.log(\"workable solution is found\")\r\n                globalBestHS = localBestHS\r\n                globalBestSS = localBestSS\r\n                globalBestScehdule = localBestScehdule\r\n                globalBestScehduleElective = localBestScehduleElective\r\n                console.log(\"Workable Gloabal best HS: \"+globalBestHS)\r\n                console.log(\"Workable Gloabal best SS: \" +globalBestSS)\r\n                //console.log(finalDataAll[0])\r\n                trigger = 1\r\n                return [finalDataAll[0], finalDataAllElective[0]]\r\n            }\r\n            else if(localBestHS == 0 && localBestSS == 0){\r\n                console.log(\"iteraion: \" + i)\r\n                console.log(\"perfect solution is found\")\r\n                globalBestHS = localBestHS\r\n                globalBestSS = localBestSS\r\n                globalBestScehdule = localBestScehdule\r\n                console.log(\"Perfect Gloabal best HS: \"+globalBestHS)\r\n                console.log(\"Perfect Gloabal best SS: \" +globalBestSS)\r\n                console.log(finalDataAll[0])\r\n                trigger = 1\r\n                return [finalDataAll[0], finalDataAllElective[0]]\r\n            }\r\n    }\r\n    return [finalDataAll[0], finalDataAllElective[0]]\r\n}\r\nlet interations = iteration()\r\n\r\n\r\nif(trigger == 1){\r\n}else{\r\n    //alert(\"no workable solution found, please refersh until get workable solution\")\r\n}\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n        }\r\n    return(\r\n        <React.Fragment>\r\n            <h1>\r\n                Generate Schedule Page Heuristic Approach \r\n            </h1>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default HeuristicApproach;\r\n\r\n\r\n//result[i][j]=Course.splice(Math.floor(Math.random()* Course.length),1)[0] // create random placement of Course Value\r\n//const Schedule = new Array(10).fill(Array(5).fill(null));\r\n//console.log(Schedule);\r\n// const Course = [['TE1',4],['TE1',4],['TE1',4],['TE1',3],['TE1',4],['TE1',2],['TE1',4],['TE1',4],['TE1',4],['TE1',3]];\r\n//const Course = [['TE1',2],['TE2',2],['TE3',3],['TE4',4],['TE5',3],['TE6',4],['TE7',4],['TE8',2],['TE9',4]];\r\n//const Course = ['TE1','TE2','TE3','TE4','TE5','TE6','TE7','TE8','TE9'];"]},"metadata":{},"sourceType":"module"}