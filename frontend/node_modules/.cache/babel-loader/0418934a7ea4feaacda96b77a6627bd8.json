{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acit\\\\Desktop\\\\FYP Code\\\\FYP Code\\\\frontend\\\\src\\\\components\\\\RandomSchedule\\\\arraySchedule.js\";\nimport { concat, create, find, forEach, indexOf } from \"lodash\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport _ from 'lodash';\nimport { CSVLink } from \"react-csv\";\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\nlet finalDataAll = [];\nlet finalDataAllElective = [];\nlet checkHardConstraintOutsite = 0;\nlet checkSoftConstraintOutsite = 0;\n\nconst ArraySchedule = props => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedFile, setLoaadedFile] = useState(false);\n  const [roomData, setroomData] = useState();\n  const [courseData, setcourseData] = useState();\n  const [CsvData, setCsvData] = useState(); // const [Keys, setKeys] = useState();\n  //const [uploadedData, setUploadedData] = useState([]);\n  //console.log(\"props dataset:\"+ props.test)\n\n  const userId = useParams().userId;\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875'); //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\n        //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\n\n        const responsedata = await response.json();\n        let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset); // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\n\n        const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Room'], Dataset['Size']]); //Extract Room\n\n        setroomData([ertRoom]);\n        const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'], Dataset['Course Code'], Dataset['Course Name'], Dataset['Year'], Dataset['Semester'], Dataset['Lecturer'], Dataset['Group'], Dataset['HMS'], Dataset['Programme Code'], Dataset['Slot1'], Dataset['Slot2']]); //Extract Enrollment Quota\n\n        setcourseData([ertCourse]);\n\n        if (!response.ok) {\n          throw new Error(responsedata.message);\n        }\n\n        setLoaadedFile(stringifyData);\n        setIsLoading(true);\n      } catch (err) {\n        console.log(err.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, [userId]);\n\n  if (!isLoading && loadedFile) {\n    const testData = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const EnrollmentQuota = [];\n    const CourseCode = [];\n    const HMS = [];\n    const lecturerData = [];\n    const roomName = [];\n    const roomSize = [];\n    const filterData50 = [];\n    const filterData100 = [];\n    const filterData200 = [];\n    const filterData500 = [];\n    const filterDataElective50 = [];\n    const filterDataElective100 = [];\n    const filterDataElective200 = [];\n    const filterDataElective500 = [];\n    const dupeData = [];\n    const room = [];\n    room.push(roomData[0]);\n    let hardConstraintViolated = 0;\n    let softConstraintViolated = 0; //console.log(courseData[0][0][1]);\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      let enrollment = [courseData[0][i][0]];\n      let code = [courseData[0][i][1]];\n      let hms = [courseData[0][i][7]];\n      let lecturer = [courseData[0][i][5]];\n      enrollment.reduce(function (results, item, index, array) {\n        results[index] = item;\n        EnrollmentQuota.push(item); //console.log(results)\n      }, {});\n      code.reduce(function (results, item, index, array) {\n        results[index] = item;\n        CourseCode.push(item); //console.log(results)\n      }, {});\n      hms.reduce(function (results, item, index, array) {\n        results[index] = item;\n        HMS.push(item); //console.log(results)\n      }, {});\n      lecturer.reduce(function (results, item, index, array) {\n        results[index] = item;\n        lecturerData.push(item); //console.log(results)\n      }, {});\n    }\n\n    for (let i = 0; i < roomData[0].length; i++) {\n      let name = [roomData[0][i][0]];\n      let size = [roomData[0][i][1]];\n      name.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomName.push(item); //console.log(results)\n      }, {});\n      size.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomSize.push(item); //console.log(results)\n      }, {});\n    }\n\n    const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\n    const notDuplicatesLecturer = lecturerData.filter((item, index) => index == lecturerData.indexOf(item));\n    notDuplicatesLecturer.pop(); //console.log(notDuplicatesLecturer)\n\n    let courseDataXElective = [];\n    let courseDataWithElective = [];\n    courseData[0].pop(); //saparate faculty course with the elective course\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      if (courseData[0][i][1].slice(0, 3) != 'TMU') {\n        courseData[0][i].splice();\n\n        if (courseData[0][i][1].slice(0, 3) != 'TMX') {\n          courseData[0][i].splice();\n          courseDataXElective.push(courseData[0][i]);\n        }\n      }\n    } //saparate elective course with the faculty course\n\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      if (courseData[0][i][1].slice(0, 3) == 'TMU' || courseData[0][i][1].slice(0, 3) == 'TMX') {\n        courseDataWithElective.push(courseData[0][i]);\n      }\n    } //insert data without elective courses into correct room capacity\n\n\n    for (let i = 0; i < courseDataXElective.length; i++) {\n      if (courseDataXElective[i][0] < 50) {\n        filterData50.push(courseDataXElective[i]);\n      }\n\n      if (courseDataXElective[i][0] >= 50 && courseDataXElective[i][0] < 100) {\n        filterData100.push(courseDataXElective[i]);\n      }\n\n      if (courseDataXElective[i][0] >= 100 && courseDataXElective[i][0] < 200) {\n        filterData200.push(courseDataXElective[i]);\n      }\n\n      if (courseDataXElective[i][0] >= 200 && courseDataXElective[i][0] < 500) {\n        filterData500.push(courseDataXElective[i]);\n      }\n    } //console.log(filterData50)\n    //insert data without faculty courses into correct room capacity\n\n\n    for (let i = 0; i < courseDataWithElective.length; i++) {\n      if (courseDataWithElective[i][0] < 50) {\n        filterDataElective50.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 50 && courseDataWithElective[i][0] < 100) {\n        filterDataElective100.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 100 && courseDataWithElective[i][0] < 200) {\n        filterDataElective200.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 200 && courseDataWithElective[i][0] < 500) {\n        filterDataElective500.push(courseDataWithElective[i]);\n      }\n    } // console.log(filterDataElective50);\n    // console.log(filterDataElective100);\n    // console.log(filterDataElective200);\n    // console.log(filterDataElective500);\n\n\n    let roomUnder50 = [];\n    let roomUnder100 = [];\n    let roomUnder200 = [];\n    let roomUnder500 = [];\n\n    const checkNumberofRoom = () => {\n      for (let i = 0; i < roomData[0].length; i++) {\n        let room = roomData[0][i][1]; //console.log(roomData[0][i][1]);\n\n        if (room < 50) {\n          roomUnder50.push(room);\n        } else if (room > 50 && room < 100) {\n          roomUnder100.push(room);\n        } else if (room > 100 && room < 200) {\n          roomUnder200.push(room);\n        } else if (room > 200) {\n          roomUnder500.push(room);\n        }\n      }\n    };\n\n    checkNumberofRoom();\n\n    const createArray = data => {\n      var result = [];\n\n      for (let i = 0; i < data; i++) {\n        result[i] = [];\n      }\n\n      return result;\n    };\n\n    let DataArray50 = roomUnder50.length * 38;\n    let DataArray100 = roomUnder100.length * 38;\n    let DataArray200 = roomUnder200.length * 38;\n    let DataArray500 = roomUnder500.length * 38;\n    let combineArray = DataArray50 + DataArray100 + DataArray200 + DataArray500;\n    let startIndex100 = DataArray50;\n    let DataArrayElective50 = roomUnder50.length * 10;\n    let DataArrayElective100 = roomUnder100.length * 10;\n    let DataArrayElective200 = roomUnder200.length * 10;\n    let DataArrayElective500 = roomUnder500.length * 10;\n    let combineArrayElective = DataArrayElective50 + DataArrayElective100 + DataArrayElective200 + DataArrayElective500; //----------------------------------------------------------------------------------------------------------------------------------------\n\n    var checkTotalHardContraintsAll = 0;\n    var checkTotalSoftContraintsAll = 0;\n\n    function sleep(ms) {\n      return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    const antSystem = () => {\n      //______________________________________________________________________________________________________________________________________________\n      //Faculty courses\n      const checking_minus_1 = (array, array2, data) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u-1] != 100 && array[u-1][5] == data[5]){\n            if (array[u] != 100 && data[5] != array[u][5] || data[6] == array[u][6] && array[u - 1] != 100 && data[5] == array[u - 1][5] || data[6] == array[u - 1][6]) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray - 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray - 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray - 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray - 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            //if( array2[u] != 100 && array2[u][5] == data[5] && array2[u-1] != 100 && array2[u-1][5] == data[5]){\n            if (array2[u] != 100 && data[5] != array2[u][5] || data[6] == array2[u][6] && array2[u - 1] != 100 && data[5] == array2[u - 1][5] || data[6] == array2[u - 1][6]) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray2 = b * 38;\n\n                if (array2[u + indexArray2] == 100 && array2[u + indexArray2 - 1] == 100) {\n                  array2[u + indexArray2] = 0;\n                  array2[u + indexArray2 - 1] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100 && array2[u - indexArray2 - 1] == 100) {\n                  array2[u - indexArray2] = 0;\n                  array2[u - indexArray2 - 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array; // console.log(array)\n        // console.log(data)\n        // for(let u = 0; u < array.length; u++){\n        //     if(k < data.length){\n        //         if(b <= totalRoom){\n        //             try{\n        //                 if( array[u][5] != 100 && array[u][5] == data[k][5] && array[u-1][5] != 100 && array[u-1][5] == data[k][5]){\n        //                     if( array[u+38*b] ==100 && array[u+37*b] ==100){\n        //                         array[u+38*b] = 0\n        //                         array[u+37*b] = 0\n        //                     }\n        //                     if( array[u-38*b]==100 && array[u+37*b] == 100){\n        //                         array[u-38*b] = 0\n        //                         array[u-37*b] = 0\n        //                     }\n        //                 }\n        //                 else if( array[u][5] != 100 && array[u][5] == data[k][5] && array[u+1][5] != 100 && array[u+1][5] == data[k][5]){\n        //                     if( array[u+38*b] ==100 && array[u+39*b] ==100){\n        //                         array[u+38*b] = 0\n        //                         array[u+39*b] = 0\n        //                     }\n        //                     if( array[u-38*b]==100 && array[u+39*b] == 100){\n        //                         array[u-38*b] = 0\n        //                         array[u-39*b] = 0\n        //                     }\n        //                 }\n        //                 else if( array[u][5] != 100 && array[u][5] == data[k][5]){\n        //                     if( array[u+38*b] ==100 ){\n        //                         array[u+38*b] = 0\n        //                     }\n        //                     if( array[u-38*b]==100 ){\n        //                         array[u-38*b] = 0\n        //                     }\n        //                 }\n        //             }catch{}\n        //         }\n        //         b++\n        //     }\n        //     k++\n        // }\n      };\n\n      const checking_plus_1 = (array, array2, data) => {\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\n            if (array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6] && array[u + 1] != 100 && data[5] == array[u + 1][5] || data[6] == array[u + 1][6]) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray + 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray + 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray + 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            //if( array2[u] != 100 && array2[u][5] == data[5] && array2[u+1] != 100 && array2[u+1][5] == data[5]){\n            if (array2[u] != 100 && data[5] == array2[u][5] || data[6] == array2[u][6] && array2[u + 1] != 100 && data[5] == array2[u + 1][5] || data[6] == array2[u + 1][6]) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray2 = b * 38;\n\n                if (array2[u + indexArray2] == 100 && array2[u + indexArray2 + 1] == 100) {\n                  array2[u + indexArray2] = 0;\n                  array2[u + indexArray2 + 1] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100 && array2[u - indexArray2 + 1] == 100) {\n                  array2[u - indexArray2] = 0;\n                  array2[u - indexArray2 + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const checking_3 = (array, array2, data) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u-1] != 100 && array[u-1][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\n            if (array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6] && array[u - 1] != 100 && data[5] == array[u - 1][5] && array[u + 1] != 100 && data[5] == array[u + 1][5] || data[6] == array[u - 1][6] && array[u + 1] != 100 && data[6] == array[u + 1][6]) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray - 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray - 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray - 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray - 1] = 0;\n                }\n\n                if (array[u + indexArray] == 100 && array[u + indexArray + 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray + 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray + 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            //if( array2[u] != 100 && array2[u][5] == data[5] && array2[u-1] != 100 && array2[u-1][5] == data[5] && array2[u+1] != 100 && array2[u+1][5] == data[5]){\n            if (array2[u] != 100 && data[5] == array2[u][5] || data[6] == array2[u][6] && array2[u - 1] != 100 && data[5] == array2[u - 1][5] && array2[u + 1] != 100 && data[5] == array2[u + 1][5] || data[6] == array2[u - 1][6] && array2[u + 1] != 100 && data[6] == array2[u + 1][6]) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray2 = b * 38;\n\n                if (array2[u + indexArray2] == 100 && array2[u + indexArray2 - 1] == 100) {\n                  array2[u + indexArray2] = 0;\n                  array2[u + indexArray2 - 1] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100 && array2[u - indexArray2 - 1] == 100) {\n                  array2[u - indexArray2] = 0;\n                  array2[u - indexArray2 - 1] = 0;\n                }\n\n                if (array2[u + indexArray2] == 100 && array2[u + indexArray2 + 1] == 100) {\n                  array2[u + indexArray2] = 0;\n                  array2[u + indexArray2 + 1] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100 && array2[u - indexArray2 + 1] == 100) {\n                  array2[u - indexArray2] = 0;\n                  array2[u - indexArray2 + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const checking_only_1 = (array, array2, data) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            if (array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]) {\n              for (let b = 0; b < totalRoom; b++) {\n                if (array[u + 38 * b] == 100) {\n                  array[u + 38 * b] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            if (array2[u] != 100 && data[5] == array2[u][5] || data[6] == array2[u][6]) {\n              for (let b = 0; b < totalRoom2; b++) {\n                if (array2[u + 38 * b] == 100) {\n                  array2[u + 38 * b] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const changeRowtoZero_minus_1 = (array, array2, index1, index2) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray - 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray - 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray - 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray - 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray = b * 38;\n\n                if (array2[u + indexArray] == 100 && array2[u + indexArray - 1] == 100) {\n                  array2[u + indexArray] = 0;\n                  array2[u + indexArray - 1] = 0;\n                }\n\n                if (array2[u - indexArray] == 100 && array2[u - indexArray - 1] == 100) {\n                  array2[u - indexArray] = 0;\n                  array2[u - indexArray - 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const changeRowtoZero_plus_1 = (array, array2, index1, index2) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray + 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray + 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray + 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray2 = b * 38;\n\n                if (array2[u + indexArray2] == 100 && array2[u + indexArray2 + 1] == 100) {\n                  array2[u + indexArray2] = 0;\n                  array2[u + indexArray2 + 1] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100 && array2[u - indexArray2 + 1] == 100) {\n                  array2[u - indexArray2] = 0;\n                  array2[u - indexArray2 + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const changeRowtoZero_1 = (array, array2, index1) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            if (u == index1) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100) {\n                  array[u + indexArray] = 0;\n                }\n\n                if (array[u - indexArray] == 100) {\n                  array[u - indexArray] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            if (u == index1) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray2 = b * 38;\n\n                if (array2[u + indexArray2] == 100) {\n                  array2[u + indexArray2] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100) {\n                  array2[u - indexArray2] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const changeRowtoZero_3_ = (array, array2, index1, index2, index3) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2 && u + 1 == index3) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray - 1] == 100 && array[u + indexArray + 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray - 1] = 0;\n                  array[u + indexArray + 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray - 1] == 100 && array[u - indexArray + 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray - 1] = 0;\n                  array[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2 && u + 1 == index3) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray = b * 38;\n\n                if (array2[u + indexArray] == 100 && array2[u + indexArray - 1] == 100 && array2[u + indexArray + 1] == 100) {\n                  array2[u + indexArray] = 0;\n                  array2[u + indexArray - 1] = 0;\n                  array2[u + indexArray + 1] = 0;\n                }\n\n                if (array2[u - indexArray] == 100 && array2[u - indexArray - 1] == 100 && array2[u - indexArray + 1] == 100) {\n                  array2[u - indexArray] = 0;\n                  array2[u - indexArray - 1] = 0;\n                  array2[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const changeToZero = array => {\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            array[i] = 100;\n          }\n        }\n\n        return array;\n      };\n\n      const checkTest = (array, array2, data1) => {\n        let count = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          let indexArray = x * 38;\n\n          try {\n            for (let i = 1; i < array.length; i++) {\n              //if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 1 && array[i+indexArray] != 0 ){\n              try {\n                if (data1 == array[i][5]) {\n                  if (array[i + indexArray] == 100) {\n                    array[i + indexArray] = 0;\n                  }\n                }\n              } catch {} //}    \n\n            }\n          } catch {}\n        }\n\n        for (let x = 1; x <= totalRoom2; x++) {\n          let indexArray2 = x * 38;\n\n          try {\n            for (let i = 1; i < array2.length; i++) {\n              //if(array2[i+indexArray2] != 100 && array2[i+indexArray2] != undefined && array2[i+indexArray2] != 1 && array2[i+indexArray2] != 0 ){\n              try {\n                if (data1 == array2[i][5]) {\n                  if (array2[i + indexArray2] == 100) {\n                    array2[i + indexArray2] = 0;\n                  }\n                }\n              } catch {} //}    \n\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      let startIndex100 = DataArray50 - 1;\n\n      const array1DCombine = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrCombine = array1DCombine(combineArray); //create 1d array for dataset less than 50\n\n      const array1D50 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr50 = array1D50(DataArray50);\n      let insertedData50_Slot2_2 = [];\n      let insertedData50_Slot2_1 = [];\n      let arrayLength50 = DataArray50;\n\n      const AntAlgoInsert50 = (array, combine) => {\n        //array.length = 1064 (last index = 1063)\n        //arrayLength50 = 646 (last index = 645)\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let k4 = 0;\n        let k5 = 0;\n        let count = 0;\n        let b = 1;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterData50.length; x++) {\n          test.push(filterData50[x]);\n        } //for(let i = arrayLength50-1;i>0;i--){\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7]; //checkTest(AntArr50,test[k])\n\n            changeToZero(array);\n            changeToZero(combine);\n\n            if (hourMS == 2) {\n              //changeToZero(array)\n              const j = Math.floor(Math.random() * (i + 1)); // checking_minus_1(array,test[k])\n              // checking_plus_1(array,test[k])\n\n              checking_minus_1(combine, array, test[k]);\n              checking_plus_1(combine, array, test[k]); //checking_only_1(array,test[k])\n              //checkTest(AntArr50,test[k])\n\n              if (array[i] == 100 && array[i - 1] == 100) {\n                array[i] = array[j];\n                array[i - 1] = array[j - 1];\n                array[j] = test[k];\n                array[j - 1] = test[k];\n                combine[j] = test[k];\n                combine[j - 1] = test[k]; //changeRowtoZero_minus_1(array,i,i-1)\n\n                changeRowtoZero_minus_1(combine, array, i, i - 1); //checking_minus_1(array,test[k])\n              } else if (array[i] == 100 && array[i + 1] == 100) {\n                //checking_plus_1(array,test[k])\n                array[i] = array[j];\n                array[i + 1] = array[j + 1];\n                array[j] = test[k];\n                array[j + 1] = test[k];\n                combine[j] = test[k];\n                combine[j + 1] = test[k]; //changeRowtoZero_plus_1(array,i,i+1)\n\n                changeRowtoZero_plus_1(combine, i, i + 1); //checking_plus_1(array,test[k])\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } // changeToZero(array);\n            // changeToZero(combine);\n\n          }\n\n          k++;\n        }\n\n        for (let i = arrayLength50 - 1; i > 0; i--) {\n          if (k4 < test.length) {\n            let hourMS = test[k4][7]; //checkTest(AntArr50,test[k])\n\n            changeToZero(array);\n            changeToZero(combine);\n\n            if (hourMS == 4) {\n              // checking_minus_1(array,test[k]);\n              checking_minus_1(combine, array, test[k4]);\n              checking_plus_1(combine, array, test[k4]); //checking_only_1(array,test[k])\n              //checkTest(AntArr50,test[k])\n\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100 && array[i - 1] == 100) {\n                array[i] = array[j];\n                array[i - 1] = array[j - 1];\n                array[j] = test[k4];\n                array[j - 1] = test[k4]; //const j = Math.floor(Math.random()*(i+1));\n\n                changeRowtoZero_minus_1(combine, array, j, j - 1);\n\n                if (array[i] == 100 && array[i - 1] == 100) {\n                  //checking_minus_1(array,test[k]);\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k4];\n                  array[j - 1] = test[k4]; //changeRowtoZero_minus_1(array,i,i-1)\n\n                  changeRowtoZero_minus_1(combine, array, j, j - 1);\n                } else if (array[i] == 100 && array[i + 1] == 100) {\n                  //checking_plus_1(array,test[k]);\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k4];\n                  array[j + 1] = test[k4]; //changeRowtoZero_plus_1(array,j,j-1);\n\n                  changeRowtoZero_plus_1(combine, array, j, j - 1);\n                } else {\n                  remainderArraySlot1.push(combine, test[k4]);\n                } //count += 1\n\n              } else if (array[i] == 100 && array[i + 1] == 100) {\n                //checking_plus_1(array,test[k]);\n                array[i] = array[j];\n                array[i + 1] = array[j + 1];\n                array[j] = test[k4];\n                array[j + 1] = test[k4];\n                changeRowtoZero_plus_1(combine, array, i, i - 1); //const j = Math.floor(Math.random()*(i+1));\n\n                if (array[i] == 100 && array[i - 1] == 100) {\n                  //checking_minus_1(array,test[k]);\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k4];\n                  array[j - 1] = test[k4]; //changeRowtoZero_minus_1(array,i,i-1)\n\n                  changeRowtoZero_minus_1(combine, array, j, j - 1);\n                } else if (array[i] == 100 && array[i + 1] == 100) {\n                  //checking_plus_1(array,test[k]);\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k4];\n                  array[j + 1] = test[k4]; //changeRowtoZero_plus_1(array,i,i-1);\n\n                  changeRowtoZero_plus_1(combine, array, j, j - 1);\n                } else {\n                  remainderArraySlot1.push(test[k4]);\n                }\n              } else {\n                remainderArray.push(test[k4]);\n              }\n            }\n\n            changeToZero(array);\n          }\n\n          k4++;\n        } // for(let i = arrayLength50-1;i>0;i--){\n        //     if(k5 < test.length){\n        //     let hourMS = test[k5][7]    \n        //     //checkTest(AntArr50,test[k])\n        //     changeToZero(array)\n        //     if(hourMS == 3){\n        //         const j = Math.floor(Math.random()*(i+1)); \n        //             checking_3(array,test[k5]);\n        //             //checking_only_1(array,test[k])\n        //             //checkTest(AntArr50,test[k])\n        //             if( array[i] == 100 && array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\n        //                 //checking_3(array,test[k]);\n        //                 array[i] = array[j];\n        //                 array[i-1] = array[j-1];\n        //                 array[i+1] = array[j+1];\n        //                 array[j] = test[k5];\n        //                 array[j-1] = test[k5];\n        //                 array[j+1] = test[k5];\n        //                 changeRowtoZero_3_(array,i,i-1,i+1)\n        //             }else if(array[i] == 100 && array[i-1] == 100){//slot 2 hours in 1 go\n        //                 //checking_minus_1(array,test[k]);\n        //                 array[i] = array[j];\n        //                 array[i-1] = array[j-1];\n        //                 array[j] = test[k5];\n        //                 array[j-1] = test[k5];\n        //                 insertedData50_Slot2_1.push(test[k5])\n        //                 changeRowtoZero_minus_1(array,i,i-1)\n        //             }else if(array[i] == 100 && array[i+1] == 100){//slot 2 hours in 1 go\n        //                 //checking_plus_1(array,test[k]);\n        //                 array[i] = array[j];\n        //                 array[i+1] = array[j+1];\n        //                 array[j] = test[k5];\n        //                 array[j+1] = test[k5];\n        //                 insertedData50_Slot2_1.push(test[k5])\n        //                 changeRowtoZero_plus_1(array,i,i-1);\n        //             }else if(array[i] == 100 ){//slot 1 hours in 1 go\n        //                 //checking_only_1(array,test[k]);\n        //                 array[i] = array[j];\n        //                 array[j] = test[k5];\n        //                 changeRowtoZero_1(array,i)\n        //                 remainderArraySlot1.push(test[k5])\n        //             }\n        //     }\n        //     changeToZero(array);\n        //     }\n        //     k5++  \n        // }\n        //changeToZero(array) \n        //fullfill the slot 3\n        //  for(let x = 0; x< arrayLength50; x++){\n        //     if(k3 < remainderArraySlot1.length){    \n        //         // for(let x= 1 ; x <= totalRoom ; x++){\n        //         //     let indexArray = (x * 38)\n        //         //        try{\n        //         //         for(let i = 1; i<array.length ; i++){\n        //         //             try{\n        //         //                 if(remainderArraySlot1[k3][5] == array[i][5]){\n        //         //                     if(array[i+indexArray] == 100){\n        //         //                         array[i+indexArray] = 0\n        //         //                     }\n        //         //                 }\n        //         //             }catch{}\n        //         //            }\n        //         //        }catch{}\n        //         //    }\n        //         //checking_only_1(array, remainderArraySlot1[k3])\n        //         //checkTest(AntArr50,remainderArraySlot1[k3])\n        //         checking_plus_1(array,remainderArraySlot1[k3])\n        //         if(array[x] == 100 && array[x+1] ==100){\n        //             //changeRowtoZero_plus_1(array,remainderArraySlot1[k3])\n        //             array[x] = remainderArraySlot1[k3]\n        //             array[x+1] = remainderArraySlot1[k3]\n        //             changeRowtoZero_plus_1(array,x,x+1)\n        //         }else{insertedData50_Slot2_2.push(remainderArraySlot1[k3])}\n        //      }\n        //      k3++   \n        //  }\n        //  changeToZero(array);\n        //  for(let x = 0; x< arrayLength50; x++){\n        //     if(k2 < remainderArray.length){\n        //         //checking_only_1(array,remainderArray[k2])\n        //         //checking_plus_1(array,remainderArray[k2]);\n        //         // for(let x= 1 ; x <= totalRoom ; x++){\n        //         //     let indexArray = (x * 38)\n        //         //        try{\n        //         //         for(let i = 1; i<array.length ; i++){\n        //         //             try{\n        //         //                 if(remainderArray[k2][5] == array[i][5]){\n        //         //                     if(array[i+indexArray] == 100){\n        //         //                         array[i+indexArray] = 0\n        //         //                     }\n        //         //                 }\n        //         //             }catch{}\n        //         //            }\n        //         //        }catch{}\n        //         //    }\n        //         //checkTest(AntArr50,remainderArray[k2])\n        //         checking_plus_1(array,remainderArray[k2])\n        //          if(array[x] == 100 && array[x+1] ==100){\n        //              //if(k2 < remainderArray.length){\n        //                 //changeRowtoZero_plus_1(array,remainderArraySlot1[k2])\n        //                  array[x] = remainderArray[k2]\n        //                  array[x+1] = remainderArray[k2]\n        //                  changeRowtoZero_plus_1(array,x,x+1)\n        //              }\n        //              try{\n        //                  let slot2 = remainderArray[k2][10]\n        //                  if(slot2 == 1){\n        //                      insertedData50_Slot2_1.push(remainderArray[k2])\n        //                  }\n        //                  if(slot2 == 2){\n        //                     insertedData50_Slot2_2.push(remainderArray[k2])\n        //                 }\n        //              }catch{}\n        //      }\n        //      k2++   \n        //  }\n        //  changeToZero(array)\n        //  for(let i = 0; i < arrayLength50; i++){\n        //     if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined && array[i] != 1){\n        //         count += 1\n        //     }\n        // }\n\n\n        console.log(count);\n\n        if (array[-1] != undefined) {\n          insertedData50_Slot2_1.push(array[-1]);\n        }\n\n        return array;\n      }; //var AntArrIns50 = AntAlgoInsert50(AntArr50);\n\n\n      var AntArrIns50 = AntAlgoInsert50(AntArr50, AntArrCombine); //console.log(AntArrIns50);\n\n      const slot2Equal1for50 = array => {\n        let k = 0;\n        let test2 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < arrayLength50; x++) {\n          if (array[x] == 100) {\n            if (k < insertedData50_Slot2_1.length) {\n              //checking_plus_1(array,test[k])\n              checking_only_1(array, insertedData50_Slot2_1[k]); //checkTest(AntArr50,insertedData50_Slot2_1[k])\n              //changeRowtoZero_plus_1(array,insertedData50_Slot2_1[k])\n              // for(let x= 1 ; x <= totalRoom ; x++){\n              //     let indexArray = (x * 38)\n              //        try{\n              //         for(let i = 1; i<array.length ; i++){\n              //             try{\n              //                 if(insertedData50_Slot2_1[k][5] == array[i][5]){\n              //                     if(array[i+indexArray] == 100){\n              //                         array[i+indexArray] = 0\n              //                     }\n              //                 }\n              //             }catch{}\n              //            }\n              //        }catch{}\n              //    }\n\n              array[x] = insertedData50_Slot2_1[k]; //changeRowtoZero_1(array,x)\n            }\n\n            k++;\n          }\n        }\n\n        changeToZero(array);\n        return array;\n      }; //slot2Equal1for50(AntArr50);\n      //slot2Equal1for50(AntArrCombine);\n\n\n      const slot2Equal2for50 = array => {\n        let k = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < arrayLength50; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedData50_Slot2_2.length) {\n              //checking_only_1(array,insertedData50_Slot2_2[k])\n              //checkTest(AntArr50,insertedData50_Slot2_2[k])\n              checking_plus_1(array, insertedData50_Slot2_2[k]); //changeRowtoZero_plus_1(array,insertedData50_Slot2_2[k])\n              // for(let x= 1 ; x <= totalRoom ; x++){\n              //     let indexArray = (x * 38)\n              //        try{\n              //         for(let i = 1; i<array.length ; i++){\n              //             try{\n              //                 if(insertedData50_Slot2_2[k][5] == array[i][5]){\n              //                     if(array[i+indexArray] == 100){\n              //                         array[i+indexArray] = 0\n              //                     }\n              //                 }\n              //             }catch{}\n              //            }\n              //        }catch{}\n              //    }\n\n              array[x] = insertedData50_Slot2_2[k];\n              array[x + 1] = insertedData50_Slot2_2[k]; //changeRowtoZero_plus_1(array,x,x+1)\n            }\n\n            k++;\n          }\n        }\n\n        changeToZero(array);\n\n        if (array[-1] != undefined) {\n          insertedData50_Slot2_1.push(array[-1]);\n        }\n\n        return array;\n      }; //slot2Equal2for50(AntArr50);\n      //slot2Equal2for50(AntArrCombine);\n\n\n      const checkAmountData50_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined && array[i] != 1) {\n            count += 1;\n          }\n        }\n\n        return count;\n      }; //var checkAmount_2 = checkAmountData50_2(AntArrIns50)\n\n\n      var checkAmount_2 = checkAmountData50_2(AntArrIns50);\n      console.log(AntArrIns50);\n      console.log(\"Amount of data: \" + checkAmount_2);\n\n      const checkAmountData50_0 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      }; //var checkAmount_0 = checkAmountData50_0(AntArr50)\n\n\n      var checkAmount_0 = checkAmountData50_0(AntArr50);\n      console.log(\"zero counter: \" + checkAmount_0);\n\n      const checkAmountDataCombine_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined && array[i] != 1) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_combine = checkAmountDataCombine_2(AntArrCombine);\n      console.log(AntArrCombine);\n      console.log(\"Amount of data: \" + checkAmount_combine);\n\n      const checkAmountDataCombine = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      }; //var checkAmount_0 = checkAmountData50_0(AntArr50)\n\n\n      var checkAmount_combineData = checkAmountDataCombine(AntArrCombine);\n      console.log(\"zero counter: \" + checkAmount_combineData); //______________________________________________________________________________________________________________________________________________\n      //______________________________________________________________________________________________________________________________________________\n      //---------------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------------\n      //console.log(dataCombine)\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n      // Hard Constraint \n      // H1: No student attend more than one class/ event at the same time\n      // H2: The room is large enough to accomodate all of the student in attendace while also meeting the requirement \n      // H3: At any given time, each room can onle have one course booked\n      // H4: No student attend class during 12:00 pm -2:00 due to solat jumaat\n      // H5: One teacher can only teach one class at one time.\n      //Check for the H1 violation: same group attend more than 1 class at 1 time\n\n      const check1Group = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n        }\n\n        for (let x = 1; x <= totalRoom; x++) {\n          try {\n            //for(let x= 1 ; x <= totalRoom ; x++){\n            for (let i = 0; i < array.length; i++) {\n              indexArray = x * 37;\n\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined && array[i + indexArray] != 1 && array[i + indexArray] != 0) {\n                try {\n                  //if(array[i][6] == array[i+indexArray][6] && array[i+1][6] == array[i+indexArray+1][6] && array[i][5] == array[i+indexArray][5] && array[i+1][5] == array[i+indexArray+1][5]){\n                  if (array[i][6] == array[i + indexArray][6] && array[i][5] == array[i + indexArray][5]) {\n                    try {\n                      // console.log(i)\n                      // console.log(i+indexArray)\n                      count += 1;\n                    } catch {}\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH1_ALL = check1Group(combineArray);\n      console.log(\"HC1 Counter: \" + checkH1_ALL); //var checkH1_ALLElective = check1Group(dataCombineElective)\n      //Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\n\n      const checkRoomQuota = array => {\n        let count = 0;\n        return count;\n      }; //var checkH2_ALL = checkRoomQuota(dataCombine)\n      //var checkH2_ALLElective = checkRoomQuota(dataCombineElective)\n      //Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\n\n\n      const checkSolatJummat = array => {\n        let count = 0;\n        return count;\n      }; //var checkH4_ALL = checkSolatJummat(dataCombine)\n      //var checkH4_ALLElective = checkSolatJummat(dataCombineElective)\n      //Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\n\n\n      const check1Teacher = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n\n          try {\n            for (let i = 1; i < array.length; i++) {\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined && array[i + indexArray] != 1 && array[i + indexArray] != 0) {\n                try {\n                  if (array[i][5] == array[i + indexArray][5]) {\n                    console.log(i);\n                    console.log(i + indexArray);\n                    count += 1;\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH5_ALL = check1Teacher(combineArray);\n      console.log(\"HC5 Counter: \" + checkH5_ALL); //var checkH5_ALLElective = check1Group(dataCombineElective)\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Soft Constraint \n      // S1: A student has a class schedule toward the end of the day\n      // S2: A student have more than two class in a row\n      //Check for the S1 violation: student have class at the end of the day\n\n      const checkEndOfClass = array => {\n        let count = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          let indexArray = x * 37;\n\n          if (array[indexArray] != 100) {\n            count = 1;\n          }\n        }\n\n        return count;\n      }; // var checkS1_50 = checkEndOfClass(AntArr50)\n      // var checkS1_100 = checkEndOfClass(AntArr50)\n      // var checkS1_200 = checkEndOfClass(AntArr200)\n      // var checkS1_500 = checkEndOfClass(AntArr500)\n      // var checkS1_Elective50 = checkEndOfClass(AntArrElective50)\n      // var checkS1_Elective100 = checkEndOfClass(AntArrElective100)\n      // var checkS1_Elective200 = checkEndOfClass(AntArrElective200)\n      // var checkS1_Elective500 = checkEndOfClass(AntArrElective500)\n      //Check for the S2 violation: teacher have 2 class in a row\n\n\n      const check2ClassInARow = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          try {\n            if (array[i][5] != undefined && array[i + 3][5] != undefined && array[i + 2][5] != undefined && array[i + 4][5] != undefined) {\n              if (array[i][5] == array[i + 3][5] && array[i + 2][5] == array[i + 4][5]) {\n                count = 1;\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      }; // var checkS2_50 = check2ClassInARow(AntArr50)\n      // var checkS2_100 = check2ClassInARow(AntArr50)\n      // var checkS2_200 = check2ClassInARow(AntArr200)\n      // var checkS2_500 = check2ClassInARow(AntArr500)\n      // var checkS2_Elective50 = check2ClassInARow(AntArrElective50)\n      // var checkS2_Elective100 = check2ClassInARow(AntArrElective100)\n      // var checkS2_Elective200 = check2ClassInARow(AntArrElective200)\n      // var checkS2_Elective500 = check2ClassInARow(AntArrElective500)\n      //----------------------------------------------------------------------------------------------------------------------------------------------\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n      //Check total Hard Constraint\n      // const checkTotalHardContraint = () => {\n      //    let count =0\n      //    //let totalH1 = checkH1_ALL\n      // //    let totalH2 = checkH2_ALL\n      // //    let totalH4 = checkH4_ALL\n      // //    let totalH5 = checkH5_ALL\n      // //    let totalH1_Elective = checkH1_ALLElective\n      // //    let totalH2_Elective = checkH2_ALLElective\n      // //    let totalH4_Elective = checkH4_ALLElective\n      // //    let totalH5_Elective = checkH5_ALLElective\n      //    //let totalHC = totalH1 + totalH2 + totalH4 + totalH5 + totalH1_Elective + totalH2_Elective + totalH4_Elective + totalH5_Elective\n      //    //let totalHC = totalH1 + totalH2 + totalH4 + totalH5\n      //    //let totalHC = totalH2 + totalH4 + totalH5\n      //    //let totalHC = totalH1 + totalH2 + totalH4 + totalH5 \n      // //    if( totalHC != 0){\n      // //        count +=1\n      // //    }   \n      //    return totalHC\n      // }\n      // var checkTotalHardContraints = checkTotalHardContraint()\n      // console.log(\"Total Hard Constraint: \"+checkTotalHardContraints)\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n      // const checkTotalSoftContraint = () => {\n      //     let count =0\n      //     let totalS1 = checkS1_50 + checkS1_100 + checkS1_200 + checkS1_500 + checkS1_Elective50 + checkS1_Elective100 + checkS1_Elective200 + checkS1_Elective500\n      //     let totalS2 = checkS2_50 + checkS2_100 + checkS2_200 + checkS2_500 + checkS2_Elective50 + checkS2_Elective100 + checkS2_Elective200 + checkS2_Elective500\n      //     if(totalS1 != 0){\n      //         count +=1\n      //     }\n      //     if(totalS2 != 0){\n      //         count +=1\n      //     }   \n      //     return count\n      // }\n      // var checkTotalSoftContraints = checkTotalSoftContraint()\n      //console.log(\"Total Soft Constraint: \"+checkTotalSoftContraints)\n      //----------------------------------------------------------------------------------------------------------------------------------------------\n      // const change100ToEmpty = (data) => {\n      //     for(let i = 0; i< data.length; i++){\n      //         if(data[i] == 100){\n      //             data[i] = [];\n      //         }\n      //     }\n      //     return data;\n      // }\n      // //let finalData = change100ToEmpty(combineData)\n      // const change100ToEmptyElective = (data) => {\n      //     for(let i = 0; i< data.length; i++){\n      //         if(data[i] == 100){\n      //             data[i] = [];\n      //         }\n      //     }\n      //     return data;\n      // }\n      // let finalDataElective = change100ToEmptyElective(combineElectiveData)\n      // const checkMissingData = (data50,data100,data200,data500,dataE50,dataE100,dataE200,dataE500) => {\n      //     let countData = []\n      //     for(let i = 0; i< courseData[0].length;i++){\n      //         for(let j = 0; j <courseData[0][i][7]; j++){\n      //             countData.push(courseData[0][i]);\n      //         }\n      //     }\n      //     let totalGenerateScheduleData = data50 + data100 + data200 + data500 + dataE50 + dataE100 + dataE200 + dataE500\n      //     if(countData.length == totalGenerateScheduleData){\n      //     }else{\n      //     }\n      // }\n      // //checkMissingData(checkAmount50,checkAmount100,checkAmount200,checkAmount500,checkAmountElective50,checkAmountElective100,checkAmountElective200,checkAmountElective500)\n      // checkTotalHardContraintsAll = checkTotalHardContraints\n      // checkTotalSoftContraintsAll = checkTotalSoftContraints\n      // //finalDataAll.push(finalData)\n      // finalDataAllElective.push(finalDataElective)\n      // //return {checkTotalHardContraints,checkTotalSoftContraints,finalData,finalDataAllElective}\n      // return {checkTotalHardContraints,checkTotalSoftContraints,finalDataAllElective}\n\n    };\n\n    for (let i = 1; i <= 1; i++) {\n      let antSystemAlgo = antSystem();\n    } // -------------------------------------------------------------------------------------------------------------------------------------------\n    // let trigger = 0\n    // const iteration = () => {\n    //         antSystem()\n    //         let globalBestHS = checkTotalHardContraintsAll \n    //         let globalBestSS = checkTotalSoftContraintsAll\n    //         let globalBestScehdule = finalDataAll[0]\n    //         let globalBestScehduleElective = finalDataAllElective[0]\n    //     for(let i= 1; i <= 1; i++){\n    //         antSystem()\n    //         let localBestHS = checkTotalHardContraintsAll \n    //         let localBestSS = checkTotalSoftContraintsAll\n    //         let localBestScehdule = finalDataAll[0]\n    //         let localBestScehduleElective = finalDataAllElective[0]\n    //             console.log(\"iteraion: \" + i)\n    //             if(globalBestHS > localBestHS ){\n    //                 globalBestHS = localBestHS\n    //                 globalBestSS = localBestSS\n    //                 globalBestScehdule = localBestScehdule\n    //                 globalBestScehduleElective = localBestScehduleElective\n    //             }\n    //             if(localBestHS == 0){\n    //                 console.log(\"iteraion: \" + i)\n    //                 console.log(\"workable solution is found\")\n    //                 globalBestHS = localBestHS\n    //                 globalBestSS = localBestSS\n    //                 globalBestScehdule = localBestScehdule\n    //                 globalBestScehduleElective = localBestScehduleElective\n    //                 console.log(\"Workable Gloabal best HS: \"+globalBestHS)\n    //                 console.log(\"Workable Gloabal best SS: \" +globalBestSS)\n    //                 //console.log(finalDataAll[0])\n    //                 trigger = 1\n    //                 return [finalDataAll[0], finalDataAllElective[0]]\n    //             }\n    //             else if(localBestHS == 0 && localBestSS == 0){\n    //                 console.log(\"iteraion: \" + i)\n    //                 console.log(\"perfect solution is found\")\n    //                 globalBestHS = localBestHS\n    //                 globalBestSS = localBestSS\n    //                 globalBestScehdule = localBestScehdule\n    //                 console.log(\"Perfect Gloabal best HS: \"+globalBestHS)\n    //                 console.log(\"Perfect Gloabal best SS: \" +globalBestSS)\n    //                 console.log(finalDataAll[0])\n    //                 trigger = 1\n    //                 return [finalDataAll[0], finalDataAllElective[0]]\n    //             }\n    //     }\n    //     return [finalDataAll[0], finalDataAllElective[0]]\n    // }\n    // let interations = iteration()\n    // let presentableData = []\n    // let presentableDataElective = []\n    // if(trigger == 1){\n    // //shot course code, course name and lecturer    \n    // const changeToPresentationData = (data) => {\n    //     for(let i= 0; i <= data[0].length; i++){\n    //         try {\n    //             presentableData.push([data[0][i][1],data[0][i][2],data[0][i][5]])\n    //         } catch (error) {\n    //         }\n    //     }\n    //     for(let i= 0; i <= data[1].length; i++){\n    //         try {\n    //             presentableDataElective.push([data[1][i][1],data[1][i][2],data[1][i][5]])\n    //         } catch (error) {\n    //         }\n    //     }\n    // }\n    // changeToPresentationData(interations)\n    // let allRoomName = []\n    // for(let i = 0; i < roomData[0].length; i++){\n    //     allRoomName.push(roomData[0][i][0])\n    // }\n    // allRoomName.unshift(\"Room\");\n    // if(allRoomName.pop() == undefined){\n    // }\n    // let weekday = ['Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday',\n    // 'Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday',\n    // 'Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday',\n    // 'Friday','Friday','Friday','Friday','Friday','Friday','Friday','Friday']\n    // let wed = ['Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday']\n    // const create2dArray = (weekdayArray,partDay,arrayAll, partAll) => {\n    //     var tmp = [];\n    //     for(var i = 0; i < weekdayArray.length; i += partDay) {\n    //         tmp.push(weekdayArray.slice(i, i + partDay));\n    //     }\n    //     for(var i = 0; i < arrayAll.length; i += partAll) {\n    //         tmp.push(arrayAll.slice(i, i + partAll));\n    //     }\n    //     return tmp;\n    // }\n    // let dataset = create2dArray(weekday,38,presentableData,38)\n    // console.log(dataset);\n    // const create2dArrayElective = (weekdayArray,partDay,arrayAll, partAll) => {\n    //     var tmp = [];\n    //     for(var i = 0; i < weekdayArray.length; i += partDay) {\n    //         tmp.push(weekdayArray.slice(i, i + partDay));\n    //     }\n    //     for(var i = 0; i < arrayAll.length; i += partAll) {\n    //         tmp.push(arrayAll.slice(i, i + partAll));\n    //     }\n    //     return tmp;\n    // }\n    // let datasetElective = create2dArrayElective(wed,10,presentableDataElective,10);\n    // console.log(datasetElective)\n    // //let compileDataset = dataset.concat(datasetElective);\n    // //console.log(dataset)\n    // const insertRoomName = (roomData,array) => {\n    //     for(let i= 0; i<array.length; i++){\n    //         array[i].unshift(roomData[i]);\n    //     }\n    //     return array;\n    // }\n    // insertRoomName(allRoomName,dataset)\n    // const insertRoomNameElective = (roomData,array) => {\n    //     for(let i= 0; i<array.length; i++){\n    //         array[i].unshift(roomData[i]);\n    //     }\n    //     return array;\n    // }\n    // insertRoomName(allRoomName,datasetElective)\n    // /** Convert a 2D array into a CSV string\n    //  */\n    //   function arrayToCsv(data){\n    //     //console.log(data)\n    //     return data.map(row =>\n    //       row\n    //       .map(String)  // convert every value to String\n    //       .map(v => v.replaceAll('\"', '\"\"'))  // escape double colons\n    //       .map(v => `\"${v}\"`)  // quote it\n    //       .join(',')  // comma-separated\n    //     ).join('\\r\\n');  // rows starting on new lines\n    //   }\n    // let csv = arrayToCsv(\n    //     dataset\n    // );\n    // function downloadBlob(content, filename, contentType) {\n    //     // Create a blob\n    //     var blob = new Blob([content], { type: contentType });\n    //     var url = URL.createObjectURL(blob);\n    //     // Create a link to download it\n    //     var pom = document.createElement('a');\n    //     pom.href = url;\n    //     pom.setAttribute('download', filename);\n    //     pom.click();\n    //   }\n    //   /** Convert a 2D array into a CSV string\n    //    * elective\n    //  */\n    //    function arrayToCsvElective(data){\n    //     //console.log(data)\n    //     return data.map(row =>\n    //       row\n    //       .map(String)  // convert every value to String\n    //       .map(v => v.replaceAll('\"', '\"\"'))  // escape double colons\n    //       .map(v => `\"${v}\"`)  // quote it\n    //       .join(',')  // comma-separated\n    //     ).join('\\r\\n');  // rows starting on new lines\n    //   }\n    // let csvElective = arrayToCsvElective(\n    //     datasetElective\n    // );\n    // function downloadBlobElective(content, filename, contentType) {\n    //     // Create a blob\n    //     var blob = new Blob([content], { type: contentType });\n    //     var url = URL.createObjectURL(blob);\n    //     // Create a link to download it\n    //     var pom = document.createElement('a');\n    //     pom.href = url;\n    //     pom.setAttribute('download', filename);\n    //     pom.click();\n    //   }\n    //   downloadBlob(csv, 'ModifiedAntSystem_GeneratedSchedule.csv', 'text/csv;charset=utf-8;')\n    //   downloadBlobElective(csvElective, 'ModifiedAntSystemElective_GeneratedSchedule.csv', 'text/csv;charset=utf-8;')\n    // }else{\n    //     alert(\"no workable solution found, please refersh until get workable solution\")\n    // }\n    //----------------------------------------------------------------------------------------------------------------------------------------\n\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1695,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1696,\n      columnNumber: 13\n    }\n  }, \"Generate Schedule Page\"));\n};\n\nexport default ArraySchedule; //result[i][j]=Course.splice(Math.floor(Math.random()* Course.length),1)[0] // create random placement of Course Value\n//const Schedule = new Array(10).fill(Array(5).fill(null));\n//console.log(Schedule);\n// const Course = [['TE1',4],['TE1',4],['TE1',4],['TE1',3],['TE1',4],['TE1',2],['TE1',4],['TE1',4],['TE1',4],['TE1',3]];\n//const Course = [['TE1',2],['TE2',2],['TE3',3],['TE4',4],['TE5',3],['TE6',4],['TE7',4],['TE8',2],['TE9',4]];\n//const Course = ['TE1','TE2','TE3','TE4','TE5','TE6','TE7','TE8','TE9'];","map":{"version":3,"sources":["C:/Users/acit/Desktop/FYP Code/FYP Code/frontend/src/components/RandomSchedule/arraySchedule.js"],"names":["concat","create","find","forEach","indexOf","React","useEffect","useState","useContext","useParams","_","CSVLink","LoadingSpinner","finalDataAll","finalDataAllElective","checkHardConstraintOutsite","checkSoftConstraintOutsite","ArraySchedule","props","isLoading","setIsLoading","loadedFile","setLoaadedFile","roomData","setroomData","courseData","setcourseData","CsvData","setCsvData","userId","sendRequest","response","fetch","responsedata","json","stringifyData","JSON","stringify","userWithFiles","Dataset","ertRoom","map","ertCourse","ok","Error","message","err","console","log","testData","EnrollmentQuota","CourseCode","HMS","lecturerData","roomName","roomSize","filterData50","filterData100","filterData200","filterData500","filterDataElective50","filterDataElective100","filterDataElective200","filterDataElective500","dupeData","room","push","hardConstraintViolated","softConstraintViolated","i","length","enrollment","code","hms","lecturer","reduce","results","item","index","array","name","size","notDuplicatesRoom","filter","notDuplicatesLecturer","pop","courseDataXElective","courseDataWithElective","slice","splice","roomUnder50","roomUnder100","roomUnder200","roomUnder500","checkNumberofRoom","createArray","data","result","DataArray50","DataArray100","DataArray200","DataArray500","combineArray","startIndex100","DataArrayElective50","DataArrayElective100","DataArrayElective200","DataArrayElective500","combineArrayElective","checkTotalHardContraintsAll","checkTotalSoftContraintsAll","sleep","ms","Promise","resolve","setTimeout","antSystem","checking_minus_1","array2","k","b","totalRoom","totalRoom2","u","indexArray","indexArray2","checking_plus_1","checking_3","checking_only_1","changeRowtoZero_minus_1","index1","index2","changeRowtoZero_plus_1","changeRowtoZero_1","changeRowtoZero_3_","index3","changeToZero","checkTest","data1","count","x","array1DCombine","AntArrCombine","array1D50","AntArr50","insertedData50_Slot2_2","insertedData50_Slot2_1","arrayLength50","AntAlgoInsert50","combine","test","k2","k3","k4","k5","remainderArray","remainderArraySlot1","hourMS","j","Math","floor","random","undefined","AntArrIns50","slot2Equal1for50","test2","slot2Equal2for50","checkAmountData50_2","checkAmount_2","checkAmountData50_0","checkAmount_0","checkAmountDataCombine_2","checkAmount_combine","checkAmountDataCombine","checkAmount_combineData","check1Group","checkH1_ALL","checkRoomQuota","checkSolatJummat","check1Teacher","checkH5_ALL","checkEndOfClass","check2ClassInARow","antSystemAlgo"],"mappings":"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KnC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGP;AAEA;AACD;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AACA1G,QAAAA,OAAO,CAACC,GAAR,CAAY2F,KAAZ;;AAEC,YAAG5D,KAAK,CAAC,CAAC,CAAF,CAAL,IAAamF,SAAhB,EAA0B;AACtBhB,UAAAA,sBAAsB,CAAChF,IAAvB,CAA4Ba,KAAK,CAAC,CAAC,CAAF,CAAjC;AACH;;AAEE,eAAOA,KAAP;AACH,OAnTD,CAjfoB,CAsyBpB;;;AACA,UAAIoF,WAAW,GAAGf,eAAe,CAACJ,QAAD,EAAUF,aAAV,CAAjC,CAvyBoB,CAwyBpB;;AAEC,YAAMsB,gBAAgB,GAAGrF,KAAD,IAAW;AAC/B,YAAIwC,CAAC,GAAG,CAAR;AACA,YAAI8C,KAAK,GAAG,EAAZ;AACD,YAAI5C,SAAS,GAAG1C,KAAK,CAACT,MAAN,GAAe,EAA/B;;AAEC,aAAI,IAAIsE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAEO,aAAlB,EAAiCP,CAAC,EAAlC,EAAqC;AAC9B,cAAG7D,KAAK,CAAC6D,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,gBAAGrB,CAAC,GAAG2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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;AACC,KA5sCD;;AA6sCA,SAAI,IAAItE,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAI,CAApB,EAAuBA,CAAC,EAAxB,EAA2B;AACvB,UAAIkH,aAAa,GAAGnE,SAAS,EAA7B;AACH,KA94CmC,CA+4CpC;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;;AAES;;AACL,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,CADJ;AAQH,CAxpDD;;AA2pDA,eAAenG,aAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { concat, create, find, forEach, indexOf } from \"lodash\";\r\nimport React,{ useEffect,useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport _ from 'lodash';\r\nimport { CSVLink } from \"react-csv\";\r\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\r\n\r\n\r\nlet finalDataAll = [];\r\nlet finalDataAllElective = [];\r\nlet checkHardConstraintOutsite = 0;\r\nlet checkSoftConstraintOutsite = 0;\r\n\r\nconst ArraySchedule = (props) => {\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [loadedFile, setLoaadedFile] = useState(false);\r\n    const [roomData, setroomData] = useState();\r\n    const [courseData, setcourseData] = useState();\r\n    const [CsvData, setCsvData] = useState();\r\n    // const [Keys, setKeys] = useState();\r\n    //const [uploadedData, setUploadedData] = useState([]);\r\n    //console.log(\"props dataset:\"+ props.test)\r\n\r\n    const userId = useParams().userId;\r\n    useEffect(()=>{\r\n        const sendRequest = async () =>{\r\n            setIsLoading(true);\r\n            try{\r\n            const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875');\r\n            //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\r\n            //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\r\n            const responsedata = await response.json();\r\n            let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset);\r\n\r\n            // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\r\n            const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset =>[Dataset['Room'],Dataset['Size']]); //Extract Room\r\n            setroomData([ertRoom]);\r\n\r\n            const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'],Dataset['Course Code'],Dataset['Course Name'],Dataset['Year'],Dataset['Semester'],Dataset['Lecturer'],Dataset['Group'],Dataset['HMS'],Dataset['Programme Code'],Dataset['Slot1'],Dataset['Slot2']]); //Extract Enrollment Quota\r\n            setcourseData([ertCourse]);\r\n\r\n            if (!response.ok){\r\n                throw new Error(responsedata.message);\r\n            }\r\n            setLoaadedFile(stringifyData);\r\n            setIsLoading(true);\r\n            }catch(err){\r\n                console.log(err.message);\r\n            }\r\n            setIsLoading(false);\r\n            \r\n        };\r\n        sendRequest();\r\n    },[userId]);\r\n\r\n        if(!isLoading && loadedFile){\r\n            const testData = [1,2,3,4,5,6,7,8,9];\r\n            const EnrollmentQuota = [];\r\n            const CourseCode = [];\r\n            const HMS = [];\r\n            const lecturerData = []\r\n            const roomName = [];\r\n            const roomSize = [];\r\n            const filterData50  = [];\r\n            const filterData100  = [];\r\n            const filterData200  = [];\r\n            const filterData500  = [];\r\n            const filterDataElective50  = [];\r\n            const filterDataElective100  = [];\r\n            const filterDataElective200  = [];\r\n            const filterDataElective500  = [];\r\n            const dupeData  = [];\r\n            const room = []\r\n            room.push(roomData[0])\r\n            \r\n            let hardConstraintViolated = 0;\r\n            let softConstraintViolated = 0;\r\n            //console.log(courseData[0][0][1]);\r\n            for(let i = 0; i <courseData[0].length; i++){\r\n                let enrollment = [courseData[0][i][0]];\r\n                let code = [courseData[0][i][1]];\r\n                let hms = [courseData[0][i][7]];\r\n                let lecturer = [courseData[0][i][5]];\r\n                enrollment.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    EnrollmentQuota.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                code.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    CourseCode.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                hms.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    HMS.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                lecturer.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    lecturerData.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n            }\r\n\r\n            for(let i = 0; i <roomData[0].length; i++){\r\n                let name = [roomData[0][i][0]];\r\n                let size = [roomData[0][i][1]];\r\n                name.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomName.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                size.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomSize.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n            }\r\n \r\n            \r\n            const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\r\n\r\n            const notDuplicatesLecturer = lecturerData.filter((item, index) => index == lecturerData.indexOf(item));\r\n            notDuplicatesLecturer.pop();\r\n            //console.log(notDuplicatesLecturer)\r\n\r\n\r\n            let courseDataXElective = []\r\n            let courseDataWithElective = []\r\n            courseData[0].pop()\r\n\r\n            //saparate faculty course with the elective course\r\n            for(let i=0; i< courseData[0].length; i++){\r\n                if(courseData[0][i][1].slice(0,3) != 'TMU'){\r\n                    courseData[0][i].splice()\r\n                    if(  courseData[0][i][1].slice(0,3) != 'TMX'){\r\n                        courseData[0][i].splice()\r\n                        courseDataXElective.push(courseData[0][i])\r\n                    }\r\n                }\r\n            }\r\n\r\n            //saparate elective course with the faculty course\r\n            for(let i=0; i< courseData[0].length; i++){\r\n                if(courseData[0][i][1].slice(0,3) == 'TMU' ||  courseData[0][i][1].slice(0,3) == 'TMX'){\r\n                    courseDataWithElective.push(courseData[0][i])\r\n                }\r\n            }\r\n\r\n            //insert data without elective courses into correct room capacity\r\n                for(let i = 0; i< courseDataXElective.length;i++){\r\n                        if (courseDataXElective[i][0] < 50) {\r\n                            filterData50.push(courseDataXElective[i]);\r\n                        }\r\n                        if (courseDataXElective[i][0] >= 50 && courseDataXElective[i][0] < 100) {\r\n                            \r\n                            filterData100.push(courseDataXElective[i]);\r\n                        }\r\n                        if (courseDataXElective[i][0] >= 100 && courseDataXElective[i][0] < 200 ) {\r\n                            filterData200.push(courseDataXElective[i]);\r\n                        }\r\n                        if (courseDataXElective[i][0] >= 200 && courseDataXElective[i][0] < 500) {\r\n                            filterData500.push(courseDataXElective[i]);\r\n                        }\r\n                }\r\n                //console.log(filterData50)\r\n\r\n                //insert data without faculty courses into correct room capacity\r\n                for(let i = 0; i< courseDataWithElective.length;i++){\r\n                    if (courseDataWithElective[i][0] < 50) {\r\n                        filterDataElective50.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 50 && courseDataWithElective[i][0] < 100) {\r\n                        \r\n                        filterDataElective100.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 100 && courseDataWithElective[i][0] < 200 ) {\r\n                        filterDataElective200.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 200 && courseDataWithElective[i][0] < 500) {\r\n                        filterDataElective500.push(courseDataWithElective[i]);\r\n                    }\r\n                }\r\n                // console.log(filterDataElective50);\r\n                // console.log(filterDataElective100);\r\n                // console.log(filterDataElective200);\r\n                // console.log(filterDataElective500);\r\n\r\n\r\n            let roomUnder50 = []\r\n            let roomUnder100 = []\r\n            let roomUnder200 = []\r\n            let roomUnder500 = []\r\n            const checkNumberofRoom = () => {\r\n                for(let i = 0; i < roomData[0].length; i++){\r\n                    let room = roomData[0][i][1]\r\n                    //console.log(roomData[0][i][1]);\r\n                    if(room < 50){\r\n                        roomUnder50.push(room)\r\n                    }else if(room > 50 && room < 100){\r\n                        roomUnder100.push(room)\r\n\r\n                    }else if(room > 100 && room < 200){\r\n                        roomUnder200.push(room)\r\n\r\n                    }else if(room > 200){\r\n                        roomUnder500.push(room)\r\n                    }\r\n                }\r\n            }\r\n            checkNumberofRoom();\r\n\r\n\r\n            const createArray = (data) => {\r\n                var result = []\r\n\r\n                    for(let i = 0; i<data; i++){\r\n                        result[i] = []\r\n                    }\r\n                return result;\r\n            }\r\n\r\n            let DataArray50 = roomUnder50.length * 38;\r\n            let DataArray100 = roomUnder100.length * 38;\r\n            let DataArray200 = roomUnder200.length * 38;\r\n            let DataArray500 = roomUnder500.length * 38;\r\n            let combineArray = DataArray50 + DataArray100 + DataArray200 + DataArray500\r\n\r\n            let startIndex100 = DataArray50\r\n\r\n            let DataArrayElective50 = roomUnder50.length * 10;\r\n            let DataArrayElective100 = roomUnder100.length * 10;\r\n            let DataArrayElective200 = roomUnder200.length * 10;\r\n            let DataArrayElective500 = roomUnder500.length * 10;\r\n            let combineArrayElective = DataArrayElective50 + DataArrayElective100 + DataArrayElective200 + DataArrayElective500\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nvar checkTotalHardContraintsAll = 0\r\nvar checkTotalSoftContraintsAll = 0\r\n\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\nconst antSystem = () => {\r\n\r\n//______________________________________________________________________________________________________________________________________________\r\n//Faculty courses\r\n\r\nconst checking_minus_1 = (array,array2,data) => {\r\n    let k =0\r\n    let b =0\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u-1] != 100 && array[u-1][5] == data[5]){\r\n            if(array[u] != 100 && data[5] != array[u][5] || data[6] == array[u][6] && array[u-1] != 100 && data[5] == array[u-1][5] || data[6] == array[u-1][6]){\r\n                for(let b =0; b < totalRoom; b++){\r\n                    let indexArray = b*38\r\n                    if( array[u+indexArray] ==100 && array[u+indexArray-1] ==100){\r\n                        array[u+indexArray] = 0\r\n                        array[u+indexArray-1] = 0\r\n                    }\r\n                    if( array[u-indexArray] ==100 && array[u-indexArray-1] ==100){\r\n                        array[u-indexArray] = 0\r\n                        array[u-indexArray-1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n\r\n    for(let u = 0; u < array2.length; u++){\r\n        try{\r\n            //if( array2[u] != 100 && array2[u][5] == data[5] && array2[u-1] != 100 && array2[u-1][5] == data[5]){\r\n            if(array2[u] != 100 && data[5] != array2[u][5] || data[6] == array2[u][6] && array2[u-1] != 100 && data[5] == array2[u-1][5] || data[6] == array2[u-1][6]){\r\n                for(let b =0; b < totalRoom; b++){\r\n                    let indexArray2 = b*38\r\n                    if( array2[u+indexArray2] ==100 && array2[u+indexArray2-1] ==100){\r\n                        array2[u+indexArray2] = 0\r\n                        array2[u+indexArray2-1] = 0\r\n                    }\r\n                    if( array2[u-indexArray2] ==100 && array2[u-indexArray2-1] ==100){\r\n                        array2[u-indexArray2] = 0\r\n                        array2[u-indexArray2-1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array\r\n\r\n    // console.log(array)\r\n    // console.log(data)\r\n\r\n    // for(let u = 0; u < array.length; u++){\r\n    //     if(k < data.length){\r\n    //         if(b <= totalRoom){\r\n    //             try{\r\n    //                 if( array[u][5] != 100 && array[u][5] == data[k][5] && array[u-1][5] != 100 && array[u-1][5] == data[k][5]){\r\n    //                     if( array[u+38*b] ==100 && array[u+37*b] ==100){\r\n    //                         array[u+38*b] = 0\r\n    //                         array[u+37*b] = 0\r\n    //                     }\r\n    //                     if( array[u-38*b]==100 && array[u+37*b] == 100){\r\n    //                         array[u-38*b] = 0\r\n    //                         array[u-37*b] = 0\r\n    //                     }\r\n    //                 }\r\n    //                 else if( array[u][5] != 100 && array[u][5] == data[k][5] && array[u+1][5] != 100 && array[u+1][5] == data[k][5]){\r\n    //                     if( array[u+38*b] ==100 && array[u+39*b] ==100){\r\n    //                         array[u+38*b] = 0\r\n    //                         array[u+39*b] = 0\r\n    //                     }\r\n    //                     if( array[u-38*b]==100 && array[u+39*b] == 100){\r\n    //                         array[u-38*b] = 0\r\n    //                         array[u-39*b] = 0\r\n    //                     }\r\n    //                 }\r\n    //                 else if( array[u][5] != 100 && array[u][5] == data[k][5]){\r\n    //                     if( array[u+38*b] ==100 ){\r\n    //                         array[u+38*b] = 0\r\n    //                     }\r\n    //                     if( array[u-38*b]==100 ){\r\n    //                         array[u-38*b] = 0\r\n    //                     }\r\n    //                 }\r\n                    \r\n    //             }catch{}\r\n    //         }\r\n    //         b++\r\n    //     }\r\n    //     k++\r\n    // }\r\n\r\n}\r\n\r\nconst checking_plus_1 = (array,array2,data) => {\r\n\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\r\n            if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6] && array[u+1] != 100 && data[5] == array[u+1][5] || data[6] == array[u+1][6]){\r\n                for(let b =0; b < totalRoom; b++){\r\n                    let indexArray = b*38\r\n                    if( array[u+indexArray] ==100 && array[u+indexArray+1] ==100){\r\n                        array[u+indexArray] = 0\r\n                        array[u+indexArray+1] = 0\r\n                    }\r\n                    if( array[u-indexArray] ==100 && array[u-indexArray+1] ==100){\r\n                        array[u-indexArray] = 0\r\n                        array[u-indexArray+1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n\r\n    for(let u = 0; u < array2.length; u++){\r\n        try{\r\n            //if( array2[u] != 100 && array2[u][5] == data[5] && array2[u+1] != 100 && array2[u+1][5] == data[5]){\r\n            if( array2[u] != 100 && data[5] == array2[u][5] || data[6] == array2[u][6] && array2[u+1] != 100 && data[5] == array2[u+1][5] || data[6] == array2[u+1][6]){\r\n                for(let b =0; b < totalRoom; b++){\r\n                    let indexArray2 = b*38\r\n                    if( array2[u+indexArray2] ==100 && array2[u+indexArray2+1] ==100){\r\n                        array2[u+indexArray2] = 0\r\n                        array2[u+indexArray2+1] = 0\r\n                    }\r\n                    if( array2[u-indexArray2] ==100 && array2[u-indexArray2+1] ==100){\r\n                        array2[u-indexArray2] = 0\r\n                        array2[u-indexArray2+1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array\r\n}\r\n\r\nconst checking_3 = (array,array2,data) =>{\r\n\r\n\r\n    let k =0\r\n    let b =0\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u-1] != 100 && array[u-1][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\r\n            if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]  && array[u-1] != 100 && data[5] == array[u-1][5] && array[u+1] != 100 && data[5] == array[u+1][5] || data[6] == array[u-1][6] && array[u+1] != 100 && data[6] == array[u+1][6]){\r\n                for(let b =0; b < totalRoom; b++){\r\n                    let indexArray = b*38\r\n\r\n                    if( array[u+indexArray] ==100 && array[u+indexArray-1] ==100){\r\n                        array[u+indexArray] = 0\r\n                        array[u+indexArray-1] = 0\r\n                    }\r\n                    if( array[u-indexArray] ==100 && array[u-indexArray-1] ==100){\r\n                        array[u-indexArray] = 0\r\n                        array[u-indexArray-1] = 0\r\n                    }\r\n                    if( array[u+indexArray] ==100 && array[u+indexArray+1] ==100){\r\n                        array[u+indexArray] = 0\r\n                        array[u+indexArray+1] = 0\r\n                    }\r\n                    if( array[u-indexArray] ==100 && array[u-indexArray+1] ==100){\r\n                        array[u-indexArray] = 0\r\n                        array[u-indexArray+1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n\r\n    for(let u = 0; u < array2.length; u++){\r\n        try{\r\n            //if( array2[u] != 100 && array2[u][5] == data[5] && array2[u-1] != 100 && array2[u-1][5] == data[5] && array2[u+1] != 100 && array2[u+1][5] == data[5]){\r\n            if( array2[u] != 100 && data[5] == array2[u][5] || data[6] == array2[u][6]  && array2[u-1] != 100 && data[5] == array2[u-1][5] && array2[u+1] != 100 && data[5] == array2[u+1][5] || data[6] == array2[u-1][6] && array2[u+1] != 100 && data[6] == array2[u+1][6]){\r\n                for(let b =0; b < totalRoom2; b++){\r\n                    let indexArray2 = b*38\r\n\r\n                    if( array2[u+indexArray2] ==100 && array2[u+indexArray2-1] ==100){\r\n                        array2[u+indexArray2] = 0\r\n                        array2[u+indexArray2-1] = 0\r\n                    }\r\n                    if( array2[u-indexArray2] ==100 && array2[u-indexArray2-1] ==100){\r\n                        array2[u-indexArray2] = 0\r\n                        array2[u-indexArray2-1] = 0\r\n                    }\r\n                    if( array2[u+indexArray2] ==100 && array2[u+indexArray2+1] ==100){\r\n                        array2[u+indexArray2] = 0\r\n                        array2[u+indexArray2+1] = 0\r\n                    }\r\n                    if( array2[u-indexArray2] ==100 && array2[u-indexArray2+1] ==100){\r\n                        array2[u-indexArray2] = 0\r\n                        array2[u-indexArray2+1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array\r\n}\r\n\r\nconst checking_only_1 = (array,array2,data) => {\r\n\r\n    let k =0\r\n    let b =0\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]){\r\n                for(let b =0; b < totalRoom; b++){\r\n                    if( array[u+38*b] ==100){\r\n                        array[u+38*b] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    for(let u = 0; u < array2.length; u++){\r\n        try{\r\n            if( array2[u] != 100 && data[5] == array2[u][5] || data[6] == array2[u][6]){\r\n                for(let b =0; b < totalRoom2; b++){\r\n                    if( array2[u+38*b] ==100){\r\n                        array2[u+38*b] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array\r\n\r\n}\r\n\r\nconst changeRowtoZero_minus_1 = (array,array2,index1,index2) => {\r\n    let k =0\r\n    let b =0\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            if( u == index1 && u-1 == index2){\r\n                for(let b =0; b < totalRoom; b++){\r\n                    let indexArray = b*38\r\n                    if( array[u+indexArray] ==100 && array[u+indexArray-1] ==100){\r\n                        array[u+indexArray] = 0\r\n                        array[u+indexArray-1] = 0\r\n                    }\r\n                    if( array[u-indexArray]==100 && array[u-indexArray-1] == 100){\r\n                        array[u-indexArray] = 0\r\n                        array[u-indexArray-1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n\r\n    for(let u = 0; u < array2.length; u++){\r\n        try{\r\n            if( u == index1 && u-1 == index2){\r\n                for(let b =0; b < totalRoom2; b++){\r\n                    let indexArray = b*38\r\n                    if( array2[u+indexArray] ==100 && array2[u+indexArray-1] ==100){\r\n                        array2[u+indexArray] = 0\r\n                        array2[u+indexArray-1] = 0\r\n                    }\r\n                    if( array2[u-indexArray]==100 && array2[u-indexArray-1] == 100){\r\n                        array2[u-indexArray] = 0\r\n                        array2[u-indexArray-1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array    \r\n}\r\n\r\nconst changeRowtoZero_plus_1 = (array,array2,index1,index2) => {\r\n    let k =0\r\n    let b =0\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            if( u == index1 && u-1 == index2){\r\n                for(let b =0; b < totalRoom; b++){\r\n                    let indexArray = b*38\r\n                    if( array[u+indexArray] ==100 && array[u+indexArray+1] ==100){\r\n                        array[u+indexArray] = 0\r\n                        array[u+indexArray+1] = 0\r\n                    }\r\n                    if( array[u-indexArray]==100 && array[u-indexArray+1] == 100){\r\n                        array[u-indexArray] = 0\r\n                        array[u-indexArray+1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n\r\n    for(let u = 0; u < array2.length; u++){\r\n        try{\r\n            if( u == index1 && u-1 == index2){\r\n                for(let b =0; b < totalRoom2; b++){\r\n                    let indexArray2 = b*38\r\n                    if( array2[u+indexArray2] ==100 && array2[u+indexArray2+1] ==100){\r\n                        array2[u+indexArray2] = 0\r\n                        array2[u+indexArray2+1] = 0\r\n                    }\r\n                    if( array2[u-indexArray2]==100 && array2[u-indexArray2+1] == 100){\r\n                        array2[u-indexArray2] = 0\r\n                        array2[u-indexArray2+1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array    \r\n}\r\n\r\nconst changeRowtoZero_1 = (array,array2,index1) => {\r\n    let k =0\r\n    let b =0\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            if( u == index1){\r\n                for(let b =0; b < totalRoom; b++){\r\n                    let indexArray = b*38\r\n                    if( array[u+indexArray] ==100 ){\r\n                        array[u+indexArray] = 0\r\n                    }\r\n                    if( array[u-indexArray] ==100 ){\r\n                        array[u-indexArray] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n\r\n    for(let u = 0; u < array2.length; u++){\r\n        try{\r\n            if( u == index1){\r\n                for(let b =0; b < totalRoom2; b++){\r\n                    let indexArray2 = b*38\r\n                    if( array2[u+indexArray2] ==100 ){\r\n                        array2[u+indexArray2] = 0\r\n                    }\r\n                    if( array2[u-indexArray2] ==100 ){\r\n                        array2[u-indexArray2] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array    \r\n}\r\n\r\nconst changeRowtoZero_3_ = (array,array2,index1,index2,index3) => {\r\n    let k =0\r\n    let b =0\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            if( u == index1 && u-1 == index2 && u+1 == index3){\r\n                for(let b =0; b < totalRoom; b++){\r\n                    let indexArray = b*38\r\n                    if( array[u+indexArray] ==100 && array[u+indexArray-1] ==100  && array[u+indexArray+1] == 100 ){\r\n                        array[u+indexArray] = 0\r\n                        array[u+indexArray-1] = 0\r\n                        array[u+indexArray+1] = 0\r\n                    }\r\n                    if( array[u-indexArray] ==100 && array[u-indexArray-1] ==100  && array[u-indexArray+1] == 100){\r\n                        array[u-indexArray] = 0\r\n                        array[u-indexArray-1] = 0\r\n                        array[u-indexArray+1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n\r\n\r\n    for(let u = 0; u < array2.length; u++){\r\n        try{\r\n            if( u == index1 && u-1 == index2 && u+1 == index3){\r\n                for(let b =0; b < totalRoom2; b++){\r\n                    let indexArray = b*38\r\n                    if( array2[u+indexArray] ==100 && array2[u+indexArray-1] ==100  && array2[u+indexArray+1] == 100 ){\r\n                        array2[u+indexArray] = 0\r\n                        array2[u+indexArray-1] = 0\r\n                        array2[u+indexArray+1] = 0\r\n                    }\r\n                    if( array2[u-indexArray] ==100 && array2[u-indexArray-1] ==100  && array2[u-indexArray+1] == 100){\r\n                        array2[u-indexArray] = 0\r\n                        array2[u-indexArray-1] = 0\r\n                        array2[u-indexArray+1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array    \r\n}\r\n\r\nconst changeToZero = (array) => {\r\n    for(let i = 0; i < array.length; i++){\r\n        if(array[i] == 0){\r\n            array[i] = 100\r\n        }\r\n    }\r\n    return array;\r\n}\r\n\r\n\r\nconst checkTest = (array,array2,data1) => {\r\n    let count =0\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n     let indexArray = (x * 38)\r\n        try{\r\n         for(let i = 1; i<array.length ; i++){\r\n                //if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 1 && array[i+indexArray] != 0 ){\r\n                    try{\r\n                        if(data1 == array[i][5]){\r\n                            if(array[i+indexArray] == 100){\r\n                                array[i+indexArray] = 0\r\n                            }\r\n\r\n                         }\r\n                    }catch{}\r\n                //}    \r\n            }\r\n        }catch{}\r\n    }\r\n\r\n    for(let x= 1 ; x <= totalRoom2 ; x++){\r\n        let indexArray2 = (x * 38)\r\n           try{\r\n            for(let i = 1; i<array2.length ; i++){\r\n                   //if(array2[i+indexArray2] != 100 && array2[i+indexArray2] != undefined && array2[i+indexArray2] != 1 && array2[i+indexArray2] != 0 ){\r\n                       try{\r\n                           if(data1 == array2[i][5]){\r\n                               if(array2[i+indexArray2] == 100){\r\n                                   array2[i+indexArray2] = 0\r\n                               }\r\n   \r\n                            }\r\n                       }catch{}\r\n                   //}    \r\n               }\r\n           }catch{}\r\n       }\r\n    return array\r\n}\r\n\r\nlet startIndex100 = DataArray50-1\r\n\r\n\r\nconst array1DCombine = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrCombine = array1DCombine(combineArray);\r\n\r\n//create 1d array for dataset less than 50\r\n    const array1D50 = (data) => {\r\n        var result = []\r\n    \r\n        for(let i = 0; i< data; i++){\r\n            result[i]= 100;\r\n        }\r\n        return result;\r\n    }\r\n    var AntArr50 = array1D50(DataArray50);\r\n    \r\n    let insertedData50_Slot2_2 = []\r\n    let insertedData50_Slot2_1= []\r\n    \r\n    let arrayLength50 =  DataArray50\r\n    const AntAlgoInsert50 = (array,combine) => {\r\n\r\n        //array.length = 1064 (last index = 1063)\r\n        //arrayLength50 = 646 (last index = 645)\r\n\r\n\r\n        let test = []\r\n        let k = 0;\r\n        let k2 =0\r\n        let k3 =0\r\n        let k4=0\r\n        let k5 =0\r\n        let count = 0;\r\n        let b = 1\r\n    \r\n        \r\n        let remainderArray = []\r\n        let remainderArraySlot1 = []\r\n        let totalRoom = array.length / 38\r\n\r\n    \r\n        for(let x=0; x<filterData50.length;x++){\r\n            test.push(filterData50[x]);\r\n        }\r\n\r\n            //for(let i = arrayLength50-1;i>0;i--){\r\n            for(let i = array.length-1;i>0;i--){\r\n                if(k < test.length){\r\n                let hourMS = test[k][7]    \r\n                //checkTest(AntArr50,test[k])\r\n                changeToZero(array);\r\n                changeToZero(combine);\r\n                if(hourMS == 2){\r\n                    //changeToZero(array)\r\n                    const j = Math.floor(Math.random()*(i+1));\r\n                    // checking_minus_1(array,test[k])\r\n                    // checking_plus_1(array,test[k])\r\n                    checking_minus_1(combine,array,test[k])\r\n                    checking_plus_1(combine,array,test[k])\r\n                    //checking_only_1(array,test[k])\r\n                    //checkTest(AntArr50,test[k])\r\n                    if(array[i] == 100 && array[i-1] == 100){\r\n                            array[i] = array[j];\r\n                            array[i-1] = array[j-1];\r\n                            array[j] = test[k];\r\n                            array[j-1] = test[k];\r\n                            combine[j] = test[k];\r\n                            combine[j-1] = test[k];\r\n                            //changeRowtoZero_minus_1(array,i,i-1)\r\n                            changeRowtoZero_minus_1(combine,array,i,i-1)\r\n                            //checking_minus_1(array,test[k])\r\n                     }\r\n                     else if(array[i] == 100 && array[i+1] == 100){\r\n                            //checking_plus_1(array,test[k])\r\n                            array[i] = array[j];\r\n                            array[i+1] = array[j+1];\r\n                            array[j] = test[k];\r\n                            array[j+1] = test[k];\r\n                            combine[j] = test[k];\r\n                            combine[j+1] = test[k];\r\n                            //changeRowtoZero_plus_1(array,i,i+1)\r\n                            changeRowtoZero_plus_1(combine,i,i+1)\r\n                            //checking_plus_1(array,test[k])\r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                    }\r\n\r\n                }\r\n\r\n                // changeToZero(array);\r\n                // changeToZero(combine);\r\n                }\r\n                k++  \r\n            }\r\n\r\n\r\n            for(let i = arrayLength50-1;i>0;i--){\r\n                if(k4 < test.length){\r\n                let hourMS = test[k4][7]    \r\n                //checkTest(AntArr50,test[k])\r\n                changeToZero(array)\r\n                changeToZero(combine)\r\n                if(hourMS == 4){\r\n                    // checking_minus_1(array,test[k]);\r\n                    checking_minus_1(combine,array,test[k4]);\r\n                    checking_plus_1(combine,array,test[k4])\r\n                    //checking_only_1(array,test[k])\r\n                    //checkTest(AntArr50,test[k])\r\n                    const j = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100 && array[i-1] == 100 ){\r\n                            array[i] = array[j];\r\n                            array[i-1] = array[j-1];\r\n                            array[j] = test[k4];\r\n                            array[j-1] = test[k4];\r\n    \r\n                            \r\n        \r\n                            //const j = Math.floor(Math.random()*(i+1));\r\n                            changeRowtoZero_minus_1(combine,array,j,j-1);\r\n                            if(array[i] == 100 && array[i-1] == 100){\r\n                                //checking_minus_1(array,test[k]);\r\n                                array[i] = array[j];\r\n                                array[i-1] = array[j-1];\r\n                                array[j] = test[k4];\r\n                                array[j-1] = test[k4];\r\n                                //changeRowtoZero_minus_1(array,i,i-1)\r\n                                changeRowtoZero_minus_1(combine,array,j,j-1);\r\n                            }\r\n                            else if(array[i] == 100 && array[i+1] == 100){\r\n                                //checking_plus_1(array,test[k]);\r\n                                array[i] = array[j];\r\n                                array[i+1] = array[j+1];\r\n                                array[j] = test[k4];\r\n                                array[j+1] = test[k4];\r\n                                //changeRowtoZero_plus_1(array,j,j-1);\r\n                                changeRowtoZero_plus_1(combine,array,j,j-1);\r\n                            }\r\n                            else{\r\n                                remainderArraySlot1.push(combine,test[k4]);\r\n                            }\r\n                            //count += 1\r\n                        }\r\n                        else if(array[i] == 100 && array[i+1] == 100 ){\r\n                            //checking_plus_1(array,test[k]);\r\n                            array[i] = array[j];\r\n                            array[i+1] = array[j+1];\r\n                            array[j] = test[k4];\r\n                            array[j+1] = test[k4];\r\n                        \r\n                            changeRowtoZero_plus_1(combine,array,i,i-1);\r\n                            //const j = Math.floor(Math.random()*(i+1));\r\n                            if(array[i] == 100 && array[i-1] == 100){\r\n                            //checking_minus_1(array,test[k]);\r\n                                array[i] = array[j];\r\n                                array[i-1] = array[j-1];\r\n                                array[j] = test[k4];\r\n                                array[j-1] = test[k4];\r\n                                //changeRowtoZero_minus_1(array,i,i-1)\r\n                                changeRowtoZero_minus_1(combine,array,j,j-1);\r\n                            }\r\n                            else if(array[i] == 100 && array[i+1] == 100){\r\n                                //checking_plus_1(array,test[k]);\r\n                                array[i] = array[j];\r\n                                array[i+1] = array[j+1];\r\n                                array[j] = test[k4];\r\n                                array[j+1] = test[k4];\r\n                                //changeRowtoZero_plus_1(array,i,i-1);\r\n                                changeRowtoZero_plus_1(combine,array,j,j-1);\r\n                            }\r\n                            else{\r\n                                remainderArraySlot1.push(test[k4]);\r\n                            }\r\n                        }\r\n                        else{\r\n                            remainderArray.push(test[k4]);\r\n                        }\r\n    \r\n                }\r\n\r\n                changeToZero(array);\r\n                }\r\n                k4++  \r\n            }\r\n\r\n            // for(let i = arrayLength50-1;i>0;i--){\r\n            //     if(k5 < test.length){\r\n            //     let hourMS = test[k5][7]    \r\n            //     //checkTest(AntArr50,test[k])\r\n            //     changeToZero(array)\r\n            //     if(hourMS == 3){\r\n            //         const j = Math.floor(Math.random()*(i+1)); \r\n    \r\n            //             checking_3(array,test[k5]);\r\n            //             //checking_only_1(array,test[k])\r\n            //             //checkTest(AntArr50,test[k])\r\n            //             if( array[i] == 100 && array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n            //                 //checking_3(array,test[k]);\r\n            //                 array[i] = array[j];\r\n            //                 array[i-1] = array[j-1];\r\n            //                 array[i+1] = array[j+1];\r\n            //                 array[j] = test[k5];\r\n            //                 array[j-1] = test[k5];\r\n            //                 array[j+1] = test[k5];\r\n            //                 changeRowtoZero_3_(array,i,i-1,i+1)\r\n            //             }else if(array[i] == 100 && array[i-1] == 100){//slot 2 hours in 1 go\r\n            //                 //checking_minus_1(array,test[k]);\r\n            //                 array[i] = array[j];\r\n            //                 array[i-1] = array[j-1];\r\n            //                 array[j] = test[k5];\r\n            //                 array[j-1] = test[k5];\r\n            //                 insertedData50_Slot2_1.push(test[k5])\r\n            //                 changeRowtoZero_minus_1(array,i,i-1)\r\n            //             }else if(array[i] == 100 && array[i+1] == 100){//slot 2 hours in 1 go\r\n            //                 //checking_plus_1(array,test[k]);\r\n            //                 array[i] = array[j];\r\n            //                 array[i+1] = array[j+1];\r\n            //                 array[j] = test[k5];\r\n            //                 array[j+1] = test[k5];\r\n            //                 insertedData50_Slot2_1.push(test[k5])\r\n            //                 changeRowtoZero_plus_1(array,i,i-1);\r\n            //             }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n            //                 //checking_only_1(array,test[k]);\r\n            //                 array[i] = array[j];\r\n            //                 array[j] = test[k5];\r\n            //                 changeRowtoZero_1(array,i)\r\n            //                 remainderArraySlot1.push(test[k5])\r\n            //             }\r\n            //     }\r\n\r\n            //     changeToZero(array);\r\n            //     }\r\n            //     k5++  \r\n            // }\r\n\r\n\r\n     //changeToZero(array) \r\n\r\n     //fullfill the slot 3\r\n    //  for(let x = 0; x< arrayLength50; x++){\r\n    //     if(k3 < remainderArraySlot1.length){    \r\n            \r\n    //         // for(let x= 1 ; x <= totalRoom ; x++){\r\n    //         //     let indexArray = (x * 38)\r\n    //         //        try{\r\n    //         //         for(let i = 1; i<array.length ; i++){\r\n    //         //             try{\r\n    //         //                 if(remainderArraySlot1[k3][5] == array[i][5]){\r\n    //         //                     if(array[i+indexArray] == 100){\r\n    //         //                         array[i+indexArray] = 0\r\n    //         //                     }\r\n    \r\n    //         //                 }\r\n    //         //             }catch{}\r\n    //         //            }\r\n    //         //        }catch{}\r\n    //         //    }\r\n            \r\n    //         //checking_only_1(array, remainderArraySlot1[k3])\r\n    //         //checkTest(AntArr50,remainderArraySlot1[k3])\r\n    //         checking_plus_1(array,remainderArraySlot1[k3])\r\n    //         if(array[x] == 100 && array[x+1] ==100){\r\n    //             //changeRowtoZero_plus_1(array,remainderArraySlot1[k3])\r\n    //             array[x] = remainderArraySlot1[k3]\r\n    //             array[x+1] = remainderArraySlot1[k3]\r\n    //             changeRowtoZero_plus_1(array,x,x+1)\r\n    //         }else{insertedData50_Slot2_2.push(remainderArraySlot1[k3])}\r\n    //      }\r\n    //      k3++   \r\n    //  }\r\n    //  changeToZero(array);\r\n\r\n     \r\n    //  for(let x = 0; x< arrayLength50; x++){\r\n    //     if(k2 < remainderArray.length){\r\n    //         //checking_only_1(array,remainderArray[k2])\r\n    //         //checking_plus_1(array,remainderArray[k2]);\r\n    //         // for(let x= 1 ; x <= totalRoom ; x++){\r\n    //         //     let indexArray = (x * 38)\r\n    //         //        try{\r\n    //         //         for(let i = 1; i<array.length ; i++){\r\n    //         //             try{\r\n    //         //                 if(remainderArray[k2][5] == array[i][5]){\r\n    //         //                     if(array[i+indexArray] == 100){\r\n    //         //                         array[i+indexArray] = 0\r\n    //         //                     }\r\n    \r\n    //         //                 }\r\n    //         //             }catch{}\r\n    //         //            }\r\n    //         //        }catch{}\r\n    //         //    }\r\n    //         //checkTest(AntArr50,remainderArray[k2])\r\n    //         checking_plus_1(array,remainderArray[k2])\r\n    //          if(array[x] == 100 && array[x+1] ==100){\r\n    //              //if(k2 < remainderArray.length){\r\n    //                 //changeRowtoZero_plus_1(array,remainderArraySlot1[k2])\r\n    //                  array[x] = remainderArray[k2]\r\n    //                  array[x+1] = remainderArray[k2]\r\n    //                  changeRowtoZero_plus_1(array,x,x+1)\r\n    //              }\r\n    //              try{\r\n    //                  let slot2 = remainderArray[k2][10]\r\n    //                  if(slot2 == 1){\r\n    //                      insertedData50_Slot2_1.push(remainderArray[k2])\r\n    //                  }\r\n    //                  if(slot2 == 2){\r\n    //                     insertedData50_Slot2_2.push(remainderArray[k2])\r\n    //                 }\r\n    //              }catch{}\r\n    //      }\r\n    //      k2++   \r\n    //  }\r\n    //  changeToZero(array)\r\n\r\n    //  for(let i = 0; i < arrayLength50; i++){\r\n    //     if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n    //         count += 1\r\n    //     }\r\n    // }\r\n    console.log(count);\r\n    \r\n     if(array[-1] != undefined){\r\n         insertedData50_Slot2_1.push(array[-1]);\r\n     }\r\n    \r\n        return array;\r\n    }\r\n    \r\n    //var AntArrIns50 = AntAlgoInsert50(AntArr50);\r\n    var AntArrIns50 = AntAlgoInsert50(AntArr50,AntArrCombine);\r\n    //console.log(AntArrIns50);\r\n    \r\n     const slot2Equal1for50= (array) => {\r\n         let k = 0;\r\n         let test2 = []\r\n        let totalRoom = array.length / 38\r\n\r\n         for(let x = 0; x< arrayLength50; x++){\r\n                if(array[x] == 100){\r\n                    if(k < insertedData50_Slot2_1.length){\r\n                        //checking_plus_1(array,test[k])\r\n                        checking_only_1(array,insertedData50_Slot2_1[k])\r\n                        //checkTest(AntArr50,insertedData50_Slot2_1[k])\r\n                    //changeRowtoZero_plus_1(array,insertedData50_Slot2_1[k])\r\n                    // for(let x= 1 ; x <= totalRoom ; x++){\r\n                    //     let indexArray = (x * 38)\r\n                    //        try{\r\n                    //         for(let i = 1; i<array.length ; i++){\r\n                    //             try{\r\n                    //                 if(insertedData50_Slot2_1[k][5] == array[i][5]){\r\n                    //                     if(array[i+indexArray] == 100){\r\n                    //                         array[i+indexArray] = 0\r\n                    //                     }\r\n            \r\n                    //                 }\r\n                    //             }catch{}\r\n                    //            }\r\n                    //        }catch{}\r\n                    //    }\r\n                     array[x] = insertedData50_Slot2_1[k]\r\n                    //changeRowtoZero_1(array,x)\r\n                    }\r\n                    k++   \r\n             }\r\n         }\r\n         changeToZero(array)\r\n         return array;\r\n     }\r\n    //slot2Equal1for50(AntArr50);\r\n    //slot2Equal1for50(AntArrCombine);\r\n    \r\n    \r\n     const slot2Equal2for50 = (array) => {\r\n         let k = 0;\r\n        let totalRoom = array.length / 38\r\n\r\n         for(let x = 0; x< arrayLength50; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                if(k < insertedData50_Slot2_2.length){\r\n                    //checking_only_1(array,insertedData50_Slot2_2[k])\r\n                    //checkTest(AntArr50,insertedData50_Slot2_2[k])\r\n                    checking_plus_1(array,insertedData50_Slot2_2[k])\r\n                    //changeRowtoZero_plus_1(array,insertedData50_Slot2_2[k])\r\n                    // for(let x= 1 ; x <= totalRoom ; x++){\r\n                    //     let indexArray = (x * 38)\r\n                    //        try{\r\n                    //         for(let i = 1; i<array.length ; i++){\r\n                    //             try{\r\n                    //                 if(insertedData50_Slot2_2[k][5] == array[i][5]){\r\n                    //                     if(array[i+indexArray] == 100){\r\n                    //                         array[i+indexArray] = 0\r\n                    //                     }\r\n            \r\n                    //                 }\r\n                    //             }catch{}\r\n                    //            }\r\n                    //        }catch{}\r\n                    //    }\r\n                     array[x] = insertedData50_Slot2_2[k]\r\n                     array[x+1] = insertedData50_Slot2_2[k]\r\n                     //changeRowtoZero_plus_1(array,x,x+1)\r\n                 }\r\n                 k++\r\n             }\r\n         }\r\n         changeToZero(array)\r\n    \r\n         if(array[-1] != undefined){\r\n             insertedData50_Slot2_1.push(array[-1]);\r\n         }\r\n    \r\n         return array;\r\n     }\r\n     //slot2Equal2for50(AntArr50);\r\n     //slot2Equal2for50(AntArrCombine);\r\n    \r\n    const checkAmountData50_2 = (array) => {\r\n        let count = 0\r\n        for(let i = 0; i < array.length; i++){\r\n                if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n                    count += 1\r\n                }\r\n        }\r\n        return count\r\n    }\r\n    //var checkAmount_2 = checkAmountData50_2(AntArrIns50)\r\n    var checkAmount_2 = checkAmountData50_2(AntArrIns50)\r\n    console.log(AntArrIns50)\r\n    console.log(\"Amount of data: \" +checkAmount_2);\r\n    \r\n    const checkAmountData50_0 = (array) => {\r\n        let count = 0\r\n        for(let i = 0; i < array.length; i++){\r\n                if( array[i] == 0 ){\r\n                    count += 1\r\n                }\r\n        }\r\n        return count\r\n    }\r\n     //var checkAmount_0 = checkAmountData50_0(AntArr50)\r\n     var checkAmount_0 = checkAmountData50_0(AntArr50)\r\n    console.log(\"zero counter: \"+checkAmount_0);\r\n\r\n\r\n    const checkAmountDataCombine_2 = (array) => {\r\n        let count = 0\r\n        for(let i = 0; i < array.length; i++){\r\n                if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n                    count += 1\r\n                }\r\n        }\r\n        return count\r\n    }\r\n    var checkAmount_combine = checkAmountDataCombine_2(AntArrCombine)\r\n    console.log(AntArrCombine)\r\n    console.log(\"Amount of data: \" +checkAmount_combine);\r\n    \r\n    const checkAmountDataCombine = (array) => {\r\n        let count = 0\r\n        for(let i = 0; i < array.length; i++){\r\n                if( array[i] == 0 ){\r\n                    count += 1\r\n                }\r\n        }\r\n        return count\r\n    }\r\n     //var checkAmount_0 = checkAmountData50_0(AntArr50)\r\n     var checkAmount_combineData = checkAmountDataCombine(AntArrCombine)\r\n    console.log(\"zero counter: \"+checkAmount_combineData);\r\n\r\n//______________________________________________________________________________________________________________________________________________\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//______________________________________________________________________________________________________________________________________________\r\n\r\n//---------------------------------------------------------------------------------------------------------------------------------------------\r\n//----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n//console.log(dataCombine)\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n// Hard Constraint \r\n// H1: No student attend more than one class/ event at the same time\r\n// H2: The room is large enough to accomodate all of the student in attendace while also meeting the requirement \r\n// H3: At any given time, each room can onle have one course booked\r\n// H4: No student attend class during 12:00 pm -2:00 due to solat jumaat\r\n// H5: One teacher can only teach one class at one time.\r\n\r\n//Check for the H1 violation: same group attend more than 1 class at 1 time\r\n\r\nconst check1Group = (array) => {\r\n   let count =0\r\n   let indexArray = 0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       indexArray = (x * 38)\r\n   }\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       try{\r\n           //for(let x= 1 ; x <= totalRoom ; x++){\r\n            for(let i = 0; i<array.length ; i++){\r\n               indexArray = (x * 37)\r\n               if(array[i+indexArray] != 100 && array[i+indexArray] != undefined  && array[i+indexArray] != 1 && array[i+indexArray] != 0 ){\r\n                   try{\r\n                       //if(array[i][6] == array[i+indexArray][6] && array[i+1][6] == array[i+indexArray+1][6] && array[i][5] == array[i+indexArray][5] && array[i+1][5] == array[i+indexArray+1][5]){\r\n                       if(array[i][6] == array[i+indexArray][6] && array[i][5] == array[i+indexArray][5]){\r\n                            try{\r\n                                // console.log(i)\r\n                                // console.log(i+indexArray)\r\n                                count +=1\r\n                            }catch{}\r\n                       }\r\n                   }catch{}\r\n               }   \r\n           }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n}\r\n\r\nvar checkH1_ALL = check1Group(combineArray)\r\nconsole.log(\"HC1 Counter: \"+checkH1_ALL);\r\n//var checkH1_ALLElective = check1Group(dataCombineElective)\r\n\r\n\r\n\r\n\r\n\r\n//Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\r\n\r\nconst checkRoomQuota = (array) => {\r\n   let count = 0\r\n   return count \r\n}\r\n//var checkH2_ALL = checkRoomQuota(dataCombine)\r\n//var checkH2_ALLElective = checkRoomQuota(dataCombineElective)\r\n\r\n\r\n//Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\r\nconst checkSolatJummat = (array) => {\r\n   let count = 0\r\n   return count \r\n}\r\n//var checkH4_ALL = checkSolatJummat(dataCombine)\r\n//var checkH4_ALLElective = checkSolatJummat(dataCombineElective)\r\n\r\n//Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\r\n\r\nconst check1Teacher = (array) => {\r\n   let count =0\r\n   let indexArray = 0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n    indexArray = (x * 38)\r\n       try{\r\n        for(let i = 1; i<array.length ; i++){\r\n               if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 1 && array[i+indexArray] != 0 ){\r\n                   try{\r\n                       if(array[i][5] == array[i+indexArray][5]){\r\n                           console.log(i)\r\n                           console.log(i+indexArray)\r\n                           count +=1\r\n                        }\r\n                   }catch{}\r\n               }    \r\n           }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n\r\n}\r\nvar checkH5_ALL = check1Teacher(combineArray)\r\nconsole.log(\"HC5 Counter: \"+checkH5_ALL)\r\n//var checkH5_ALLElective = check1Group(dataCombineElective)\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n// Soft Constraint \r\n// S1: A student has a class schedule toward the end of the day\r\n// S2: A student have more than two class in a row\r\n\r\n\r\n//Check for the S1 violation: student have class at the end of the day\r\nconst checkEndOfClass = (array) => {\r\n   let count =0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       let indexArray = (x * 37)\r\n       if(array[indexArray] != 100 ){\r\n           count = 1\r\n       }\r\n   }\r\n   return count\r\n\r\n}\r\n// var checkS1_50 = checkEndOfClass(AntArr50)\r\n// var checkS1_100 = checkEndOfClass(AntArr50)\r\n// var checkS1_200 = checkEndOfClass(AntArr200)\r\n// var checkS1_500 = checkEndOfClass(AntArr500)\r\n// var checkS1_Elective50 = checkEndOfClass(AntArrElective50)\r\n// var checkS1_Elective100 = checkEndOfClass(AntArrElective100)\r\n// var checkS1_Elective200 = checkEndOfClass(AntArrElective200)\r\n// var checkS1_Elective500 = checkEndOfClass(AntArrElective500)\r\n\r\n\r\n//Check for the S2 violation: teacher have 2 class in a row\r\n\r\nconst check2ClassInARow = (array) => {\r\n   let count =0\r\n   for(let i = 0; i < array.length; i++){\r\n       try{\r\n        if(array[i][5] != undefined && array[i+3][5] != undefined && array[i+2][5] != undefined && array[i+4][5] != undefined){\r\n            if(array[i][5] == array[i+3][5] && array[i+2][5] == array[i+4][5]){\r\n                count = 1\r\n            }\r\n       }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n}\r\n// var checkS2_50 = check2ClassInARow(AntArr50)\r\n// var checkS2_100 = check2ClassInARow(AntArr50)\r\n// var checkS2_200 = check2ClassInARow(AntArr200)\r\n// var checkS2_500 = check2ClassInARow(AntArr500)\r\n// var checkS2_Elective50 = check2ClassInARow(AntArrElective50)\r\n// var checkS2_Elective100 = check2ClassInARow(AntArrElective100)\r\n// var checkS2_Elective200 = check2ClassInARow(AntArrElective200)\r\n// var checkS2_Elective500 = check2ClassInARow(AntArrElective500)\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n\r\n//Check total Hard Constraint\r\n\r\n// const checkTotalHardContraint = () => {\r\n//    let count =0\r\n//    //let totalH1 = checkH1_ALL\r\n// //    let totalH2 = checkH2_ALL\r\n// //    let totalH4 = checkH4_ALL\r\n// //    let totalH5 = checkH5_ALL\r\n\r\n// //    let totalH1_Elective = checkH1_ALLElective\r\n// //    let totalH2_Elective = checkH2_ALLElective\r\n// //    let totalH4_Elective = checkH4_ALLElective\r\n// //    let totalH5_Elective = checkH5_ALLElective\r\n//    //let totalHC = totalH1 + totalH2 + totalH4 + totalH5 + totalH1_Elective + totalH2_Elective + totalH4_Elective + totalH5_Elective\r\n//    //let totalHC = totalH1 + totalH2 + totalH4 + totalH5\r\n//    //let totalHC = totalH2 + totalH4 + totalH5\r\n//    //let totalHC = totalH1 + totalH2 + totalH4 + totalH5 \r\n\r\n// //    if( totalHC != 0){\r\n// //        count +=1\r\n// //    }   \r\n\r\n//    return totalHC\r\n// }\r\n// var checkTotalHardContraints = checkTotalHardContraint()\r\n// console.log(\"Total Hard Constraint: \"+checkTotalHardContraints)\r\n\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n// const checkTotalSoftContraint = () => {\r\n//     let count =0\r\n//     let totalS1 = checkS1_50 + checkS1_100 + checkS1_200 + checkS1_500 + checkS1_Elective50 + checkS1_Elective100 + checkS1_Elective200 + checkS1_Elective500\r\n//     let totalS2 = checkS2_50 + checkS2_100 + checkS2_200 + checkS2_500 + checkS2_Elective50 + checkS2_Elective100 + checkS2_Elective200 + checkS2_Elective500\r\n    \r\n//     if(totalS1 != 0){\r\n//         count +=1\r\n//     }\r\n//     if(totalS2 != 0){\r\n//         count +=1\r\n//     }   \r\n//     return count\r\n// }\r\n// var checkTotalSoftContraints = checkTotalSoftContraint()\r\n//console.log(\"Total Soft Constraint: \"+checkTotalSoftContraints)\r\n//----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n// const change100ToEmpty = (data) => {\r\n//     for(let i = 0; i< data.length; i++){\r\n//         if(data[i] == 100){\r\n//             data[i] = [];\r\n//         }\r\n//     }\r\n//     return data;\r\n// }\r\n// //let finalData = change100ToEmpty(combineData)\r\n\r\n// const change100ToEmptyElective = (data) => {\r\n//     for(let i = 0; i< data.length; i++){\r\n//         if(data[i] == 100){\r\n//             data[i] = [];\r\n//         }\r\n//     }\r\n//     return data;\r\n// }\r\n// let finalDataElective = change100ToEmptyElective(combineElectiveData)\r\n\r\n\r\n// const checkMissingData = (data50,data100,data200,data500,dataE50,dataE100,dataE200,dataE500) => {\r\n//     let countData = []\r\n//     for(let i = 0; i< courseData[0].length;i++){\r\n//         for(let j = 0; j <courseData[0][i][7]; j++){\r\n//             countData.push(courseData[0][i]);\r\n//         }\r\n//     }\r\n\r\n//     let totalGenerateScheduleData = data50 + data100 + data200 + data500 + dataE50 + dataE100 + dataE200 + dataE500\r\n\r\n//     if(countData.length == totalGenerateScheduleData){\r\n  \r\n//     }else{\r\n\r\n//     }\r\n// }\r\n// //checkMissingData(checkAmount50,checkAmount100,checkAmount200,checkAmount500,checkAmountElective50,checkAmountElective100,checkAmountElective200,checkAmountElective500)\r\n\r\n\r\n// checkTotalHardContraintsAll = checkTotalHardContraints\r\n// checkTotalSoftContraintsAll = checkTotalSoftContraints\r\n// //finalDataAll.push(finalData)\r\n// finalDataAllElective.push(finalDataElective)\r\n// //return {checkTotalHardContraints,checkTotalSoftContraints,finalData,finalDataAllElective}\r\n// return {checkTotalHardContraints,checkTotalSoftContraints,finalDataAllElective}\r\n}\r\nfor(let i = 1; i <= 1; i++){\r\n    let antSystemAlgo = antSystem();\r\n}\r\n// -------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n// let trigger = 0\r\n\r\n// const iteration = () => {\r\n//         antSystem()\r\n//         let globalBestHS = checkTotalHardContraintsAll \r\n//         let globalBestSS = checkTotalSoftContraintsAll\r\n//         let globalBestScehdule = finalDataAll[0]\r\n//         let globalBestScehduleElective = finalDataAllElective[0]\r\n//     for(let i= 1; i <= 1; i++){\r\n//         antSystem()\r\n//         let localBestHS = checkTotalHardContraintsAll \r\n//         let localBestSS = checkTotalSoftContraintsAll\r\n//         let localBestScehdule = finalDataAll[0]\r\n//         let localBestScehduleElective = finalDataAllElective[0]\r\n//             console.log(\"iteraion: \" + i)\r\n//             if(globalBestHS > localBestHS ){\r\n//                 globalBestHS = localBestHS\r\n//                 globalBestSS = localBestSS\r\n//                 globalBestScehdule = localBestScehdule\r\n//                 globalBestScehduleElective = localBestScehduleElective\r\n//             }\r\n//             if(localBestHS == 0){\r\n//                 console.log(\"iteraion: \" + i)\r\n//                 console.log(\"workable solution is found\")\r\n//                 globalBestHS = localBestHS\r\n//                 globalBestSS = localBestSS\r\n//                 globalBestScehdule = localBestScehdule\r\n//                 globalBestScehduleElective = localBestScehduleElective\r\n//                 console.log(\"Workable Gloabal best HS: \"+globalBestHS)\r\n//                 console.log(\"Workable Gloabal best SS: \" +globalBestSS)\r\n//                 //console.log(finalDataAll[0])\r\n//                 trigger = 1\r\n//                 return [finalDataAll[0], finalDataAllElective[0]]\r\n//             }\r\n//             else if(localBestHS == 0 && localBestSS == 0){\r\n//                 console.log(\"iteraion: \" + i)\r\n//                 console.log(\"perfect solution is found\")\r\n//                 globalBestHS = localBestHS\r\n//                 globalBestSS = localBestSS\r\n//                 globalBestScehdule = localBestScehdule\r\n//                 console.log(\"Perfect Gloabal best HS: \"+globalBestHS)\r\n//                 console.log(\"Perfect Gloabal best SS: \" +globalBestSS)\r\n//                 console.log(finalDataAll[0])\r\n//                 trigger = 1\r\n//                 return [finalDataAll[0], finalDataAllElective[0]]\r\n//             }\r\n//     }\r\n//     return [finalDataAll[0], finalDataAllElective[0]]\r\n// }\r\n// let interations = iteration()\r\n\r\n// let presentableData = []\r\n// let presentableDataElective = []\r\n\r\n// if(trigger == 1){\r\n// //shot course code, course name and lecturer    \r\n// const changeToPresentationData = (data) => {\r\n//     for(let i= 0; i <= data[0].length; i++){\r\n//         try {\r\n//             presentableData.push([data[0][i][1],data[0][i][2],data[0][i][5]])\r\n//         } catch (error) {\r\n            \r\n//         }\r\n//     }\r\n//     for(let i= 0; i <= data[1].length; i++){\r\n//         try {\r\n//             presentableDataElective.push([data[1][i][1],data[1][i][2],data[1][i][5]])\r\n//         } catch (error) {\r\n            \r\n//         }\r\n//     }\r\n// }\r\n// changeToPresentationData(interations)\r\n\r\n\r\n// let allRoomName = []\r\n// for(let i = 0; i < roomData[0].length; i++){\r\n//     allRoomName.push(roomData[0][i][0])\r\n// }\r\n// allRoomName.unshift(\"Room\");\r\n// if(allRoomName.pop() == undefined){\r\n// }\r\n\r\n\r\n// let weekday = ['Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday',\r\n// 'Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday',\r\n// 'Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday',\r\n// 'Friday','Friday','Friday','Friday','Friday','Friday','Friday','Friday']\r\n\r\n// let wed = ['Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday']\r\n\r\n\r\n// const create2dArray = (weekdayArray,partDay,arrayAll, partAll) => {\r\n//     var tmp = [];\r\n\r\n//     for(var i = 0; i < weekdayArray.length; i += partDay) {\r\n//         tmp.push(weekdayArray.slice(i, i + partDay));\r\n//     }\r\n//     for(var i = 0; i < arrayAll.length; i += partAll) {\r\n//         tmp.push(arrayAll.slice(i, i + partAll));\r\n//     }\r\n//     return tmp;\r\n// }\r\n// let dataset = create2dArray(weekday,38,presentableData,38)\r\n// console.log(dataset);\r\n\r\n// const create2dArrayElective = (weekdayArray,partDay,arrayAll, partAll) => {\r\n//     var tmp = [];\r\n\r\n//     for(var i = 0; i < weekdayArray.length; i += partDay) {\r\n//         tmp.push(weekdayArray.slice(i, i + partDay));\r\n//     }\r\n//     for(var i = 0; i < arrayAll.length; i += partAll) {\r\n//         tmp.push(arrayAll.slice(i, i + partAll));\r\n//     }\r\n//     return tmp;\r\n// }\r\n// let datasetElective = create2dArrayElective(wed,10,presentableDataElective,10);\r\n// console.log(datasetElective)\r\n\r\n// //let compileDataset = dataset.concat(datasetElective);\r\n// //console.log(dataset)\r\n\r\n// const insertRoomName = (roomData,array) => {\r\n//     for(let i= 0; i<array.length; i++){\r\n//         array[i].unshift(roomData[i]);\r\n//     }\r\n//     return array;\r\n// }\r\n\r\n// insertRoomName(allRoomName,dataset)\r\n\r\n// const insertRoomNameElective = (roomData,array) => {\r\n//     for(let i= 0; i<array.length; i++){\r\n//         array[i].unshift(roomData[i]);\r\n//     }\r\n//     return array;\r\n// }\r\n\r\n// insertRoomName(allRoomName,datasetElective)\r\n\r\n\r\n// /** Convert a 2D array into a CSV string\r\n//  */\r\n//   function arrayToCsv(data){\r\n//     //console.log(data)\r\n//     return data.map(row =>\r\n//       row\r\n//       .map(String)  // convert every value to String\r\n//       .map(v => v.replaceAll('\"', '\"\"'))  // escape double colons\r\n//       .map(v => `\"${v}\"`)  // quote it\r\n//       .join(',')  // comma-separated\r\n//     ).join('\\r\\n');  // rows starting on new lines\r\n//   }\r\n\r\n// let csv = arrayToCsv(\r\n//     dataset\r\n// );\r\n\r\n// function downloadBlob(content, filename, contentType) {\r\n//     // Create a blob\r\n//     var blob = new Blob([content], { type: contentType });\r\n//     var url = URL.createObjectURL(blob);\r\n  \r\n//     // Create a link to download it\r\n//     var pom = document.createElement('a');\r\n//     pom.href = url;\r\n//     pom.setAttribute('download', filename);\r\n//     pom.click();\r\n//   }\r\n\r\n//   /** Convert a 2D array into a CSV string\r\n//    * elective\r\n//  */\r\n//    function arrayToCsvElective(data){\r\n//     //console.log(data)\r\n//     return data.map(row =>\r\n//       row\r\n//       .map(String)  // convert every value to String\r\n//       .map(v => v.replaceAll('\"', '\"\"'))  // escape double colons\r\n//       .map(v => `\"${v}\"`)  // quote it\r\n//       .join(',')  // comma-separated\r\n//     ).join('\\r\\n');  // rows starting on new lines\r\n//   }\r\n\r\n// let csvElective = arrayToCsvElective(\r\n//     datasetElective\r\n// );\r\n\r\n// function downloadBlobElective(content, filename, contentType) {\r\n//     // Create a blob\r\n//     var blob = new Blob([content], { type: contentType });\r\n//     var url = URL.createObjectURL(blob);\r\n  \r\n//     // Create a link to download it\r\n//     var pom = document.createElement('a');\r\n//     pom.href = url;\r\n//     pom.setAttribute('download', filename);\r\n//     pom.click();\r\n//   }\r\n\r\n//   downloadBlob(csv, 'ModifiedAntSystem_GeneratedSchedule.csv', 'text/csv;charset=utf-8;')\r\n//   downloadBlobElective(csvElective, 'ModifiedAntSystemElective_GeneratedSchedule.csv', 'text/csv;charset=utf-8;')\r\n// }else{\r\n//     alert(\"no workable solution found, please refersh until get workable solution\")\r\n// }\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n        }\r\n    return(\r\n        <React.Fragment>\r\n            <h1>\r\n                Generate Schedule Page\r\n            </h1>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default ArraySchedule;\r\n\r\n\r\n//result[i][j]=Course.splice(Math.floor(Math.random()* Course.length),1)[0] // create random placement of Course Value\r\n//const Schedule = new Array(10).fill(Array(5).fill(null));\r\n//console.log(Schedule);\r\n// const Course = [['TE1',4],['TE1',4],['TE1',4],['TE1',3],['TE1',4],['TE1',2],['TE1',4],['TE1',4],['TE1',4],['TE1',3]];\r\n//const Course = [['TE1',2],['TE2',2],['TE3',3],['TE4',4],['TE5',3],['TE6',4],['TE7',4],['TE8',2],['TE9',4]];\r\n//const Course = ['TE1','TE2','TE3','TE4','TE5','TE6','TE7','TE8','TE9'];"]},"metadata":{},"sourceType":"module"}