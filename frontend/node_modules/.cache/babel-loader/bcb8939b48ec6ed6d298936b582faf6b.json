{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acit\\\\Desktop\\\\FYP Code\\\\FYP Code\\\\frontend\\\\src\\\\components\\\\GenerateSchedulePage\\\\GenerateSchedulePage.js\";\nimport { concat, create, find, forEach, indexOf } from \"lodash\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { parse } from \"papaparse\";\nimport { useParams } from \"react-router-dom\";\nimport _ from 'lodash';\nimport { CSVLink } from \"react-csv\";\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\nimport { useHttpClient } from \"../hooks/http-hook\";\nimport { AuthContext } from \"../contexts/auth-context\";\nimport './GenerateSchedulePage.css';\nlet finalDataAll = [];\nlet finalDataAllElective = [];\nlet checkHardConstraintOutsite = 0;\nlet checkSoftConstraintOutsite = 0;\nlet presentableData = [];\nlet presentableDataLecturer = [];\nlet MainData = [];\nlet byLectureData = [];\nlet byCourseData = [];\nlet notDuplicatesLecturerArray = [];\nlet notDuplicatesLecturerCodeArray = [];\nlet courseCodeArray = [];\nlet courseNameArray = [];\nlet userIds = [];\nvar t0 = performance.now();\n\nconst ArraySchedule = props => {\n  const auth = useContext(AuthContext);\n  userIds.push(auth.userId);\n  const userIdcopy = [...userIds];\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedFile, setLoaadedFile] = useState(false);\n  const [roomData, setroomData] = useState();\n  const [courseData, setcourseData] = useState();\n  const [CsvData, setCsvData] = useState();\n  let disbaleButton = true; //const {isLoading, error, sendRequest, clearError} = useHttpClient();\n  // const [Keys, setKeys] = useState();\n  //const [uploadedData, setUploadedData] = useState([]);\n  //console.log(\"props dataset:\"+ props.test)\n\n  const userId = useParams().userId;\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost:5000/api/files/users/62c7e06068617362422584c9'); //const response = await fetch(`http://localhost:5000/api/files/users/${userIds[0]}`);\n        // const response = await fetch('http://localhost:5000/api/files/users/62c28ae0f47b3ade174a9707');\n        //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\n        //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\n\n        const responsedata = await response.json();\n        let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset); // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\n\n        const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Room'], Dataset['Size']]); //Extract Room\n\n        setroomData([ertRoom]);\n        const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'], Dataset['Course Code'], Dataset['Course Name'], Dataset['Year'], Dataset['Semester'], Dataset['Lecturer'], Dataset['Group'], Dataset['HMS'], Dataset['Programme Code'], Dataset['Slot1'], Dataset['Slot2'], Dataset['Lecture Code']]); //Extract Enrollment Quota\n\n        setcourseData([ertCourse]);\n\n        if (!response.ok) {\n          throw new Error(responsedata.message);\n        }\n\n        setLoaadedFile(stringifyData);\n        setIsLoading(true);\n      } catch (err) {\n        console.log(err.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, [userId]);\n\n  if (!isLoading && loadedFile) {\n    const EnrollmentQuota = [];\n    const CourseCode = [];\n    const CourseName = [];\n    const HMS = [];\n    const lecturerData = [];\n    const lecturerCodeData = [];\n    const roomName = [];\n    const roomSize = [];\n    const filterData50 = [];\n    const filterData100 = [];\n    const filterData200 = [];\n    const filterData500 = [];\n    const filterDataElective50 = [];\n    const filterDataElective100 = [];\n    const filterDataElective200 = [];\n    const filterDataElective500 = [];\n    const totalAmountofData = [];\n    var totalAmountofDataSlottedIn = 0;\n    const room = [];\n    room.push(roomData[0]);\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      let enrollment = [courseData[0][i][0]];\n      let code = [courseData[0][i][1]];\n      let hms = [courseData[0][i][7]];\n      let lecturer = [courseData[0][i][5]];\n      let courseName = [courseData[0][i][2]];\n      let lecturerCode = [courseData[0][i][11]];\n      enrollment.reduce(function (results, item, index, array) {\n        results[index] = item;\n        EnrollmentQuota.push(item);\n      }, {});\n      code.reduce(function (results, item, index, array) {\n        results[index] = item;\n        CourseCode.push(item);\n      }, {});\n      hms.reduce(function (results, item, index, array) {\n        results[index] = item;\n        HMS.push(item);\n      }, {});\n      lecturer.reduce(function (results, item, index, array) {\n        results[index] = item;\n        lecturerData.push(item);\n      }, {});\n      courseName.reduce(function (results, item, index, array) {\n        results[index] = item;\n        CourseName.push(item);\n      }, {});\n      lecturerCode.reduce(function (results, item, index, array) {\n        results[index] = item;\n        lecturerCodeData.push(item);\n      }, {});\n    }\n\n    for (let i = 0; i < roomData[0].length; i++) {\n      let name = [roomData[0][i][0]];\n      let size = [roomData[0][i][1]];\n      name.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomName.push(item);\n      }, {});\n      size.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomSize.push(item);\n      }, {});\n    }\n\n    const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\n    const notDuplicatesLecturer = lecturerData.filter((item, index) => index == lecturerData.indexOf(item));\n    const notDuplicatesCodeLecturer = lecturerCodeData.filter((item, index) => index == lecturerCodeData.indexOf(item));\n    notDuplicatesLecturer.pop();\n    notDuplicatesCodeLecturer.pop();\n\n    for (let i = 0; i < notDuplicatesLecturer.length; i++) {\n      notDuplicatesLecturerArray.push(notDuplicatesLecturer[i]);\n    }\n\n    for (let i = 0; i < notDuplicatesCodeLecturer.length; i++) {\n      notDuplicatesLecturerCodeArray.push(notDuplicatesCodeLecturer[i]);\n    }\n\n    CourseCode.pop();\n\n    for (let i = 0; i < CourseCode.length; i++) {\n      courseCodeArray.push(CourseCode[i]);\n    }\n\n    for (let i = 0; i < CourseName.length; i++) {\n      courseNameArray.push(CourseName[i]);\n    } //console.log(notDuplicatesLecturerArray)\n    //var parseNotDupLecturer = JSON.parse(notDuplicatesLecturer)\n    //notDuplicatesLecturerArray.push(parseNotDupLecturer);\n\n\n    let courseDataXElective = [];\n    let courseDataWithElective = [];\n    courseData[0].pop(); //saparate faculty course with the elective course\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      if (courseData[0][i][8] != 'ELECTIVE') {\n        //if(courseData[0][i][1].slice(0,3) != 'TMU'){\n        courseData[0][i].splice();\n        courseDataXElective.push(courseData[0][i]); // if(  courseData[0][i][1].slice(0,3) != 'TMX'){\n        //     courseData[0][i].splice()\n        //     courseDataXElective.push(courseData[0][i])\n        // }\n      }\n    } //saparate elective course with the faculty course\n\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      //console.log(courseData[0][i][8])\n      //if(courseData[0][i][1].slice(0,3) == 'TMU' ||  courseData[0][i][1].slice(0,3) == 'TMX'){\n      if (courseData[0][i][8] == 'ELECTIVE') {\n        courseDataWithElective.push(courseData[0][i]);\n      }\n    } //insert data without elective courses into correct room capacity\n\n\n    for (let i = 0; i < courseDataXElective.length; i++) {\n      if (courseDataXElective[i][0] < 50) {\n        filterData50.push(courseDataXElective[i]);\n      }\n\n      if (courseDataXElective[i][0] >= 50 && courseDataXElective[i][0] < 100) {\n        filterData100.push(courseDataXElective[i]);\n      }\n\n      if (courseDataXElective[i][0] >= 100 && courseDataXElective[i][0] < 200) {\n        filterData200.push(courseDataXElective[i]);\n      }\n\n      if (courseDataXElective[i][0] >= 200 && courseDataXElective[i][0] < 500) {\n        filterData500.push(courseDataXElective[i]);\n      }\n    } //console.log(filterData50)\n    //insert data without faculty courses into correct room capacity\n\n\n    for (let i = 0; i < courseDataWithElective.length; i++) {\n      if (courseDataWithElective[i][0] < 50) {\n        filterDataElective50.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 50 && courseDataWithElective[i][0] < 100) {\n        filterDataElective100.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 100 && courseDataWithElective[i][0] < 200) {\n        filterDataElective200.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 200 && courseDataWithElective[i][0] < 500) {\n        filterDataElective500.push(courseDataWithElective[i]);\n      }\n    }\n\n    let roomUnder50 = [];\n    let roomUnder100 = [];\n    let roomUnder200 = [];\n    let roomUnder500 = []; //separate room \n\n    const checkNumberofRoom = () => {\n      for (let i = 0; i < roomData[0].length; i++) {\n        let room = roomData[0][i][1];\n\n        if (room < 50) {\n          roomUnder50.push(room);\n        } else if (room > 50 && room < 100) {\n          roomUnder100.push(room);\n        } else if (room > 100 && room < 200) {\n          roomUnder200.push(room);\n        } else if (room > 200) {\n          roomUnder500.push(room);\n        }\n      }\n    };\n\n    checkNumberofRoom();\n\n    const createArray = data => {\n      var result = [];\n\n      for (let i = 0; i < data; i++) {\n        result[i] = [];\n      }\n\n      return result;\n    };\n\n    const totalAmountData = () => {\n      for (let i = 0; i < courseDataXElective.length; i++) {\n        for (let j = 0; j < courseDataXElective[i][7]; j++) {\n          totalAmountofData.push(courseDataXElective[i]);\n        }\n      }\n    };\n\n    totalAmountData();\n\n    const totalAmountDataElective = () => {\n      for (let i = 0; i < courseDataWithElective.length; i++) {\n        for (let j = 0; j < courseDataWithElective[i][7]; j++) {\n          totalAmountofData.push(courseDataWithElective[i]);\n        }\n      }\n    };\n\n    totalAmountDataElective();\n    let DataArray50 = roomUnder50.length * 38;\n    let DataArray100 = roomUnder100.length * 38;\n    let DataArray200 = roomUnder200.length * 38;\n    let DataArray500 = roomUnder500.length * 38;\n    let combineArray = DataArray50 + DataArray100 + DataArray200 + DataArray500;\n    let startIndex100 = DataArray50 - 1;\n    let startIndex200 = DataArray50 + DataArray100 - 1;\n    let startIndex500 = DataArray50 + DataArray100 + DataArray200 - 1;\n    let LastIndex50 = DataArray50;\n    let LastIndex100 = DataArray50 + DataArray100;\n    let LastIndex200 = DataArray50 + DataArray100 + DataArray200;\n    let LastIndex500 = DataArray50 + DataArray100 + DataArray200 + DataArray500;\n    let DataArrayElective50 = roomUnder50.length * 10;\n    let DataArrayElective100 = roomUnder100.length * 10;\n    let DataArrayElective200 = roomUnder200.length * 10;\n    let DataArrayElective500 = roomUnder500.length * 10;\n    let combineArrayElective = DataArrayElective50 + DataArrayElective100 + DataArrayElective200 + DataArrayElective500;\n    let startIndexElective100 = DataArrayElective50 - 1;\n    let startIndexElective200 = DataArrayElective50 + DataArrayElective100 - 1;\n    let startIndexElective500 = DataArrayElective50 + DataArrayElective100 + DataArrayElective200 - 1;\n    let LastIndexElective50 = DataArrayElective50;\n    let LastIndexElective100 = DataArrayElective50 + DataArrayElective100;\n    let LastIndexElective200 = DataArrayElective50 + DataArrayElective100 + DataArrayElective200;\n    let LastIndexElective500 = DataArrayElective50 + DataArrayElective100 + DataArrayElective200 + DataArrayElective500; //----------------------------------------------------------------------------------------------------------------------------------------\n\n    var checkTotalHardContraintsAll = 0;\n    var checkTotalSoftContraintsAll = 0;\n\n    const antSystem = () => {\n      //______________________________________________________________________________________________________________________________________________\n      //Faculty courses\n      const checking_minus_1 = (array, array2, data) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u-1] != 100 && array[u-1][5] == data[5]){\n            if (array[u] != 100 && data[5] != array[u][5] || data[6] == array[u][6] && array[u - 1] != 100 && data[5] == array[u - 1][5] || data[6] == array[u - 1][6]) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray - 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray - 1] = 0;\n                  array2[u + indexArray] = 0;\n                  array2[u + indexArray - 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray - 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray - 1] = 0;\n                  array2[u - indexArray] = 0;\n                  array2[u - indexArray - 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const checking_minus_1_phe = (array, array2, data) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u-1] != 100 && array[u-1][5] == data[5]){\n            if (array[u] != 100 && data[5] != array[u][5] || data[6] == array[u][6] && array[u - 1] != 100 && data[5] == array[u - 1][5] || data[6] == array[u - 1][6]) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray = b * 38; //if( array[u+indexArray] ==100 && array[u+indexArray-1] ==100){\n\n                if (array2[u + indexArray] == 100 && array2[u + indexArray - 1] == 100) {\n                  // array[u+indexArray] = 0\n                  // array[u+indexArray-1] = 0\n                  array2[u + indexArray] = 0;\n                  array2[u + indexArray - 1] = 0;\n                } //if( array[u-indexArray] ==100 && array[u-indexArray-1] ==100){\n\n\n                if (array2[u - indexArray] == 100 && array2[u - indexArray - 1] == 100) {\n                  // array[u-indexArray] = 0\n                  // array[u-indexArray-1] = 0\n                  array2[u - indexArray] = 0;\n                  array2[u - indexArray - 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array2;\n      };\n\n      const checking_plus_1 = (array, array2, data) => {\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\n            if (array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6] && array[u + 1] != 100 && data[5] == array[u + 1][5] || data[6] == array[u + 1][6]) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray + 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray + 1] = 0;\n                  array2[u + indexArray] = 0;\n                  array2[u + indexArray + 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray + 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray + 1] = 0;\n                  array2[u - indexArray] = 0;\n                  array2[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const checking_plus_1_phe = (array, array2, data) => {\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\n            if (array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6] && array[u + 1] != 100 && data[5] == array[u + 1][5] || data[6] == array[u + 1][6]) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray = b * 38; //if( array[u+indexArray] ==100 && array[u+indexArray+1] ==100){\n\n                if (array2[u + indexArray] == 100 && array2[u + indexArray + 1] == 100) {\n                  // array[u+indexArray] = 0\n                  // array[u+indexArray+1] = 0\n                  array2[u + indexArray] = 0;\n                  array2[u + indexArray + 1] = 0;\n                } //if( array[u-indexArray] ==100 && array[u-indexArray+1] ==100){\n\n\n                if (array2[u - indexArray] == 100 && array2[u - indexArray + 1] == 100) {\n                  // array[u-indexArray] = 0\n                  // array[u-indexArray+1] = 0\n                  array2[u - indexArray] = 0;\n                  array2[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array2;\n      };\n\n      const checking_3 = (array, array2, data) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u-1] != 100 && array[u-1][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\n            if (array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6] && array[u - 1] != 100 && data[5] == array[u - 1][5] && array[u + 1] != 100 && data[5] == array[u + 1][5] || data[6] == array[u - 1][6] && array[u + 1] != 100 && data[6] == array[u + 1][6]) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray - 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray - 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray - 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray - 1] = 0;\n                }\n\n                if (array[u + indexArray] == 100 && array[u + indexArray + 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray + 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray + 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            //if( array2[u] != 100 && array2[u][5] == data[5] && array2[u-1] != 100 && array2[u-1][5] == data[5] && array2[u+1] != 100 && array2[u+1][5] == data[5]){\n            if (array2[u] != 100 && data[5] == array2[u][5] || data[6] == array2[u][6] && array2[u - 1] != 100 && data[5] == array2[u - 1][5] && array2[u + 1] != 100 && data[5] == array2[u + 1][5] || data[6] == array2[u - 1][6] && array2[u + 1] != 100 && data[6] == array2[u + 1][6]) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray2 = b * 38;\n\n                if (array2[u + indexArray2] == 100 && array2[u + indexArray2 - 1] == 100) {\n                  array2[u + indexArray2] = 0;\n                  array2[u + indexArray2 - 1] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100 && array2[u - indexArray2 - 1] == 100) {\n                  array2[u - indexArray2] = 0;\n                  array2[u - indexArray2 - 1] = 0;\n                }\n\n                if (array2[u + indexArray2] == 100 && array2[u + indexArray2 + 1] == 100) {\n                  array2[u + indexArray2] = 0;\n                  array2[u + indexArray2 + 1] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100 && array2[u - indexArray2 + 1] == 100) {\n                  array2[u - indexArray2] = 0;\n                  array2[u - indexArray2 + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const checking_only_1 = (array, array2, data) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            if (array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]) {\n              for (let b = 0; b < totalRoom; b++) {\n                if (array[u + 38 * b] == 100) {\n                  array[u + 38 * b] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            if (array2[u] != 100 && data[5] == array2[u][5] || data[6] == array2[u][6]) {\n              for (let b = 0; b < totalRoom2; b++) {\n                if (array2[u + 38 * b] == 100) {\n                  array2[u + 38 * b] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const changeRowtoZero_minus_1 = (array, array2, index1, index2) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray - 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray - 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray - 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray - 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray2 = b * 38;\n\n                if (array2[u + indexArray2] == 100 && array2[u + indexArray2 - 1] == 100) {\n                  array2[u + indexArray2] = 0;\n                  array2[u + indexArray2 - 1] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100 && array2[u - indexArray2 - 1] == 100) {\n                  array2[u - indexArray2] = 0;\n                  array2[u - indexArray2 - 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const changeRowtoZero_plus_1 = (array, array2, index1, index2) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray + 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray + 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray + 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray2 = b * 38;\n\n                if (array2[u + indexArray2] == 100 && array2[u + indexArray2 + 1] == 100) {\n                  array2[u + indexArray2] = 0;\n                  array2[u + indexArray2 + 1] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100 && array2[u - indexArray2 + 1] == 100) {\n                  array2[u - indexArray2] = 0;\n                  array2[u - indexArray2 + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const changeRowtoZero_1 = (array, array2, index1) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            if (u == index1) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100) {\n                  array[u + indexArray] = 0;\n                }\n\n                if (array[u - indexArray] == 100) {\n                  array[u - indexArray] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            if (u == index1) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray2 = b * 38;\n\n                if (array2[u + indexArray2] == 100) {\n                  array2[u + indexArray2] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100) {\n                  array2[u - indexArray2] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const changeRowtoZero_3_ = (array, array2, index1, index2, index3) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2 && u + 1 == index3) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray - 1] == 100 && array[u + indexArray + 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray - 1] = 0;\n                  array[u + indexArray + 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray - 1] == 100 && array[u - indexArray + 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray - 1] = 0;\n                  array[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2 && u + 1 == index3) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray = b * 38;\n\n                if (array2[u + indexArray] == 100 && array2[u + indexArray - 1] == 100 && array2[u + indexArray + 1] == 100) {\n                  array2[u + indexArray] = 0;\n                  array2[u + indexArray - 1] = 0;\n                  array2[u + indexArray + 1] = 0;\n                }\n\n                if (array2[u - indexArray] == 100 && array2[u - indexArray - 1] == 100 && array2[u - indexArray + 1] == 100) {\n                  array2[u - indexArray] = 0;\n                  array2[u - indexArray - 1] = 0;\n                  array2[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const changeToZero = array => {\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            array[i] = 100;\n          }\n        }\n\n        return array;\n      };\n\n      const checkTest = (array, array2, data1) => {\n        let count = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          let indexArray = x * 38;\n\n          try {\n            for (let i = 1; i < array.length; i++) {\n              //if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 1 && array[i+indexArray] != 0 ){\n              try {\n                if (data1 == array[i][5]) {\n                  if (array[i + indexArray] == 100) {\n                    array[i + indexArray] = 0;\n                  }\n                }\n              } catch {} //}    \n\n            }\n          } catch {}\n        }\n\n        for (let x = 1; x <= totalRoom2; x++) {\n          let indexArray2 = x * 38;\n\n          try {\n            for (let i = 1; i < array2.length; i++) {\n              //if(array2[i+indexArray2] != 100 && array2[i+indexArray2] != undefined && array2[i+indexArray2] != 1 && array2[i+indexArray2] != 0 ){\n              try {\n                if (data1 == array2[i][5]) {\n                  if (array2[i + indexArray2] == 100) {\n                    array2[i + indexArray2] = 0;\n                  }\n                }\n              } catch {} //}    \n\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const checking_1 = (array, array2, data) => {\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\n            //if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]){\n            if (array[u] != 100) {\n              if (data[5] == array[u][5] || data[6] == array[u][6]) {\n                for (let b = 0; b < totalRoom; b++) {\n                  let indexArray = b * 38;\n\n                  if (array[u + indexArray] == 100) {\n                    array[u + indexArray] = 0; //array2[u+indexArray] = 0\n                  }\n\n                  if (array[u - indexArray] == 100) {\n                    array[u - indexArray] = 0; //array2[u-indexArray] = 0\n                  }\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const checking_1_phe = (array, array2, data) => {\n        //let totalRoom = array.length / 38\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\n            //if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]){\n            if (array[u] != 100) {\n              if (data[5] == array[u][5] || data[6] == array[u][6]) {\n                for (let b = 0; b < totalRoom2; b++) {\n                  let indexArray = b * 38;\n\n                  if (array2[u + indexArray] == 100) {\n                    //array[u+indexArray] = 0\n                    array2[u + indexArray] = 0;\n                  }\n\n                  if (array2[u - indexArray] == 100) {\n                    //array[u-indexArray] = 0\n                    array2[u - indexArray] = 0;\n                  }\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array2;\n      };\n\n      const checking_1_Elective = (array, array2, data) => {\n        let totalRoom = array.length / 10;\n        let totalRoom2 = array2.length / 10;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\n            //if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]){\n            if (array[u] != 100) {\n              if (data[5] == array[u][5] || data[6] == array[u][6]) {\n                for (let b = 0; b < totalRoom; b++) {\n                  let indexArray = b * 10;\n\n                  if (array[u + indexArray] == 100) {\n                    array[u + indexArray] = 0; //array2[u+indexArray] = 0\n                  }\n\n                  if (array[u - indexArray] == 100) {\n                    array[u - indexArray] = 0; //array2[u-indexArray] = 0\n                  }\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const array1DCombine = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrCombine = array1DCombine(combineArray);\n\n      const array1DElectiveCombine = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrCombineElective = array1DElectiveCombine(combineArrayElective);\n\n      const checkDay = (combine, array, index) => {\n        //for(let x =0; x < combine.length ; x++){}\n        let c = 0;\n        let z = index;\n\n        while (c != 1) {\n          if (z >= 0 && z < 10) {\n            //console.log(\"Monday\")\n            zeroMonday(array);\n            zeroMondayCom(combine);\n            c = 1;\n          } else if (z >= 10 && z < 20) {\n            //console.log(\"Tuesday\")   \n            zeroTuesday(array);\n            zeroTuesdayCom(combine);\n            c = 1;\n          } else if (z >= 20 && z < 30) {\n            //console.log(\"Thursday\")   \n            zeroThursday(array);\n            zeroThursdayCom(combine);\n            c = 1;\n          } else if (z >= 30 && z < 38) {\n            //console.log(\"Friday\")   \n            zeroFriday(array);\n            zeroFridayCom(combine);\n            c = 1;\n          } else z -= 38;\n        }\n      };\n\n      const zeroMonday = array => {\n        let totalRoom2 = array.length / 38;\n\n        for (let u = 0; u < 10; u++) {\n          try {\n            for (let b = 0; b < totalRoom2; b++) {\n              let indexArray = b * 38;\n\n              if (array[u + indexArray] == 100) {\n                array[u + indexArray] = 0;\n              }\n\n              if (array[u - indexArray] == 100) {\n                array[u - indexArray] = 0;\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const zeroMondayCom = combine => {\n        let totalRoom2 = combine.length / 38;\n\n        for (let u = 0; u < 10; u++) {\n          try {\n            for (let b = 0; b < totalRoom2; b++) {\n              let indexArray = b * 38;\n\n              if (combine[u + indexArray] == 100) {\n                combine[u + indexArray] = 0;\n              }\n\n              if (combine[u - indexArray] == 100) {\n                combine[u - indexArray] = 0;\n              }\n            }\n          } catch {}\n        }\n\n        return combine;\n      };\n\n      const zeroTuesday = array => {\n        let totalRoom2 = array.length / 38;\n\n        for (let u = 10; u < 20; u++) {\n          try {\n            for (let b = 0; b < totalRoom2; b++) {\n              let indexArray = b * 38;\n\n              if (array[u + indexArray] == 100) {\n                array[u + indexArray] = 0;\n              }\n\n              if (array[u - indexArray] == 100) {\n                array[u - indexArray] = 0;\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const zeroTuesdayCom = combine => {\n        let totalRoom2 = combine.length / 38;\n\n        for (let u = 10; u < 20; u++) {\n          try {\n            for (let b = 0; b < totalRoom2; b++) {\n              let indexArray = b * 38;\n\n              if (combine[u + indexArray] == 100) {\n                combine[u + indexArray] = 0;\n              }\n\n              if (combine[u - indexArray] == 100) {\n                combine[u - indexArray] = 0;\n              }\n            }\n          } catch {}\n        }\n\n        return combine;\n      };\n\n      const zeroThursday = array => {\n        let totalRoom2 = array.length / 38;\n\n        for (let u = 20; u < 30; u++) {\n          try {\n            for (let b = 0; b < totalRoom2; b++) {\n              let indexArray = b * 38;\n\n              if (array[u + indexArray] == 100) {\n                array[u + indexArray] = 0;\n              }\n\n              if (array[u - indexArray] == 100) {\n                array[u - indexArray] = 0;\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const zeroThursdayCom = combine => {\n        let totalRoom2 = combine.length / 38;\n\n        for (let u = 20; u < 30; u++) {\n          try {\n            for (let b = 0; b < totalRoom2; b++) {\n              let indexArray = b * 38;\n\n              if (combine[u + indexArray] == 100) {\n                combine[u + indexArray] = 0;\n              }\n\n              if (combine[u - indexArray] == 100) {\n                combine[u - indexArray] = 0;\n              }\n            }\n          } catch {}\n        }\n\n        return combine;\n      };\n\n      const zeroFriday = array => {\n        let totalRoom2 = array.length / 38;\n\n        for (let u = 30; u < 38; u++) {\n          try {\n            for (let b = 0; b < totalRoom2; b++) {\n              let indexArray = b * 38;\n\n              if (array[u + indexArray] == 100) {\n                array[u + indexArray] = 0;\n              }\n\n              if (array[u - indexArray] == 100) {\n                array[u - indexArray] = 0;\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const zeroFridayCom = combine => {\n        let totalRoom2 = combine.length / 38;\n\n        for (let u = 30; u < 38; u++) {\n          try {\n            for (let b = 0; b < totalRoom2; b++) {\n              let indexArray = b * 38;\n\n              if (combine[u + indexArray] == 100) {\n                combine[u + indexArray] = 0;\n              }\n\n              if (combine[u - indexArray] == 100) {\n                combine[u - indexArray] = 0;\n              }\n            }\n          } catch {}\n        }\n\n        return combine;\n      }; //create 1d array for dataset less than 50\n\n\n      const array1D50 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr50 = array1D50(DataArray50);\n\n      const AntAlgoInsert50 = (array, combine) => {\n        //array.length = 1064 (last index = 1063)\n        //arrayLength50 = 646 (last index = 645)\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let hms2 = [];\n        let hms3 = [];\n        let hms4 = [];\n\n        for (let x = 0; x < filterData50.length; x++) {\n          if (filterData50[x][7] == 2) {\n            hms2.push(filterData50[x]);\n          }\n\n          if (filterData50[x][7] == 4) {\n            hms4.push(filterData50[x]);\n          }\n\n          if (filterData50[x][7] == 3) {\n            hms3.push(filterData50[x]);\n          }\n\n          test.push(filterData50[x]);\n        } //slot in  2 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < hms2.length) {\n            checking_1(combine, array, hms2[k]);\n            checking_1_phe(combine, array, hms2[k]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j] == 100 && combine[j - 1] == 100 && j - 1 != -1) {\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j] = hms2[k];\n                combine[j - 1] = hms2[k];\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j] == 100 && combine[j + 1] == 100 && j + 1 != startIndex100) {\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j] = hms2[k];\n                combine[j + 1] = hms2[k];\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k++;\n        } // console.log(hms2.length)\n        // console.log(hms4.length)\n        //console.log(hms3.length)\n        //slot in  4 hours of meeting student course \n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k2 < hms4.length) {\n            //if(k2 < 1){\n            checking_1(combine, array, hms4[k2]);\n            checking_1_phe(combine, array, hms4[k2]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j] == 100 && combine[j - 1] == 100 && j - 1 != -1) {\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j] = hms4[k2];\n                combine[j - 1] = hms4[k2];\n                checkDay(combine, array, j);\n                let b = 0;\n\n                while (b != 1) {\n                  const v = Math.floor(Math.random() * (i + 1)); //if(array[v] == 100 && array[v-1] == 100){\n\n                  if (combine[v] == 100 && combine[v - 1] == 100 && v - 1 != -1) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v - 1] = -1;\n                    combine[v] = hms4[k2];\n                    combine[v - 1] = hms4[k2];\n                    b = 1;\n                  } //else if(array[v] == 100 && array[v+1] == 100){\n                  else if (combine[v] == 100 && combine[v + 1] == 100 && v + 1 != startIndex100) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v + 1] = -1;\n                    combine[v] = hms4[k2];\n                    combine[v + 1] = hms4[k2];\n                    b = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j] == 100 && combine[j + 1] == 100 && j + 1 != startIndex100) {\n                //console.log(j)\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j] = hms4[k2];\n                combine[j + 1] = hms4[k2];\n                checkDay(combine, array, j);\n                let z = 0;\n\n                while (z != 1) {\n                  const p = Math.floor(Math.random() * (i + 1)); //if(array[p] == 100 && array[p-1] == 100){\n\n                  if (combine[p] == 100 && combine[p - 1] == 100 && p - 1 != -1) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p - 1] = -1;\n                    combine[p] = hms4[k2];\n                    combine[p - 1] = hms4[k2];\n                    z = 1;\n                  } //else if(array[p] == 100 && array[p+1] == 100){\n                  else if (combine[p] == 100 && combine[p + 1] == 100 && p + 1 != startIndex100) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p + 1] = -1;\n                    combine[p] = hms4[k2];\n                    combine[p + 1] = hms4[k2];\n                    z = 1;\n                  }\n                }\n\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k2++;\n        } //slot in  3 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k3 < hms3.length) {\n            //if(k3 < 1){\n            checking_1(combine, array, hms3[k3]);\n            checking_1_phe(combine, array, hms3[k3]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\n\n              if (combine[j] == 100 && combine[j - 1] == 100 && combine[j + 1] == 100 && j - 1 != -1 && j + 1 != startIndex100) {\n                // slot in 3 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                array[j + 1] = -1;\n                combine[j] = hms3[k3];\n                combine[j - 1] = hms3[k3];\n                combine[j + 1] = hms3[k3];\n                c = 1;\n              } //else if(array[j] == 100 && array[j-1] == 100){// slot in 2 course at one time\n              else if (combine[j] == 100 && combine[j - 1] == 100 && j - 1 != -1) {\n                // slot in 2 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j] = hms3[k3];\n                combine[j - 1] = hms3[k3];\n                checkDay(combine, array, j);\n                let b = 0;\n\n                while (b != 1) {\n                  const v = Math.floor(Math.random() * (i + 1)); //if(array[v] == 100){\n\n                  if (combine[v] == 100) {\n                    //console.log(v)\n                    array[v] = -1;\n                    combine[v] = hms3[k3];\n                    b = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){ // slot in 2 course at one time\n              else if (combine[j] == 100 && combine[j + 1] == 100 && j + 1 != startIndex100) {\n                // slot in 2 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j] = hms3[k3];\n                combine[j + 1] = hms3[k3];\n                checkDay(combine, array, j);\n                let z = 0;\n\n                while (z != 1) {\n                  const p = Math.floor(Math.random() * (i + 1)); //if(array[p] == 100 ){\n\n                  if (combine[p] == 100) {\n                    //console.log(p)\n                    array[p] = -1;\n                    combine[p] = hms3[k3];\n                    z = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100){ // slot in 1 course at one time\n              else if (combine[j] == 100) {\n                // slot in 1 course at one time\n                array[j] = -1;\n                combine[j] = hms3[k3];\n                checkDay(combine, array, j);\n                let m = 0;\n\n                while (m != 1) {\n                  const y = Math.floor(Math.random() * (i + 1)); //if(array[y] == 100 && array[y-1] == 100){\n\n                  if (combine[y] == 100 && combine[y - 1] == 100 && y - 1 != -1) {\n                    //console.log(y)\n                    array[y] = -1;\n                    array[y - 1] = -1;\n                    combine[y] = hms3[k3];\n                    combine[y - 1] = hms3[k3];\n                    m = 1;\n                  } //else if(array[y] == 100 && array[y+1] == 100){\n                  else if (combine[y] == 100 && combine[y + 1] == 100 && y + 1 != startIndex100) {\n                    //console.log(y)\n                    array[y] = -1;\n                    array[y + 1] = -1;\n                    combine[y] = hms3[k3];\n                    combine[y + 1] = hms3[k3];\n                    m = 1;\n                  }\n                }\n\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k3++;\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n        return array;\n      };\n\n      var AntArrIns50 = AntAlgoInsert50(AntArr50, AntArrCombine);\n\n      const checkAmountData50_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined && array[i] != 1) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_2 = checkAmountData50_2(AntArrIns50); // console.log(AntArrIns50);\n      // console.log(checkAmount_2)\n\n      const checkAmountData50_0 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_0 = checkAmountData50_0(AntArr50); //console.log(checkAmount_0)\n      //______________________________________________________________________________________________________________________________________________\n      //create 1d array for dataset less than 100\n      //create 1d array for dataset less than 100\n\n      const array1D100 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr100 = array1D100(DataArray100);\n\n      const AntAlgoInsert100 = (array, combine) => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let hms2 = [];\n        let hms3 = [];\n        let hms4 = [];\n\n        for (let x = 0; x < filterData100.length; x++) {\n          if (filterData100[x][7] == 2) {\n            hms2.push(filterData100[x]);\n          }\n\n          if (filterData100[x][7] == 4) {\n            hms4.push(filterData100[x]);\n          }\n\n          if (filterData100[x][7] == 3) {\n            hms3.push(filterData100[x]);\n          }\n\n          test.push(filterData100[x]);\n        } //slot in  2 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < hms2.length) {\n            checking_1(combine, array, hms2[k]);\n            checking_1_phe(combine, array, hms2[k]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j + startIndex100] == 100 && combine[j - 1 + startIndex100] == 100 && j - 1 != LastIndex50) {\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndex100] = hms2[k];\n                combine[j - 1 + startIndex100] = hms2[k];\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j + startIndex100] == 100 && combine[j + 1 + startIndex100] == 100 && j + 1 != startIndex200) {\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndex100] = hms2[k];\n                combine[j + 1 + startIndex100] = hms2[k];\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k++;\n        } // console.log(hms2.length)\n        // console.log(hms4.length)\n        //console.log(hms3.length)\n        //slot in  4 hours of meeting student course \n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k2 < hms4.length) {\n            //if(k2 < 1){\n            checking_1(combine, array, hms4[k2]);\n            checking_1_phe(combine, array, hms4[k2]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j + startIndex100] == 100 && combine[j - 1 + startIndex100] == 100 && j - 1 != LastIndex50) {\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndex100] = hms4[k2];\n                combine[j - 1 + startIndex100] = hms4[k2];\n                checkDay(combine, array, j);\n                let b = 0;\n\n                while (b != 1) {\n                  const v = Math.floor(Math.random() * (i + 1)); //if(array[v] == 100 && array[v-1] == 100){\n\n                  if (combine[v + startIndex100] == 100 && combine[v - 1 + startIndex100] == 100 && v - 1 != LastIndex50) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v - 1] = -1;\n                    combine[v + startIndex100] = hms4[k2];\n                    combine[v - 1 + startIndex100] = hms4[k2];\n                    b = 1;\n                  } //else if(array[v] == 100 && array[v+1] == 100){\n                  else if (combine[v + startIndex100] == 100 && combine[v + 1 + startIndex100] == 100 && v + 1 != startIndex200) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v + 1] = -1;\n                    combine[v + startIndex100] = hms4[k2];\n                    combine[v + 1 + startIndex100] = hms4[k2];\n                    b = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j + startIndex100] == 100 && combine[j + 1 + startIndex100] == 100 && j + 1 != startIndex200) {\n                //console.log(j)\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndex100] = hms4[k2];\n                combine[j + 1 + startIndex100] = hms4[k2];\n                checkDay(combine, array, j);\n                let z = 0;\n\n                while (z != 1) {\n                  const p = Math.floor(Math.random() * (i + 1)); //if(array[p] == 100 && array[p-1] == 100){\n\n                  if (combine[p + startIndex100] == 100 && combine[p - 1 + startIndex100] == 100 && p - 1 != LastIndex50) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p - 1] = -1;\n                    combine[p + startIndex100] = hms4[k2];\n                    combine[p - 1 + startIndex100] = hms4[k2];\n                    z = 1;\n                  } //else if(array[p] == 100 && array[p+1] == 100){\n                  else if (combine[p + startIndex100] == 100 && combine[p + 1 + startIndex100] == 100 && p + 1 != startIndex200) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p + 1] = -1;\n                    combine[p + startIndex100] = hms4[k2];\n                    combine[p + 1 + startIndex100] = hms4[k2];\n                    z = 1;\n                  }\n                }\n\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k2++;\n        } //slot in  3 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k3 < hms3.length) {\n            //if(k3 < 1){\n            checking_1(combine, array, hms3[k3]);\n            checking_1_phe(combine, array, hms3[k3]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\n\n              if (combine[j + startIndex100] == 100 && combine[j - 1 + startIndex100] == 100 && combine[j + 1 + startIndex100] == 100 && j - 1 != LastIndex50 && j + 1 != startIndex200) {\n                // slot in 3 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndex100] = hms3[k3];\n                combine[j - 1 + startIndex100] = hms3[k3];\n                combine[j + 1 + startIndex100] = hms3[k3];\n                c = 1;\n              } //else if(array[j] == 100 && array[j-1] == 100){// slot in 2 course at one time\n              else if (combine[j + startIndex100] == 100 && combine[j - 1 + startIndex100] == 100 && j - 1 != LastIndex50) {\n                // slot in 2 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndex100] = hms3[k3];\n                combine[j - 1 + startIndex100] = hms3[k3];\n                checkDay(combine, array, j);\n                let b = 0;\n\n                while (b != 1) {\n                  const v = Math.floor(Math.random() * (i + 1)); //if(array[v] == 100){\n\n                  if (combine[v + startIndex100] == 100) {\n                    //console.log(v)\n                    array[v] = -1;\n                    combine[v + startIndex100] = hms3[k3];\n                    b = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){ // slot in 2 course at one time\n              else if (combine[j + startIndex100] == 100 && combine[j + 1 + startIndex100] == 100 && j + 1 != startIndex200) {\n                // slot in 2 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndex100] = hms3[k3];\n                combine[j + 1 + startIndex100] = hms3[k3];\n                checkDay(combine, array, j);\n                let z = 0;\n\n                while (z != 1) {\n                  const p = Math.floor(Math.random() * (i + 1)); //if(array[p] == 100 ){\n\n                  if (combine[p + startIndex100] == 100) {\n                    //console.log(p)\n                    array[p] = -1;\n                    combine[p + startIndex100] = hms3[k3];\n                    z = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100){ // slot in 1 course at one time\n              else if (combine[j + startIndex100] == 100) {\n                // slot in 1 course at one time\n                array[j] = -1;\n                combine[j + startIndex100] = hms3[k3];\n                checkDay(combine, array, j);\n                let m = 0;\n\n                while (m != 1) {\n                  const y = Math.floor(Math.random() * (i + 1)); //if(array[y] == 100 && array[y-1] == 100){\n\n                  if (combine[y + startIndex100] == 100 && combine[y - 1 + startIndex100] == 100 && y - 1 != LastIndex50) {\n                    //console.log(y)\n                    array[y] = -1;\n                    array[y - 1] = -1;\n                    combine[y + startIndex100] = hms3[k3];\n                    combine[y - 1 + startIndex100] = hms3[k3];\n                    m = 1;\n                  } //else if(array[y] == 100 && array[y+1] == 100){\n                  else if (combine[y + startIndex100] == 100 && combine[y + 1 + startIndex100] == 100 && y + 1 != startIndex200) {\n                    //console.log(y)\n                    array[y] = -1;\n                    array[y + 1] = -1;\n                    combine[y + startIndex100] = hms3[k3];\n                    combine[y + 1 + startIndex100] = hms3[k3];\n                    m = 1;\n                  }\n                }\n\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k3++;\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n        return array;\n      };\n\n      var AntArrIns100 = AntAlgoInsert100(AntArr100, AntArrCombine);\n\n      const checkAmountData100_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 100 && array[i] != 0 && array[i] != undefined && array[i] != 1) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_2 = checkAmountData100_2(AntArrIns100); // console.log(AntArrIns100);\n      // console.log(checkAmount_2)\n\n      const checkAmountData100_0 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_0 = checkAmountData100_0(AntArr100); //console.log(checkAmount_0)\n      // // _____________________________________________________________________________________________________________________________________________________\n\n      const array1D200 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr200 = array1D200(DataArray200);\n\n      const AntAlgoInsert200 = (array, combine) => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let hms2 = [];\n        let hms3 = [];\n        let hms4 = [];\n\n        for (let x = 0; x < filterData200.length; x++) {\n          if (filterData200[x][7] == 2) {\n            hms2.push(filterData200[x]);\n          }\n\n          if (filterData200[x][7] == 4) {\n            hms4.push(filterData200[x]);\n          }\n\n          if (filterData200[x][7] == 3) {\n            hms3.push(filterData200[x]);\n          }\n\n          test.push(filterData200[x]);\n        } //slot in  2 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < hms2.length) {\n            checking_1(combine, array, hms2[k]);\n            checking_1_phe(combine, array, hms2[k]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j + startIndex200] == 100 && combine[j - 1 + startIndex200] == 100 && j - 1 != LastIndex100) {\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndex200] = hms2[k];\n                combine[j - 1 + startIndex200] = hms2[k];\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j + startIndex200] == 100 && combine[j + 1 + startIndex200] == 100 && j + 1 != startIndex500) {\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndex200] = hms2[k];\n                combine[j + 1 + startIndex200] = hms2[k];\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k++;\n        } // console.log(hms2.length)\n        // console.log(hms4.length)\n        //console.log(hms3.length)\n        //slot in  4 hours of meeting student course \n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k2 < hms4.length) {\n            //if(k2 < 1){\n            checking_1(combine, array, hms4[k2]);\n            checking_1_phe(combine, array, hms4[k2]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j + startIndex200] == 100 && combine[j - 1 + startIndex200] == 100 && j - 1 != LastIndex100) {\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndex200] = hms4[k2];\n                combine[j - 1 + startIndex200] = hms4[k2];\n                checkDay(combine, array, j);\n                let b = 0;\n\n                while (b != 1) {\n                  const v = Math.floor(Math.random() * (i + 1)); //if(array[v] == 100 && array[v-1] == 100){\n\n                  if (combine[v + startIndex200] == 100 && combine[v - 1 + startIndex200] == 100 && v - 1 != LastIndex100) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v - 1] = -1;\n                    combine[v + startIndex200] = hms4[k2];\n                    combine[v - 1 + startIndex200] = hms4[k2];\n                    b = 1;\n                  } //else if(array[v] == 100 && array[v+1] == 100){\n                  else if (combine[v + startIndex200] == 100 && combine[v + 1 + startIndex200] == 100 && v + 1 != startIndex500) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v + 1] = -1;\n                    combine[v + startIndex200] = hms4[k2];\n                    combine[v + 1 + startIndex200] = hms4[k2];\n                    b = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j + startIndex200] == 100 && combine[j + 1 + startIndex200] == 100 && j + 1 != startIndex500) {\n                //console.log(j)\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndex200] = hms4[k2];\n                combine[j + 1 + startIndex200] = hms4[k2];\n                checkDay(combine, array, j);\n                let z = 0;\n\n                while (z != 1) {\n                  const p = Math.floor(Math.random() * (i + 1)); //if(array[p] == 100 && array[p-1] == 100){\n\n                  if (combine[p + startIndex200] == 100 && combine[p - 1 + startIndex200] == 100 && p - 1 != LastIndex100) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p - 1] = -1;\n                    combine[p + startIndex200] = hms4[k2];\n                    combine[p - 1 + startIndex200] = hms4[k2];\n                    z = 1;\n                  } //else if(array[p] == 100 && array[p+1] == 100){\n                  else if (combine[p + startIndex200] == 100 && combine[p + 1 + startIndex200] == 100 && p + 1 != startIndex500) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p + 1] = -1;\n                    combine[p + startIndex200] = hms4[k2];\n                    combine[p + 1 + startIndex200] = hms4[k2];\n                    z = 1;\n                  }\n                }\n\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k2++;\n        } //slot in  3 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k3 < hms3.length) {\n            //if(k3 < 1){\n            checking_1(combine, array, hms3[k3]);\n            checking_1_phe(combine, array, hms3[k3]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\n\n              if (combine[j + startIndex200] == 100 && combine[j - 1 + startIndex200] == 100 && combine[j + 1 + startIndex200] == 100 && j - 1 != LastIndex100 && j + 1 != startIndex500) {\n                // slot in 3 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndex200] = hms3[k3];\n                combine[j - 1 + startIndex200] = hms3[k3];\n                combine[j + 1 + startIndex200] = hms3[k3];\n                c = 1;\n              } //else if(array[j] == 100 && array[j-1] == 100){// slot in 2 course at one time\n              else if (combine[j + startIndex200] == 100 && combine[j - 1 + startIndex200] == 100 && j - 1 != LastIndex100) {\n                // slot in 2 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndex200] = hms3[k3];\n                combine[j - 1 + startIndex200] = hms3[k3];\n                checkDay(combine, array, j);\n                let b = 0;\n\n                while (b != 1) {\n                  const v = Math.floor(Math.random() * (i + 1)); //if(array[v] == 100){\n\n                  if (combine[v + startIndex200] == 100) {\n                    //console.log(v)\n                    array[v] = -1;\n                    combine[v + startIndex200] = hms3[k3];\n                    b = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){ // slot in 2 course at one time\n              else if (combine[j + startIndex200] == 100 && combine[j + 1 + startIndex200] == 100 && j + 1 != startIndex500) {\n                // slot in 2 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndex200] = hms3[k3];\n                combine[j + 1 + startIndex200] = hms3[k3];\n                checkDay(combine, array, j);\n                let z = 0;\n\n                while (z != 1) {\n                  const p = Math.floor(Math.random() * (i + 1)); //if(array[p] == 100 ){\n\n                  if (combine[p + startIndex200] == 100) {\n                    //console.log(p)\n                    array[p] = -1;\n                    combine[p + startIndex200] = hms3[k3];\n                    z = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100){ // slot in 1 course at one time\n              else if (combine[j + startIndex200] == 100) {\n                // slot in 1 course at one time\n                array[j] = -1;\n                combine[j + startIndex200] = hms3[k3];\n                checkDay(combine, array, j);\n                let m = 0;\n\n                while (m != 1) {\n                  const y = Math.floor(Math.random() * (i + 1)); //if(array[y] == 100 && array[y-1] == 100){\n\n                  if (combine[y + startIndex200] == 100 && combine[y - 1 + startIndex200] == 100 && y - 1 != LastIndex100) {\n                    //console.log(y)\n                    array[y] = -1;\n                    array[y - 1] = -1;\n                    combine[y + startIndex200] = hms3[k3];\n                    combine[y - 1 + startIndex200] = hms3[k3];\n                    m = 1;\n                  } //else if(array[y] == 100 && array[y+1] == 100){\n                  else if (combine[y + startIndex200] == 100 && combine[y + 1 + startIndex200] == 100 && y + 1 != startIndex500) {\n                    //console.log(y)\n                    array[y] = -1;\n                    array[y + 1] = -1;\n                    combine[y + startIndex200] = hms3[k3];\n                    combine[y + 1 + startIndex200] = hms3[k3];\n                    m = 1;\n                  }\n                }\n\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k3++;\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n        return array;\n      };\n\n      var AntArrIns200 = AntAlgoInsert200(AntArr200, AntArrCombine);\n\n      const checkAmountData200_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 200 && array[i] != 0 && array[i] != undefined && array[i] != 1) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_2 = checkAmountData200_2(AntArrIns200); // console.log(AntArrIns200);\n      // console.log(checkAmount_2)\n\n      const checkAmountData200_0 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_0 = checkAmountData200_0(AntArr200); //console.log(checkAmount_0)\n      // //________________________________________________________________________________________________________________________________________________________\n\n      const array1D500 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr500 = array1D500(DataArray500);\n\n      const AntAlgoInsert500 = (array, combine) => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let hms2 = [];\n        let hms3 = [];\n        let hms4 = [];\n\n        for (let x = 0; x < filterData500.length; x++) {\n          if (filterData500[x][7] == 2) {\n            hms2.push(filterData500[x]);\n          }\n\n          if (filterData500[x][7] == 4) {\n            hms4.push(filterData500[x]);\n          }\n\n          if (filterData500[x][7] == 3) {\n            hms3.push(filterData500[x]);\n          }\n\n          test.push(filterData500[x]);\n        } //slot in  2 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < hms2.length) {\n            checking_1(combine, array, hms2[k]);\n            checking_1_phe(combine, array, hms2[k]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j + startIndex500] == 100 && combine[j - 1 + startIndex500] == 100 && j - 1 != LastIndex200) {\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndex500] = hms2[k];\n                combine[j - 1 + startIndex500] = hms2[k];\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j + startIndex500] == 100 && combine[j + 1 + startIndex500] == 100) {\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndex500] = hms2[k];\n                combine[j + 1 + startIndex500] = hms2[k];\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k++;\n        } // console.log(hms2.length)\n        // console.log(hms4.length)\n        //console.log(hms3.length)\n        //slot in  4 hours of meeting student course \n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k2 < hms4.length) {\n            //if(k2 < 1){\n            checking_1(combine, array, hms4[k2]);\n            checking_1_phe(combine, array, hms4[k2]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j + startIndex500] == 100 && combine[j - 1 + startIndex500] == 100 && j - 1 != LastIndex200) {\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndex500] = hms4[k2];\n                combine[j - 1 + startIndex500] = hms4[k2];\n                checkDay(combine, array, j);\n                let b = 0;\n\n                while (b != 1) {\n                  const v = Math.floor(Math.random() * (i + 1)); //if(array[v] == 100 && array[v-1] == 100){\n\n                  if (combine[v + startIndex500] == 100 && combine[v - 1 + startIndex500] == 100 && v - 1 != LastIndex200) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v - 1] = -1;\n                    combine[v + startIndex500] = hms4[k2];\n                    combine[v - 1 + startIndex500] = hms4[k2];\n                    b = 1;\n                  } //else if(array[v] == 100 && array[v+1] == 100){\n                  else if (combine[v + startIndex500] == 100 && combine[v + 1 + startIndex500] == 100) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v + 1] = -1;\n                    combine[v + startIndex500] = hms4[k2];\n                    combine[v + 1 + startIndex500] = hms4[k2];\n                    b = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j + startIndex500] == 100 && combine[j + 1 + startIndex500] == 100) {\n                //console.log(j)\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndex500] = hms4[k2];\n                combine[j + 1 + startIndex500] = hms4[k2];\n                checkDay(combine, array, j);\n                let z = 0;\n\n                while (z != 1) {\n                  const p = Math.floor(Math.random() * (i + 1)); //if(array[p] == 100 && array[p-1] == 100){\n\n                  if (combine[p + startIndex500] == 100 && combine[p - 1 + startIndex500] == 100 && p - 1 != LastIndex200) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p - 1] = -1;\n                    combine[p + startIndex500] = hms4[k2];\n                    combine[p - 1 + startIndex500] = hms4[k2];\n                    z = 1;\n                  } //else if(array[p] == 100 && array[p+1] == 100){\n                  else if (combine[p + startIndex500] == 100 && combine[p + 1 + startIndex500] == 100) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p + 1] = -1;\n                    combine[p + startIndex500] = hms4[k2];\n                    combine[p + 1 + startIndex500] = hms4[k2];\n                    z = 1;\n                  }\n                }\n\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k2++;\n        } //slot in  3 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k3 < hms3.length) {\n            //if(k3 < 1){\n            checking_1(combine, array, hms3[k3]);\n            checking_1_phe(combine, array, hms3[k3]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\n\n              if (combine[j + startIndex500] == 100 && combine[j - 1 + startIndex500] == 100 && combine[j + 1 + startIndex500] == 100 && j - 1 != LastIndex200) {\n                // slot in 3 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndex500] = hms3[k3];\n                combine[j - 1 + startIndex500] = hms3[k3];\n                combine[j + 1 + startIndex500] = hms3[k3];\n                c = 1;\n              } //else if(array[j] == 100 && array[j-1] == 100){// slot in 2 course at one time\n              else if (combine[j + startIndex500] == 100 && combine[j - 1 + startIndex500] == 100 && j - 1 != LastIndex200) {\n                // slot in 2 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndex500] = hms3[k3];\n                combine[j - 1 + startIndex500] = hms3[k3];\n                checkDay(combine, array, j);\n                let b = 0;\n\n                while (b != 1) {\n                  const v = Math.floor(Math.random() * (i + 1)); //if(array[v] == 100){\n\n                  if (combine[v + startIndex500] == 100) {\n                    //console.log(v)\n                    array[v] = -1;\n                    combine[v + startIndex500] = hms3[k3];\n                    b = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){ // slot in 2 course at one time\n              else if (combine[j + startIndex500] == 100 && combine[j + 1 + startIndex500] == 100) {\n                // slot in 2 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndex500] = hms3[k3];\n                combine[j + 1 + startIndex500] = hms3[k3];\n                checkDay(combine, array, j);\n                let z = 0;\n\n                while (z != 1) {\n                  const p = Math.floor(Math.random() * (i + 1)); //if(array[p] == 100 ){\n\n                  if (combine[p + startIndex500] == 100) {\n                    //console.log(p)\n                    array[p] = -1;\n                    combine[p + startIndex500] = hms3[k3];\n                    z = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100){ // slot in 1 course at one time\n              else if (combine[j + startIndex500] == 100) {\n                // slot in 1 course at one time\n                array[j] = -1;\n                combine[j + startIndex500] = hms3[k3];\n                checkDay(combine, array, j);\n                let m = 0;\n\n                while (m != 1) {\n                  const y = Math.floor(Math.random() * (i + 1)); //if(array[y] == 100 && array[y-1] == 100){\n\n                  if (combine[y + startIndex500] == 100 && combine[y - 1 + startIndex500] == 100 && y - 1 != LastIndex200) {\n                    //console.log(y)\n                    array[y] = -1;\n                    array[y - 1] = -1;\n                    combine[y + startIndex500] = hms3[k3];\n                    combine[y - 1 + startIndex500] = hms3[k3];\n                    m = 1;\n                  } //else if(array[y] == 100 && array[y+1] == 100){\n                  else if (combine[y + startIndex500] == 100 && combine[y + 1 + startIndex500] == 100) {\n                    //console.log(y)\n                    array[y] = -1;\n                    array[y + 1] = -1;\n                    combine[y + startIndex500] = hms3[k3];\n                    combine[y + 1 + startIndex500] = hms3[k3];\n                    m = 1;\n                  }\n                }\n\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k3++;\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n        return array;\n      };\n\n      var AntArrIns500 = AntAlgoInsert500(AntArr500, AntArrCombine);\n\n      const checkAmountData500_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 500 && array[i] != 0 && array[i] != undefined && array[i] != 1) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_2 = checkAmountData500_2(AntArrIns500); //console.log(AntArrIns500);\n      // console.log(checkAmount_2)\n\n      const checkAmountData500_0 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_0 = checkAmountData500_0(AntArr500); //console.log(checkAmount_0)\n      //______________________________________________________________________________________________________________________________________________\n      //Elective Courses\n\n      const array1DElective50 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective50 = array1DElective50(DataArrayElective50);\n\n      const AntAlgoInsertElective50 = (array, combine) => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let hms2 = [];\n        let hms3 = [];\n        let hms4 = [];\n\n        for (let x = 0; x < filterDataElective50.length; x++) {\n          if (filterDataElective50[x][7] == 2) {\n            hms2.push(filterDataElective50[x]);\n          }\n\n          if (filterDataElective50[x][7] == 4) {\n            hms4.push(filterDataElective50[x]);\n          }\n\n          if (filterDataElective50[x][7] == 3) {\n            hms3.push(filterDataElective50[x]);\n          }\n\n          test.push(filterDataElective50[x]);\n        } //slot in  2 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < hms2.length) {\n            checking_1_Elective(combine, array, hms2[k]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j] == 100 && combine[j - 1] == 100 && j - 1 != -1) {\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j] = hms2[k];\n                combine[j - 1] = hms2[k];\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j] == 100 && combine[j + 1] == 100 && j + 1 != startIndexElective100) {\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j] = hms2[k];\n                combine[j + 1] = hms2[k];\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k++;\n        } // console.log(hms2.length)\n        // console.log(hms4.length)\n        //console.log(hms3.length)\n        //slot in  4 hours of meeting student course \n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k2 < hms4.length) {\n            //if(k2 < 1){\n            checking_1_Elective(combine, array, hms4[k2]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j] == 100 && combine[j - 1] == 100 && j - 1 != -1) {\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j] = hms4[k2];\n                combine[j - 1] = hms4[k2];\n                let b = 0;\n\n                while (b != 1) {\n                  const v = Math.floor(Math.random() * (i + 1)); //if(array[v] == 100 && array[v-1] == 100){\n\n                  if (combine[v] == 100 && combine[v - 1] == 100 && v - 1 != -1) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v - 1] = -1;\n                    combine[v] = hms4[k2];\n                    combine[v - 1] = hms4[k2];\n                    b = 1;\n                  } //else if(array[v] == 100 && array[v+1] == 100){\n                  else if (combine[v] == 100 && combine[v + 1] == 100 && v + 1 != startIndexElective100) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v + 1] = -1;\n                    combine[v] = hms4[k2];\n                    combine[v + 1] = hms4[k2];\n                    b = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j] == 100 && combine[j + 1] == 100 && j + 1 != startIndexElective100) {\n                //console.log(j)\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j] = hms4[k2];\n                combine[j + 1] = hms4[k2];\n                let z = 0;\n\n                while (z != 1) {\n                  const p = Math.floor(Math.random() * (i + 1)); //if(array[p] == 100 && array[p-1] == 100){\n\n                  if (combine[p] == 100 && combine[p - 1] == 100 && p - 1 != -1) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p - 1] = -1;\n                    combine[p] = hms4[k2];\n                    combine[p - 1] = hms4[k2];\n                    z = 1;\n                  } //else if(array[p] == 100 && array[p+1] == 100){\n                  else if (combine[p] == 100 && combine[p + 1] == 100 && p + 1 != startIndexElective100) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p + 1] = -1;\n                    combine[p] = hms4[k2];\n                    combine[p + 1] = hms4[k2];\n                    z = 1;\n                  }\n                }\n\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k2++;\n        } //slot in  3 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k3 < hms3.length) {\n            //if(k3 < 1){\n            checking_1_Elective(combine, array, hms3[k3]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\n\n              if (combine[j] == 100 && combine[j - 1] == 100 && combine[j + 1] == 100 && j - 1 != -1 && j + 1 != startIndexElective100) {\n                // slot in 3 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                array[j + 1] = -1;\n                combine[j] = hms3[k3];\n                combine[j - 1] = hms3[k3];\n                combine[j + 1] = hms3[k3];\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k3++;\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n        return array;\n      };\n\n      var AntArrInsElective50 = AntAlgoInsertElective50(AntArrElective50, AntArrCombineElective);\n\n      const checkAmountDataElective50_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined && array[i] != 1) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_2 = checkAmountDataElective50_2(AntArrInsElective50); // console.log(AntArrInsElective50);\n      // console.log(checkAmount_2)\n\n      const checkAmountDataElective50_0 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_0 = checkAmountDataElective50_0(AntArrElective50); //console.log(checkAmount_0)\n      //___________________________________________________________________________________________________________________________________\n      //___________________________________________________________________________________________________________________________________\n\n      const array1DElective100 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective100 = array1DElective100(DataArrayElective100);\n\n      const AntAlgoInsertElective100 = (array, combine) => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let hms2 = [];\n        let hms3 = [];\n        let hms4 = [];\n\n        for (let x = 0; x < filterDataElective100.length; x++) {\n          if (filterDataElective100[x][7] == 2) {\n            hms2.push(filterDataElective100[x]);\n          }\n\n          if (filterDataElective100[x][7] == 4) {\n            hms4.push(filterDataElective100[x]);\n          }\n\n          if (filterDataElective100[x][7] == 3) {\n            hms3.push(filterDataElective100[x]);\n          }\n\n          test.push(filterDataElective100[x]);\n        } //slot in  2 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < hms2.length) {\n            checking_1_Elective(combine, array, hms2[k]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j + startIndexElective100] == 100 && combine[j - 1 + startIndexElective100] == 100 && j - 1 != LastIndexElective50) {\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndexElective100] = hms2[k];\n                combine[j - 1 + startIndexElective100] = hms2[k];\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j + startIndexElective100] == 100 && combine[j + 1 + startIndexElective100] == 100 && j + 1 != startIndexElective200) {\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndexElective100] = hms2[k];\n                combine[j + 1 + startIndexElective100] = hms2[k];\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k++;\n        } // console.log(hms2.length)\n        // console.log(hms4.length)\n        //console.log(hms3.length)\n        //slot in  4 hours of meeting student course \n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k2 < hms4.length) {\n            //if(k2 < 1){\n            checking_1_Elective(combine, array, hms4[k2]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j + startIndexElective100] == 100 && combine[j - 1 + startIndexElective100] == 100 && j - 1 != LastIndexElective50) {\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndexElective100] = hms4[k2];\n                combine[j - 1 + startIndexElective100] = hms4[k2];\n                let b = 0;\n\n                while (b != 1) {\n                  const v = Math.floor(Math.random() * (i + 1)); //if(array[v] == 100 && array[v-1] == 100){\n\n                  if (combine[v + startIndexElective100] == 100 && combine[v - 1 + startIndexElective100] == 100 && v - 1 != LastIndexElective50) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v - 1] = -1;\n                    combine[v + startIndexElective100] = hms4[k2];\n                    combine[v - 1 + startIndexElective100] = hms4[k2];\n                    b = 1;\n                  } //else if(array[v] == 100 && array[v+1] == 100){\n                  else if (combine[v + startIndexElective100] == 100 && combine[v + 1 + startIndexElective100] == 100 && v + 1 != startIndexElective200) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v + 1] = -1;\n                    combine[v + startIndexElective100] = hms4[k2];\n                    combine[v + 1 + startIndexElective100] = hms4[k2];\n                    b = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j + startIndexElective100] == 100 && combine[j + 1 + startIndexElective100] == 100 && j + 1 != startIndexElective200) {\n                //console.log(j)\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndexElective100] = hms4[k2];\n                combine[j + 1 + startIndexElective100] = hms4[k2];\n                let z = 0;\n\n                while (z != 1) {\n                  const p = Math.floor(Math.random() * (i + 1)); //if(array[p] == 100 && array[p-1] == 100){\n\n                  if (combine[p + startIndexElective100] == 100 && combine[p - 1 + startIndexElective100] == 100 && p - 1 != LastIndexElective50) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p - 1] = -1;\n                    combine[p + startIndexElective100] = hms4[k2];\n                    combine[p - 1 + startIndexElective100] = hms4[k2];\n                    z = 1;\n                  } //else if(array[p] == 100 && array[p+1] == 100){\n                  else if (combine[p + startIndexElective100] == 100 && combine[p + 1 + startIndexElective100] == 100 && p + 1 != startIndexElective200) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p + 1] = -1;\n                    combine[p + startIndexElective100] = hms4[k2];\n                    combine[p + 1 + startIndexElective100] = hms4[k2];\n                    z = 1;\n                  }\n                }\n\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k2++;\n        } //slot in  3 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k3 < hms3.length) {\n            //if(k3 < 1){\n            checking_1_Elective(combine, array, hms3[k3]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\n\n              if (combine[j + startIndexElective100] == 100 && combine[j - 1 + startIndexElective100] == 100 && combine[j + 1 + startIndexElective100] == 100 && j - 1 != LastIndexElective50 && j + 1 != startIndexElective200) {\n                // slot in 3 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndexElective100] = hms3[k3];\n                combine[j - 1 + startIndexElective100] = hms3[k3];\n                combine[j + 1 + startIndexElective100] = hms3[k3];\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k3++;\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n        return array;\n      };\n\n      var AntArrInsElective100 = AntAlgoInsertElective100(AntArrElective100, AntArrCombineElective);\n\n      const checkAmountDataElective100_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 100 && array[i] != 0 && array[i] != undefined && array[i] != 1) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_2 = checkAmountDataElective100_2(AntArrInsElective100); // console.log(AntArrInsElective100);\n      // console.log(checkAmount_2)\n\n      const checkAmountDataElective100_0 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_0 = checkAmountDataElective100_0(AntArrElective100); //console.log(checkAmount_0)\n      //___________________________________________________________________________________________________________________________________\n      //___________________________________________________________________________________________________________________________________\n\n      const array1DElective200 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective200 = array1DElective200(DataArrayElective200);\n\n      const AntAlgoInsertElective200 = (array, combine) => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let hms2 = [];\n        let hms3 = [];\n        let hms4 = [];\n\n        for (let x = 0; x < filterDataElective200.length; x++) {\n          if (filterDataElective200[x][7] == 2) {\n            hms2.push(filterDataElective200[x]);\n          }\n\n          if (filterDataElective200[x][7] == 4) {\n            hms4.push(filterDataElective200[x]);\n          }\n\n          if (filterDataElective200[x][7] == 3) {\n            hms3.push(filterDataElective200[x]);\n          }\n\n          test.push(filterDataElective200[x]);\n        } //slot in  2 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < hms2.length) {\n            checking_1_Elective(combine, array, hms2[k]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j + startIndexElective200] == 100 && combine[j - 1 + startIndexElective200] == 100 && j - 1 != LastIndexElective100) {\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndexElective200] = hms2[k];\n                combine[j - 1 + startIndexElective200] = hms2[k];\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j + startIndexElective200] == 100 && combine[j + 1 + startIndexElective200] == 100 && j + 1 != startIndexElective500) {\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndexElective200] = hms2[k];\n                combine[j + 1 + startIndexElective200] = hms2[k];\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k++;\n        } // console.log(hms2.length)\n        // console.log(hms4.length)\n        //console.log(hms3.length)\n        //slot in  4 hours of meeting student course \n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k2 < hms4.length) {\n            //if(k2 < 1){\n            checking_1_Elective(combine, array, hms4[k2]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j + startIndexElective200] == 100 && combine[j - 1 + startIndexElective200] == 100 && j - 1 != LastIndexElective100) {\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndexElective200] = hms4[k2];\n                combine[j - 1 + startIndexElective200] = hms4[k2];\n                let b = 0;\n\n                while (b != 1) {\n                  const v = Math.floor(Math.random() * (i + 1)); //if(array[v] == 100 && array[v-1] == 100){\n\n                  if (combine[v + startIndexElective200] == 100 && combine[v - 1 + startIndexElective200] == 100 && v - 1 != LastIndexElective100) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v - 1] = -1;\n                    combine[v + startIndexElective200] = hms4[k2];\n                    combine[v - 1 + startIndexElective200] = hms4[k2];\n                    b = 1;\n                  } //else if(array[v] == 100 && array[v+1] == 100){\n                  else if (combine[v + startIndexElective200] == 100 && combine[v + 1 + startIndexElective200] == 100 && v + 1 != startIndexElective500) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v + 1] = -1;\n                    combine[v + startIndexElective200] = hms4[k2];\n                    combine[v + 1 + startIndexElective200] = hms4[k2];\n                    b = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j + startIndexElective200] == 100 && combine[j + 1 + startIndexElective200] == 100 && j + 1 != startIndexElective500) {\n                //console.log(j)\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndexElective200] = hms4[k2];\n                combine[j + 1 + startIndexElective200] = hms4[k2];\n                let z = 0;\n\n                while (z != 1) {\n                  const p = Math.floor(Math.random() * (i + 1)); //if(array[p] == 100 && array[p-1] == 100){\n\n                  if (combine[p + startIndexElective200] == 100 && combine[p - 1 + startIndexElective200] == 100 && p - 1 != LastIndexElective100) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p - 1] = -1;\n                    combine[p + startIndexElective200] = hms4[k2];\n                    combine[p - 1 + startIndexElective200] = hms4[k2];\n                    z = 1;\n                  } //else if(array[p] == 100 && array[p+1] == 100){\n                  else if (combine[p + startIndexElective200] == 100 && combine[p + 1 + startIndexElective200] == 100 && p + 1 != startIndexElective500) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p + 1] = -1;\n                    combine[p + startIndexElective200] = hms4[k2];\n                    combine[p + 1 + startIndexElective200] = hms4[k2];\n                    z = 1;\n                  }\n                }\n\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k2++;\n        } //slot in  3 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k3 < hms3.length) {\n            //if(k3 < 1){\n            checking_1_Elective(combine, array, hms3[k3]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\n\n              if (combine[j + startIndexElective200] == 100 && combine[j - 1 + startIndexElective200] == 100 && combine[j + 1 + startIndexElective200] == 100 && j - 1 != LastIndexElective100 && j + 1 != startIndexElective500) {\n                // slot in 3 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndexElective200] = hms3[k3];\n                combine[j - 1 + startIndexElective200] = hms3[k3];\n                combine[j + 1 + startIndexElective200] = hms3[k3];\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k3++;\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n        return array;\n      };\n\n      var AntArrInsElective200 = AntAlgoInsertElective200(AntArrElective200, AntArrCombineElective);\n\n      const checkAmountDataElective200_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 200 && array[i] != 0 && array[i] != undefined && array[i] != 1) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_2 = checkAmountDataElective200_2(AntArrInsElective200); // console.log(AntArrInsElective200);\n      // console.log(checkAmount_2)\n\n      const checkAmountDataElective200_0 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_0 = checkAmountDataElective200_0(AntArrElective200); //console.log(checkAmount_0)\n      //___________________________________________________________________________________________________________________________________\n      //___________________________________________________________________________________________________________________________________\n\n      const array1DElective500 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective500 = array1DElective500(DataArrayElective500);\n\n      const AntAlgoInsertElective500 = (array, combine) => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let hms2 = [];\n        let hms3 = [];\n        let hms4 = [];\n\n        for (let x = 0; x < filterDataElective500.length; x++) {\n          if (filterDataElective500[x][7] == 2) {\n            hms2.push(filterDataElective500[x]);\n          }\n\n          if (filterDataElective500[x][7] == 4) {\n            hms4.push(filterDataElective500[x]);\n          }\n\n          if (filterDataElective500[x][7] == 3) {\n            hms3.push(filterDataElective500[x]);\n          }\n\n          test.push(filterDataElective500[x]);\n        } //slot in  2 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < hms2.length) {\n            checking_1_Elective(combine, array, hms2[k]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j + startIndexElective500] == 100 && combine[j - 1 + startIndexElective500] == 100 && j - 1 != LastIndexElective200) {\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndexElective500] = hms2[k];\n                combine[j - 1 + startIndexElective500] = hms2[k];\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j + startIndexElective500] == 100 && combine[j + 1 + startIndexElective500] == 100) {\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndexElective500] = hms2[k];\n                combine[j + 1 + startIndexElective500] = hms2[k];\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k++;\n        } // console.log(hms2.length)\n        // console.log(hms4.length)\n        //console.log(hms3.length)\n        //slot in  4 hours of meeting student course \n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k2 < hms4.length) {\n            //if(k2 < 1){\n            checking_1_Elective(combine, array, hms4[k2]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j + startIndexElective500] == 100 && combine[j - 1 + startIndexElective500] == 100 && j - 1 != LastIndexElective200) {\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndexElective500] = hms4[k2];\n                combine[j - 1 + startIndexElective500] = hms4[k2];\n                let b = 0;\n\n                while (b != 1) {\n                  const v = Math.floor(Math.random() * (i + 1)); //if(array[v] == 100 && array[v-1] == 100){\n\n                  if (combine[v + startIndexElective500] == 100 && combine[v - 1 + startIndexElective500] == 100 && v - 1 != LastIndexElective200) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v - 1] = -1;\n                    combine[v + startIndexElective500] = hms4[k2];\n                    combine[v - 1 + startIndexElective500] = hms4[k2];\n                    b = 1;\n                  } //else if(array[v] == 100 && array[v+1] == 100){\n                  else if (combine[v + startIndexElective500] == 100 && combine[v + 1 + startIndexElective500] == 100) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v + 1] = -1;\n                    combine[v + startIndexElective500] = hms4[k2];\n                    combine[v + 1 + startIndexElective500] = hms4[k2];\n                    b = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j + startIndexElective500] == 100 && combine[j + 1 + startIndexElective500] == 100) {\n                //console.log(j)\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndexElective500] = hms4[k2];\n                combine[j + 1 + startIndexElective500] = hms4[k2];\n                let z = 0;\n\n                while (z != 1) {\n                  const p = Math.floor(Math.random() * (i + 1)); //if(array[p] == 100 && array[p-1] == 100){\n\n                  if (combine[p + startIndexElective500] == 100 && combine[p - 1 + startIndexElective500] == 100 && p - 1 != LastIndexElective200) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p - 1] = -1;\n                    combine[p + startIndexElective500] = hms4[k2];\n                    combine[p - 1 + startIndexElective500] = hms4[k2];\n                    z = 1;\n                  } //else if(array[p] == 100 && array[p+1] == 100){\n                  else if (combine[p + startIndexElective500] == 100 && combine[p + 1 + startIndexElective500] == 100) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p + 1] = -1;\n                    combine[p + startIndexElective500] = hms4[k2];\n                    combine[p + 1 + startIndexElective500] = hms4[k2];\n                    z = 1;\n                  }\n                }\n\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k2++;\n        } //slot in  3 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k3 < hms3.length) {\n            //if(k3 < 1){\n            checking_1_Elective(combine, array, hms3[k3]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\n\n              if (combine[j + startIndexElective500] == 100 && combine[j - 1 + startIndexElective500] == 100 && combine[j + 1 + startIndexElective500] == 100 && j - 1 != LastIndexElective200) {\n                // slot in 3 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndexElective500] = hms3[k3];\n                combine[j - 1 + startIndexElective500] = hms3[k3];\n                combine[j + 1 + startIndexElective500] = hms3[k3];\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k3++;\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n        return array;\n      };\n\n      var AntArrInsElective500 = AntAlgoInsertElective500(AntArrElective500, AntArrCombineElective);\n\n      const checkAmountDataElective500_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 500 && array[i] != 0 && array[i] != undefined && array[i] != 1) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_2 = checkAmountDataElective500_2(AntArrInsElective500); //console.log(AntArrInsElective500);\n      // console.log(checkAmount_2)\n\n      const checkAmountDataElective500_0 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_0 = checkAmountDataElective500_0(AntArrElective500); //console.log(checkAmount_0)\n      //______________________________________________________________________________________________________________________________________________\n      //______________________________________________________________________________________________________________________________________________\n      // const checkAmountDataCombine_2 = (array) => {\n      //     let count = 0\n      //     for(let i = 0; i < array.length; i++){\n      //             if(array[i] != 100 && array[i] !=100 && array[i] != 0 && array[i] != undefined && array[i] != 1){\n      //                 count += 1\n      //             }\n      //     }\n      //     return count\n      // }\n      // var checkAmount_combine = checkAmountDataCombine_2(AntArrCombine)\n      //  console.log(AntArrCombine)\n      //  console.log(\"Amount of data: \" +checkAmount_combine);\n      // const checkAmountDataCombine = (array) => {\n      //     let count = 0\n      //     for(let i = 0; i < array.length; i++){\n      //             if( array[i] == 0 ){\n      //                 count += 1\n      //             }\n      //     }\n      //     return count\n      // }\n      //  //var checkAmount_0 = checkAmountData100_0(AntArr100)\n      //  var checkAmount_combineData = checkAmountDataCombine(AntArrCombine)\n      // //console.log(\"zero counter: \"+checkAmount_combineData);\n      // const checkAmountDataCombineElective_2 = (array) => {\n      //     let count = 0\n      //     for(let i = 0; i < array.length; i++){\n      //             if(array[i] != 100 && array[i] !=100 && array[i] != 0 && array[i] != undefined && array[i] != 1){\n      //                 count += 1\n      //             }\n      //     }\n      //     return count\n      // }\n      // var checkAmount_combine = checkAmountDataCombineElective_2(AntArrCombineElective)\n      //  console.log(AntArrCombineElective)\n      //  console.log(\"Amount of data: \" +checkAmount_combine);\n      // //  var phecheckAmount_combine = checkAmountDataCombineElective_2(pheAntArrCombineElective)\n      // //  console.log(pheAntArrCombineElective)\n      // //  console.log(\"Amount of data: \" + phecheckAmount_combine);\n      // const checkAmountDataCombineElective = (array) => {\n      //     let count = 0\n      //     for(let i = 0; i < array.length; i++){\n      //             if( array[i] == 0 ){\n      //                 count += 1\n      //             }\n      //     }\n      //     return count\n      // }\n      //  //var checkAmount_0 = checkAmountData100_0(AntArr100)\n      //  var checkAmount_combineData = checkAmountDataCombineElective(AntArrCombineElective)\n      // //console.log(\"zero counter: \"+checkAmount_combineData);\n      //---------------------------------------------------------------------------------------------------------------------------------------------\n      //Combine both faculty courses and elective courses \n\n      let fullyCombine = [];\n\n      const combineAll = (faculty, elective) => {\n        let totalRoomFalculty = faculty.length / 38;\n        let totalRoomElective = elective.length / 38;\n\n        for (let b = 0; b < totalRoomFalculty; b++) {\n          let indexArray = b * 38;\n          let indexArrayElective = b * 10;\n\n          for (let i = 0; i < 20; i++) {\n            try {\n              fullyCombine.push(faculty[i + indexArray]); //fullyCombine.push(faculty[i])\n            } catch {}\n          }\n\n          for (let i = 0; i < 10; i++) {\n            try {\n              fullyCombine.push(elective[i + indexArrayElective]); //fullyCombine.push(elective[i])\n            } catch {}\n          }\n\n          for (let i = 20; i < 34; i++) {\n            try {\n              fullyCombine.push(faculty[i + indexArray]); //fullyCombine.push(faculty[i])\n            } catch {}\n          }\n\n          for (let i = 34; i < 36; i++) {\n            try {\n              fullyCombine.push([\"Solat Jumaat\"]);\n            } catch {}\n          }\n\n          for (let i = 34; i < 38; i++) {\n            try {\n              fullyCombine.push(faculty[i + indexArray]); //fullyCombine.push(faculty[i])\n            } catch {}\n          }\n        }\n      };\n\n      combineAll(AntArrCombine, AntArrCombineElective); //console.log(fullyCombine);\n\n      const checkAmountDataCombine_2_fully = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 100 && array[i] != 0 && array[i] != undefined && array[i] != 1) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_combine = checkAmountDataCombine_2_fully(fullyCombine);\n      console.log(fullyCombine);\n      console.log(\"Amount of data: \" + checkAmount_combine);\n\n      const checkAmountDataCombineFully = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      }; //var checkAmount_0 = checkAmountData100_0(AntArr100)\n\n\n      var checkAmount_combineData = checkAmountDataCombineFully(fullyCombine); //console.log(\"zero counter: \"+checkAmount_combineData);\n      //----------------------------------------------------------------------------------------------------------------------------------------------\n      //console.log(dataCombine)\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n      //Faculty\n      // Hard Constraint \n      // H1: No student attend more than one class/ event at the same time\n      // H2: The room is large enough to accomodate all of the student in attendace while also meeting the requirement \n      // H3: At any given time, each room can onle have one course booked\n      // H4: No student attend class during 12:00 pm -2:00 due to solat jumaat\n      // H5: One teacher can only teach one class at one time.\n      //Check for the H1 violation: same group attend more than 1 class at 1 time\n\n      const check1Group = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n        }\n\n        for (let x = 1; x <= totalRoom; x++) {\n          try {\n            for (let i = 0; i < array.length; i++) {\n              indexArray = x * 38;\n\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined && array[i + indexArray] != 1 && array[i + indexArray] != 0) {\n                try {\n                  if (array[i][6] == array[i + indexArray][6]) {\n                    try {\n                      // console.log(i)\n                      // console.log(array[i])\n                      // console.log(array[i][6])\n                      // console.log(i+indexArray)\n                      // console.log(array[i+indexArray])\n                      // console.log(array[i+indexArray][6])\n                      count += 1;\n                    } catch {}\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH1_ALL = check1Group(AntArrCombine); //Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\n\n      const checkRoomQuota = array => {\n        let count = 0;\n        return count;\n      }; //Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\n\n\n      const checkSolatJummat = array => {\n        let count = 0;\n        return count;\n      }; //Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\n\n\n      const check1Teacher = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n\n          try {\n            for (let i = 1; i < array.length; i++) {\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined && array[i + indexArray] != 1 && array[i + indexArray] != 0) {\n                try {\n                  if (array[i][5] == array[i + indexArray][5]) {\n                    //    console.log(i)\n                    //    console.log(array[i])\n                    //    console.log(array[i][5])\n                    //    console.log(i+indexArray)\n                    //    console.log(array[i+indexArray])\n                    //    console.log(array[i+indexArray][5])\n                    count += 1;\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH5_ALL = check1Teacher(AntArrCombine); //------------------------------------------------------------------------------------------------------------------------------------------\n      //Elective\n      //Check for the H1 violation: same group attend more than 1 class at 1 time\n\n      const check1GroupElective = array => {\n        let count = 0;\n        let indexArray = 0; //let totalRoom = array.length / 38\n\n        let totalRoom = array.length / 10;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          //indexArray = (x * 38)\n          indexArray = x * 10;\n        }\n\n        for (let x = 1; x <= totalRoom; x++) {\n          try {\n            for (let i = 0; i < array.length; i++) {\n              //indexArray = (x * 38)\n              indexArray = x * 10;\n\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined && array[i + indexArray] != 1 && array[i + indexArray] != 0) {\n                try {\n                  if (array[i][6] == array[i + indexArray][6]) {\n                    try {\n                      count += 1;\n                    } catch {}\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH1_ALL_Elective = check1GroupElective(AntArrCombineElective); //Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\n\n      const checkRoomQuotaElective = array => {\n        let count = 0;\n        return count;\n      };\n\n      var checkH2_ALL_Elective = checkRoomQuotaElective(AntArrCombineElective); //Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\n\n      const checkSolatJummatElective = array => {\n        let count = 0;\n        return count;\n      };\n\n      var checkH4_ALL_Elective = checkSolatJummatElective(AntArrCombineElective); //Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\n\n      const check1TeacherElective = array => {\n        let count = 0;\n        let indexArray = 0; //let totalRoom = array.length / 38\n\n        let totalRoom = array.length / 10;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          //indexArray = (x * 38)\n          indexArray = x * 10;\n\n          try {\n            for (let i = 1; i < array.length; i++) {\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined && array[i + indexArray] != 1 && array[i + indexArray] != 0) {\n                try {\n                  if (array[i][5] == array[i + indexArray][5]) {\n                    count += 1;\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH5_ALL_ELective = check1TeacherElective(AntArrCombineElective); //------------------------------------------------------------------------------------------------------------------------------------------\n\n      const checkHC = (data1, data2, data3, data4) => {\n        let count = 0; // if(data1 != 0){\n        //     count +=1\n        // }\n        // if(data2 != 0){\n        //     count +=1\n        // }\n\n        count = data1 + data2 + data3 + data4;\n        return count;\n      };\n\n      let checkTotalHardContraints = checkHC(checkH5_ALL, checkH1_ALL, checkH5_ALL_ELective, checkH1_ALL_Elective);\n      console.log(\"Total Hard Constraint: \" + checkTotalHardContraints); //----------------------------------------------------------------------------------------------------------------------------------------\n      // Soft Constraint \n      // S1: A student has a class schedule toward the end of the day\n      // S2: A student have more than two class in a row\n      // Faculty\n      //Check for the S1 violation: student have class at the end of the day\n\n      const checkEndOfClass = array => {\n        let count = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          let indexArray = x * 37;\n\n          if (array[indexArray] != 100) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkSC1_ALL = checkEndOfClass(AntArrCombine); //Check for the S2 violation: student have 2 class in a row\n\n      const check2ClassInARow = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          try {\n            if (array[i] != 100 && array[i + 3] != 100) {\n              if (array[i][6] == array[i + 3][6]) {\n                count += 1;\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkSC2_ALL = check2ClassInARow(AntArrCombine); //----------------------------------------------------------------------------------------------------------------------------------------------\n      //Elective\n\n      const checkEndOfClassElective = array => {\n        let count = 0; //let totalRoom = array.length / 38\n\n        let totalRoom = array.length / 10;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          //let indexArray = (x * 37)\n          let indexArray = x * 9;\n\n          if (array[indexArray] != 100) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkSC1_ALL_Elective = checkEndOfClassElective(AntArrCombineElective); //Check for the S2 violation: teacher have 2 class in a row\n\n      const check2ClassInARowElective = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          try {\n            if (array[i] != 100 && array[i + 3] != 100) {\n              if (array[i][6] == array[i + 3][6]) {\n                count += 1;\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkSC2_ALL_Elective = check2ClassInARowElective(AntArrCombineElective); //-----------------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n\n      const checkTotalSoftContraint = () => {\n        //let count =0\n        let count = checkSC1_ALL + checkSC2_ALL + checkSC1_ALL_Elective + checkSC2_ALL_Elective; // let totalS1 = checkS1_50 + checkS1_100 + checkS1_200 + checkS1_500 + checkS1_Elective50 + checkS1_Elective100 + checkS1_Elective200 + checkS1_Elective500\n        // let totalS2 = checkS2_50 + checkS2_100 + checkS2_200 + checkS2_500 + checkS2_Elective50 + checkS2_Elective100 + checkS2_Elective200 + checkS2_Elective500\n        // if(totalSC != 0){\n        //     count +=1\n        // }\n\n        return count;\n      };\n\n      var checkTotalSoftContraints = checkTotalSoftContraint();\n      console.log(\"Total Soft Constraint: \" + checkTotalSoftContraints); //----------------------------------------------------------------------------------------------------------------------------------------------\n\n      const change100ToEmpty = data => {\n        for (let i = 0; i < data.length; i++) {\n          if (data[i] == 100) {\n            data[i] = [];\n          }\n        }\n\n        return data;\n      }; //let finalData = change100ToEmpty(AntArrCombine);\n\n\n      let finalData = change100ToEmpty(fullyCombine); // const checkMissingData = (data50,data100,data200,data500,dataE50,dataE100,dataE200,dataE500) => {\n      //     let countData = []\n      //     for(let i = 0; i< courseData[0].length;i++){\n      //         for(let j = 0; j <courseData[0][i][7]; j++){\n      //             countData.push(courseData[0][i]);\n      //         }\n      //     }\n      //     let totalGenerateScheduleData = data50 + data100 + data200 + data500 + dataE50 + dataE100 + dataE200 + dataE500\n      //     if(countData.length == totalGenerateScheduleData){\n      //     }else{\n      //     }\n      // }\n      // //checkMissingData(checkAmount50,checkAmount100,checkAmount200,checkAmount500,checkAmountElective50,checkAmountElective100,checkAmountElective200,checkAmountElective500)\n\n      checkTotalHardContraintsAll = checkTotalHardContraints;\n      checkTotalSoftContraintsAll = checkTotalSoftContraints;\n      totalAmountofDataSlottedIn = checkAmount_combine;\n      finalDataAll = [];\n      finalDataAll.push(finalData);\n      return {\n        checkTotalHardContraints,\n        checkTotalSoftContraints,\n        finalData,\n        checkAmount_combine\n      }; ////return {checkTotalHardContraints,checkTotalSoftContraints}\n    }; // for(let i = 1; i <= 1; i++){\n    //     console.log(\"iteration: \" + i)\n    //     let antSystemAlgo = antSystem();\n    // }\n    // -------------------------------------------------------------------------------------------------------------------------------------------\n\n\n    let trigger = 0;\n\n    const iteration = () => {\n      antSystem();\n      let globalBestHS = checkTotalHardContraintsAll;\n      let globalBestSS = checkTotalSoftContraintsAll;\n      let globalBestScehdule = finalDataAll[0];\n      let checkTotalAmountDataset = totalAmountofData.length + 56; // let globalBestScehduleElective = finalDataAllElective[0]\n\n      for (let i = 1; i <= 3; i++) {\n        antSystem();\n        let localBestHS = checkTotalHardContraintsAll;\n        let localBestSS = checkTotalSoftContraintsAll;\n        let localBestScehdule = finalDataAll[0]; //let globalBestHS = finalDataAll[0]\n        // let localBestScehduleElective = finalDataAllElective[0]\n\n        console.log(\"iteraion: \" + i); // if(globalBestHS > localBestHS ){\n        //     globalBestHS = localBestHS\n        //     globalBestSS = localBestSS\n        //     globalBestScehdule = localBestScehdule\n        //     // globalBestScehduleElective = localBestScehduleElective\n        // }\n\n        if (localBestHS == 0 && localBestSS == 0 && checkTotalAmountDataset == totalAmountofDataSlottedIn) {\n          console.log(\"iteraion: \" + i);\n          console.log(\"perfect solution is found\");\n          globalBestHS = 0;\n          globalBestSS = 0;\n          globalBestScehdule = localBestScehdule;\n          console.log(\"Perfect Gloabal best HS: \" + globalBestHS);\n          console.log(\"Perfect Gloabal best SS: \" + globalBestSS); //console.log(finalDataAll[0])\n          //return [finalDataAll[0], finalDataAllElective[0]]\n        } else if (localBestHS == 0 && checkTotalAmountDataset == totalAmountofDataSlottedIn) {\n          console.log(\"iteraion: \" + i);\n          console.log(\"workable solution is found\");\n          console.log(\"Workable Gloabal best HS: \" + localBestHS);\n          console.log(\"Workable Gloabal best SS: \" + localBestSS);\n\n          if (globalBestSS > localBestSS) {\n            globalBestHS = 0;\n            globalBestSS = localBestSS;\n            globalBestScehdule = localBestScehdule;\n            console.log(\"Updated Gloabal best HS: \" + globalBestHS);\n            console.log(\"Updated Gloabal best SS: \" + globalBestSS);\n          } //console.log(finalDataAll[0])\n          //return [finalDataAll[0], finalDataAllElective[0]]\n\n        }\n\n        if (i == 3 && globalBestHS == 0) {\n          console.log(globalBestScehdule);\n          console.log(\"Final Gloabal best HS: \" + globalBestHS);\n          console.log(\"Final Gloabal best SS: \" + globalBestSS);\n          trigger = 1;\n          MainData = globalBestScehdule;\n          byLectureData = globalBestScehdule;\n          byCourseData = globalBestScehdule;\n          return [globalBestScehdule];\n        }\n      } //return [finalDataAll[0], finalDataAllElective[0]]\n      // return [finalDataAll[0]]\n\n    }; //let interations = iteration()\n\n\n    iteration(); //let presentableDataElective = []\n\n    if (trigger == 1) {\n      var t1 = performance.now();\n      disbaleButton = false;\n      console.log(\"Duration: \" + (t1 - t0)); //downloadBlob(csv, 'ModifiedAntSystem_GeneratedSchedule.csv', 'text/csv;charset=utf-8;')\n    } else {\n      var t1 = performance.now();\n      console.log(\"Duration: \" + (t1 - t0) + \" milliseconds\");\n      alert(\"no workable solution found, please refersh until get workable solution\");\n    } //----------------------------------------------------------------------------------------------------------------------------------------\n\n  }\n\n  const mainGeneratedSchedule = () => {\n    const changeToPresentationData = data => {\n      //presentableData.push(data)\n      for (let i = 0; i <= data.length; i++) {\n        try {\n          presentableData.push([data[i][1], data[i][6], data[i][11]]);\n        } catch (error) {}\n      }\n    };\n\n    changeToPresentationData(MainData);\n    let allRoomName = [];\n\n    for (let i = 0; i < roomData[0].length; i++) {\n      allRoomName.push(roomData[0][i][0]);\n    }\n\n    allRoomName.unshift(\"Room\");\n\n    if (allRoomName.pop() == undefined) {}\n\n    let weekday = ['Mon[0800-0900]', 'Mon[0900-1000]', 'Mon[1000-1100]', 'Mon[1100-1200]', 'Mon[1200-1300]', 'Mon[1300-1400]', 'Mon[1400-1500]', 'Mon[1500-1600]', 'Mon[1600-1700]', 'Mon[1700-1800]', 'Tue[0800-0900]', 'Tue[0900-1000]', 'Tue[1000-1100]', 'Tue[1100-1200]', 'Tue[1200-1300]', 'Tue[1300-1400]', 'Tue[1400-1500]', 'Tue[1500-1600]', 'Tue[1600-1700]', 'Tue[1700-1800]', 'Wed[0800-0900]', 'Wed[0900-1000]', 'Wed[1000-1100]', 'Wed[1100-1200]', 'Wed[1200-1300]', 'Wed[1300-1400]', 'Wed[1400-1500]', 'Wed[1500-1600]', 'Wed[1600-1700]', 'Wed[1700-1800]', 'Thu[0800-0900]', 'Thu[0900-1000]', 'Thu[1000-1100]', 'Thu[1100-1200]', 'Thu[1200-1300]', 'Thu[1300-1400]', 'Thu[1400-1500]', 'Thu[1500-1600]', 'Thu[1600-1700]', 'Thu[1700-1800]', 'Fri[0800-0900]', 'Fri[0900-1000]', 'Fri[1000-1100]', 'Fri[1100-1200]', 'Fri[1200-1300]', 'Fri[1300-1400]', 'Fri[1400-1500]', 'Fri[1500-1600]', 'Fri[1600-1700]', 'Fri[1700-1800]'];\n\n    const create2dArray = (weekdayArray, partDay, arrayAll, partAll) => {\n      var tmp = [];\n\n      for (var i = 0; i < weekdayArray.length; i += partDay) {\n        tmp.push(weekdayArray.slice(i, i + partDay));\n      }\n\n      for (var i = 0; i < arrayAll.length; i += partAll) {\n        tmp.push(arrayAll.slice(i, i + partAll));\n      }\n\n      return tmp;\n    };\n\n    let dataset = create2dArray(weekday, 50, presentableData, 50);\n    console.log(dataset);\n\n    const insertRoomName = (roomData, array) => {\n      for (let i = 0; i < array.length; i++) {\n        array[i].unshift(roomData[i]);\n      }\n\n      return array;\n    };\n\n    insertRoomName(allRoomName, dataset);\n    /** Convert a 2D array into a CSV string\r\n     */\n\n    function arrayToCsv(data) {\n      //console.log(data)\n      return data.map(row => row.map(String) // convert every value to String\n      .map(v => v.replaceAll('\"', '\"\"')) // escape double colons\n      .map(v => `\"${v}\"`) // quote it\n      .join(',') // comma-separated\n      ).join('\\r\\n'); // rows starting on new lines\n    }\n\n    let csv = arrayToCsv(dataset);\n\n    function downloadBlob(content, filename, contentType) {\n      // Create a blob\n      var blob = new Blob([content], {\n        type: contentType\n      });\n      var url = URL.createObjectURL(blob); // Create a link to download it\n\n      var pom = document.createElement('a');\n      pom.href = url;\n      pom.setAttribute('download', filename);\n      pom.click();\n    }\n\n    downloadBlob(csv, 'ModifiedAntSystem_GeneratedSchedule.csv', 'text/csv;charset=utf-8;');\n  };\n\n  const lecturerGeneratedSchedule = () => {\n    let testData = [];\n    let i = 0;\n    let LoopTable = [];\n\n    for (let i = 0; i < notDuplicatesLecturerArray.length; i++) {\n      //let dupeData = MainData\n      const dupeData = [...byLectureData]; //console.log(MainData);\n\n      testData = [];\n\n      for (let x = 0; x < dupeData.length; x++) {\n        //console.log(dupeData[0][x])\n        try {\n          //if(MainData[x] != undefined){\n          if (notDuplicatesLecturerArray[i] == dupeData[x][5]) {//dupeData[0][x] = []\n            //testData.push(dupeData[0][x])\n          } else {\n            dupeData[x] = []; //testData.push(dupeData[0][x])\n          } //}\n\n        } catch {}\n      } //testData = []\n\n\n      testData.push(dupeData); //testData.push(notDuplicatesLecturerArray[i])\n      //console.log(testData)\n\n      const changeToPresentationData = data => {\n        //presentableData.push(data)\n        presentableDataLecturer = [];\n\n        for (let i = 0; i <= data.length; i++) {\n          try {\n            presentableDataLecturer.push([data[i][1], data[i][5], data[i][6]]);\n          } catch (error) {}\n        }\n      };\n\n      changeToPresentationData(testData[0]); //console.log(presentableDataLecturer)\n\n      let allRoomName = [];\n\n      for (let i = 0; i < roomData[0].length; i++) {\n        allRoomName.push(roomData[0][i][0]);\n      }\n\n      allRoomName.unshift(\"Room\");\n\n      if (allRoomName.pop() == undefined) {}\n\n      let weekday = ['Mon[0800-0900]', 'Mon[0900-1000]', 'Mon[1000-1100]', 'Mon[1100-1200]', 'Mon[1200-1300]', 'Mon[1300-1400]', 'Mon[1400-1500]', 'Mon[1500-1600]', 'Mon[1600-1700]', 'Mon[1700-1800]', 'Tue[0800-0900]', 'Tue[0900-1000]', 'Tue[1000-1100]', 'Tue[1100-1200]', 'Tue[1200-1300]', 'Tue[1300-1400]', 'Tue[1400-1500]', 'Tue[1500-1600]', 'Tue[1600-1700]', 'Tue[1700-1800]', 'Wed[0800-0900]', 'Wed[0900-1000]', 'Wed[1000-1100]', 'Wed[1100-1200]', 'Wed[1200-1300]', 'Wed[1300-1400]', 'Wed[1400-1500]', 'Wed[1500-1600]', 'Wed[1600-1700]', 'Wed[1700-1800]', 'Thu[0800-0900]', 'Thu[0900-1000]', 'Thu[1000-1100]', 'Thu[1100-1200]', 'Thu[1200-1300]', 'Thu[1300-1400]', 'Thu[1400-1500]', 'Thu[1500-1600]', 'Thu[1600-1700]', 'Thu[1700-1800]', 'Fri[0800-0900]', 'Fri[0900-1000]', 'Fri[1000-1100]', 'Fri[1100-1200]', 'Fri[1200-1300]', 'Fri[1300-1400]', 'Fri[1400-1500]', 'Fri[1500-1600]', 'Fri[1600-1700]', 'Fri[1700-1800]'];\n\n      const create2dArray = (weekdayArray, partDay, arrayAll, partAll) => {\n        var tmp = [];\n\n        for (var i = 0; i < weekdayArray.length; i += partDay) {\n          tmp.push(weekdayArray.slice(i, i + partDay));\n        }\n\n        for (var i = 0; i < arrayAll.length; i += partAll) {\n          tmp.push(arrayAll.slice(i, i + partAll));\n        }\n\n        return tmp;\n      };\n\n      let dataset = create2dArray(weekday, 50, presentableDataLecturer, 50); //console.log(dataset);\n\n      const insertRoomName = (roomData, array) => {\n        for (let i = 0; i < array.length; i++) {\n          array[i].unshift(roomData[i]);\n        } //array.push(lecturer)\n\n\n        return array;\n      };\n\n      insertRoomName(allRoomName, dataset); //LoopTable = []\n      //LoopTable.push(notDuplicatesLecturerArray[i]);\n\n      LoopTable.push(dataset);\n    } //i++\n\n\n    console.log(LoopTable);\n    let csvData = [];\n\n    for (let i = 0; i < LoopTable.length; i++) {\n      csvData.push([\"Lecturer Name\"]);\n      csvData.push([notDuplicatesLecturerArray[i]]);\n      csvData.push([\"Lecturer Code\"]);\n      csvData.push([notDuplicatesLecturerCodeArray[i]]);\n\n      for (let j = 0; j < LoopTable[i].length; j++) {\n        csvData.push(LoopTable[i][j]);\n      }\n\n      csvData.push([]);\n    }\n\n    console.log(csvData);\n    /** Convert a 2D array into a CSV string\r\n     */\n\n    function arrayToCsv(data) {\n      //console.log(data)\n      return data.map(row => row.map(String) // convert every value to String\n      .map(v => v.replaceAll('\"', '\"\"')) // escape double colons\n      .map(v => `\"${v}\"`) // quote it\n      .join(',') // comma-separated\n      ).join('\\r\\n'); // rows starting on new lines\n    }\n\n    let csv = arrayToCsv( //dataset\n    //LoopTable\n    csvData);\n\n    function downloadBlob(content, filename, contentType) {\n      // Create a blob\n      var blob = new Blob([content], {\n        type: contentType\n      });\n      var url = URL.createObjectURL(blob); // Create a link to download it\n\n      var pom = document.createElement('a');\n      pom.href = url;\n      pom.setAttribute('download', filename);\n      pom.click();\n    }\n\n    downloadBlob(csv, 'ModifiedAntSystem_GeneratedSchedule_by_Lecturer.csv', 'text/csv;charset=utf-8;'); //console.log(MainData[x]);\n  };\n\n  const courseGeneratedSchedule = () => {\n    let testData = [];\n    let i = 0;\n    let LoopTable = [];\n\n    for (let i = 0; i < courseCodeArray.length; i++) {\n      //let dupeData = MainData\n      const dupeData = [...byCourseData]; //console.log(MainData);\n\n      testData = [];\n\n      for (let x = 0; x < dupeData.length; x++) {\n        //console.log(dupeData[0][x])\n        try {\n          //if(MainData[x] != undefined){\n          if (courseCodeArray[i] == dupeData[x][1]) {//dupeData[0][x] = []\n            //testData.push(dupeData[0][x])\n          } else {\n            dupeData[x] = []; //testData.push(dupeData[0][x])\n          } //}\n\n        } catch {}\n      } //testData = []\n\n\n      testData.push(dupeData); //testData.push(notDuplicatesLecturerArray[i])\n      //console.log(testData)\n\n      const changeToPresentationData = data => {\n        //presentableData.push(data)\n        presentableDataLecturer = [];\n\n        for (let i = 0; i <= data.length; i++) {\n          try {\n            presentableDataLecturer.push([data[i][1], data[i][6], data[i][11]]);\n          } catch (error) {}\n        }\n      };\n\n      changeToPresentationData(testData[0]); //console.log(presentableDataLecturer)\n\n      let allRoomName = [];\n\n      for (let i = 0; i < roomData[0].length; i++) {\n        allRoomName.push(roomData[0][i][0]);\n      }\n\n      allRoomName.unshift(\"Room\");\n\n      if (allRoomName.pop() == undefined) {}\n\n      let weekday = ['Mon[0800-0900]', 'Mon[0900-1000]', 'Mon[1000-1100]', 'Mon[1100-1200]', 'Mon[1200-1300]', 'Mon[1300-1400]', 'Mon[1400-1500]', 'Mon[1500-1600]', 'Mon[1600-1700]', 'Mon[1700-1800]', 'Tue[0800-0900]', 'Tue[0900-1000]', 'Tue[1000-1100]', 'Tue[1100-1200]', 'Tue[1200-1300]', 'Tue[1300-1400]', 'Tue[1400-1500]', 'Tue[1500-1600]', 'Tue[1600-1700]', 'Tue[1700-1800]', 'Wed[0800-0900]', 'Wed[0900-1000]', 'Wed[1000-1100]', 'Wed[1100-1200]', 'Wed[1200-1300]', 'Wed[1300-1400]', 'Wed[1400-1500]', 'Wed[1500-1600]', 'Wed[1600-1700]', 'Wed[1700-1800]', 'Thu[0800-0900]', 'Thu[0900-1000]', 'Thu[1000-1100]', 'Thu[1100-1200]', 'Thu[1200-1300]', 'Thu[1300-1400]', 'Thu[1400-1500]', 'Thu[1500-1600]', 'Thu[1600-1700]', 'Thu[1700-1800]', 'Fri[0800-0900]', 'Fri[0900-1000]', 'Fri[1000-1100]', 'Fri[1100-1200]', 'Fri[1200-1300]', 'Fri[1300-1400]', 'Fri[1400-1500]', 'Fri[1500-1600]', 'Fri[1600-1700]', 'Fri[1700-1800]'];\n\n      const create2dArray = (weekdayArray, partDay, arrayAll, partAll) => {\n        var tmp = [];\n\n        for (var i = 0; i < weekdayArray.length; i += partDay) {\n          tmp.push(weekdayArray.slice(i, i + partDay));\n        }\n\n        for (var i = 0; i < arrayAll.length; i += partAll) {\n          tmp.push(arrayAll.slice(i, i + partAll));\n        }\n\n        return tmp;\n      };\n\n      let dataset = create2dArray(weekday, 50, presentableDataLecturer, 50); //console.log(dataset);\n\n      const insertRoomName = (roomData, array) => {\n        for (let i = 0; i < array.length; i++) {\n          array[i].unshift(roomData[i]);\n        } //array.push(lecturer)\n\n\n        return array;\n      };\n\n      insertRoomName(allRoomName, dataset); //LoopTable = []\n      //LoopTable.push(notDuplicatesLecturerArray[i]);\n\n      LoopTable.push(dataset);\n    } //i++\n\n\n    console.log(LoopTable);\n    let csvData = [];\n\n    for (let i = 0; i < LoopTable.length; i++) {\n      csvData.push([\"Course Name\"]);\n      csvData.push([courseNameArray[i]]);\n      csvData.push([\"Course Couse\"]);\n      csvData.push([courseCodeArray[i]]);\n\n      for (let j = 0; j < LoopTable[i].length; j++) {\n        csvData.push(LoopTable[i][j]);\n      }\n\n      csvData.push([]);\n    }\n\n    console.log(csvData);\n    /** Convert a 2D array into a CSV string\r\n     */\n\n    function arrayToCsv(data) {\n      //console.log(data)\n      return data.map(row => row.map(String) // convert every value to String\n      .map(v => v.replaceAll('\"', '\"\"')) // escape double colons\n      .map(v => `\"${v}\"`) // quote it\n      .join(',') // comma-separated\n      ).join('\\r\\n'); // rows starting on new lines\n    }\n\n    let csv = arrayToCsv( //dataset\n    //LoopTable\n    csvData);\n\n    function downloadBlob(content, filename, contentType) {\n      // Create a blob\n      var blob = new Blob([content], {\n        type: contentType\n      });\n      var url = URL.createObjectURL(blob); // Create a link to download it\n\n      var pom = document.createElement('a');\n      pom.href = url;\n      pom.setAttribute('download', filename);\n      pom.click();\n    }\n\n    downloadBlob(csv, 'ModifiedAntSystem_GeneratedSchedule_by_Course.csv', 'text/csv;charset=utf-8;');\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4065,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"generate-schedule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4066,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4067,\n      columnNumber: 17\n    }\n  }, \"Please wait while generating schedule\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: mainGeneratedSchedule,\n    disabled: disbaleButton,\n    className: \"generate-schedule-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4070,\n      columnNumber: 17\n    }\n  }, \"Download Main Schedule\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: lecturerGeneratedSchedule,\n    disabled: disbaleButton,\n    className: \"generate-schedule-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4071,\n      columnNumber: 17\n    }\n  }, \"Download Schedule by Lecturer\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: courseGeneratedSchedule,\n    disabled: disbaleButton,\n    className: \"generate-schedule-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4072,\n      columnNumber: 17\n    }\n  }, \"Download Schedule by Course\")));\n};\n\nexport default ArraySchedule;","map":{"version":3,"sources":["C:/Users/acit/Desktop/FYP Code/FYP Code/frontend/src/components/GenerateSchedulePage/GenerateSchedulePage.js"],"names":["concat","create","find","forEach","indexOf","React","useEffect","useState","useContext","parse","useParams","_","CSVLink","LoadingSpinner","useHttpClient","AuthContext","finalDataAll","finalDataAllElective","checkHardConstraintOutsite","checkSoftConstraintOutsite","presentableData","presentableDataLecturer","MainData","byLectureData","byCourseData","notDuplicatesLecturerArray","notDuplicatesLecturerCodeArray","courseCodeArray","courseNameArray","userIds","t0","performance","now","ArraySchedule","props","auth","push","userId","userIdcopy","isLoading","setIsLoading","loadedFile","setLoaadedFile","roomData","setroomData","courseData","setcourseData","CsvData","setCsvData","disbaleButton","sendRequest","response","fetch","responsedata","json","stringifyData","JSON","stringify","userWithFiles","Dataset","ertRoom","map","ertCourse","ok","Error","message","err","console","log","EnrollmentQuota","CourseCode","CourseName","HMS","lecturerData","lecturerCodeData","roomName","roomSize","filterData50","filterData100","filterData200","filterData500","filterDataElective50","filterDataElective100","filterDataElective200","filterDataElective500","totalAmountofData","totalAmountofDataSlottedIn","room","i","length","enrollment","code","hms","lecturer","courseName","lecturerCode","reduce","results","item","index","array","name","size","notDuplicatesRoom","filter","notDuplicatesLecturer","notDuplicatesCodeLecturer","pop","courseDataXElective","courseDataWithElective","splice","roomUnder50","roomUnder100","roomUnder200","roomUnder500","checkNumberofRoom","createArray","data","result","totalAmountData","j","totalAmountDataElective","DataArray50","DataArray100","DataArray200","DataArray500","combineArray","startIndex100","startIndex200","startIndex500","LastIndex50","LastIndex100","LastIndex200","LastIndex500","DataArrayElective50","DataArrayElective100","DataArrayElective200","DataArrayElective500","combineArrayElective","startIndexElective100","startIndexElective200","startIndexElective500","LastIndexElective50","LastIndexElective100","LastIndexElective200","LastIndexElective500","checkTotalHardContraintsAll","checkTotalSoftContraintsAll","antSystem","checking_minus_1","array2","k","b","totalRoom","totalRoom2","u","indexArray","checking_minus_1_phe","checking_plus_1","checking_plus_1_phe","checking_3","indexArray2","checking_only_1","changeRowtoZero_minus_1","index1","index2","changeRowtoZero_plus_1","changeRowtoZero_1","changeRowtoZero_3_","index3","changeToZero","checkTest","data1","count","x","checking_1","checking_1_phe","checking_1_Elective","array1DCombine","AntArrCombine","array1DElectiveCombine","AntArrCombineElective","checkDay","combine","c","z","zeroMonday","zeroMondayCom","zeroTuesday","zeroTuesdayCom","zeroThursday","zeroThursdayCom","zeroFriday","zeroFridayCom","array1D50","AntArr50","AntAlgoInsert50","test","k2","k3","hms2","hms3","hms4","Math","floor","random","v","p","m","y","AntArrIns50","checkAmountData50_2","undefined","checkAmount_2","checkAmountData50_0","checkAmount_0","array1D100","AntArr100","AntAlgoInsert100","AntArrIns100","checkAmountData100_2","checkAmountData100_0","array1D200","AntArr200","AntAlgoInsert200","AntArrIns200","checkAmountData200_2","checkAmountData200_0","array1D500","AntArr500","AntAlgoInsert500","AntArrIns500","checkAmountData500_2","checkAmountData500_0","array1DElective50","AntArrElective50","AntAlgoInsertElective50","AntArrInsElective50","checkAmountDataElective50_2","checkAmountDataElective50_0","array1DElective100","AntArrElective100","AntAlgoInsertElective100","AntArrInsElective100","checkAmountDataElective100_2","checkAmountDataElective100_0","array1DElective200","AntArrElective200","AntAlgoInsertElective200","AntArrInsElective200","checkAmountDataElective200_2","checkAmountDataElective200_0","array1DElective500","AntArrElective500","AntAlgoInsertElective500","AntArrInsElective500","checkAmountDataElective500_2","checkAmountDataElective500_0","fullyCombine","combineAll","faculty","elective","totalRoomFalculty","totalRoomElective","indexArrayElective","checkAmountDataCombine_2_fully","checkAmount_combine","checkAmountDataCombineFully","checkAmount_combineData","check1Group","checkH1_ALL","checkRoomQuota","checkSolatJummat","check1Teacher","checkH5_ALL","check1GroupElective","checkH1_ALL_Elective","checkRoomQuotaElective","checkH2_ALL_Elective","checkSolatJummatElective","checkH4_ALL_Elective","check1TeacherElective","checkH5_ALL_ELective","checkHC","data2","data3","data4","checkTotalHardContraints","checkEndOfClass","checkSC1_ALL","check2ClassInARow","checkSC2_ALL","checkEndOfClassElective","checkSC1_ALL_Elective","check2ClassInARowElective","checkSC2_ALL_Elective","checkTotalSoftContraint","checkTotalSoftContraints","change100ToEmpty","finalData","trigger","iteration","globalBestHS","globalBestSS","globalBestScehdule","checkTotalAmountDataset","localBestHS","localBestSS","localBestScehdule","t1","alert","mainGeneratedSchedule","changeToPresentationData","error","allRoomName","unshift","weekday","create2dArray","weekdayArray","partDay","arrayAll","partAll","tmp","slice","dataset","insertRoomName","arrayToCsv","row","String","replaceAll","join","csv","downloadBlob","content","filename","contentType","blob","Blob","type","url","URL","createObjectURL","pom","document","createElement","href","setAttribute","click","lecturerGeneratedSchedule","testData","LoopTable","dupeData","csvData","courseGeneratedSchedule"],"mappings":"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","sourcesContent":["import { concat, create, find, forEach, indexOf } from \"lodash\";\r\nimport React,{ useEffect,useState, useContext } from \"react\";\r\nimport {parse} from \"papaparse\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport _ from 'lodash';\r\nimport { CSVLink } from \"react-csv\";\r\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\r\nimport { useHttpClient } from \"../hooks/http-hook\";\r\nimport { AuthContext } from \"../contexts/auth-context\";\r\n\r\nimport './GenerateSchedulePage.css';\r\n\r\n\r\nlet finalDataAll = [];\r\nlet finalDataAllElective = [];\r\nlet checkHardConstraintOutsite = 0;\r\nlet checkSoftConstraintOutsite = 0;\r\nlet presentableData = []\r\nlet presentableDataLecturer = []\r\nlet MainData = []\r\nlet byLectureData = []\r\nlet byCourseData = []\r\nlet notDuplicatesLecturerArray = []\r\nlet notDuplicatesLecturerCodeArray = []\r\nlet courseCodeArray = []\r\nlet courseNameArray = []\r\nlet userIds = []\r\n\r\nvar t0 = performance.now()\r\n\r\nconst ArraySchedule = (props) => {\r\n    const auth =  useContext(AuthContext);\r\n    userIds.push(auth.userId)\r\n    const userIdcopy = [...userIds]\r\n    \r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [loadedFile, setLoaadedFile] = useState(false);\r\n    const [roomData, setroomData] = useState();\r\n    const [courseData, setcourseData] = useState();\r\n    const [CsvData, setCsvData] = useState();\r\n\r\n    let disbaleButton = true\r\n    \r\n    //const {isLoading, error, sendRequest, clearError} = useHttpClient();\r\n    // const [Keys, setKeys] = useState();\r\n    //const [uploadedData, setUploadedData] = useState([]);\r\n    //console.log(\"props dataset:\"+ props.test)\r\n\r\n    const userId = useParams().userId;\r\n\r\n    useEffect(()=>{\r\n        const sendRequest = async () =>{\r\n            setIsLoading(true);\r\n            try{\r\n            const response = await fetch('http://localhost:5000/api/files/users/62c7e06068617362422584c9');\r\n            //const response = await fetch(`http://localhost:5000/api/files/users/${userIds[0]}`);\r\n            // const response = await fetch('http://localhost:5000/api/files/users/62c28ae0f47b3ade174a9707');\r\n            //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\r\n            //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\r\n            const responsedata = await response.json();\r\n            let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset);\r\n\r\n            // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\r\n            const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset =>[Dataset['Room'],Dataset['Size']]); //Extract Room\r\n            setroomData([ertRoom]);\r\n\r\n            const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'],Dataset['Course Code'],Dataset['Course Name'],Dataset['Year'],Dataset['Semester'],Dataset['Lecturer'],Dataset['Group'],Dataset['HMS'],Dataset['Programme Code'],Dataset['Slot1'],Dataset['Slot2'],Dataset['Lecture Code']]); //Extract Enrollment Quota\r\n            setcourseData([ertCourse]);\r\n\r\n            if (!response.ok){\r\n                throw new Error(responsedata.message);\r\n            }\r\n            setLoaadedFile(stringifyData);\r\n            setIsLoading(true);\r\n            }catch(err){\r\n                console.log(err.message);\r\n            }\r\n            setIsLoading(false);\r\n            \r\n        };\r\n        sendRequest();\r\n    },[userId]);\r\n\r\n        if(!isLoading && loadedFile){\r\n            const EnrollmentQuota = [];\r\n            const CourseCode = [];\r\n            const CourseName = [];\r\n            const HMS = [];\r\n            const lecturerData = []\r\n            const lecturerCodeData = []\r\n            const roomName = [];\r\n            const roomSize = [];\r\n            const filterData50  = [];\r\n            const filterData100  = [];\r\n            const filterData200  = [];\r\n            const filterData500  = [];\r\n            const filterDataElective50  = [];\r\n            const filterDataElective100  = [];\r\n            const filterDataElective200  = [];\r\n            const filterDataElective500  = [];\r\n            const totalAmountofData  = [];\r\n            var totalAmountofDataSlottedIn = 0;\r\n            const room = []\r\n            room.push(roomData[0])\r\n            \r\n\r\n            for(let i = 0; i <courseData[0].length; i++){\r\n                let enrollment = [courseData[0][i][0]];\r\n                let code = [courseData[0][i][1]];\r\n                let hms = [courseData[0][i][7]];\r\n                let lecturer = [courseData[0][i][5]];\r\n                let courseName = [courseData[0][i][2]]\r\n                let lecturerCode = [courseData[0][i][11]];\r\n                enrollment.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    EnrollmentQuota.push(item);\r\n                },{});\r\n                code.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    CourseCode.push(item);\r\n                },{});\r\n                hms.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    HMS.push(item);\r\n                },{});\r\n                lecturer.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    lecturerData.push(item);\r\n                },{});\r\n                courseName.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    CourseName.push(item);\r\n                },{});\r\n                lecturerCode.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    lecturerCodeData.push(item);\r\n                },{});\r\n            }\r\n            for(let i = 0; i <roomData[0].length; i++){\r\n                let name = [roomData[0][i][0]];\r\n                let size = [roomData[0][i][1]];\r\n                name.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomName.push(item);\r\n                },{});\r\n                size.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomSize.push(item);\r\n                },{});\r\n            }\r\n \r\n            \r\n            const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\r\n\r\n            const notDuplicatesLecturer = lecturerData.filter((item, index) => index == lecturerData.indexOf(item));\r\n            const notDuplicatesCodeLecturer = lecturerCodeData.filter((item, index) => index == lecturerCodeData.indexOf(item));\r\n            notDuplicatesLecturer.pop();\r\n            notDuplicatesCodeLecturer.pop();\r\n             for(let i = 0; i < notDuplicatesLecturer.length; i++){\r\n                 notDuplicatesLecturerArray.push(notDuplicatesLecturer[i]);\r\n             }\r\n\r\n             for(let i = 0; i < notDuplicatesCodeLecturer.length; i++){\r\n                notDuplicatesLecturerCodeArray.push(notDuplicatesCodeLecturer[i]);\r\n            }\r\n\r\n\r\n             CourseCode.pop()\r\n             for(let i = 0 ; i < CourseCode.length; i++){\r\n                courseCodeArray.push(CourseCode[i]);\r\n             }\r\n\r\n             for(let i = 0 ; i < CourseName.length; i++){\r\n                courseNameArray.push(CourseName[i]);\r\n             }\r\n\r\n            //console.log(notDuplicatesLecturerArray)\r\n            //var parseNotDupLecturer = JSON.parse(notDuplicatesLecturer)\r\n            //notDuplicatesLecturerArray.push(parseNotDupLecturer);\r\n\r\n\r\n            let courseDataXElective = []\r\n            let courseDataWithElective = []\r\n            courseData[0].pop()\r\n\r\n            //saparate faculty course with the elective course\r\n            for(let i=0; i< courseData[0].length; i++){\r\n                if(courseData[0][i][8] != 'ELECTIVE'){\r\n                //if(courseData[0][i][1].slice(0,3) != 'TMU'){\r\n                    courseData[0][i].splice()\r\n                    courseDataXElective.push(courseData[0][i])\r\n                    // if(  courseData[0][i][1].slice(0,3) != 'TMX'){\r\n                    //     courseData[0][i].splice()\r\n                    //     courseDataXElective.push(courseData[0][i])\r\n                    // }\r\n                }\r\n            }\r\n\r\n            //saparate elective course with the faculty course\r\n            for(let i=0; i< courseData[0].length; i++){\r\n                //console.log(courseData[0][i][8])\r\n                //if(courseData[0][i][1].slice(0,3) == 'TMU' ||  courseData[0][i][1].slice(0,3) == 'TMX'){\r\n                if(courseData[0][i][8] == 'ELECTIVE'){\r\n                    courseDataWithElective.push(courseData[0][i])\r\n                }\r\n            }\r\n\r\n            //insert data without elective courses into correct room capacity\r\n                for(let i = 0; i< courseDataXElective.length;i++){\r\n                        if (courseDataXElective[i][0] < 50) {\r\n                            filterData50.push(courseDataXElective[i]);\r\n                        }\r\n                        if (courseDataXElective[i][0] >= 50 && courseDataXElective[i][0] < 100) {\r\n                            \r\n                            filterData100.push(courseDataXElective[i]);\r\n                        }\r\n                        if (courseDataXElective[i][0] >= 100 && courseDataXElective[i][0] < 200 ) {\r\n                            filterData200.push(courseDataXElective[i]);\r\n                        }\r\n                        if (courseDataXElective[i][0] >= 200 && courseDataXElective[i][0] < 500) {\r\n                            filterData500.push(courseDataXElective[i]);\r\n                        }\r\n                }\r\n                //console.log(filterData50)\r\n\r\n                //insert data without faculty courses into correct room capacity\r\n                for(let i = 0; i< courseDataWithElective.length;i++){\r\n                    if (courseDataWithElective[i][0] < 50) {\r\n                        filterDataElective50.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 50 && courseDataWithElective[i][0] < 100) {\r\n                        \r\n                        filterDataElective100.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 100 && courseDataWithElective[i][0] < 200 ) {\r\n                        filterDataElective200.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 200 && courseDataWithElective[i][0] < 500) {\r\n                        filterDataElective500.push(courseDataWithElective[i]);\r\n                    }\r\n                }\r\n\r\n\r\n            let roomUnder50 = []\r\n            let roomUnder100 = []\r\n            let roomUnder200 = []\r\n            let roomUnder500 = []\r\n\r\n            //separate room \r\n            const checkNumberofRoom = () => {\r\n                for(let i = 0; i < roomData[0].length; i++){\r\n                    let room = roomData[0][i][1]\r\n                    if(room < 50){\r\n                        roomUnder50.push(room)\r\n                    }else if(room > 50 && room < 100){\r\n                        roomUnder100.push(room)\r\n\r\n                    }else if(room > 100 && room < 200){\r\n                        roomUnder200.push(room)\r\n\r\n                    }else if(room > 200){\r\n                        roomUnder500.push(room)\r\n                    }\r\n                }\r\n            }\r\n            checkNumberofRoom();\r\n\r\n\r\n            const createArray = (data) => {\r\n                var result = []\r\n\r\n                    for(let i = 0; i<data; i++){\r\n                        result[i] = []\r\n                    }\r\n                return result;\r\n            }\r\n\r\n            const totalAmountData = () => {\r\n                for(let i = 0; i< courseDataXElective.length;i++){\r\n                    for(let j = 0; j <courseDataXElective[i][7]; j++){\r\n                        totalAmountofData.push(courseDataXElective[i]);\r\n                    }\r\n                }\r\n            }\r\n            totalAmountData()\r\n\r\n            const totalAmountDataElective = () => {\r\n                for(let i = 0; i< courseDataWithElective.length;i++){\r\n                    for(let j = 0; j <courseDataWithElective[i][7]; j++){\r\n                        totalAmountofData.push(courseDataWithElective[i]);\r\n                    }\r\n                }\r\n            }\r\n            totalAmountDataElective()\r\n\r\n            let DataArray50 = roomUnder50.length * 38;\r\n            let DataArray100 = roomUnder100.length * 38;\r\n            let DataArray200 = roomUnder200.length * 38;\r\n            let DataArray500 = roomUnder500.length * 38;\r\n            let combineArray = DataArray50 + DataArray100 + DataArray200 + DataArray500\r\n\r\n            let startIndex100 = DataArray50-1\r\n            let startIndex200 = DataArray50+ DataArray100-1\r\n            let startIndex500 = DataArray50 +DataArray100+DataArray200-1\r\n\r\n            let LastIndex50 = DataArray50\r\n            let LastIndex100 = DataArray50 + DataArray100 \r\n            let LastIndex200 = DataArray50 + DataArray100 + DataArray200\r\n            let LastIndex500 = DataArray50 + DataArray100 + DataArray200 + DataArray500\r\n\r\n            let DataArrayElective50 = roomUnder50.length * 10;\r\n            let DataArrayElective100 = roomUnder100.length * 10;\r\n            let DataArrayElective200 = roomUnder200.length * 10;\r\n            let DataArrayElective500 = roomUnder500.length * 10;\r\n            let combineArrayElective = DataArrayElective50 + DataArrayElective100 + DataArrayElective200 + DataArrayElective500\r\n\r\n            let startIndexElective100 = DataArrayElective50-1\r\n            let startIndexElective200 = DataArrayElective50+ DataArrayElective100-1\r\n            let startIndexElective500 = DataArrayElective50 +DataArrayElective100+DataArrayElective200-1\r\n\r\n            let LastIndexElective50 = DataArrayElective50\r\n            let LastIndexElective100 = DataArrayElective50 + DataArrayElective100 \r\n            let LastIndexElective200 = DataArrayElective50 + DataArrayElective100 + DataArrayElective200\r\n            let LastIndexElective500 = DataArrayElective50 + DataArrayElective100 + DataArrayElective200 + DataArrayElective500\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nvar checkTotalHardContraintsAll = 0\r\nvar checkTotalSoftContraintsAll = 0\r\n\r\nconst antSystem = () => {\r\n\r\n//______________________________________________________________________________________________________________________________________________\r\n//Faculty courses\r\n\r\nconst checking_minus_1 = (array,array2,data) => {\r\n    let k =0\r\n    let b =0\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u-1] != 100 && array[u-1][5] == data[5]){\r\n            if(array[u] != 100 && data[5] != array[u][5] || data[6] == array[u][6] && array[u-1] != 100 && data[5] == array[u-1][5] || data[6] == array[u-1][6]){\r\n                for(let b =0; b < totalRoom; b++){\r\n                    let indexArray = b*38\r\n                    if( array[u+indexArray] ==100 && array[u+indexArray-1] ==100){\r\n                        array[u+indexArray] = 0\r\n                        array[u+indexArray-1] = 0\r\n                        array2[u+indexArray] = 0\r\n                        array2[u+indexArray-1] = 0\r\n                    }\r\n                    if( array[u-indexArray] ==100 && array[u-indexArray-1] ==100){\r\n                        array[u-indexArray] = 0\r\n                        array[u-indexArray-1] = 0\r\n                        array2[u-indexArray] = 0\r\n                        array2[u-indexArray-1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array\r\n\r\n\r\n}\r\n\r\nconst checking_minus_1_phe = (array,array2,data) => {\r\n    let k =0\r\n    let b =0\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u-1] != 100 && array[u-1][5] == data[5]){\r\n            if(array[u] != 100 && data[5] != array[u][5] || data[6] == array[u][6] && array[u-1] != 100 && data[5] == array[u-1][5] || data[6] == array[u-1][6]){\r\n                for(let b =0; b < totalRoom2; b++){\r\n                    let indexArray = b*38\r\n                    //if( array[u+indexArray] ==100 && array[u+indexArray-1] ==100){\r\n                    if( array2[u+indexArray] ==100 && array2[u+indexArray-1] ==100){\r\n                        // array[u+indexArray] = 0\r\n                        // array[u+indexArray-1] = 0\r\n                        array2[u+indexArray] = 0\r\n                        array2[u+indexArray-1] = 0\r\n                    }\r\n                    //if( array[u-indexArray] ==100 && array[u-indexArray-1] ==100){\r\n                    if( array2[u-indexArray] ==100 && array2[u-indexArray-1] ==100){\r\n                        // array[u-indexArray] = 0\r\n                        // array[u-indexArray-1] = 0\r\n                        array2[u-indexArray] = 0\r\n                        array2[u-indexArray-1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array2\r\n\r\n\r\n}\r\n\r\nconst checking_plus_1 = (array,array2,data) => {\r\n\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\r\n            if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6] && array[u+1] != 100 && data[5] == array[u+1][5] || data[6] == array[u+1][6]){\r\n                for(let b =0; b < totalRoom; b++){\r\n                    let indexArray = b*38\r\n                    if( array[u+indexArray] ==100 && array[u+indexArray+1] ==100){\r\n                        array[u+indexArray] = 0\r\n                        array[u+indexArray+1] = 0\r\n                        array2[u+indexArray] = 0\r\n                        array2[u+indexArray+1] = 0\r\n                    }\r\n                    if( array[u-indexArray] ==100 && array[u-indexArray+1] ==100){\r\n                        array[u-indexArray] = 0\r\n                        array[u-indexArray+1] = 0\r\n                        array2[u-indexArray] = 0\r\n                        array2[u-indexArray+1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array\r\n}\r\n\r\nconst checking_plus_1_phe = (array,array2,data) => {\r\n\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\r\n            if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6] && array[u+1] != 100 && data[5] == array[u+1][5] || data[6] == array[u+1][6]){\r\n                for(let b =0; b < totalRoom2; b++){\r\n                    let indexArray = b*38\r\n                    //if( array[u+indexArray] ==100 && array[u+indexArray+1] ==100){\r\n                    if( array2[u+indexArray] ==100 && array2[u+indexArray+1] ==100){\r\n                        // array[u+indexArray] = 0\r\n                        // array[u+indexArray+1] = 0\r\n                        array2[u+indexArray] = 0\r\n                        array2[u+indexArray+1] = 0\r\n                    }\r\n                    //if( array[u-indexArray] ==100 && array[u-indexArray+1] ==100){\r\n                    if( array2[u-indexArray] ==100 && array2[u-indexArray+1] ==100){\r\n                        // array[u-indexArray] = 0\r\n                        // array[u-indexArray+1] = 0\r\n                        array2[u-indexArray] = 0\r\n                        array2[u-indexArray+1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array2\r\n}\r\n\r\nconst checking_3 = (array,array2,data) =>{\r\n\r\n\r\n    let k =0\r\n    let b =0\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u-1] != 100 && array[u-1][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\r\n            if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]  && array[u-1] != 100 && data[5] == array[u-1][5] && array[u+1] != 100 && data[5] == array[u+1][5] || data[6] == array[u-1][6] && array[u+1] != 100 && data[6] == array[u+1][6]){\r\n                for(let b =0; b < totalRoom; b++){\r\n                    let indexArray = b*38\r\n\r\n                    if( array[u+indexArray] ==100 && array[u+indexArray-1] ==100){\r\n                        array[u+indexArray] = 0\r\n                        array[u+indexArray-1] = 0\r\n                    }\r\n                    if( array[u-indexArray] ==100 && array[u-indexArray-1] ==100){\r\n                        array[u-indexArray] = 0\r\n                        array[u-indexArray-1] = 0\r\n                    }\r\n                    if( array[u+indexArray] ==100 && array[u+indexArray+1] ==100){\r\n                        array[u+indexArray] = 0\r\n                        array[u+indexArray+1] = 0\r\n                    }\r\n                    if( array[u-indexArray] ==100 && array[u-indexArray+1] ==100){\r\n                        array[u-indexArray] = 0\r\n                        array[u-indexArray+1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n\r\n    for(let u = 0; u < array2.length; u++){\r\n        try{\r\n            //if( array2[u] != 100 && array2[u][5] == data[5] && array2[u-1] != 100 && array2[u-1][5] == data[5] && array2[u+1] != 100 && array2[u+1][5] == data[5]){\r\n            if( array2[u] != 100 && data[5] == array2[u][5] || data[6] == array2[u][6]  && array2[u-1] != 100 && data[5] == array2[u-1][5] && array2[u+1] != 100 && data[5] == array2[u+1][5] || data[6] == array2[u-1][6] && array2[u+1] != 100 && data[6] == array2[u+1][6]){\r\n                for(let b =0; b < totalRoom2; b++){\r\n                    let indexArray2 = b*38\r\n\r\n                    if( array2[u+indexArray2] ==100 && array2[u+indexArray2-1] ==100){\r\n                        array2[u+indexArray2] = 0\r\n                        array2[u+indexArray2-1] = 0\r\n                    }\r\n                    if( array2[u-indexArray2] ==100 && array2[u-indexArray2-1] ==100){\r\n                        array2[u-indexArray2] = 0\r\n                        array2[u-indexArray2-1] = 0\r\n                    }\r\n                    if( array2[u+indexArray2] ==100 && array2[u+indexArray2+1] ==100){\r\n                        array2[u+indexArray2] = 0\r\n                        array2[u+indexArray2+1] = 0\r\n                    }\r\n                    if( array2[u-indexArray2] ==100 && array2[u-indexArray2+1] ==100){\r\n                        array2[u-indexArray2] = 0\r\n                        array2[u-indexArray2+1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array\r\n}\r\n\r\nconst checking_only_1 = (array,array2,data) => {\r\n\r\n    let k =0\r\n    let b =0\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]){\r\n                for(let b =0; b < totalRoom; b++){\r\n                    if( array[u+38*b] ==100){\r\n                        array[u+38*b] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    for(let u = 0; u < array2.length; u++){\r\n        try{\r\n            if( array2[u] != 100 && data[5] == array2[u][5] || data[6] == array2[u][6]){\r\n                for(let b =0; b < totalRoom2; b++){\r\n                    if( array2[u+38*b] ==100){\r\n                        array2[u+38*b] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array\r\n\r\n}\r\n\r\nconst changeRowtoZero_minus_1 = (array,array2,index1,index2) => {\r\n    let k =0\r\n    let b =0\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            if( u == index1 && u-1 == index2){\r\n                for(let b =0; b < totalRoom; b++){\r\n                    let indexArray = b*38\r\n                    if( array[u+indexArray] ==100 && array[u+indexArray-1] ==100){\r\n                        array[u+indexArray] = 0\r\n                        array[u+indexArray-1] = 0\r\n                    }\r\n                    if( array[u-indexArray]==100 && array[u-indexArray-1] == 100){\r\n                        array[u-indexArray] = 0\r\n                        array[u-indexArray-1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n\r\n    for(let u = 0; u < array2.length; u++){\r\n        try{\r\n            if( u == index1 && u-1 == index2){\r\n                for(let b =0; b < totalRoom2; b++){\r\n                    let indexArray2 = b*38\r\n                    if( array2[u+indexArray2] ==100 && array2[u+indexArray2-1] ==100){\r\n                        array2[u+indexArray2] = 0\r\n                        array2[u+indexArray2-1] = 0\r\n                    }\r\n                    if( array2[u-indexArray2]==100 && array2[u-indexArray2-1] == 100){\r\n                        array2[u-indexArray2] = 0\r\n                        array2[u-indexArray2-1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array    \r\n}\r\n\r\nconst changeRowtoZero_plus_1 = (array,array2,index1,index2) => {\r\n    let k =0\r\n    let b =0\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            if( u == index1 && u-1 == index2){\r\n                for(let b =0; b < totalRoom; b++){\r\n                    let indexArray = b*38\r\n                    if( array[u+indexArray] ==100 && array[u+indexArray+1] ==100){\r\n                        array[u+indexArray] = 0\r\n                        array[u+indexArray+1] = 0\r\n                    }\r\n                    if( array[u-indexArray]==100 && array[u-indexArray+1] == 100){\r\n                        array[u-indexArray] = 0\r\n                        array[u-indexArray+1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n\r\n    for(let u = 0; u < array2.length; u++){\r\n        try{\r\n            if( u == index1 && u-1 == index2){\r\n                for(let b =0; b < totalRoom2; b++){\r\n                    let indexArray2 = b*38\r\n                    if( array2[u+indexArray2] ==100 && array2[u+indexArray2+1] ==100){\r\n                        array2[u+indexArray2] = 0\r\n                        array2[u+indexArray2+1] = 0\r\n                    }\r\n                    if( array2[u-indexArray2]==100 && array2[u-indexArray2+1] == 100){\r\n                        array2[u-indexArray2] = 0\r\n                        array2[u-indexArray2+1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array    \r\n}\r\n\r\nconst changeRowtoZero_1 = (array,array2,index1) => {\r\n    let k =0\r\n    let b =0\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            if( u == index1){\r\n                for(let b =0; b < totalRoom; b++){\r\n                    let indexArray = b*38\r\n                    if( array[u+indexArray] ==100 ){\r\n                        array[u+indexArray] = 0\r\n                    }\r\n                    if( array[u-indexArray] ==100 ){\r\n                        array[u-indexArray] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n\r\n    for(let u = 0; u < array2.length; u++){\r\n        try{\r\n            if( u == index1){\r\n                for(let b =0; b < totalRoom2; b++){\r\n                    let indexArray2 = b*38\r\n                    if( array2[u+indexArray2] ==100 ){\r\n                        array2[u+indexArray2] = 0\r\n                    }\r\n                    if( array2[u-indexArray2] ==100 ){\r\n                        array2[u-indexArray2] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array    \r\n}\r\n\r\nconst changeRowtoZero_3_ = (array,array2,index1,index2,index3) => {\r\n    let k =0\r\n    let b =0\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            if( u == index1 && u-1 == index2 && u+1 == index3){\r\n                for(let b =0; b < totalRoom; b++){\r\n                    let indexArray = b*38\r\n                    if( array[u+indexArray] ==100 && array[u+indexArray-1] ==100  && array[u+indexArray+1] == 100 ){\r\n                        array[u+indexArray] = 0\r\n                        array[u+indexArray-1] = 0\r\n                        array[u+indexArray+1] = 0\r\n                    }\r\n                    if( array[u-indexArray] ==100 && array[u-indexArray-1] ==100  && array[u-indexArray+1] == 100){\r\n                        array[u-indexArray] = 0\r\n                        array[u-indexArray-1] = 0\r\n                        array[u-indexArray+1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n\r\n\r\n    for(let u = 0; u < array2.length; u++){\r\n        try{\r\n            if( u == index1 && u-1 == index2 && u+1 == index3){\r\n                for(let b =0; b < totalRoom2; b++){\r\n                    let indexArray = b*38\r\n                    if( array2[u+indexArray] ==100 && array2[u+indexArray-1] ==100  && array2[u+indexArray+1] == 100 ){\r\n                        array2[u+indexArray] = 0\r\n                        array2[u+indexArray-1] = 0\r\n                        array2[u+indexArray+1] = 0\r\n                    }\r\n                    if( array2[u-indexArray] ==100 && array2[u-indexArray-1] ==100  && array2[u-indexArray+1] == 100){\r\n                        array2[u-indexArray] = 0\r\n                        array2[u-indexArray-1] = 0\r\n                        array2[u-indexArray+1] = 0\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array    \r\n}\r\n\r\nconst changeToZero = (array) => {\r\n    for(let i = 0; i < array.length; i++){\r\n        if(array[i] == 0){\r\n            array[i] = 100\r\n        }\r\n    }\r\n    return array;\r\n}\r\n\r\n\r\nconst checkTest = (array,array2,data1) => {\r\n    let count =0\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n     let indexArray = (x * 38)\r\n        try{\r\n         for(let i = 1; i<array.length ; i++){\r\n                //if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 1 && array[i+indexArray] != 0 ){\r\n                    try{\r\n                        if(data1 == array[i][5]){\r\n                            if(array[i+indexArray] == 100){\r\n                                array[i+indexArray] = 0\r\n                            }\r\n\r\n                         }\r\n                    }catch{}\r\n                //}    \r\n            }\r\n        }catch{}\r\n    }\r\n\r\n    for(let x= 1 ; x <= totalRoom2 ; x++){\r\n        let indexArray2 = (x * 38)\r\n           try{\r\n            for(let i = 1; i<array2.length ; i++){\r\n                   //if(array2[i+indexArray2] != 100 && array2[i+indexArray2] != undefined && array2[i+indexArray2] != 1 && array2[i+indexArray2] != 0 ){\r\n                       try{\r\n                           if(data1 == array2[i][5]){\r\n                               if(array2[i+indexArray2] == 100){\r\n                                   array2[i+indexArray2] = 0\r\n                               }\r\n   \r\n                            }\r\n                       }catch{}\r\n                   //}    \r\n               }\r\n           }catch{}\r\n       }\r\n    return array\r\n}\r\n\r\nconst checking_1 = (array,array2,data) => {\r\n\r\n    let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\r\n            //if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]){\r\n            if( array[u] != 100 ){\r\n                if(data[5] == array[u][5] || data[6] == array[u][6]){\r\n                    for(let b =0; b < totalRoom; b++){\r\n                        let indexArray = b*38\r\n                        if( array[u+indexArray] ==100){\r\n                            array[u+indexArray] = 0\r\n                            //array2[u+indexArray] = 0\r\n                        }\r\n                        if( array[u-indexArray] ==100){\r\n                            array[u-indexArray] = 0\r\n                            //array2[u-indexArray] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array\r\n}\r\n\r\nconst checking_1_phe = (array,array2,data) => {\r\n\r\n    //let totalRoom = array.length / 38\r\n    let totalRoom2 = array2.length / 38\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\r\n            //if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]){\r\n            if( array[u] != 100 ){\r\n                if(data[5] == array[u][5] || data[6] == array[u][6]){\r\n                    for(let b =0; b < totalRoom2; b++){\r\n                        let indexArray = b*38\r\n                        if( array2[u+indexArray] ==100){\r\n                            //array[u+indexArray] = 0\r\n                            array2[u+indexArray] = 0\r\n                        }\r\n                        if( array2[u-indexArray] ==100){\r\n                            //array[u-indexArray] = 0\r\n                            array2[u-indexArray] = 0\r\n                        }\r\n                    }   \r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array2\r\n}\r\n\r\nconst checking_1_Elective = (array,array2,data) => {\r\n\r\n    let totalRoom = array.length / 10\r\n    let totalRoom2 = array2.length / 10\r\n\r\n    for(let u = 0; u < array.length; u++){\r\n        try{\r\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\r\n            //if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]){\r\n            if( array[u] != 100 ){\r\n                if(data[5] == array[u][5] || data[6] == array[u][6]){\r\n                    for(let b =0; b < totalRoom; b++){\r\n                        let indexArray = b*10\r\n                        if( array[u+indexArray] ==100){\r\n                            array[u+indexArray] = 0\r\n                            //array2[u+indexArray] = 0\r\n                        }\r\n                        if( array[u-indexArray] ==100){\r\n                            array[u-indexArray] = 0\r\n                            //array2[u-indexArray] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }catch{}\r\n    }\r\n    return array\r\n}\r\n\r\n\r\n\r\n\r\nconst array1DCombine = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrCombine = array1DCombine(combineArray);\r\n\r\n\r\nconst array1DElectiveCombine = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrCombineElective = array1DElectiveCombine(combineArrayElective);\r\n\r\n\r\nconst checkDay = (combine,array,index) => {\r\n    //for(let x =0; x < combine.length ; x++){}\r\n    let c = 0\r\n    let z = index\r\n    while (c != 1){\r\n        if(z >= 0 && z < 10){\r\n            //console.log(\"Monday\")\r\n            zeroMonday(array)\r\n            zeroMondayCom(combine)\r\n            c = 1\r\n        }\r\n        else if( z >= 10 && z < 20){\r\n            //console.log(\"Tuesday\")   \r\n            zeroTuesday(array)\r\n            zeroTuesdayCom(combine)\r\n            c = 1\r\n        }\r\n        else if( z >= 20 && z < 30){\r\n            //console.log(\"Thursday\")   \r\n            zeroThursday(array)\r\n            zeroThursdayCom(combine)\r\n            c = 1\r\n        }\r\n        else if( z >= 30 && z< 38){\r\n            //console.log(\"Friday\")   \r\n            zeroFriday(array)\r\n            zeroFridayCom(combine)\r\n            c = 1\r\n        }\r\n        else(\r\n            z -= 38\r\n        )\r\n    }\r\n}\r\n\r\nconst zeroMonday = (array) => {\r\n    let totalRoom2 = array.length / 38\r\n\r\n    for(let u = 0; u < 10; u++){\r\n        try{\r\n            for(let b =0; b < totalRoom2; b++){\r\n                let indexArray = b*38\r\n                if( array[u+indexArray] ==100){\r\n                    array[u+indexArray] = 0\r\n                }\r\n                if( array[u-indexArray] ==100){\r\n                    array[u-indexArray] = 0\r\n                }\r\n            }   \r\n        }catch{}\r\n    }\r\n    return array\r\n}\r\nconst zeroMondayCom = (combine) => {\r\n    let totalRoom2 = combine.length / 38\r\n\r\n    for(let u = 0; u < 10; u++){\r\n        try{\r\n            for(let b =0; b < totalRoom2; b++){\r\n                let indexArray = b*38\r\n                if( combine[u+indexArray] ==100){\r\n                    combine[u+indexArray] = 0\r\n                }\r\n                if( combine[u-indexArray] ==100){\r\n                    combine[u-indexArray] = 0\r\n                }\r\n            }   \r\n        }catch{}\r\n    }\r\n    return combine\r\n}\r\n\r\nconst zeroTuesday = (array) => {\r\n    let totalRoom2 = array.length / 38\r\n\r\n    for(let u = 10; u < 20; u++){\r\n        try{\r\n            for(let b =0; b < totalRoom2; b++){\r\n                let indexArray = b*38\r\n                if( array[u+indexArray] ==100){\r\n                    array[u+indexArray] = 0\r\n                }\r\n                if( array[u-indexArray] ==100){\r\n                    array[u-indexArray] = 0\r\n                }\r\n            }   \r\n        }catch{}\r\n    }\r\n    return array\r\n}\r\nconst zeroTuesdayCom = (combine) => {\r\n    let totalRoom2 = combine.length / 38\r\n\r\n    for(let u = 10; u < 20; u++){\r\n        try{\r\n            for(let b =0; b < totalRoom2; b++){\r\n                let indexArray = b*38\r\n                if( combine[u+indexArray] ==100){\r\n                    combine[u+indexArray] = 0\r\n                }\r\n                if( combine[u-indexArray] ==100){\r\n                    combine[u-indexArray] = 0\r\n                }\r\n            }   \r\n        }catch{}\r\n    }\r\n    return combine\r\n}\r\n\r\nconst zeroThursday = (array) => {\r\n    let totalRoom2 = array.length / 38\r\n\r\n    for(let u = 20; u < 30; u++){\r\n        try{\r\n            for(let b =0; b < totalRoom2; b++){\r\n                let indexArray = b*38\r\n                if( array[u+indexArray] ==100){\r\n                    array[u+indexArray] = 0\r\n                }\r\n                if( array[u-indexArray] ==100){\r\n                    array[u-indexArray] = 0\r\n                }\r\n            }   \r\n        }catch{}\r\n    }\r\n    return array\r\n}\r\nconst zeroThursdayCom = (combine) => {\r\n    let totalRoom2 = combine.length / 38\r\n\r\n    for(let u = 20; u < 30; u++){\r\n        try{\r\n            for(let b =0; b < totalRoom2; b++){\r\n                let indexArray = b*38\r\n                if( combine[u+indexArray] ==100){\r\n                    combine[u+indexArray] = 0\r\n                }\r\n                if( combine[u-indexArray] ==100){\r\n                    combine[u-indexArray] = 0\r\n                }\r\n            }   \r\n        }catch{}\r\n    }\r\n    return combine\r\n}\r\n\r\nconst zeroFriday = (array) => {\r\n    let totalRoom2 = array.length / 38\r\n\r\n    for(let u = 30; u < 38; u++){\r\n        try{\r\n            for(let b =0; b < totalRoom2; b++){\r\n                let indexArray = b*38\r\n                if( array[u+indexArray] ==100){\r\n                    array[u+indexArray] = 0\r\n                }\r\n                if( array[u-indexArray] ==100){\r\n                    array[u-indexArray] = 0\r\n                }\r\n            }   \r\n        }catch{}\r\n    }\r\n    return array\r\n}\r\nconst zeroFridayCom = (combine) => {\r\n    let totalRoom2 = combine.length / 38\r\n\r\n    for(let u = 30; u < 38; u++){\r\n        try{\r\n            for(let b =0; b < totalRoom2; b++){\r\n                let indexArray = b*38\r\n                if( combine[u+indexArray] ==100){\r\n                    combine[u+indexArray] = 0\r\n                }\r\n                if( combine[u-indexArray] ==100){\r\n                    combine[u-indexArray] = 0\r\n                }\r\n            }   \r\n        }catch{}\r\n    }\r\n    return combine\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//create 1d array for dataset less than 50\r\nconst array1D50 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArr50 = array1D50(DataArray50);\r\n\r\n\r\nconst AntAlgoInsert50 = (array,combine) => {\r\n\r\n    //array.length = 1064 (last index = 1063)\r\n    //arrayLength50 = 646 (last index = 645)\r\n\r\n\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    let hms2 = []\r\n    let hms3 = []\r\n    let hms4 = []\r\n\r\n\r\n        for(let x=0; x<filterData50.length;x++){\r\n            if(filterData50[x][7] == 2){\r\n                hms2.push(filterData50[x])\r\n            }\r\n            if(filterData50[x][7] == 4){\r\n                hms4.push(filterData50[x])\r\n            }\r\n            if(filterData50[x][7] == 3){\r\n                hms3.push(filterData50[x])\r\n            }\r\n            test.push(filterData50[x]);\r\n        }\r\n\r\n        //slot in  2 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k < hms2.length){\r\n                checking_1(combine,array,hms2[k])\r\n                checking_1_phe(combine,array,hms2[k])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j] == 100 && combine[j-1] == 100 && j-1 != -1){\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j] = hms2[k];\r\n                            combine[j-1] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j] == 100 && combine[j+1] == 100 && j+1 != startIndex100){\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j] = hms2[k];\r\n                            combine[j+1] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k++  \r\n        }\r\n\r\n        // console.log(hms2.length)\r\n        // console.log(hms4.length)\r\n         //console.log(hms3.length)\r\n\r\n        //slot in  4 hours of meeting student course \r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k2 < hms4.length){\r\n            //if(k2 < 1){\r\n                checking_1(combine,array,hms4[k2])\r\n                checking_1_phe(combine,array,hms4[k2])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j] == 100 && combine[j-1] == 100 && j-1 != -1){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j] = hms4[k2];\r\n                            combine[j-1] = hms4[k2];\r\n                            checkDay(combine,array,j)\r\n                            let b = 0 \r\n                            while(b != 1){\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                //if(array[v] == 100 && array[v-1] == 100){\r\n                                if(combine[v] == 100 && combine[v-1] == 100 && v-1 != -1){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v-1] = -1;\r\n                                    combine[v] = hms4[k2];\r\n                                    combine[v-1] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                                //else if(array[v] == 100 && array[v+1] == 100){\r\n                                else if(combine[v] == 100 && combine[v+1] == 100 && v+1 != startIndex100){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v+1] = -1;\r\n                                    combine[v] = hms4[k2];\r\n                                    combine[v+1] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j] == 100 && combine[j+1] == 100 && j+1 != startIndex100){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j] = hms4[k2];\r\n                            combine[j+1] = hms4[k2];\r\n                            checkDay(combine,array,j)\r\n                            let z = 0 \r\n                            while(z != 1){\r\n                                const p = Math.floor(Math.random()*(i+1));\r\n                                //if(array[p] == 100 && array[p-1] == 100){\r\n                                if(combine[p] == 100 && combine[p-1] == 100 && p-1 != -1){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p-1] = -1;\r\n                                    combine[p] = hms4[k2];\r\n                                    combine[p-1] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                                //else if(array[p] == 100 && array[p+1] == 100){\r\n                                else if(combine[p] == 100 && combine[p+1] == 100 && p+1 != startIndex100){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p+1] = -1;\r\n                                    combine[p] = hms4[k2];\r\n                                    combine[p+1] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k2++  \r\n        }\r\n\r\n        //slot in  3 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k3 < hms3.length){\r\n            //if(k3 < 1){\r\n                checking_1(combine,array,hms3[k3])\r\n                checking_1_phe(combine,array,hms3[k3])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));\r\n                    \r\n                    //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\r\n                    if(combine[j] == 100 && combine[j-1] == 100 && combine[j+1] == 100 && j-1 != -1 && j+1 != startIndex100 ){ // slot in 3 course at one time\r\n                        //console.log(j)\r\n                        array[j] = -1;\r\n                        array[j-1] = -1;\r\n                        array[j+1] = -1;\r\n                        combine[j] = hms3[k3];\r\n                        combine[j-1] = hms3[k3];\r\n                        combine[j+1] = hms3[k3];\r\n                        c = 1\r\n                    }    \r\n                    //else if(array[j] == 100 && array[j-1] == 100){// slot in 2 course at one time\r\n                    else if(combine[j] == 100 && combine[j-1] == 100 && j-1 != -1){// slot in 2 course at one time\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j] = hms3[k3];\r\n                            combine[j-1] = hms3[k3];\r\n                            checkDay(combine,array,j)\r\n                            let b = 0 \r\n                            while(b != 1){\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                //if(array[v] == 100){\r\n                                if(combine[v] == 100){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    combine[v] = hms3[k3];\r\n                                    b = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){ // slot in 2 course at one time\r\n                    else if(combine[j] == 100 && combine[j+1] == 100 && j+1 != startIndex100){ // slot in 2 course at one time\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j] = hms3[k3];\r\n                            combine[j+1] = hms3[k3];\r\n                            checkDay(combine,array,j)\r\n                            let z = 0 \r\n                            while(z != 1){\r\n                                const p = Math.floor(Math.random()*(i+1));\r\n                                //if(array[p] == 100 ){\r\n                                if(combine[p] == 100 ){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    combine[p] = hms3[k3];\r\n                                    z = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100){ // slot in 1 course at one time\r\n                    else if(combine[j] == 100){ // slot in 1 course at one time\r\n                        array[j] = -1;\r\n                        combine[j] = hms3[k3];\r\n                        checkDay(combine,array,j)\r\n                            let m = 0 \r\n                            while(m != 1){\r\n                                const y = Math.floor(Math.random()*(i+1));\r\n                                //if(array[y] == 100 && array[y-1] == 100){\r\n                                if(combine[y] == 100 && combine[y-1] == 100 && y-1 != -1){\r\n                                    //console.log(y)\r\n                                    array[y] = -1;\r\n                                    array[y-1] = -1;\r\n                                    combine[y] = hms3[k3];\r\n                                    combine[y-1] = hms3[k3];\r\n                                    m = 1\r\n                                }\r\n                                //else if(array[y] == 100 && array[y+1] == 100){\r\n                                else if(combine[y] == 100 && combine[y+1] == 100 && y+1 != startIndex100){\r\n                                    //console.log(y)\r\n                                    array[y] = -1;\r\n                                    array[y+1] = -1;\r\n                                    combine[y] = hms3[k3];\r\n                                    combine[y+1] = hms3[k3];\r\n                                    m = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k3++  \r\n        }\r\n\r\n        changeToZero(array)\r\n        changeToZero(combine)\r\n\r\n    return array;\r\n    \r\n}\r\n\r\nvar AntArrIns50 = AntAlgoInsert50(AntArr50,AntArrCombine);\r\n\r\n\r\nconst checkAmountData50_2 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_2 = checkAmountData50_2(AntArrIns50)\r\n// console.log(AntArrIns50);\r\n// console.log(checkAmount_2)\r\n\r\nconst checkAmountData50_0 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if( array[i] == 0 ){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_0 = checkAmountData50_0(AntArr50)\r\n//console.log(checkAmount_0)\r\n\r\n//______________________________________________________________________________________________________________________________________________\r\n\r\n//create 1d array for dataset less than 100\r\n\r\n\r\n//create 1d array for dataset less than 100\r\n\r\n\r\nconst array1D100 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArr100 = array1D100(DataArray100);\r\n\r\nconst AntAlgoInsert100 = (array,combine) => {\r\n\r\n\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    let hms2 = []\r\n    let hms3 = []\r\n    let hms4 = []\r\n\r\n\r\n        for(let x=0; x<filterData100.length;x++){\r\n            if(filterData100[x][7] == 2){\r\n                hms2.push(filterData100[x])\r\n            }\r\n            if(filterData100[x][7] == 4){\r\n                hms4.push(filterData100[x])\r\n            }\r\n            if(filterData100[x][7] == 3){\r\n                hms3.push(filterData100[x])\r\n            }\r\n            test.push(filterData100[x]);\r\n        }\r\n\r\n        //slot in  2 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k < hms2.length){\r\n                checking_1(combine,array,hms2[k])\r\n                checking_1_phe(combine,array,hms2[k])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j+startIndex100] == 100 && combine[j-1+startIndex100] == 100 && j-1 != LastIndex50){\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndex100] = hms2[k];\r\n                            combine[j-1+startIndex100] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j+startIndex100] == 100 && combine[j+1+startIndex100] == 100 && j+1 != startIndex200){\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndex100] = hms2[k];\r\n                            combine[j+1+startIndex100] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k++  \r\n        }\r\n\r\n        // console.log(hms2.length)\r\n        // console.log(hms4.length)\r\n         //console.log(hms3.length)\r\n\r\n        //slot in  4 hours of meeting student course \r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k2 < hms4.length){\r\n            //if(k2 < 1){\r\n                checking_1(combine,array,hms4[k2])\r\n                checking_1_phe(combine,array,hms4[k2])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j+startIndex100] == 100 && combine[j-1+startIndex100] == 100 && j-1 != LastIndex50){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndex100] = hms4[k2];\r\n                            combine[j-1+startIndex100] = hms4[k2];\r\n                            checkDay(combine,array,j)\r\n                            let b = 0 \r\n                            while(b != 1){\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                //if(array[v] == 100 && array[v-1] == 100){\r\n                                if(combine[v+startIndex100] == 100 && combine[v-1+startIndex100] == 100 && v-1 != LastIndex50){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v-1] = -1;\r\n                                    combine[v+startIndex100] = hms4[k2];\r\n                                    combine[v-1+startIndex100] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                                //else if(array[v] == 100 && array[v+1] == 100){\r\n                                else if(combine[v+startIndex100] == 100 && combine[v+1+startIndex100] == 100 && v+1 != startIndex200){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v+1] = -1;\r\n                                    combine[v+startIndex100] = hms4[k2];\r\n                                    combine[v+1+startIndex100] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j+startIndex100] == 100 && combine[j+1+startIndex100] == 100 && j+1 != startIndex200){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndex100] = hms4[k2];\r\n                            combine[j+1+startIndex100] = hms4[k2];\r\n                            checkDay(combine,array,j)\r\n                            let z = 0 \r\n                            while(z != 1){\r\n                                const p = Math.floor(Math.random()*(i+1));\r\n                                //if(array[p] == 100 && array[p-1] == 100){\r\n                                if(combine[p+startIndex100] == 100 && combine[p-1+startIndex100] == 100 && p-1 != LastIndex50){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p-1] = -1;\r\n                                    combine[p+startIndex100] = hms4[k2];\r\n                                    combine[p-1+startIndex100] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                                //else if(array[p] == 100 && array[p+1] == 100){\r\n                                else if(combine[p+startIndex100] == 100 && combine[p+1+startIndex100] == 100 && p+1 != startIndex200){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p+1] = -1;\r\n                                    combine[p+startIndex100] = hms4[k2];\r\n                                    combine[p+1+startIndex100] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k2++  \r\n        }\r\n\r\n        //slot in  3 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k3 < hms3.length){\r\n            //if(k3 < 1){\r\n                checking_1(combine,array,hms3[k3])\r\n                checking_1_phe(combine,array,hms3[k3])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));\r\n                    \r\n                    //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\r\n                    if(combine[j+startIndex100] == 100 && combine[j-1+startIndex100] == 100 && combine[j+1+startIndex100] == 100 && j-1 != LastIndex50 && j+1 != startIndex200 ){ // slot in 3 course at one time\r\n                        //console.log(j)\r\n                        array[j] = -1;\r\n                        array[j-1] = -1;\r\n                        array[j+1] = -1;\r\n                        combine[j+startIndex100] = hms3[k3];\r\n                        combine[j-1+startIndex100] = hms3[k3];\r\n                        combine[j+1+startIndex100] = hms3[k3];\r\n                        c = 1\r\n                    }    \r\n                    //else if(array[j] == 100 && array[j-1] == 100){// slot in 2 course at one time\r\n                    else if(combine[j+startIndex100] == 100 && combine[j-1+startIndex100] == 100 && j-1 != LastIndex50){// slot in 2 course at one time\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndex100] = hms3[k3];\r\n                            combine[j-1+startIndex100] = hms3[k3];\r\n                            checkDay(combine,array,j)\r\n                            let b = 0 \r\n                            while(b != 1){\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                //if(array[v] == 100){\r\n                                if(combine[v+startIndex100] == 100){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    combine[v+startIndex100] = hms3[k3];\r\n                                    b = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){ // slot in 2 course at one time\r\n                    else if(combine[j+startIndex100] == 100 && combine[j+1+startIndex100] == 100 && j+1 != startIndex200){ // slot in 2 course at one time\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndex100] = hms3[k3];\r\n                            combine[j+1+startIndex100] = hms3[k3];\r\n                            checkDay(combine,array,j)\r\n                            let z = 0 \r\n                            while(z != 1){\r\n                                const p = Math.floor(Math.random()*(i+1));\r\n                                //if(array[p] == 100 ){\r\n                                if(combine[p+startIndex100] == 100 ){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    combine[p+startIndex100] = hms3[k3];\r\n                                    z = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100){ // slot in 1 course at one time\r\n                    else if(combine[j+startIndex100] == 100){ // slot in 1 course at one time\r\n                        array[j] = -1;\r\n                        combine[j+startIndex100] = hms3[k3];\r\n                        checkDay(combine,array,j)\r\n                            let m = 0 \r\n                            while(m != 1){\r\n                                const y = Math.floor(Math.random()*(i+1));\r\n                                //if(array[y] == 100 && array[y-1] == 100){\r\n                                if(combine[y+startIndex100] == 100 && combine[y-1+startIndex100] == 100 && y-1 != LastIndex50){\r\n                                    //console.log(y)\r\n                                    array[y] = -1;\r\n                                    array[y-1] = -1;\r\n                                    combine[y+startIndex100] = hms3[k3];\r\n                                    combine[y-1+startIndex100] = hms3[k3];\r\n                                    m = 1\r\n                                }\r\n                                //else if(array[y] == 100 && array[y+1] == 100){\r\n                                else if(combine[y+startIndex100] == 100 && combine[y+1+startIndex100] == 100 && y+1 != startIndex200){\r\n                                    //console.log(y)\r\n                                    array[y] = -1;\r\n                                    array[y+1] = -1;\r\n                                    combine[y+startIndex100] = hms3[k3];\r\n                                    combine[y+1+startIndex100] = hms3[k3];\r\n                                    m = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k3++  \r\n        }\r\n\r\n        changeToZero(array)\r\n        changeToZero(combine)\r\n\r\n    return array;\r\n    \r\n}\r\n\r\nvar AntArrIns100 = AntAlgoInsert100(AntArr100,AntArrCombine);\r\n\r\n\r\nconst checkAmountData100_2 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=100 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_2 = checkAmountData100_2(AntArrIns100)\r\n// console.log(AntArrIns100);\r\n// console.log(checkAmount_2)\r\n\r\nconst checkAmountData100_0 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if( array[i] == 0 ){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_0 = checkAmountData100_0(AntArr100)\r\n//console.log(checkAmount_0)\r\n\r\n// // _____________________________________________________________________________________________________________________________________________________\r\n\r\n\r\nconst array1D200 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArr200 = array1D200(DataArray200);\r\n\r\n\r\nconst AntAlgoInsert200 = (array,combine) => {\r\n\r\n\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    let hms2 = []\r\n    let hms3 = []\r\n    let hms4 = []\r\n\r\n\r\n        for(let x=0; x<filterData200.length;x++){\r\n            if(filterData200[x][7] == 2){\r\n                hms2.push(filterData200[x])\r\n            }\r\n            if(filterData200[x][7] == 4){\r\n                hms4.push(filterData200[x])\r\n            }\r\n            if(filterData200[x][7] == 3){\r\n                hms3.push(filterData200[x])\r\n            }\r\n            test.push(filterData200[x]);\r\n        }\r\n\r\n        //slot in  2 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k < hms2.length){\r\n                checking_1(combine,array,hms2[k])\r\n                checking_1_phe(combine,array,hms2[k])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j+startIndex200] == 100 && combine[j-1+startIndex200] == 100 && j-1 != LastIndex100){\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndex200] = hms2[k];\r\n                            combine[j-1+startIndex200] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j+startIndex200] == 100 && combine[j+1+startIndex200] == 100 && j+1 != startIndex500){\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndex200] = hms2[k];\r\n                            combine[j+1+startIndex200] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k++  \r\n        }\r\n\r\n        // console.log(hms2.length)\r\n        // console.log(hms4.length)\r\n         //console.log(hms3.length)\r\n\r\n        //slot in  4 hours of meeting student course \r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k2 < hms4.length){\r\n            //if(k2 < 1){\r\n                checking_1(combine,array,hms4[k2])\r\n                checking_1_phe(combine,array,hms4[k2])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j+startIndex200] == 100 && combine[j-1+startIndex200] == 100 && j-1 != LastIndex100){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndex200] = hms4[k2];\r\n                            combine[j-1+startIndex200] = hms4[k2];\r\n                            checkDay(combine,array,j)\r\n                            let b = 0 \r\n                            while(b != 1){\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                //if(array[v] == 100 && array[v-1] == 100){\r\n                                if(combine[v+startIndex200] == 100 && combine[v-1+startIndex200] == 100 && v-1 != LastIndex100){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v-1] = -1;\r\n                                    combine[v+startIndex200] = hms4[k2];\r\n                                    combine[v-1+startIndex200] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                                //else if(array[v] == 100 && array[v+1] == 100){\r\n                                else if(combine[v+startIndex200] == 100 && combine[v+1+startIndex200] == 100 && v+1 != startIndex500){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v+1] = -1;\r\n                                    combine[v+startIndex200] = hms4[k2];\r\n                                    combine[v+1+startIndex200] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j+startIndex200] == 100 && combine[j+1+startIndex200] == 100 && j+1 != startIndex500){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndex200] = hms4[k2];\r\n                            combine[j+1+startIndex200] = hms4[k2];\r\n                            checkDay(combine,array,j)\r\n                            let z = 0 \r\n                            while(z != 1){\r\n                                const p = Math.floor(Math.random()*(i+1));\r\n                                //if(array[p] == 100 && array[p-1] == 100){\r\n                                if(combine[p+startIndex200] == 100 && combine[p-1+startIndex200] == 100 && p-1 != LastIndex100){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p-1] = -1;\r\n                                    combine[p+startIndex200] = hms4[k2];\r\n                                    combine[p-1+startIndex200] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                                //else if(array[p] == 100 && array[p+1] == 100){\r\n                                else if(combine[p+startIndex200] == 100 && combine[p+1+startIndex200] == 100 && p+1 != startIndex500){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p+1] = -1;\r\n                                    combine[p+startIndex200] = hms4[k2];\r\n                                    combine[p+1+startIndex200] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k2++  \r\n        }\r\n\r\n        //slot in  3 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k3 < hms3.length){\r\n            //if(k3 < 1){\r\n                checking_1(combine,array,hms3[k3])\r\n                checking_1_phe(combine,array,hms3[k3])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));\r\n                    \r\n                    //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\r\n                    if(combine[j+startIndex200] == 100 && combine[j-1+startIndex200] == 100 && combine[j+1+startIndex200] == 100 && j-1 != LastIndex100 && j+1 != startIndex500 ){ // slot in 3 course at one time\r\n                        //console.log(j)\r\n                        array[j] = -1;\r\n                        array[j-1] = -1;\r\n                        array[j+1] = -1;\r\n                        combine[j+startIndex200] = hms3[k3];\r\n                        combine[j-1+startIndex200] = hms3[k3];\r\n                        combine[j+1+startIndex200] = hms3[k3];\r\n                        c = 1\r\n                    }    \r\n                    //else if(array[j] == 100 && array[j-1] == 100){// slot in 2 course at one time\r\n                    else if(combine[j+startIndex200] == 100 && combine[j-1+startIndex200] == 100 && j-1 != LastIndex100){// slot in 2 course at one time\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndex200] = hms3[k3];\r\n                            combine[j-1+startIndex200] = hms3[k3];\r\n                            checkDay(combine,array,j)\r\n                            let b = 0 \r\n                            while(b != 1){\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                //if(array[v] == 100){\r\n                                if(combine[v+startIndex200] == 100){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    combine[v+startIndex200] = hms3[k3];\r\n                                    b = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){ // slot in 2 course at one time\r\n                    else if(combine[j+startIndex200] == 100 && combine[j+1+startIndex200] == 100 && j+1 != startIndex500){ // slot in 2 course at one time\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndex200] = hms3[k3];\r\n                            combine[j+1+startIndex200] = hms3[k3];\r\n                            checkDay(combine,array,j)\r\n                            let z = 0 \r\n                            while(z != 1){\r\n                                const p = Math.floor(Math.random()*(i+1));\r\n                                //if(array[p] == 100 ){\r\n                                if(combine[p+startIndex200] == 100 ){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    combine[p+startIndex200] = hms3[k3];\r\n                                    z = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100){ // slot in 1 course at one time\r\n                    else if(combine[j+startIndex200] == 100){ // slot in 1 course at one time\r\n                        array[j] = -1;\r\n                        combine[j+startIndex200] = hms3[k3];\r\n                        checkDay(combine,array,j)\r\n                            let m = 0 \r\n                            while(m != 1){\r\n                                const y = Math.floor(Math.random()*(i+1));\r\n                                //if(array[y] == 100 && array[y-1] == 100){\r\n                                if(combine[y+startIndex200] == 100 && combine[y-1+startIndex200] == 100 && y-1 != LastIndex100){\r\n                                    //console.log(y)\r\n                                    array[y] = -1;\r\n                                    array[y-1] = -1;\r\n                                    combine[y+startIndex200] = hms3[k3];\r\n                                    combine[y-1+startIndex200] = hms3[k3];\r\n                                    m = 1\r\n                                }\r\n                                //else if(array[y] == 100 && array[y+1] == 100){\r\n                                else if(combine[y+startIndex200] == 100 && combine[y+1+startIndex200] == 100 && y+1 != startIndex500){\r\n                                    //console.log(y)\r\n                                    array[y] = -1;\r\n                                    array[y+1] = -1;\r\n                                    combine[y+startIndex200] = hms3[k3];\r\n                                    combine[y+1+startIndex200] = hms3[k3];\r\n                                    m = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k3++  \r\n        }\r\n\r\n        changeToZero(array)\r\n        changeToZero(combine)\r\n\r\n    return array;\r\n    \r\n}\r\n\r\nvar AntArrIns200 = AntAlgoInsert200(AntArr200,AntArrCombine);\r\n\r\n\r\nconst checkAmountData200_2 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=200 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_2 = checkAmountData200_2(AntArrIns200)\r\n// console.log(AntArrIns200);\r\n// console.log(checkAmount_2)\r\n\r\nconst checkAmountData200_0 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if( array[i] == 0 ){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_0 = checkAmountData200_0(AntArr200)\r\n//console.log(checkAmount_0)\r\n\r\n\r\n// //________________________________________________________________________________________________________________________________________________________\r\n\r\n\r\nconst array1D500 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArr500 = array1D500(DataArray500);\r\n\r\n\r\nconst AntAlgoInsert500 = (array,combine) => {\r\n\r\n\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    let hms2 = []\r\n    let hms3 = []\r\n    let hms4 = []\r\n\r\n\r\n        for(let x=0; x<filterData500.length;x++){\r\n            if(filterData500[x][7] == 2){\r\n                hms2.push(filterData500[x])\r\n            }\r\n            if(filterData500[x][7] == 4){\r\n                hms4.push(filterData500[x])\r\n            }\r\n            if(filterData500[x][7] == 3){\r\n                hms3.push(filterData500[x])\r\n            }\r\n            test.push(filterData500[x]);\r\n        }\r\n\r\n        //slot in  2 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k < hms2.length){\r\n                checking_1(combine,array,hms2[k])\r\n                checking_1_phe(combine,array,hms2[k])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j+startIndex500] == 100 && combine[j-1+startIndex500] == 100 && j-1 != LastIndex200){\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndex500] = hms2[k];\r\n                            combine[j-1+startIndex500] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j+startIndex500] == 100 && combine[j+1+startIndex500] == 100){\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndex500] = hms2[k];\r\n                            combine[j+1+startIndex500] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k++  \r\n        }\r\n\r\n        // console.log(hms2.length)\r\n        // console.log(hms4.length)\r\n         //console.log(hms3.length)\r\n\r\n        //slot in  4 hours of meeting student course \r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k2 < hms4.length){\r\n            //if(k2 < 1){\r\n                checking_1(combine,array,hms4[k2])\r\n                checking_1_phe(combine,array,hms4[k2])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j+startIndex500] == 100 && combine[j-1+startIndex500] == 100 && j-1 != LastIndex200){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndex500] = hms4[k2];\r\n                            combine[j-1+startIndex500] = hms4[k2];\r\n                            checkDay(combine,array,j)\r\n                            let b = 0 \r\n                            while(b != 1){\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                //if(array[v] == 100 && array[v-1] == 100){\r\n                                if(combine[v+startIndex500] == 100 && combine[v-1+startIndex500] == 100 && v-1 != LastIndex200){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v-1] = -1;\r\n                                    combine[v+startIndex500] = hms4[k2];\r\n                                    combine[v-1+startIndex500] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                                //else if(array[v] == 100 && array[v+1] == 100){\r\n                                else if(combine[v+startIndex500] == 100 && combine[v+1+startIndex500] == 100){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v+1] = -1;\r\n                                    combine[v+startIndex500] = hms4[k2];\r\n                                    combine[v+1+startIndex500] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j+startIndex500] == 100 && combine[j+1+startIndex500] == 100){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndex500] = hms4[k2];\r\n                            combine[j+1+startIndex500] = hms4[k2];\r\n                            checkDay(combine,array,j)\r\n                            let z = 0 \r\n                            while(z != 1){\r\n                                const p = Math.floor(Math.random()*(i+1));\r\n                                //if(array[p] == 100 && array[p-1] == 100){\r\n                                if(combine[p+startIndex500] == 100 && combine[p-1+startIndex500] == 100 && p-1 != LastIndex200){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p-1] = -1;\r\n                                    combine[p+startIndex500] = hms4[k2];\r\n                                    combine[p-1+startIndex500] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                                //else if(array[p] == 100 && array[p+1] == 100){\r\n                                else if(combine[p+startIndex500] == 100 && combine[p+1+startIndex500] == 100 ){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p+1] = -1;\r\n                                    combine[p+startIndex500] = hms4[k2];\r\n                                    combine[p+1+startIndex500] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k2++  \r\n        }\r\n\r\n        //slot in  3 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k3 < hms3.length){\r\n            //if(k3 < 1){\r\n                checking_1(combine,array,hms3[k3])\r\n                checking_1_phe(combine,array,hms3[k3])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));\r\n                    \r\n                    //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\r\n                    if(combine[j+startIndex500] == 100 && combine[j-1+startIndex500] == 100 && combine[j+1+startIndex500] == 100 && j-1 != LastIndex200 ){ // slot in 3 course at one time\r\n                        //console.log(j)\r\n                        array[j] = -1;\r\n                        array[j-1] = -1;\r\n                        array[j+1] = -1;\r\n                        combine[j+startIndex500] = hms3[k3];\r\n                        combine[j-1+startIndex500] = hms3[k3];\r\n                        combine[j+1+startIndex500] = hms3[k3];\r\n                        c = 1\r\n                    }    \r\n                    //else if(array[j] == 100 && array[j-1] == 100){// slot in 2 course at one time\r\n                    else if(combine[j+startIndex500] == 100 && combine[j-1+startIndex500] == 100 && j-1 != LastIndex200){// slot in 2 course at one time\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndex500] = hms3[k3];\r\n                            combine[j-1+startIndex500] = hms3[k3];\r\n                            checkDay(combine,array,j)\r\n                            let b = 0 \r\n                            while(b != 1){\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                //if(array[v] == 100){\r\n                                if(combine[v+startIndex500] == 100){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    combine[v+startIndex500] = hms3[k3];\r\n                                    b = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){ // slot in 2 course at one time\r\n                    else if(combine[j+startIndex500] == 100 && combine[j+1+startIndex500] == 100){ // slot in 2 course at one time\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndex500] = hms3[k3];\r\n                            combine[j+1+startIndex500] = hms3[k3];\r\n                            checkDay(combine,array,j)\r\n                            let z = 0 \r\n                            while(z != 1){\r\n                                const p = Math.floor(Math.random()*(i+1));\r\n                                //if(array[p] == 100 ){\r\n                                if(combine[p+startIndex500] == 100 ){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    combine[p+startIndex500] = hms3[k3];\r\n                                    z = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100){ // slot in 1 course at one time\r\n                    else if(combine[j+startIndex500] == 100){ // slot in 1 course at one time\r\n                        array[j] = -1;\r\n                        combine[j+startIndex500] = hms3[k3];\r\n                        checkDay(combine,array,j)\r\n                            let m = 0 \r\n                            while(m != 1){\r\n                                const y = Math.floor(Math.random()*(i+1));\r\n                                //if(array[y] == 100 && array[y-1] == 100){\r\n                                if(combine[y+startIndex500] == 100 && combine[y-1+startIndex500] == 100 && y-1 != LastIndex200){\r\n                                    //console.log(y)\r\n                                    array[y] = -1;\r\n                                    array[y-1] = -1;\r\n                                    combine[y+startIndex500] = hms3[k3];\r\n                                    combine[y-1+startIndex500] = hms3[k3];\r\n                                    m = 1\r\n                                }\r\n                                //else if(array[y] == 100 && array[y+1] == 100){\r\n                                else if(combine[y+startIndex500] == 100 && combine[y+1+startIndex500] == 100){\r\n                                    //console.log(y)\r\n                                    array[y] = -1;\r\n                                    array[y+1] = -1;\r\n                                    combine[y+startIndex500] = hms3[k3];\r\n                                    combine[y+1+startIndex500] = hms3[k3];\r\n                                    m = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k3++  \r\n        }\r\n\r\n        changeToZero(array)\r\n        changeToZero(combine)\r\n\r\n    return array;\r\n    \r\n}\r\n\r\nvar AntArrIns500 = AntAlgoInsert500(AntArr500,AntArrCombine);\r\n\r\n\r\nconst checkAmountData500_2 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=500 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_2 = checkAmountData500_2(AntArrIns500)\r\n //console.log(AntArrIns500);\r\n// console.log(checkAmount_2)\r\n\r\nconst checkAmountData500_0 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if( array[i] == 0 ){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_0 = checkAmountData500_0(AntArr500)\r\n//console.log(checkAmount_0)\r\n\r\n\r\n//______________________________________________________________________________________________________________________________________________\r\n//Elective Courses\r\n\r\nconst array1DElective50 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrElective50 = array1DElective50(DataArrayElective50);\r\n\r\nconst AntAlgoInsertElective50 = (array,combine) => {\r\n\r\n\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    let hms2 = []\r\n    let hms3 = []\r\n    let hms4 = []\r\n\r\n\r\n        for(let x=0; x<filterDataElective50.length;x++){\r\n            if(filterDataElective50[x][7] == 2){\r\n                hms2.push(filterDataElective50[x])\r\n            }\r\n            if(filterDataElective50[x][7] == 4){\r\n                hms4.push(filterDataElective50[x])\r\n            }\r\n            if(filterDataElective50[x][7] == 3){\r\n                hms3.push(filterDataElective50[x])\r\n            }\r\n            test.push(filterDataElective50[x]);\r\n        }\r\n\r\n        //slot in  2 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k < hms2.length){\r\n                checking_1_Elective(combine,array,hms2[k])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j] == 100 && combine[j-1] == 100 && j-1 != -1){\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j] = hms2[k];\r\n                            combine[j-1] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j] == 100 && combine[j+1] == 100 && j+1 != startIndexElective100){\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j] = hms2[k];\r\n                            combine[j+1] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k++  \r\n        }\r\n\r\n        // console.log(hms2.length)\r\n        // console.log(hms4.length)\r\n         //console.log(hms3.length)\r\n\r\n        //slot in  4 hours of meeting student course \r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k2 < hms4.length){\r\n            //if(k2 < 1){\r\n                checking_1_Elective(combine,array,hms4[k2])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j] == 100 && combine[j-1] == 100 && j-1 != -1){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j] = hms4[k2];\r\n                            combine[j-1] = hms4[k2];\r\n                            let b = 0 \r\n                            while(b != 1){\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                //if(array[v] == 100 && array[v-1] == 100){\r\n                                if(combine[v] == 100 && combine[v-1] == 100 && v-1 != -1){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v-1] = -1;\r\n                                    combine[v] = hms4[k2];\r\n                                    combine[v-1] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                                //else if(array[v] == 100 && array[v+1] == 100){\r\n                                else if(combine[v] == 100 && combine[v+1] == 100 && v+1 != startIndexElective100){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v+1] = -1;\r\n                                    combine[v] = hms4[k2];\r\n                                    combine[v+1] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j] == 100 && combine[j+1] == 100 && j+1 != startIndexElective100){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j] = hms4[k2];\r\n                            combine[j+1] = hms4[k2];\r\n                            let z = 0 \r\n                            while(z != 1){\r\n                                const p = Math.floor(Math.random()*(i+1));\r\n                                //if(array[p] == 100 && array[p-1] == 100){\r\n                                if(combine[p] == 100 && combine[p-1] == 100 && p-1 != -1){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p-1] = -1;\r\n                                    combine[p] = hms4[k2];\r\n                                    combine[p-1] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                                //else if(array[p] == 100 && array[p+1] == 100){\r\n                                else if(combine[p] == 100 && combine[p+1] == 100 && p+1 != startIndexElective100){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p+1] = -1;\r\n                                    combine[p] = hms4[k2];\r\n                                    combine[p+1] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k2++  \r\n        }\r\n\r\n        //slot in  3 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k3 < hms3.length){\r\n            //if(k3 < 1){\r\n                checking_1_Elective(combine,array,hms3[k3])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));\r\n                    \r\n                    //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\r\n                    if(combine[j] == 100 && combine[j-1] == 100 && combine[j+1] == 100 && j-1 != -1 && j+1 != startIndexElective100 ){ // slot in 3 course at one time\r\n                        //console.log(j)\r\n                        array[j] = -1;\r\n                        array[j-1] = -1;\r\n                        array[j+1] = -1;\r\n                        combine[j] = hms3[k3];\r\n                        combine[j-1] = hms3[k3];\r\n                        combine[j+1] = hms3[k3];\r\n                        c = 1\r\n                    }    \r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k3++  \r\n        }\r\n\r\n        changeToZero(array)\r\n        changeToZero(combine)\r\n\r\n    return array;\r\n    \r\n}\r\nvar AntArrInsElective50 = AntAlgoInsertElective50(AntArrElective50,AntArrCombineElective);\r\n\r\nconst checkAmountDataElective50_2 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_2 = checkAmountDataElective50_2(AntArrInsElective50)\r\n// console.log(AntArrInsElective50);\r\n// console.log(checkAmount_2)\r\n\r\nconst checkAmountDataElective50_0 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if( array[i] == 0 ){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_0 = checkAmountDataElective50_0(AntArrElective50)\r\n//console.log(checkAmount_0)\r\n\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\nconst array1DElective100 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrElective100 = array1DElective100(DataArrayElective100);\r\n\r\n\r\nconst AntAlgoInsertElective100 = (array,combine) => {\r\n\r\n\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    let hms2 = []\r\n    let hms3 = []\r\n    let hms4 = []\r\n\r\n\r\n        for(let x=0; x<filterDataElective100.length;x++){\r\n            if(filterDataElective100[x][7] == 2){\r\n                hms2.push(filterDataElective100[x])\r\n            }\r\n            if(filterDataElective100[x][7] == 4){\r\n                hms4.push(filterDataElective100[x])\r\n            }\r\n            if(filterDataElective100[x][7] == 3){\r\n                hms3.push(filterDataElective100[x])\r\n            }\r\n            test.push(filterDataElective100[x]);\r\n        }\r\n\r\n        //slot in  2 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k < hms2.length){\r\n                checking_1_Elective(combine,array,hms2[k])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j+startIndexElective100] == 100 && combine[j-1+startIndexElective100] == 100 && j-1 != LastIndexElective50){\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndexElective100] = hms2[k];\r\n                            combine[j-1+startIndexElective100] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j+startIndexElective100] == 100 && combine[j+1+startIndexElective100] == 100 && j+1 != startIndexElective200){\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndexElective100] = hms2[k];\r\n                            combine[j+1+startIndexElective100] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k++  \r\n        }\r\n\r\n        // console.log(hms2.length)\r\n        // console.log(hms4.length)\r\n         //console.log(hms3.length)\r\n\r\n        //slot in  4 hours of meeting student course \r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k2 < hms4.length){\r\n            //if(k2 < 1){\r\n                checking_1_Elective(combine,array,hms4[k2])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j+startIndexElective100] == 100 && combine[j-1+startIndexElective100] == 100 && j-1 != LastIndexElective50){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndexElective100] = hms4[k2];\r\n                            combine[j-1+startIndexElective100] = hms4[k2];\r\n                            let b = 0 \r\n                            while(b != 1){\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                //if(array[v] == 100 && array[v-1] == 100){\r\n                                if(combine[v+startIndexElective100] == 100 && combine[v-1+startIndexElective100] == 100 && v-1 != LastIndexElective50){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v-1] = -1;\r\n                                    combine[v+startIndexElective100] = hms4[k2];\r\n                                    combine[v-1+startIndexElective100] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                                //else if(array[v] == 100 && array[v+1] == 100){\r\n                                else if(combine[v+startIndexElective100] == 100 && combine[v+1+startIndexElective100] == 100 && v+1 != startIndexElective200){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v+1] = -1;\r\n                                    combine[v+startIndexElective100] = hms4[k2];\r\n                                    combine[v+1+startIndexElective100] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j+startIndexElective100] == 100 && combine[j+1+startIndexElective100] == 100 && j+1 != startIndexElective200){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndexElective100] = hms4[k2];\r\n                            combine[j+1+startIndexElective100] = hms4[k2];\r\n                            let z = 0 \r\n                            while(z != 1){\r\n                                const p = Math.floor(Math.random()*(i+1));\r\n                                //if(array[p] == 100 && array[p-1] == 100){\r\n                                if(combine[p+startIndexElective100] == 100 && combine[p-1+startIndexElective100] == 100 && p-1 != LastIndexElective50){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p-1] = -1;\r\n                                    combine[p+startIndexElective100] = hms4[k2];\r\n                                    combine[p-1+startIndexElective100] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                                //else if(array[p] == 100 && array[p+1] == 100){\r\n                                else if(combine[p+startIndexElective100] == 100 && combine[p+1+startIndexElective100] == 100 && p+1 != startIndexElective200){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p+1] = -1;\r\n                                    combine[p+startIndexElective100] = hms4[k2];\r\n                                    combine[p+1+startIndexElective100] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k2++  \r\n        }\r\n\r\n        //slot in  3 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k3 < hms3.length){\r\n            //if(k3 < 1){\r\n                checking_1_Elective(combine,array,hms3[k3])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));\r\n                    \r\n                    //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\r\n                    if(combine[j+startIndexElective100] == 100 && combine[j-1+startIndexElective100] == 100 && combine[j+1+startIndexElective100] == 100 && j-1 != LastIndexElective50 && j+1 != startIndexElective200 ){ // slot in 3 course at one time\r\n                        //console.log(j)\r\n                        array[j] = -1;\r\n                        array[j-1] = -1;\r\n                        array[j+1] = -1;\r\n                        combine[j+startIndexElective100] = hms3[k3];\r\n                        combine[j-1+startIndexElective100] = hms3[k3];\r\n                        combine[j+1+startIndexElective100] = hms3[k3];\r\n                        c = 1\r\n                    }    \r\n\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k3++  \r\n        }\r\n\r\n        changeToZero(array)\r\n        changeToZero(combine)\r\n\r\n    return array;\r\n    \r\n}\r\nvar AntArrInsElective100 = AntAlgoInsertElective100(AntArrElective100,AntArrCombineElective);\r\n\r\nconst checkAmountDataElective100_2 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=100 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_2 = checkAmountDataElective100_2(AntArrInsElective100)\r\n// console.log(AntArrInsElective100);\r\n// console.log(checkAmount_2)\r\n\r\nconst checkAmountDataElective100_0 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if( array[i] == 0 ){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_0 = checkAmountDataElective100_0(AntArrElective100)\r\n//console.log(checkAmount_0)\r\n\r\n\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\nconst array1DElective200 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrElective200 = array1DElective200(DataArrayElective200);\r\n\r\n\r\nconst AntAlgoInsertElective200 = (array,combine) => {\r\n\r\n\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    let hms2 = []\r\n    let hms3 = []\r\n    let hms4 = []\r\n\r\n\r\n        for(let x=0; x<filterDataElective200.length;x++){\r\n            if(filterDataElective200[x][7] == 2){\r\n                hms2.push(filterDataElective200[x])\r\n            }\r\n            if(filterDataElective200[x][7] == 4){\r\n                hms4.push(filterDataElective200[x])\r\n            }\r\n            if(filterDataElective200[x][7] == 3){\r\n                hms3.push(filterDataElective200[x])\r\n            }\r\n            test.push(filterDataElective200[x]);\r\n        }\r\n\r\n        //slot in  2 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k < hms2.length){\r\n                checking_1_Elective(combine,array,hms2[k])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j+startIndexElective200] == 100 && combine[j-1+startIndexElective200] == 100 && j-1 != LastIndexElective100){\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndexElective200] = hms2[k];\r\n                            combine[j-1+startIndexElective200] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j+startIndexElective200] == 100 && combine[j+1+startIndexElective200] == 100 && j+1 != startIndexElective500){\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndexElective200] = hms2[k];\r\n                            combine[j+1+startIndexElective200] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k++  \r\n        }\r\n\r\n        // console.log(hms2.length)\r\n        // console.log(hms4.length)\r\n         //console.log(hms3.length)\r\n\r\n        //slot in  4 hours of meeting student course \r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k2 < hms4.length){\r\n            //if(k2 < 1){\r\n                checking_1_Elective(combine,array,hms4[k2])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j+startIndexElective200] == 100 && combine[j-1+startIndexElective200] == 100 && j-1 != LastIndexElective100){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndexElective200] = hms4[k2];\r\n                            combine[j-1+startIndexElective200] = hms4[k2];\r\n                            let b = 0 \r\n                            while(b != 1){\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                //if(array[v] == 100 && array[v-1] == 100){\r\n                                if(combine[v+startIndexElective200] == 100 && combine[v-1+startIndexElective200] == 100 && v-1 != LastIndexElective100){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v-1] = -1;\r\n                                    combine[v+startIndexElective200] = hms4[k2];\r\n                                    combine[v-1+startIndexElective200] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                                //else if(array[v] == 100 && array[v+1] == 100){\r\n                                else if(combine[v+startIndexElective200] == 100 && combine[v+1+startIndexElective200] == 100 && v+1 != startIndexElective500){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v+1] = -1;\r\n                                    combine[v+startIndexElective200] = hms4[k2];\r\n                                    combine[v+1+startIndexElective200] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j+startIndexElective200] == 100 && combine[j+1+startIndexElective200] == 100 && j+1 != startIndexElective500){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndexElective200] = hms4[k2];\r\n                            combine[j+1+startIndexElective200] = hms4[k2];\r\n                            let z = 0 \r\n                            while(z != 1){\r\n                                const p = Math.floor(Math.random()*(i+1));\r\n                                //if(array[p] == 100 && array[p-1] == 100){\r\n                                if(combine[p+startIndexElective200] == 100 && combine[p-1+startIndexElective200] == 100 && p-1 != LastIndexElective100){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p-1] = -1;\r\n                                    combine[p+startIndexElective200] = hms4[k2];\r\n                                    combine[p-1+startIndexElective200] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                                //else if(array[p] == 100 && array[p+1] == 100){\r\n                                else if(combine[p+startIndexElective200] == 100 && combine[p+1+startIndexElective200] == 100 && p+1 != startIndexElective500){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p+1] = -1;\r\n                                    combine[p+startIndexElective200] = hms4[k2];\r\n                                    combine[p+1+startIndexElective200] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k2++  \r\n        }\r\n\r\n        //slot in  3 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k3 < hms3.length){\r\n            //if(k3 < 1){\r\n                checking_1_Elective(combine,array,hms3[k3])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));\r\n                    \r\n                    //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\r\n                    if(combine[j+startIndexElective200] == 100 && combine[j-1+startIndexElective200] == 100 && combine[j+1+startIndexElective200] == 100 && j-1 != LastIndexElective100 && j+1 != startIndexElective500 ){ // slot in 3 course at one time\r\n                        //console.log(j)\r\n                        array[j] = -1;\r\n                        array[j-1] = -1;\r\n                        array[j+1] = -1;\r\n                        combine[j+startIndexElective200] = hms3[k3];\r\n                        combine[j-1+startIndexElective200] = hms3[k3];\r\n                        combine[j+1+startIndexElective200] = hms3[k3];\r\n                        c = 1\r\n                    }    \r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k3++  \r\n        }\r\n\r\n        changeToZero(array)\r\n        changeToZero(combine)\r\n\r\n    return array;\r\n    \r\n}\r\nvar AntArrInsElective200 = AntAlgoInsertElective200(AntArrElective200,AntArrCombineElective);\r\n\r\nconst checkAmountDataElective200_2 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=200 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_2 = checkAmountDataElective200_2(AntArrInsElective200)\r\n// console.log(AntArrInsElective200);\r\n// console.log(checkAmount_2)\r\n\r\nconst checkAmountDataElective200_0 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if( array[i] == 0 ){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_0 = checkAmountDataElective200_0(AntArrElective200)\r\n//console.log(checkAmount_0)\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\nconst array1DElective500 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrElective500 = array1DElective500(DataArrayElective500);\r\n\r\n\r\nconst AntAlgoInsertElective500 = (array,combine) => {\r\n\r\n\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    let hms2 = []\r\n    let hms3 = []\r\n    let hms4 = []\r\n\r\n\r\n        for(let x=0; x<filterDataElective500.length;x++){\r\n            if(filterDataElective500[x][7] == 2){\r\n                hms2.push(filterDataElective500[x])\r\n            }\r\n            if(filterDataElective500[x][7] == 4){\r\n                hms4.push(filterDataElective500[x])\r\n            }\r\n            if(filterDataElective500[x][7] == 3){\r\n                hms3.push(filterDataElective500[x])\r\n            }\r\n            test.push(filterDataElective500[x]);\r\n        }\r\n\r\n        //slot in  2 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k < hms2.length){\r\n                checking_1_Elective(combine,array,hms2[k])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j+startIndexElective500] == 100 && combine[j-1+startIndexElective500] == 100 && j-1 != LastIndexElective200){\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndexElective500] = hms2[k];\r\n                            combine[j-1+startIndexElective500] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j+startIndexElective500] == 100 && combine[j+1+startIndexElective500] == 100){\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndexElective500] = hms2[k];\r\n                            combine[j+1+startIndexElective500] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k++  \r\n        }\r\n\r\n        // console.log(hms2.length)\r\n        // console.log(hms4.length)\r\n         //console.log(hms3.length)\r\n\r\n        //slot in  4 hours of meeting student course \r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k2 < hms4.length){\r\n            //if(k2 < 1){\r\n                checking_1_Elective(combine,array,hms4[k2])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j+startIndexElective500] == 100 && combine[j-1+startIndexElective500] == 100 && j-1 != LastIndexElective200){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndexElective500] = hms4[k2];\r\n                            combine[j-1+startIndexElective500] = hms4[k2];\r\n                            let b = 0 \r\n                            while(b != 1){\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                //if(array[v] == 100 && array[v-1] == 100){\r\n                                if(combine[v+startIndexElective500] == 100 && combine[v-1+startIndexElective500] == 100 && v-1 != LastIndexElective200){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v-1] = -1;\r\n                                    combine[v+startIndexElective500] = hms4[k2];\r\n                                    combine[v-1+startIndexElective500] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                                //else if(array[v] == 100 && array[v+1] == 100){\r\n                                else if(combine[v+startIndexElective500] == 100 && combine[v+1+startIndexElective500] == 100){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v+1] = -1;\r\n                                    combine[v+startIndexElective500] = hms4[k2];\r\n                                    combine[v+1+startIndexElective500] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j+startIndexElective500] == 100 && combine[j+1+startIndexElective500] == 100){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndexElective500] = hms4[k2];\r\n                            combine[j+1+startIndexElective500] = hms4[k2];\r\n                            let z = 0 \r\n                            while(z != 1){\r\n                                const p = Math.floor(Math.random()*(i+1));\r\n                                //if(array[p] == 100 && array[p-1] == 100){\r\n                                if(combine[p+startIndexElective500] == 100 && combine[p-1+startIndexElective500] == 100 && p-1 != LastIndexElective200){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p-1] = -1;\r\n                                    combine[p+startIndexElective500] = hms4[k2];\r\n                                    combine[p-1+startIndexElective500] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                                //else if(array[p] == 100 && array[p+1] == 100){\r\n                                else if(combine[p+startIndexElective500] == 100 && combine[p+1+startIndexElective500] == 100 ){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p+1] = -1;\r\n                                    combine[p+startIndexElective500] = hms4[k2];\r\n                                    combine[p+1+startIndexElective500] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k2++  \r\n        }\r\n\r\n        //slot in  3 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k3 < hms3.length){\r\n            //if(k3 < 1){\r\n                checking_1_Elective(combine,array,hms3[k3])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));\r\n                    \r\n                    //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\r\n                    if(combine[j+startIndexElective500] == 100 && combine[j-1+startIndexElective500] == 100 && combine[j+1+startIndexElective500] == 100 && j-1 != LastIndexElective200 ){ // slot in 3 course at one time\r\n                        //console.log(j)\r\n                        array[j] = -1;\r\n                        array[j-1] = -1;\r\n                        array[j+1] = -1;\r\n                        combine[j+startIndexElective500] = hms3[k3];\r\n                        combine[j-1+startIndexElective500] = hms3[k3];\r\n                        combine[j+1+startIndexElective500] = hms3[k3];\r\n                        c = 1\r\n                    }    \r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k3++  \r\n        }\r\n\r\n        changeToZero(array)\r\n        changeToZero(combine)\r\n\r\n    return array;\r\n    \r\n}\r\n\r\nvar AntArrInsElective500 = AntAlgoInsertElective500(AntArrElective500,AntArrCombineElective);\r\n\r\nconst checkAmountDataElective500_2 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=500 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_2 = checkAmountDataElective500_2(AntArrInsElective500)\r\n //console.log(AntArrInsElective500);\r\n// console.log(checkAmount_2)\r\n\r\nconst checkAmountDataElective500_0 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if( array[i] == 0 ){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_0 = checkAmountDataElective500_0(AntArrElective500)\r\n//console.log(checkAmount_0)\r\n\r\n//______________________________________________________________________________________________________________________________________________\r\n\r\n\r\n//______________________________________________________________________________________________________________________________________________\r\n\r\n\r\n// const checkAmountDataCombine_2 = (array) => {\r\n//     let count = 0\r\n//     for(let i = 0; i < array.length; i++){\r\n//             if(array[i] != 100 && array[i] !=100 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n//                 count += 1\r\n//             }\r\n//     }\r\n//     return count\r\n// }\r\n// var checkAmount_combine = checkAmountDataCombine_2(AntArrCombine)\r\n//  console.log(AntArrCombine)\r\n//  console.log(\"Amount of data: \" +checkAmount_combine);\r\n\r\n\r\n\r\n// const checkAmountDataCombine = (array) => {\r\n//     let count = 0\r\n//     for(let i = 0; i < array.length; i++){\r\n//             if( array[i] == 0 ){\r\n//                 count += 1\r\n//             }\r\n//     }\r\n//     return count\r\n// }\r\n//  //var checkAmount_0 = checkAmountData100_0(AntArr100)\r\n//  var checkAmount_combineData = checkAmountDataCombine(AntArrCombine)\r\n// //console.log(\"zero counter: \"+checkAmount_combineData);\r\n\r\n\r\n// const checkAmountDataCombineElective_2 = (array) => {\r\n//     let count = 0\r\n//     for(let i = 0; i < array.length; i++){\r\n//             if(array[i] != 100 && array[i] !=100 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n//                 count += 1\r\n//             }\r\n//     }\r\n//     return count\r\n// }\r\n// var checkAmount_combine = checkAmountDataCombineElective_2(AntArrCombineElective)\r\n//  console.log(AntArrCombineElective)\r\n//  console.log(\"Amount of data: \" +checkAmount_combine);\r\n\r\n// //  var phecheckAmount_combine = checkAmountDataCombineElective_2(pheAntArrCombineElective)\r\n// //  console.log(pheAntArrCombineElective)\r\n// //  console.log(\"Amount of data: \" + phecheckAmount_combine);\r\n\r\n// const checkAmountDataCombineElective = (array) => {\r\n//     let count = 0\r\n//     for(let i = 0; i < array.length; i++){\r\n//             if( array[i] == 0 ){\r\n//                 count += 1\r\n//             }\r\n//     }\r\n//     return count\r\n// }\r\n//  //var checkAmount_0 = checkAmountData100_0(AntArr100)\r\n//  var checkAmount_combineData = checkAmountDataCombineElective(AntArrCombineElective)\r\n// //console.log(\"zero counter: \"+checkAmount_combineData);\r\n\r\n\r\n\r\n//---------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n//Combine both faculty courses and elective courses \r\nlet fullyCombine = []\r\n\r\nconst combineAll = (faculty,elective) => {\r\n    let totalRoomFalculty = faculty.length / 38\r\n    let totalRoomElective = elective.length / 38\r\n\r\n\r\n    for(let b = 0; b < totalRoomFalculty; b++){\r\n        let indexArray = b*38\r\n        let indexArrayElective = b*10\r\n\r\n        for(let i = 0; i < 20; i++){\r\n            try{\r\n                fullyCombine.push(faculty[i+indexArray])\r\n                //fullyCombine.push(faculty[i])\r\n             }catch{}\r\n         }\r\n         for(let i = 0; i < 10; i++){\r\n             try{\r\n                fullyCombine.push(elective[i+indexArrayElective])\r\n                //fullyCombine.push(elective[i])\r\n              }catch{}\r\n          }\r\n          for(let i = 20; i < 34; i++){\r\n             try{\r\n                fullyCombine.push(faculty[i+indexArray])\r\n                //fullyCombine.push(faculty[i])\r\n              }catch{}\r\n          }\r\n          for(let i = 34; i < 36; i++){\r\n             try{\r\n                fullyCombine.push([\"Solat Jumaat\"])\r\n              }catch{}\r\n          }\r\n          for(let i = 34; i < 38; i++){\r\n             try{\r\n                fullyCombine.push(faculty[i+indexArray])\r\n                 //fullyCombine.push(faculty[i])\r\n              }catch{}\r\n          }\r\n    }\r\n\r\n\r\n}\r\ncombineAll(AntArrCombine,AntArrCombineElective)\r\n\r\n//console.log(fullyCombine);\r\n\r\n\r\nconst checkAmountDataCombine_2_fully = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=100 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_combine = checkAmountDataCombine_2_fully(fullyCombine)\r\n console.log(fullyCombine)\r\n console.log(\"Amount of data: \" +checkAmount_combine);\r\n\r\n\r\n\r\nconst checkAmountDataCombineFully = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if( array[i] == 0 ){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\n //var checkAmount_0 = checkAmountData100_0(AntArr100)\r\n var checkAmount_combineData = checkAmountDataCombineFully(fullyCombine)\r\n//console.log(\"zero counter: \"+checkAmount_combineData);\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n//console.log(dataCombine)\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n//Faculty\r\n\r\n// Hard Constraint \r\n// H1: No student attend more than one class/ event at the same time\r\n// H2: The room is large enough to accomodate all of the student in attendace while also meeting the requirement \r\n// H3: At any given time, each room can onle have one course booked\r\n// H4: No student attend class during 12:00 pm -2:00 due to solat jumaat\r\n// H5: One teacher can only teach one class at one time.\r\n\r\n//Check for the H1 violation: same group attend more than 1 class at 1 time\r\n\r\nconst check1Group = (array) => {\r\n   let count =0\r\n   let indexArray = 0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       indexArray = (x * 38)\r\n   }\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       try{\r\n            for(let i = 0; i<array.length ; i++){\r\n               indexArray = (x * 38)\r\n               if(array[i+indexArray] != 100 && array[i+indexArray] != undefined  && array[i+indexArray] != 1 && array[i+indexArray] != 0 ){\r\n                   try{\r\n                       if(array[i][6] == array[i+indexArray][6]){\r\n                            try{\r\n\r\n                                // console.log(i)\r\n                                // console.log(array[i])\r\n                                // console.log(array[i][6])\r\n\r\n                                // console.log(i+indexArray)\r\n                                // console.log(array[i+indexArray])\r\n                                // console.log(array[i+indexArray][6])\r\n                                count +=1\r\n                            }catch{}\r\n                       }\r\n                   }catch{}\r\n               }   \r\n           }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n}\r\n\r\nvar checkH1_ALL = check1Group(AntArrCombine)\r\n\r\n\r\n//Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\r\n\r\nconst checkRoomQuota = (array) => {\r\n   let count = 0\r\n   return count \r\n}\r\n\r\n\r\n//Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\r\nconst checkSolatJummat = (array) => {\r\n   let count = 0\r\n   return count \r\n}\r\n\r\n//Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\r\nconst check1Teacher = (array) => {\r\n   let count =0\r\n   let indexArray = 0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n    indexArray = (x * 38)\r\n       try{\r\n        for(let i = 1; i<array.length ; i++){\r\n               if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 1 && array[i+indexArray] != 0 ){\r\n                   try{\r\n                       if(array[i][5] == array[i+indexArray][5]){\r\n                        //    console.log(i)\r\n                        //    console.log(array[i])\r\n                        //    console.log(array[i][5])\r\n\r\n                        //    console.log(i+indexArray)\r\n                        //    console.log(array[i+indexArray])\r\n                        //    console.log(array[i+indexArray][5])\r\n                           count +=1\r\n                        }\r\n                   }catch{}\r\n               }    \r\n           }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n\r\n}\r\nvar checkH5_ALL = check1Teacher(AntArrCombine)\r\n\r\n//------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n//Elective\r\n\r\n//Check for the H1 violation: same group attend more than 1 class at 1 time\r\nconst check1GroupElective = (array) => {\r\n    let count =0\r\n    let indexArray = 0\r\n    //let totalRoom = array.length / 38\r\n    let totalRoom = array.length / 10\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n        //indexArray = (x * 38)\r\n        indexArray = (x * 10)\r\n    }\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n        try{\r\n             for(let i = 0; i<array.length ; i++){\r\n                //indexArray = (x * 38)\r\n                indexArray = (x * 10)\r\n                if(array[i+indexArray] != 100 && array[i+indexArray] != undefined  && array[i+indexArray] != 1 && array[i+indexArray] != 0 ){\r\n                    try{\r\n                        if(array[i][6] == array[i+indexArray][6]){\r\n                             try{\r\n       \r\n                                 count +=1\r\n                             }catch{}\r\n                        }\r\n                    }catch{}\r\n                }   \r\n            }\r\n        }catch{}\r\n    }\r\n    return count\r\n \r\n }\r\n \r\n var checkH1_ALL_Elective = check1GroupElective(AntArrCombineElective)\r\n \r\n //Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\r\n const checkRoomQuotaElective = (array) => {\r\n    let count = 0\r\n    return count \r\n }\r\n var checkH2_ALL_Elective = checkRoomQuotaElective(AntArrCombineElective)\r\n \r\n \r\n //Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\r\n const checkSolatJummatElective = (array) => {\r\n    let count = 0\r\n    return count \r\n }\r\n var checkH4_ALL_Elective = checkSolatJummatElective(AntArrCombineElective)\r\n \r\n //Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\r\n const check1TeacherElective = (array) => {\r\n    let count =0\r\n    let indexArray = 0\r\n    //let totalRoom = array.length / 38\r\n    let totalRoom = array.length / 10\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n     //indexArray = (x * 38)\r\n     indexArray = (x * 10)\r\n        try{\r\n         for(let i = 1; i<array.length ; i++){\r\n                if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 1 && array[i+indexArray] != 0 ){\r\n                    try{\r\n                        if(array[i][5] == array[i+indexArray][5]){\r\n                            count +=1\r\n                         }\r\n                    }catch{}\r\n                }    \r\n            }\r\n        }catch{}\r\n    }\r\n    return count\r\n \r\n \r\n }\r\n var checkH5_ALL_ELective = check1TeacherElective(AntArrCombineElective)\r\n //------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nconst checkHC = (data1,data2,data3,data4) => {\r\n    let count =0;\r\n    // if(data1 != 0){\r\n    //     count +=1\r\n    // }\r\n    // if(data2 != 0){\r\n    //     count +=1\r\n    // }\r\n\r\n    count = data1 + data2 + data3 + data4\r\n    return count;\r\n}\r\nlet checkTotalHardContraints = checkHC(checkH5_ALL,checkH1_ALL,checkH5_ALL_ELective,checkH1_ALL_Elective)\r\nconsole.log(\"Total Hard Constraint: \"+checkTotalHardContraints)\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Soft Constraint \r\n// S1: A student has a class schedule toward the end of the day\r\n// S2: A student have more than two class in a row\r\n\r\n// Faculty\r\n\r\n\r\n//Check for the S1 violation: student have class at the end of the day\r\nconst checkEndOfClass = (array) => {\r\n   let count =0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       let indexArray = (x * 37)\r\n       if(array[indexArray] != 100 ){\r\n           count += 1\r\n       }\r\n   }\r\n   return count\r\n\r\n}\r\n\r\n var checkSC1_ALL = checkEndOfClass(AntArrCombine)\r\n\r\n\r\n\r\n//Check for the S2 violation: student have 2 class in a row\r\n\r\nconst check2ClassInARow = (array) => {\r\n   let count =0\r\n   for(let i = 0; i < array.length; i++){\r\n       try{\r\n        if(array[i] != 100 && array[i+3] != 100){\r\n            if(array[i][6] == array[i+3][6]){\r\n                count += 1\r\n            }\r\n       }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n}\r\n\r\nvar checkSC2_ALL = check2ClassInARow(AntArrCombine)\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n//Elective\r\n\r\nconst checkEndOfClassElective = (array) => {\r\n    let count =0\r\n    //let totalRoom = array.length / 38\r\n    let totalRoom = array.length / 10\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n        //let indexArray = (x * 37)\r\n        let indexArray = (x * 9)\r\n        if(array[indexArray] != 100 ){\r\n            count += 1\r\n        }\r\n    }\r\n    return count\r\n \r\n } \r\nvar checkSC1_ALL_Elective = checkEndOfClassElective(AntArrCombineElective)\r\n \r\n //Check for the S2 violation: teacher have 2 class in a row\r\n const check2ClassInARowElective = (array) => {\r\n    let count =0\r\n    for(let i = 0; i < array.length; i++){\r\n        try{\r\n         if(array[i] != 100 && array[i+3] != 100){\r\n             if(array[i][6] == array[i+3][6]){\r\n                 count += 1\r\n             }\r\n        }\r\n        }catch{}\r\n    }\r\n    return count\r\n \r\n }\r\n var checkSC2_ALL_Elective = check2ClassInARowElective(AntArrCombineElective)\r\n\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nconst checkTotalSoftContraint = () => {\r\n    //let count =0\r\n    let count = checkSC1_ALL + checkSC2_ALL + checkSC1_ALL_Elective + checkSC2_ALL_Elective\r\n    // let totalS1 = checkS1_50 + checkS1_100 + checkS1_200 + checkS1_500 + checkS1_Elective50 + checkS1_Elective100 + checkS1_Elective200 + checkS1_Elective500\r\n    // let totalS2 = checkS2_50 + checkS2_100 + checkS2_200 + checkS2_500 + checkS2_Elective50 + checkS2_Elective100 + checkS2_Elective200 + checkS2_Elective500\r\n    \r\n    // if(totalSC != 0){\r\n    //     count +=1\r\n    // }\r\n    return count\r\n}\r\nvar checkTotalSoftContraints = checkTotalSoftContraint()\r\nconsole.log(\"Total Soft Constraint: \"+checkTotalSoftContraints)\r\n//----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nconst change100ToEmpty = (data) => {\r\n    for(let i = 0; i< data.length; i++){\r\n        if(data[i] == 100){\r\n            data[i] = [];\r\n        }\r\n    }\r\n    return data;\r\n}\r\n//let finalData = change100ToEmpty(AntArrCombine);\r\nlet finalData = change100ToEmpty(fullyCombine);\r\n\r\n\r\n// const checkMissingData = (data50,data100,data200,data500,dataE50,dataE100,dataE200,dataE500) => {\r\n//     let countData = []\r\n//     for(let i = 0; i< courseData[0].length;i++){\r\n//         for(let j = 0; j <courseData[0][i][7]; j++){\r\n//             countData.push(courseData[0][i]);\r\n//         }\r\n//     }\r\n\r\n//     let totalGenerateScheduleData = data50 + data100 + data200 + data500 + dataE50 + dataE100 + dataE200 + dataE500\r\n\r\n//     if(countData.length == totalGenerateScheduleData){\r\n  \r\n//     }else{\r\n\r\n//     }\r\n// }\r\n// //checkMissingData(checkAmount50,checkAmount100,checkAmount200,checkAmount500,checkAmountElective50,checkAmountElective100,checkAmountElective200,checkAmountElective500)\r\n\r\ncheckTotalHardContraintsAll = checkTotalHardContraints\r\ncheckTotalSoftContraintsAll = checkTotalSoftContraints\r\ntotalAmountofDataSlottedIn = checkAmount_combine\r\nfinalDataAll = []\r\nfinalDataAll.push(finalData)\r\nreturn {checkTotalHardContraints,checkTotalSoftContraints,finalData,checkAmount_combine}\r\n ////return {checkTotalHardContraints,checkTotalSoftContraints}\r\n}\r\n// for(let i = 1; i <= 1; i++){\r\n//     console.log(\"iteration: \" + i)\r\n//     let antSystemAlgo = antSystem();\r\n// }\r\n// -------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nlet trigger = 0\r\n\r\nconst iteration = () => {\r\n        antSystem()\r\n        let globalBestHS = checkTotalHardContraintsAll \r\n        let globalBestSS = checkTotalSoftContraintsAll\r\n        let globalBestScehdule = finalDataAll[0]\r\n        let checkTotalAmountDataset = totalAmountofData.length + 56\r\n        // let globalBestScehduleElective = finalDataAllElective[0]\r\n    for(let i= 1; i <= 3; i++){\r\n        antSystem()\r\n        let localBestHS = checkTotalHardContraintsAll \r\n        let localBestSS = checkTotalSoftContraintsAll\r\n        let localBestScehdule = finalDataAll[0]\r\n        //let globalBestHS = finalDataAll[0]\r\n        // let localBestScehduleElective = finalDataAllElective[0]\r\n            console.log(\"iteraion: \" + i)\r\n            // if(globalBestHS > localBestHS ){\r\n            //     globalBestHS = localBestHS\r\n            //     globalBestSS = localBestSS\r\n            //     globalBestScehdule = localBestScehdule\r\n            //     // globalBestScehduleElective = localBestScehduleElective\r\n            // }\r\n            if(localBestHS == 0 && localBestSS == 0 && checkTotalAmountDataset == totalAmountofDataSlottedIn){\r\n                console.log(\"iteraion: \" + i)\r\n                console.log(\"perfect solution is found\")\r\n                globalBestHS = 0\r\n                globalBestSS = 0\r\n                globalBestScehdule = localBestScehdule\r\n                console.log(\"Perfect Gloabal best HS: \"+globalBestHS)\r\n                console.log(\"Perfect Gloabal best SS: \" +globalBestSS)\r\n                //console.log(finalDataAll[0])\r\n                //return [finalDataAll[0], finalDataAllElective[0]]\r\n            }\r\n            else if(localBestHS == 0 && checkTotalAmountDataset == totalAmountofDataSlottedIn){\r\n                console.log(\"iteraion: \" + i)\r\n                console.log(\"workable solution is found\")\r\n                console.log(\"Workable Gloabal best HS: \"+localBestHS)\r\n                console.log(\"Workable Gloabal best SS: \" +localBestSS)\r\n                if(globalBestSS > localBestSS){\r\n                    globalBestHS = 0\r\n                    globalBestSS = localBestSS\r\n                    globalBestScehdule = localBestScehdule\r\n                    console.log(\"Updated Gloabal best HS: \"+globalBestHS)\r\n                    console.log(\"Updated Gloabal best SS: \" +globalBestSS)\r\n                }\r\n                //console.log(finalDataAll[0])\r\n                //return [finalDataAll[0], finalDataAllElective[0]]\r\n            }\r\n\r\n            if(i == 3 && globalBestHS == 0){\r\n                console.log(globalBestScehdule)\r\n                console.log(\"Final Gloabal best HS: \"+globalBestHS)\r\n                console.log(\"Final Gloabal best SS: \" +globalBestSS)\r\n                trigger = 1\r\n                MainData = globalBestScehdule\r\n                byLectureData = globalBestScehdule\r\n                byCourseData = globalBestScehdule\r\n                return [globalBestScehdule]\r\n            }\r\n    }\r\n    //return [finalDataAll[0], finalDataAllElective[0]]\r\n    // return [finalDataAll[0]]\r\n}\r\n//let interations = iteration()\r\niteration()\r\n//let presentableDataElective = []\r\n\r\nif(trigger == 1){\r\n    var t1 = performance.now()\r\n    disbaleButton = false\r\n    console.log(\"Duration: \" + (t1-t0))\r\n    //downloadBlob(csv, 'ModifiedAntSystem_GeneratedSchedule.csv', 'text/csv;charset=utf-8;')\r\n}else{\r\n    var t1 = performance.now()\r\n    console.log(\"Duration: \" + (t1-t0) + \" milliseconds\" )\r\n    alert(\"no workable solution found, please refersh until get workable solution\")\r\n}\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n        }\r\n\r\n        const mainGeneratedSchedule = () => {\r\n            const changeToPresentationData = (data) => {\r\n                //presentableData.push(data)\r\n                for(let i= 0; i <= data.length; i++){\r\n                    try {\r\n                            presentableData.push([data[i][1],data[i][6],data[i][11]])\r\n                    } catch (error) {\r\n                        \r\n                    }\r\n                }\r\n            }\r\n            changeToPresentationData(MainData)\r\n            \r\n            let allRoomName = []\r\n            for(let i = 0; i < roomData[0].length; i++){\r\n                allRoomName.push(roomData[0][i][0])\r\n            }\r\n            allRoomName.unshift(\"Room\");\r\n            if(allRoomName.pop() == undefined){\r\n            }\r\n            \r\n            \r\n            let weekday = [\r\n            'Mon[0800-0900]','Mon[0900-1000]','Mon[1000-1100]','Mon[1100-1200]','Mon[1200-1300]','Mon[1300-1400]','Mon[1400-1500]','Mon[1500-1600]','Mon[1600-1700]','Mon[1700-1800]',\r\n            'Tue[0800-0900]','Tue[0900-1000]','Tue[1000-1100]','Tue[1100-1200]','Tue[1200-1300]','Tue[1300-1400]','Tue[1400-1500]','Tue[1500-1600]','Tue[1600-1700]','Tue[1700-1800]',\r\n            'Wed[0800-0900]','Wed[0900-1000]','Wed[1000-1100]','Wed[1100-1200]','Wed[1200-1300]','Wed[1300-1400]','Wed[1400-1500]','Wed[1500-1600]','Wed[1600-1700]','Wed[1700-1800]',\r\n            'Thu[0800-0900]','Thu[0900-1000]','Thu[1000-1100]','Thu[1100-1200]','Thu[1200-1300]','Thu[1300-1400]','Thu[1400-1500]','Thu[1500-1600]','Thu[1600-1700]','Thu[1700-1800]',\r\n            'Fri[0800-0900]','Fri[0900-1000]','Fri[1000-1100]','Fri[1100-1200]','Fri[1200-1300]','Fri[1300-1400]','Fri[1400-1500]','Fri[1500-1600]','Fri[1600-1700]','Fri[1700-1800]',\r\n            ]\r\n            \r\n            \r\n            const create2dArray = (weekdayArray,partDay,arrayAll, partAll) => {\r\n                var tmp = [];\r\n            \r\n                for(var i = 0; i < weekdayArray.length; i += partDay) {\r\n                    tmp.push(weekdayArray.slice(i, i + partDay));\r\n                }\r\n                for(var i = 0; i < arrayAll.length; i += partAll) {\r\n                    tmp.push(arrayAll.slice(i, i + partAll));\r\n                }\r\n                return tmp;\r\n            }\r\n            let dataset = create2dArray(weekday,50,presentableData,50)\r\n            console.log(dataset);\r\n            \r\n            \r\n            \r\n            const insertRoomName = (roomData,array) => {\r\n                for(let i= 0; i<array.length; i++){\r\n                    array[i].unshift(roomData[i]);\r\n                }\r\n                return array;\r\n            }\r\n            \r\n            insertRoomName(allRoomName,dataset)\r\n            \r\n            \r\n            /** Convert a 2D array into a CSV string\r\n             */\r\n              function arrayToCsv(data){\r\n                //console.log(data)\r\n                return data.map(row =>\r\n                  row\r\n                  .map(String)  // convert every value to String\r\n                  .map(v => v.replaceAll('\"', '\"\"'))  // escape double colons\r\n                  .map(v => `\"${v}\"`)  // quote it\r\n                  .join(',')  // comma-separated\r\n                ).join('\\r\\n');  // rows starting on new lines\r\n              }\r\n            \r\n            let csv = arrayToCsv(\r\n                dataset\r\n            );\r\n            \r\n            function downloadBlob(content, filename, contentType) {\r\n                // Create a blob\r\n                var blob = new Blob([content], { type: contentType });\r\n                var url = URL.createObjectURL(blob);\r\n              \r\n                // Create a link to download it\r\n                var pom = document.createElement('a');\r\n                pom.href = url;\r\n                pom.setAttribute('download', filename);\r\n                pom.click();\r\n              }\r\n\r\n              downloadBlob(csv, 'ModifiedAntSystem_GeneratedSchedule.csv', 'text/csv;charset=utf-8;')\r\n        \r\n        }\r\n\r\n        const lecturerGeneratedSchedule = () => {\r\n            let testData = []\r\n            let i = 0\r\n            let LoopTable = []\r\n\r\n            for(let i = 0 ; i < notDuplicatesLecturerArray.length; i++){\r\n                //let dupeData = MainData\r\n                const dupeData = [...byLectureData]\r\n                //console.log(MainData);\r\n                testData = []\r\n\r\n                for(let x = 0; x < dupeData.length ; x++){\r\n                    //console.log(dupeData[0][x])\r\n                    try{\r\n                        //if(MainData[x] != undefined){\r\n                            if(notDuplicatesLecturerArray[i] == dupeData[x][5]){\r\n                                //dupeData[0][x] = []\r\n                                //testData.push(dupeData[0][x])\r\n                            }\r\n                            else{\r\n                                dupeData[x] = []\r\n                                //testData.push(dupeData[0][x])\r\n                            }\r\n                        //}\r\n                    }catch{}\r\n                }\r\n                    //testData = []\r\n                    testData.push(dupeData);\r\n                    //testData.push(notDuplicatesLecturerArray[i])\r\n                    //console.log(testData)\r\n\r\n                    const changeToPresentationData = (data) => {\r\n                        //presentableData.push(data)\r\n                        presentableDataLecturer = []\r\n                        for(let i= 0; i <= data.length; i++){\r\n                            try {\r\n                                    presentableDataLecturer.push([data[i][1],data[i][5],data[i][6]])\r\n                            } catch (error) {\r\n                                \r\n                            }\r\n                        }\r\n                    }\r\n                    changeToPresentationData(testData[0])\r\n        \r\n                    //console.log(presentableDataLecturer)\r\n                    let allRoomName = []\r\n                    for(let i = 0; i < roomData[0].length; i++){\r\n                        allRoomName.push(roomData[0][i][0])\r\n                    }\r\n                    allRoomName.unshift(\"Room\");\r\n                    if(allRoomName.pop() == undefined){\r\n                    }\r\n\r\n                    \r\n                    let weekday = [\r\n                    'Mon[0800-0900]','Mon[0900-1000]','Mon[1000-1100]','Mon[1100-1200]','Mon[1200-1300]','Mon[1300-1400]','Mon[1400-1500]','Mon[1500-1600]','Mon[1600-1700]','Mon[1700-1800]',\r\n                    'Tue[0800-0900]','Tue[0900-1000]','Tue[1000-1100]','Tue[1100-1200]','Tue[1200-1300]','Tue[1300-1400]','Tue[1400-1500]','Tue[1500-1600]','Tue[1600-1700]','Tue[1700-1800]',\r\n                    'Wed[0800-0900]','Wed[0900-1000]','Wed[1000-1100]','Wed[1100-1200]','Wed[1200-1300]','Wed[1300-1400]','Wed[1400-1500]','Wed[1500-1600]','Wed[1600-1700]','Wed[1700-1800]',\r\n                    'Thu[0800-0900]','Thu[0900-1000]','Thu[1000-1100]','Thu[1100-1200]','Thu[1200-1300]','Thu[1300-1400]','Thu[1400-1500]','Thu[1500-1600]','Thu[1600-1700]','Thu[1700-1800]',\r\n                    'Fri[0800-0900]','Fri[0900-1000]','Fri[1000-1100]','Fri[1100-1200]','Fri[1200-1300]','Fri[1300-1400]','Fri[1400-1500]','Fri[1500-1600]','Fri[1600-1700]','Fri[1700-1800]',\r\n                    ]\r\n                    \r\n                    const create2dArray = (weekdayArray,partDay,arrayAll, partAll) => {\r\n                        var tmp = [];\r\n                        for(var i = 0; i < weekdayArray.length; i += partDay) {\r\n                            tmp.push(weekdayArray.slice(i, i + partDay));\r\n                        }\r\n                        for(var i = 0; i < arrayAll.length; i += partAll) {\r\n                            tmp.push(arrayAll.slice(i, i + partAll));\r\n                        }\r\n\r\n\r\n                        return tmp;\r\n                    }\r\n                    let dataset = create2dArray(weekday,50,presentableDataLecturer,50)\r\n                    //console.log(dataset);\r\n\r\n                    const insertRoomName = (roomData,array) => {\r\n                        for(let i= 0; i<array.length; i++){\r\n                            array[i].unshift(roomData[i]);\r\n                        }\r\n                        //array.push(lecturer)\r\n                        return array;\r\n                    }\r\n                    \r\n                    insertRoomName(allRoomName,dataset)\r\n                    //LoopTable = []\r\n                    //LoopTable.push(notDuplicatesLecturerArray[i]);\r\n                    LoopTable.push(dataset);\r\n                }\r\n                //i++\r\n\r\n                console.log(LoopTable)\r\n                let csvData = []\r\n                for(let i = 0; i < LoopTable.length; i++){\r\n                    csvData.push([\"Lecturer Name\"])\r\n                    csvData.push([notDuplicatesLecturerArray[i]])\r\n                    csvData.push([\"Lecturer Code\"])\r\n                    csvData.push([notDuplicatesLecturerCodeArray[i]])\r\n                    for(let j =0; j< LoopTable[i].length; j++){\r\n                        csvData.push(LoopTable[i][j]);\r\n                    }\r\n                    csvData.push([])\r\n                }\r\n                console.log(csvData)\r\n            \r\n            \r\n            \r\n            /** Convert a 2D array into a CSV string\r\n             */\r\n              function arrayToCsv(data){\r\n                //console.log(data)\r\n                return data.map(row =>\r\n                  row\r\n                  .map(String)  // convert every value to String\r\n                  .map(v => v.replaceAll('\"', '\"\"'))  // escape double colons\r\n                  .map(v => `\"${v}\"`)  // quote it\r\n                  .join(',')  // comma-separated\r\n                ).join('\\r\\n');  // rows starting on new lines\r\n              }\r\n\r\n            let csv = arrayToCsv(\r\n                //dataset\r\n                //LoopTable\r\n                csvData\r\n            );\r\n            \r\n            function downloadBlob(content, filename, contentType) {\r\n                // Create a blob\r\n                var blob = new Blob([content], { type: contentType });\r\n                var url = URL.createObjectURL(blob);\r\n              \r\n                // Create a link to download it\r\n                var pom = document.createElement('a');\r\n                pom.href = url;\r\n                pom.setAttribute('download', filename);\r\n                pom.click();\r\n              }\r\n\r\n            downloadBlob(csv, 'ModifiedAntSystem_GeneratedSchedule_by_Lecturer.csv', 'text/csv;charset=utf-8;')\r\n            //console.log(MainData[x]);\r\n\r\n                \r\n        }\r\n\r\n        const courseGeneratedSchedule = () => {\r\n            let testData = []\r\n            let i = 0\r\n            let LoopTable = []\r\n\r\n            for(let i = 0 ; i < courseCodeArray.length; i++){\r\n                //let dupeData = MainData\r\n                const dupeData = [...byCourseData]\r\n                //console.log(MainData);\r\n                testData = []\r\n\r\n                for(let x = 0; x < dupeData.length ; x++){\r\n                    //console.log(dupeData[0][x])\r\n                    try{\r\n                        //if(MainData[x] != undefined){\r\n                            if(courseCodeArray[i] == dupeData[x][1]){\r\n                                //dupeData[0][x] = []\r\n                                //testData.push(dupeData[0][x])\r\n                            }\r\n                            else{\r\n                                dupeData[x] = []\r\n                                //testData.push(dupeData[0][x])\r\n                            }\r\n                        //}\r\n                    }catch{}\r\n                }\r\n                    //testData = []\r\n                    testData.push(dupeData);\r\n                    //testData.push(notDuplicatesLecturerArray[i])\r\n                    //console.log(testData)\r\n\r\n                    const changeToPresentationData = (data) => {\r\n                        //presentableData.push(data)\r\n                        presentableDataLecturer = []\r\n                        for(let i= 0; i <= data.length; i++){\r\n                            try {\r\n                                    presentableDataLecturer.push([data[i][1],data[i][6],data[i][11]])\r\n                            } catch (error) {\r\n                                \r\n                            }\r\n                        }\r\n                    }\r\n                    changeToPresentationData(testData[0])\r\n        \r\n                    //console.log(presentableDataLecturer)\r\n                    \r\n                    let allRoomName = []\r\n                    for(let i = 0; i < roomData[0].length; i++){\r\n                        allRoomName.push(roomData[0][i][0])\r\n                    }\r\n                    allRoomName.unshift(\"Room\");\r\n                    if(allRoomName.pop() == undefined){\r\n                    }\r\n                    \r\n                    \r\n                    let weekday = [\r\n                    'Mon[0800-0900]','Mon[0900-1000]','Mon[1000-1100]','Mon[1100-1200]','Mon[1200-1300]','Mon[1300-1400]','Mon[1400-1500]','Mon[1500-1600]','Mon[1600-1700]','Mon[1700-1800]',\r\n                    'Tue[0800-0900]','Tue[0900-1000]','Tue[1000-1100]','Tue[1100-1200]','Tue[1200-1300]','Tue[1300-1400]','Tue[1400-1500]','Tue[1500-1600]','Tue[1600-1700]','Tue[1700-1800]',\r\n                    'Wed[0800-0900]','Wed[0900-1000]','Wed[1000-1100]','Wed[1100-1200]','Wed[1200-1300]','Wed[1300-1400]','Wed[1400-1500]','Wed[1500-1600]','Wed[1600-1700]','Wed[1700-1800]',\r\n                    'Thu[0800-0900]','Thu[0900-1000]','Thu[1000-1100]','Thu[1100-1200]','Thu[1200-1300]','Thu[1300-1400]','Thu[1400-1500]','Thu[1500-1600]','Thu[1600-1700]','Thu[1700-1800]',\r\n                    'Fri[0800-0900]','Fri[0900-1000]','Fri[1000-1100]','Fri[1100-1200]','Fri[1200-1300]','Fri[1300-1400]','Fri[1400-1500]','Fri[1500-1600]','Fri[1600-1700]','Fri[1700-1800]',\r\n                    ]\r\n                    \r\n                    const create2dArray = (weekdayArray,partDay,arrayAll, partAll) => {\r\n                        var tmp = [];\r\n                        for(var i = 0; i < weekdayArray.length; i += partDay) {\r\n                            tmp.push(weekdayArray.slice(i, i + partDay));\r\n                        }\r\n                        for(var i = 0; i < arrayAll.length; i += partAll) {\r\n                            tmp.push(arrayAll.slice(i, i + partAll));\r\n                        }\r\n\r\n                        return tmp;\r\n                    }\r\n                    let dataset = create2dArray(weekday,50,presentableDataLecturer,50)\r\n                    //console.log(dataset);\r\n                    \r\n                    \r\n                    \r\n                    const insertRoomName = (roomData,array) => {\r\n                        for(let i= 0; i<array.length; i++){\r\n                            array[i].unshift(roomData[i]);\r\n                        }\r\n                        //array.push(lecturer)\r\n                        return array;\r\n                    }\r\n                    \r\n                    insertRoomName(allRoomName,dataset)\r\n                    //LoopTable = []\r\n                    //LoopTable.push(notDuplicatesLecturerArray[i]);\r\n                    LoopTable.push(dataset);\r\n                }\r\n                //i++\r\n\r\n                console.log(LoopTable)\r\n                let csvData = []\r\n                for(let i = 0; i < LoopTable.length; i++){\r\n                    csvData.push([\"Course Name\"])\r\n                    csvData.push([courseNameArray[i]])\r\n                    csvData.push([\"Course Couse\"])\r\n                    csvData.push([courseCodeArray[i]])\r\n                    for(let j =0; j< LoopTable[i].length; j++){\r\n                        csvData.push(LoopTable[i][j]);\r\n                    }\r\n                    csvData.push([])\r\n                }\r\n                console.log(csvData)\r\n            \r\n            \r\n            \r\n            /** Convert a 2D array into a CSV string\r\n             */\r\n              function arrayToCsv(data){\r\n                //console.log(data)\r\n                return data.map(row =>\r\n                  row\r\n                  .map(String)  // convert every value to String\r\n                  .map(v => v.replaceAll('\"', '\"\"'))  // escape double colons\r\n                  .map(v => `\"${v}\"`)  // quote it\r\n                  .join(',')  // comma-separated\r\n                ).join('\\r\\n');  // rows starting on new lines\r\n              }\r\n\r\n            let csv = arrayToCsv(\r\n                //dataset\r\n                //LoopTable\r\n                csvData\r\n            );\r\n            \r\n            function downloadBlob(content, filename, contentType) {\r\n                // Create a blob\r\n                var blob = new Blob([content], { type: contentType });\r\n                var url = URL.createObjectURL(blob);\r\n              \r\n                // Create a link to download it\r\n                var pom = document.createElement('a');\r\n                pom.href = url;\r\n                pom.setAttribute('download', filename);\r\n                pom.click();\r\n              }\r\n\r\n            downloadBlob(csv, 'ModifiedAntSystem_GeneratedSchedule_by_Course.csv', 'text/csv;charset=utf-8;')\r\n        }\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"generate-schedule\">\r\n                <h1>\r\n                    Please wait while generating schedule\r\n                </h1>\r\n                <button  onClick={mainGeneratedSchedule} disabled={disbaleButton}   className=\"generate-schedule-button\">Download Main Schedule</button>\r\n                <button  onClick={lecturerGeneratedSchedule} disabled={disbaleButton}  className=\"generate-schedule-button\">Download Schedule by Lecturer</button>\r\n                <button  onClick={courseGeneratedSchedule}  disabled={disbaleButton} className=\"generate-schedule-button\">Download Schedule by Course</button>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default ArraySchedule;"]},"metadata":{},"sourceType":"module"}