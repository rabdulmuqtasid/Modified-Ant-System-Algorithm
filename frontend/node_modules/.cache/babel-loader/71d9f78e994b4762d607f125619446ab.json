{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acit\\\\Desktop\\\\FYP Code\\\\FYP Code\\\\frontend\\\\src\\\\components\\\\RandomSchedule\\\\arraySchedule.js\";\nimport { create, find, forEach, indexOf } from \"lodash\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport _ from 'lodash';\nimport { CSVLink } from \"react-csv\";\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\nlet finalDataAll = [];\nlet finalDataAllElective = [];\nlet checkHardConstraintOutsite = 0;\nlet checkSoftConstraintOutsite = 0;\n\nconst ArraySchedule = props => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedFile, setLoaadedFile] = useState(false);\n  const [roomData, setroomData] = useState();\n  const [courseData, setcourseData] = useState();\n  const [CsvData, setCsvData] = useState(); // const [Keys, setKeys] = useState();\n  //const [uploadedData, setUploadedData] = useState([]);\n  //console.log(\"props dataset:\"+ props.test)\n\n  const userId = useParams().userId;\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875'); //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\n        //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\n\n        const responsedata = await response.json();\n        let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset); // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\n\n        const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Room'], Dataset['Size']]); //Extract Room\n\n        setroomData([ertRoom]);\n        const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'], Dataset['Course Code'], Dataset['Course Name'], Dataset['Year'], Dataset['Semester'], Dataset['Lecturer'], Dataset['Group'], Dataset['HMS'], Dataset['Programme Code'], Dataset['Slot1'], Dataset['Slot2']]); //Extract Enrollment Quota\n\n        setcourseData([ertCourse]);\n\n        if (!response.ok) {\n          throw new Error(responsedata.message);\n        }\n\n        setLoaadedFile(stringifyData);\n        setIsLoading(true);\n      } catch (err) {\n        console.log(err.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, [userId]);\n\n  if (!isLoading && loadedFile) {\n    const testData = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const EnrollmentQuota = [];\n    const CourseCode = [];\n    const HMS = [];\n    const lecturerData = [];\n    const roomName = [];\n    const roomSize = [];\n    const filterData50 = [];\n    const filterData100 = [];\n    const filterData200 = [];\n    const filterData500 = [];\n    const filterDataElective50 = [];\n    const filterDataElective100 = [];\n    const filterDataElective200 = [];\n    const filterDataElective500 = [];\n    const dupeData = [];\n    const room = [];\n    room.push(roomData[0]);\n    let hardConstraintViolated = 0;\n    let softConstraintViolated = 0; //console.log(courseData[0][0][1]);\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      let enrollment = [courseData[0][i][0]];\n      let code = [courseData[0][i][1]];\n      let hms = [courseData[0][i][7]];\n      let lecturer = [courseData[0][i][5]];\n      enrollment.reduce(function (results, item, index, array) {\n        results[index] = item;\n        EnrollmentQuota.push(item); //console.log(results)\n      }, {});\n      code.reduce(function (results, item, index, array) {\n        results[index] = item;\n        CourseCode.push(item); //console.log(results)\n      }, {});\n      hms.reduce(function (results, item, index, array) {\n        results[index] = item;\n        HMS.push(item); //console.log(results)\n      }, {});\n      lecturer.reduce(function (results, item, index, array) {\n        results[index] = item;\n        lecturerData.push(item); //console.log(results)\n      }, {});\n    }\n\n    for (let i = 0; i < roomData[0].length; i++) {\n      let name = [roomData[0][i][0]];\n      let size = [roomData[0][i][1]];\n      name.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomName.push(item); //console.log(results)\n      }, {});\n      size.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomSize.push(item); //console.log(results)\n      }, {});\n    }\n\n    const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\n    const notDuplicatesLecturer = lecturerData.filter((item, index) => index == lecturerData.indexOf(item));\n    notDuplicatesLecturer.pop(); //console.log(notDuplicatesLecturer)\n\n    let courseDataXElective = [];\n    let courseDataWithElective = [];\n    courseData[0].pop(); //saparate faculty course with the elective course\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      if (courseData[0][i][1].slice(0, 3) != 'TMU') {\n        courseData[0][i].splice();\n\n        if (courseData[0][i][1].slice(0, 3) != 'TMX') {\n          courseData[0][i].splice();\n          courseDataXElective.push(courseData[0][i]);\n        }\n      }\n    } //saparate elective course with the faculty course\n\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      if (courseData[0][i][1].slice(0, 3) == 'TMU' || courseData[0][i][1].slice(0, 3) == 'TMX') {\n        courseDataWithElective.push(courseData[0][i]);\n      }\n    } //insert data without elective courses into correct room capacity\n\n\n    for (let i = 0; i < courseDataXElective.length; i++) {\n      if (courseDataXElective[i][0] < 50) {\n        filterData50.push(courseDataXElective[i]);\n      }\n\n      if (courseDataXElective[i][0] >= 50 && courseDataXElective[i][0] < 100) {\n        filterData100.push(courseDataXElective[i]);\n      }\n\n      if (courseDataXElective[i][0] >= 100 && courseDataXElective[i][0] < 200) {\n        filterData200.push(courseDataXElective[i]);\n      }\n\n      if (courseDataXElective[i][0] >= 200 && courseDataXElective[i][0] < 500) {\n        filterData500.push(courseDataXElective[i]);\n      }\n    } //console.log(filterData50)\n    //insert data without faculty courses into correct room capacity\n\n\n    for (let i = 0; i < courseDataWithElective.length; i++) {\n      if (courseDataWithElective[i][0] < 50) {\n        filterDataElective50.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 50 && courseDataWithElective[i][0] < 100) {\n        filterDataElective100.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 100 && courseDataWithElective[i][0] < 200) {\n        filterDataElective200.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 200 && courseDataWithElective[i][0] < 500) {\n        filterDataElective500.push(courseDataWithElective[i]);\n      }\n    } // console.log(filterDataElective50);\n    // console.log(filterDataElective100);\n    // console.log(filterDataElective200);\n    // console.log(filterDataElective500);\n\n\n    let roomUnder50 = [];\n    let roomUnder100 = [];\n    let roomUnder200 = [];\n    let roomUnder500 = [];\n\n    const checkNumberofRoom = () => {\n      for (let i = 0; i < roomData[0].length; i++) {\n        let room = roomData[0][i][1]; //console.log(roomData[0][i][1]);\n\n        if (room < 50) {\n          roomUnder50.push(room);\n        } else if (room > 50 && room < 100) {\n          roomUnder100.push(room);\n        } else if (room > 100 && room < 200) {\n          roomUnder200.push(room);\n        } else if (room > 200) {\n          roomUnder500.push(room);\n        }\n      }\n    };\n\n    checkNumberofRoom();\n\n    const createArray = data => {\n      var result = [];\n\n      for (let i = 0; i < data; i++) {\n        result[i] = [];\n      }\n\n      return result;\n    };\n\n    let DataArray50 = roomUnder50.length * 38;\n    let DataArray100 = roomUnder100.length * 38;\n    let DataArray200 = roomUnder200.length * 38;\n    let DataArray500 = roomUnder500.length * 38;\n    let DataArrayElective50 = roomUnder50.length * 10;\n    let DataArrayElective100 = roomUnder100.length * 10;\n    let DataArrayElective200 = roomUnder200.length * 10;\n    let DataArrayElective500 = roomUnder500.length * 10; //----------------------------------------------------------------------------------------------------------------------------------------\n\n    var checkTotalHardContraintsAll = 0;\n    var checkTotalSoftContraintsAll = 0;\n\n    const antSystem = () => {\n      //______________________________________________________________________________________________________________________________________________\n      //Faculty courses\n      //create 1d array for dataset less than 50\n      const array1D50 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr50 = array1D50(DataArray50);\n      let insertedData50_Slot2_2 = [];\n      let insertedData50_Slot2_1 = [];\n\n      const AntAlgoInsert50 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterData50.length; x++) {\n          test.push(filterData50[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let b = 0;\n\n            if (b < totalRoom) {\n              try {\n                if (array[i][5] != 100 && array[i][5] == test[k][5]) {\n                  if (array[i + 38 * b] == 100) {\n                    array[i + 38 * b] = 0;\n                  }\n\n                  if (array[i - 38 * b] == 100) {\n                    array[i - 38 * b] = 0;\n                  }\n                }\n              } catch {}\n            }\n\n            b++;\n\n            if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n\n                  if (b < totalRoom) {\n                    if (array[i][5] != 100 && array[i][5] == test[k][5]) {\n                      if (array[i + 38 * b] == 100 && array[i + 37 * b] == 100) {\n                        array[i + 38 * b] = 0;\n                        array[i + 37 * b] = 0;\n                      }\n\n                      if (array[i - 38 * b] == 100 && array[i - 37 * b] == 100) {\n                        array[i - 38 * b] = 0;\n                        array[i - 37 * b] = 0;\n                      }\n                    }\n                  }\n\n                  b++; //const j = Math.floor(Math.random()*(i+1));\n\n                  if (array[i] == 100 && array[i - 1] == 100) {\n                    array[i] = array[j];\n                    array[i - 1] = array[j - 1];\n                    array[j] = test[k];\n                    array[j - 1] = test[k];\n                  } else if (array[i] == 100 && array[i + 1] == 100) {\n                    array[i] = array[j];\n                    array[i + 1] = array[j + 1];\n                    array[j] = test[k];\n                    array[j + 1] = test[k];\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  }\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n\n                  if (b < totalRoom) {\n                    if (array[i][5] != 100 && array[i][5] == test[k][5]) {\n                      if (array[i + 38 * b] == 100 && array[i + 39 * b] == 100) {\n                        array[i + 38 * b] = 0;\n                        array[i + 39 * b] = 0;\n                      }\n\n                      if (array[i - 38 * b] == 100 && array[i - 39 * b] == 100) {\n                        array[i - 38 * b] = 0;\n                        array[i - 39 * b] = 0;\n                      }\n                    }\n                  }\n\n                  b++; //const j = Math.floor(Math.random()*(i+1));\n\n                  if (array[i] == 100 && array[i - 1] == 100) {\n                    array[i] = array[j];\n                    array[i - 1] = array[j - 1];\n                    array[j] = test[k];\n                    array[j - 1] = test[k];\n                  } else if (array[i] == 100 && array[i + 1] == 100) {\n                    array[i] = array[j];\n                    array[i + 1] = array[j + 1];\n                    array[j] = test[k];\n                    array[j + 1] = test[k];\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  }\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  array[j + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  insertedData50_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  insertedData50_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = array[j];\n                  array[j] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              array[x] = remainderArraySlot1[k3];\n              array[x + 1] = remainderArraySlot1[k3];\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              array[x] = remainderArray[k2];\n              array[x + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData50_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData50_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedData50_Slot2_1.push(array[-1]);\n        }\n\n        return array;\n      };\n\n      var AntArrIns50 = AntAlgoInsert50(AntArr50); //console.log(AntArrIns50);\n\n      const slot2Equal1for50 = array => {\n        let k = 0;\n        let test2 = [];\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedData50_Slot2_1.length) {\n              array[x] = insertedData50_Slot2_1[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      let varchec50 = slot2Equal1for50(AntArr50);\n\n      const slot2Equal2for50 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedData50_Slot2_2.length) {\n              array[x] = insertedData50_Slot2_2[k];\n              array[x + 1] = insertedData50_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedData50_Slot2_1.push(array[-1]);\n        } else {}\n\n        return array;\n      };\n\n      slot2Equal2for50(AntArr50);\n      let reshuffle50 = [];\n      let notDupeShuffle50 = [];\n\n      const check1Teacher_50 = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n\n          try {\n            for (let i = 1; i < array.length; i++) {\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined && array[i + indexArray] != 0) {\n                try {\n                  if (array[i][5] == array[i + indexArray][5]) {\n                    reshuffle50.push([i + indexArray, array[i + indexArray]]);\n                  }\n\n                  if (array[i][6] == array[i + indexArray][6] && array[i][5] == array[i + indexArray][5]) {\n                    try {\n                      reshuffle50.push([i + indexArray, array[i + indexArray]]);\n                    } catch {}\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        for (let x = 0; x < reshuffle50.length; x++) {\n          try {\n            if (reshuffle50[x][0] != reshuffle50[x + 1][0]) {\n              notDupeShuffle50.push(reshuffle50[x]);\n            }\n          } catch {}\n        }\n\n        var last = reshuffle50.splice(-1)[0];\n        notDupeShuffle50.push(last);\n      };\n\n      check1Teacher_50(AntArr50);\n\n      const reshuffle50_50 = (data, array) => {\n        //console.log(data)\n        let k = 0;\n        let count = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < data.length; x++) {\n          for (let i = 0; i < array.length; i++) {\n            try {\n              if (data[x][0] == i) {\n                array[i] = 1;\n              }\n            } catch {}\n          }\n        }\n\n        for (let x = 0; x < data.length; x++) {\n          for (let i = 0; i < array.length; i++) {\n            try {\n              if (array[i] != 100) {\n                if (array[i][5] == data[k][1][5]) {\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[i + 38 * b] == 100) {\n                      array[i + 38 * b] = 0;\n                    }\n\n                    if (array[i - 38 * b] == 100) {\n                      array[i - 38 * b] = 0;\n                    }\n                  }\n                }\n              }\n            } catch {}\n          }\n        }\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 100) {\n            if (k < data.length) {\n              //count +=1\n              try {\n                if (data[k][1] != undefined) {\n                  array[i] = data[k][1];\n                }\n              } catch {}\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n\n          if (array[x] == 1) {\n            array[x] = 100;\n          }\n        } // console.log(\"count: \"+ count)\n\n      };\n\n      reshuffle50_50(notDupeShuffle50, AntArr50);\n\n      const checkAmountData50_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined && array[i] != 1) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_2 = checkAmountData50_2(AntArrIns50); // console.log(AntArrIns50)\n      // console.log(\"Amount of data: \" +checkAmount_2);\n\n      const checkAmountData50_0 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      }; // var checkAmount_0 = checkAmountData50_0(AntArrIns50)\n      // console.log(\"zero counter: \"+checkAmount_0);\n      //______________________________________________________________________________________________________________________________________________\n      //______________________________________________________________________________________________________________________________________________\n      //create 1d array for dataset more or equal to 500 and less than 100\n\n\n      const array1D100 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr100 = array1D100(DataArray100);\n      let insertedData100_Slot2_2 = [];\n      let insertedData100_Slot2_1 = [];\n\n      const AntAlgoInsert100 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterData100.length; x++) {\n          test.push(filterData100[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let b = 0;\n\n            if (b < totalRoom) {\n              try {\n                if (array[i][5] != 100 && array[i][5] == test[k][5]) {\n                  if (array[i + 38 * b] == 100) {\n                    array[i + 38 * b] = 0;\n                  }\n\n                  if (array[i - 38 * b] == 100) {\n                    array[i - 38 * b] = 0;\n                  }\n                }\n              } catch {}\n            }\n\n            b++;\n\n            if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n\n                  if (b < totalRoom) {\n                    if (array[i][5] != 100 && array[i][5] == test[k][5]) {\n                      if (array[i + 38 * b] == 100 && array[i + 37 * b] == 100) {\n                        array[i + 38 * b] = 0;\n                        array[i + 37 * b] = 0;\n                      }\n\n                      if (array[i - 38 * b] == 100 && array[i - 37 * b] == 100) {\n                        array[i - 38 * b] = 0;\n                        array[i - 37 * b] = 0;\n                      }\n                    }\n                  }\n\n                  b++; //const j = Math.floor(Math.random()*(i+1));\n\n                  if (array[i] == 100 && array[i - 1] == 100) {\n                    array[i] = array[j];\n                    array[i - 1] = array[j - 1];\n                    array[j] = test[k];\n                    array[j - 1] = test[k];\n                  } else if (array[i] == 100 && array[i + 1] == 100) {\n                    array[i] = array[j];\n                    array[i + 1] = array[j + 1];\n                    array[j] = test[k];\n                    array[j + 1] = test[k];\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  }\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n\n                  if (b < totalRoom) {\n                    if (array[i][5] != 100 && array[i][5] == test[k][5]) {\n                      if (array[i + 38 * b] == 100 && array[i + 39 * b] == 100) {\n                        array[i + 38 * b] = 0;\n                        array[i + 39 * b] = 0;\n                      }\n\n                      if (array[i - 38 * b] == 100 && array[i - 39 * b] == 100) {\n                        array[i - 38 * b] = 0;\n                        array[i - 39 * b] = 0;\n                      }\n                    }\n                  }\n\n                  b++; //const j = Math.floor(Math.random()*(i+1));\n\n                  if (array[i] == 100 && array[i - 1] == 100) {\n                    array[i] = array[j];\n                    array[i - 1] = array[j - 1];\n                    array[j] = test[k];\n                    array[j - 1] = test[k];\n                  } else if (array[i] == 100 && array[i + 1] == 100) {\n                    array[i] = array[j];\n                    array[i + 1] = array[j + 1];\n                    array[j] = test[k];\n                    array[j + 1] = test[k];\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  }\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  array[j + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  insertedData100_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  insertedData100_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = array[j];\n                  array[j] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              array[x] = remainderArraySlot1[k3];\n              array[x + 1] = remainderArraySlot1[k3];\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              array[x] = remainderArray[k2];\n              array[x + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData100_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData100_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedData100_Slot2_1.push(array[-1]);\n        }\n\n        return array;\n      };\n\n      var AntArrIns100 = AntAlgoInsert100(AntArr100); //console.log(AntArrIns100);\n\n      const slot2Equal1for100 = array => {\n        let k = 0;\n        let test2 = [];\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedData100_Slot2_1.length) {\n              array[x] = insertedData100_Slot2_1[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      let varchec100 = slot2Equal1for100(AntArr100);\n\n      const slot2Equal2for100 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedData100_Slot2_2.length) {\n              array[x] = insertedData100_Slot2_2[k];\n              array[x + 1] = insertedData100_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedData100_Slot2_1.push(array[-1]);\n        } else {}\n\n        return array;\n      };\n\n      slot2Equal2for100(AntArr100);\n      let reshuffle100 = [];\n      let notDupeShuffle100 = [];\n\n      const check1Teacher_100 = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n\n          try {\n            for (let i = 1; i < array.length; i++) {\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined && array[i + indexArray] != 0) {\n                try {\n                  if (array[i][5] == array[i + indexArray][5]) {\n                    reshuffle100.push([i + indexArray, array[i + indexArray]]);\n                  }\n\n                  if (array[i][6] == array[i + indexArray][6] && array[i][5] == array[i + indexArray][5]) {\n                    try {\n                      reshuffle100.push([i + indexArray, array[i + indexArray]]);\n                    } catch {}\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        for (let x = 0; x < reshuffle100.length; x++) {\n          try {\n            if (reshuffle100[x][0] != reshuffle100[x + 1][0]) {\n              notDupeShuffle100.push(reshuffle100[x]);\n            }\n          } catch {}\n        }\n\n        var last = reshuffle100.splice(-1)[0];\n        notDupeShuffle100.push(last);\n      };\n\n      check1Teacher_100(AntArr100);\n\n      const reshuffle100_100 = (data, array) => {\n        //console.log(data)\n        let k = 0;\n        let count = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < data.length; x++) {\n          for (let i = 0; i < array.length; i++) {\n            try {\n              if (data[x][0] == i) {\n                array[i] = 1;\n              }\n            } catch {}\n          }\n        }\n\n        for (let x = 0; x < data.length; x++) {\n          for (let i = 0; i < array.length; i++) {\n            try {\n              if (array[i] != 100) {\n                if (array[i][5] == data[k][1][5]) {\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[i + 38 * b] == 100) {\n                      array[i + 38 * b] = 0;\n                    }\n\n                    if (array[i - 38 * b] == 100) {\n                      array[i - 38 * b] = 0;\n                    }\n                  }\n                }\n              }\n            } catch {}\n          }\n        }\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 100) {\n            if (k < data.length) {\n              //count +=1\n              try {\n                if (data[k][1] != undefined) {\n                  array[i] = data[k][1];\n                }\n              } catch {}\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n\n          if (array[x] == 1) {\n            array[x] = 100;\n          }\n        } // console.log(\"count: \"+ count)\n\n      };\n\n      reshuffle100_100(notDupeShuffle100, AntArr100);\n\n      const checkAmountData100_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 100 && array[i] != 0 && array[i] != undefined && array[i] != 1) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_2 = checkAmountData100_2(AntArrIns100); // console.log(AntArrIns100)\n      // console.log(\"Amount of data: \" +checkAmount_2);\n\n      const checkAmountData100_0 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      }; // var checkAmount_0 = checkAmountData100_0(AntArrIns100)\n      // console.log(\"zero counter: \"+checkAmount_0);\n      //______________________________________________________________________________________________________________________________________________\n      //______________________________________________________________________________________________________________________________________________\n      //create 1d array for dataset more or equal to 100 and less than 200\n\n\n      const array1D200 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr200 = array1D200(DataArray200);\n      let insertedData200_Slot2_2 = [];\n      let insertedData200_Slot2_1 = [];\n\n      const AntAlgoInsert200 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterData200.length; x++) {\n          test.push(filterData200[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let b = 0;\n\n            if (b < totalRoom) {\n              try {\n                if (array[i][5] != 100 && array[i][5] == test[k][5]) {\n                  if (array[i + 38 * b] == 100) {\n                    array[i + 38 * b] = 0;\n                  }\n\n                  if (array[i - 38 * b] == 100) {\n                    array[i - 38 * b] = 0;\n                  }\n                }\n              } catch {}\n            }\n\n            b++;\n\n            if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n\n                  if (b < totalRoom) {\n                    if (array[i][5] != 100 && array[i][5] == test[k][5]) {\n                      if (array[i + 38 * b] == 100 && array[i + 37 * b] == 100) {\n                        array[i + 38 * b] = 0;\n                        array[i + 37 * b] = 0;\n                      }\n\n                      if (array[i - 38 * b] == 100 && array[i - 37 * b] == 100) {\n                        array[i - 38 * b] = 0;\n                        array[i - 37 * b] = 0;\n                      }\n                    }\n                  }\n\n                  b++; //const j = Math.floor(Math.random()*(i+1));\n\n                  if (array[i] == 100 && array[i - 1] == 100) {\n                    array[i] = array[j];\n                    array[i - 1] = array[j - 1];\n                    array[j] = test[k];\n                    array[j - 1] = test[k];\n                  } else if (array[i] == 100 && array[i + 1] == 100) {\n                    array[i] = array[j];\n                    array[i + 1] = array[j + 1];\n                    array[j] = test[k];\n                    array[j + 1] = test[k];\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  }\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n\n                  if (b < totalRoom) {\n                    if (array[i][5] != 100 && array[i][5] == test[k][5]) {\n                      if (array[i + 38 * b] == 100 && array[i + 39 * b] == 100) {\n                        array[i + 38 * b] = 0;\n                        array[i + 39 * b] = 0;\n                      }\n\n                      if (array[i - 38 * b] == 100 && array[i - 39 * b] == 100) {\n                        array[i - 38 * b] = 0;\n                        array[i - 39 * b] = 0;\n                      }\n                    }\n                  }\n\n                  b++; //const j = Math.floor(Math.random()*(i+1));\n\n                  if (array[i] == 100 && array[i - 1] == 100) {\n                    array[i] = array[j];\n                    array[i - 1] = array[j - 1];\n                    array[j] = test[k];\n                    array[j - 1] = test[k];\n                  } else if (array[i] == 100 && array[i + 1] == 100) {\n                    array[i] = array[j];\n                    array[i + 1] = array[j + 1];\n                    array[j] = test[k];\n                    array[j + 1] = test[k];\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  }\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  array[j + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  insertedData200_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  insertedData200_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = array[j];\n                  array[j] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              array[x] = remainderArraySlot1[k3];\n              array[x + 1] = remainderArraySlot1[k3];\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              array[x] = remainderArray[k2];\n              array[x + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData200_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData200_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedData200_Slot2_1.push(array[-1]);\n        }\n\n        return array;\n      };\n\n      var AntArrIns200 = AntAlgoInsert200(AntArr200); //console.log(AntArrIns200);\n\n      const slot2Equal1for200 = array => {\n        let k = 0;\n        let test2 = [];\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedData200_Slot2_1.length) {\n              array[x] = insertedData200_Slot2_1[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      let varchec200 = slot2Equal1for200(AntArr200);\n\n      const slot2Equal2for200 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedData200_Slot2_2.length) {\n              array[x] = insertedData200_Slot2_2[k];\n              array[x + 1] = insertedData200_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedData200_Slot2_1.push(array[-1]);\n        } else {}\n\n        return array;\n      };\n\n      slot2Equal2for200(AntArr200);\n      let reshuffle200 = [];\n      let notDupeShuffle200 = [];\n\n      const check1Teacher_200 = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n\n          try {\n            for (let i = 1; i < array.length; i++) {\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined && array[i + indexArray] != 0) {\n                try {\n                  if (array[i][5] == array[i + indexArray][5]) {\n                    reshuffle200.push([i + indexArray, array[i + indexArray]]);\n                  }\n\n                  if (array[i][6] == array[i + indexArray][6] && array[i][5] == array[i + indexArray][5]) {\n                    try {\n                      reshuffle200.push([i + indexArray, array[i + indexArray]]);\n                    } catch {}\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        for (let x = 0; x < reshuffle200.length; x++) {\n          try {\n            if (reshuffle200[x][0] != reshuffle200[x + 1][0]) {\n              notDupeShuffle200.push(reshuffle200[x]);\n            }\n          } catch {}\n        }\n\n        var last = reshuffle200.splice(-1)[0];\n        notDupeShuffle200.push(last);\n      };\n\n      check1Teacher_200(AntArr200);\n\n      const reshuffle200_200 = (data, array) => {\n        //console.log(data)\n        let k = 0;\n        let count = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < data.length; x++) {\n          for (let i = 0; i < array.length; i++) {\n            try {\n              if (data[x][0] == i) {\n                array[i] = 1;\n              }\n            } catch {}\n          }\n        }\n\n        for (let x = 0; x < data.length; x++) {\n          for (let i = 0; i < array.length; i++) {\n            try {\n              if (array[i] != 100) {\n                if (array[i][5] == data[k][1][5]) {\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[i + 38 * b] == 100) {\n                      array[i + 38 * b] = 0;\n                    }\n\n                    if (array[i - 38 * b] == 100) {\n                      array[i - 38 * b] = 0;\n                    }\n                  }\n                }\n              }\n            } catch {}\n          }\n        }\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 100) {\n            if (k < data.length) {\n              //count +=1\n              try {\n                if (data[k][1] != undefined) {\n                  array[i] = data[k][1];\n                }\n              } catch {}\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n\n          if (array[x] == 1) {\n            array[x] = 100;\n          }\n        } // console.log(\"count: \"+ count)\n\n      };\n\n      reshuffle200_200(notDupeShuffle200, AntArr200);\n\n      const checkAmountData200_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 200 && array[i] != 0 && array[i] != undefined && array[i] != 1) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_2 = checkAmountData200_2(AntArrIns200); // console.log(AntArrIns200)\n      // console.log(\"Amount of data: \" +checkAmount_2);\n\n      const checkAmountData200_0 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      }; // var checkAmount_0 = checkAmountData200_0(AntArrIns200)\n      // console.log(\"zero counter: \"+checkAmount_0);\n      //______________________________________________________________________________________________________________________________________________\n      //______________________________________________________________________________________________________________________________________________\n      //create 1d array for dataset more or equal to 200 \n\n\n      const array1D500 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr500 = array1D500(DataArray500);\n      let insertedData500_Slot2_2 = [];\n      let insertedData500_Slot2_1 = [];\n\n      const AntAlgoInsert500 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterData500.length; x++) {\n          test.push(filterData500[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let b = 0;\n\n            if (b < totalRoom) {\n              try {\n                if (array[i][5] != 100 && array[i][5] == test[k][5]) {\n                  if (array[i + 38 * b] == 100) {\n                    array[i + 38 * b] = 0;\n                  }\n\n                  if (array[i - 38 * b] == 100) {\n                    array[i - 38 * b] = 0;\n                  }\n                }\n              } catch {}\n            }\n\n            b++;\n\n            if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n\n                  if (b < totalRoom) {\n                    if (array[i][5] != 100 && array[i][5] == test[k][5]) {\n                      if (array[i + 38 * b] == 100 && array[i + 37 * b] == 100) {\n                        array[i + 38 * b] = 0;\n                        array[i + 37 * b] = 0;\n                      }\n\n                      if (array[i - 38 * b] == 100 && array[i - 37 * b] == 100) {\n                        array[i - 38 * b] = 0;\n                        array[i - 37 * b] = 0;\n                      }\n                    }\n                  }\n\n                  b++; //const j = Math.floor(Math.random()*(i+1));\n\n                  if (array[i] == 100 && array[i - 1] == 100) {\n                    array[i] = array[j];\n                    array[i - 1] = array[j - 1];\n                    array[j] = test[k];\n                    array[j - 1] = test[k];\n                  } else if (array[i] == 100 && array[i + 1] == 100) {\n                    array[i] = array[j];\n                    array[i + 1] = array[j + 1];\n                    array[j] = test[k];\n                    array[j + 1] = test[k];\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  }\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n\n                  if (b < totalRoom) {\n                    if (array[i][5] != 100 && array[i][5] == test[k][5]) {\n                      if (array[i + 38 * b] == 100 && array[i + 39 * b] == 100) {\n                        array[i + 38 * b] = 0;\n                        array[i + 39 * b] = 0;\n                      }\n\n                      if (array[i - 38 * b] == 100 && array[i - 39 * b] == 100) {\n                        array[i - 38 * b] = 0;\n                        array[i - 39 * b] = 0;\n                      }\n                    }\n                  }\n\n                  b++; //const j = Math.floor(Math.random()*(i+1));\n\n                  if (array[i] == 100 && array[i - 1] == 100) {\n                    array[i] = array[j];\n                    array[i - 1] = array[j - 1];\n                    array[j] = test[k];\n                    array[j - 1] = test[k];\n                  } else if (array[i] == 100 && array[i + 1] == 100) {\n                    array[i] = array[j];\n                    array[i + 1] = array[j + 1];\n                    array[j] = test[k];\n                    array[j + 1] = test[k];\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  }\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  array[j + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  insertedData500_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  insertedData500_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = array[j];\n                  array[j] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              array[x] = remainderArraySlot1[k3];\n              array[x + 1] = remainderArraySlot1[k3];\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              array[x] = remainderArray[k2];\n              array[x + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData500_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData500_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedData500_Slot2_1.push(array[-1]);\n        }\n\n        return array;\n      };\n\n      var AntArrIns500 = AntAlgoInsert500(AntArr500); //console.log(AntArrIns500);\n\n      const slot2Equal1for500 = array => {\n        let k = 0;\n        let test2 = [];\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedData500_Slot2_1.length) {\n              array[x] = insertedData500_Slot2_1[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      let varchec500 = slot2Equal1for500(AntArr500);\n\n      const slot2Equal2for500 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedData500_Slot2_2.length) {\n              array[x] = insertedData500_Slot2_2[k];\n              array[x + 1] = insertedData500_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedData500_Slot2_1.push(array[-1]);\n        } else {}\n\n        return array;\n      };\n\n      slot2Equal2for500(AntArr500);\n      let reshuffle500 = [];\n      let notDupeShuffle500 = [];\n\n      const check1Teacher_500 = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n\n          try {\n            for (let i = 1; i < array.length; i++) {\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined && array[i + indexArray] != 0) {\n                try {\n                  if (array[i][5] == array[i + indexArray][5]) {\n                    reshuffle500.push([i + indexArray, array[i + indexArray]]);\n                  }\n\n                  if (array[i][6] == array[i + indexArray][6] && array[i][5] == array[i + indexArray][5]) {\n                    try {\n                      reshuffle500.push([i + indexArray, array[i + indexArray]]);\n                    } catch {}\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        for (let x = 0; x < reshuffle500.length; x++) {\n          try {\n            if (reshuffle500[x][0] != reshuffle500[x + 1][0]) {\n              notDupeShuffle500.push(reshuffle500[x]);\n            }\n          } catch {}\n        }\n\n        var last = reshuffle500.splice(-1)[0];\n        notDupeShuffle500.push(last);\n      };\n\n      check1Teacher_500(AntArr500);\n\n      const reshuffle500_500 = (data, array) => {\n        //console.log(data)\n        let k = 0;\n        let count = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < data.length; x++) {\n          for (let i = 0; i < array.length; i++) {\n            try {\n              if (data[x][0] == i) {\n                array[i] = 1;\n              }\n            } catch {}\n          }\n        }\n\n        for (let x = 0; x < data.length; x++) {\n          for (let i = 0; i < array.length; i++) {\n            try {\n              if (array[i] != 100) {\n                if (array[i][5] == data[k][1][5]) {\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[i + 38 * b] == 100) {\n                      array[i + 38 * b] = 0;\n                    }\n\n                    if (array[i - 38 * b] == 100) {\n                      array[i - 38 * b] = 0;\n                    }\n                  }\n                }\n              }\n            } catch {}\n          }\n        }\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 100) {\n            if (k < data.length) {\n              //count +=1\n              try {\n                if (data[k][1] != undefined) {\n                  array[i] = data[k][1];\n                }\n              } catch {}\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n\n          if (array[x] == 1) {\n            array[x] = 100;\n          }\n        } // console.log(\"count: \"+ count)\n\n      };\n\n      reshuffle500_500(notDupeShuffle500, AntArr500);\n\n      const checkAmountData500_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 500 && array[i] != 0 && array[i] != undefined && array[i] != 1) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_2 = checkAmountData500_2(AntArrIns500); // console.log(AntArrIns500)\n      // console.log(\"Amount of data: \" +checkAmount_2);\n\n      const checkAmountData500_0 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      }; // var checkAmount_0 = checkAmountData500_0(AntArrIns500)\n      // console.log(\"zero counter: \"+checkAmount_0);\n      //______________________________________________________________________________________________________________________________________________\n      //___________________________________________________________________________________________________________________________________\n      //Elective Courses\n\n\n      const array1DElective50 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective50 = array1DElective50(DataArrayElective50);\n      let extraDataElective50_Slot2_2 = [];\n      let extraData50Elective_Slot2_1 = [];\n      let insertedDataElective50_Slot2_2 = [];\n      let insertedDataElective50_Slot2_1 = [];\n\n      const AntAlgoInsertElective50 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let k4 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let remainderArray3 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterDataElective50.length; x++) {\n          test.push(filterDataElective50[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let slot1 = test[k][9];\n            let slot2 = test[k][10];\n\n            if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100 && array[i - 1] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i - 1] = array[j - 1];\n                array[i + 1] = array[j + 1];\n                array[j] = test[k];\n                array[j - 1] = test[k];\n                array[j + 1] = test[k];\n              } else {\n                remainderArray3.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                //slot in slot1 = 2\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const z = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[z];\n                      array[i - 1] = array[z - 1];\n                      array[i] = test[k];\n                      array[i - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[z];\n                      array[i + 1] = array[z + 1];\n                      array[z] = test[k];\n                      array[z + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } //slot in slot1 = 2\n                else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const v = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[v];\n                      array[i - 1] = array[v - 1];\n                      array[v] = test[k];\n                      array[v - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[v];\n                      array[i + 1] = array[v + 1];\n                      array[v] = test[k];\n                      array[v + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        }\n\n        for (let z = 0; z < array.length; z++) {\n          for (let x = 0; x < remainderArraySlot1.length; x++) {\n            if (array[z] == remainderArraySlot1[x]) {\n              for (let b = 1; b <= totalRoom; b++) {\n                if (array[z + 38 * b] == 100 && array[z + 38 * b - 1] == 100) {\n                  array[z + 38 * b] = 0;\n                  array[z + 38 * b - 1] = 0;\n                }\n\n                if (array[z - 38 * b] == 100 && array[z - 38 * b - 1] == 100) {\n                  array[z - 38 * b] = 0;\n                  array[z - 38 * b - 1] = 0;\n                }\n              }\n            }\n          }\n        } //slot in 3\n\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 100 && array[i + 1] == 100 && array[i + 2] == 100) {\n            if (k4 < remainderArray3.length) {\n              array[i] = remainderArray3[k4];\n              array[i + 1] = remainderArray3[k4];\n              array[i + 2] = remainderArray3[k4];\n            }\n\n            k4++;\n          }\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedDataElective50_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedDataElective50_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const c = Math.floor(Math.random() * (x + 1));\n              array[x] = array[c];\n              array[x + 1] = array[c + 1];\n              array[c] = remainderArray[k2];\n              array[c + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 2) {\n                insertedDataElective50_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const b = Math.floor(Math.random() * (x + 1));\n              array[x] = array[b];\n              array[x + 1] = array[b + 1];\n              array[b] = remainderArray[k2];\n              array[b + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 2) {\n                insertedDataElective50_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        } //if there is array in -1, reslot in into the array\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedDataElective50_Slot2_1.push(array[-1]);\n        }\n\n        return array;\n      };\n\n      var AntArrInsElective50 = AntAlgoInsertElective50(AntArrElective50);\n\n      const slot2Equal1forElective50 = array => {\n        let k = 0;\n        let test2 = [];\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedDataElective50_Slot2_1.length) {\n              array[x] = insertedDataElective50_Slot2_1[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal1forElective50(AntArrElective50);\n\n      const slot2Equal2forElective50 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedDataElective50_Slot2_2.length) {\n              array[x] = insertedDataElective50_Slot2_2[k];\n              array[x + 1] = insertedDataElective50_Slot2_2[k];\n            } else {\n              if (insertedDataElective50_Slot2_2[k] != undefined) {\n                extraDataElective50_Slot2_2.push(insertedDataElective50_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < extraDataElective50_Slot2_2.length) {\n              array[x] = extraDataElective50_Slot2_2[k];\n              array[x + 1] = extraDataElective50_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2forElective50(AntArrElective50);\n      let reshuffleElectice50 = [];\n      let notDupeShuffleElective50 = [];\n\n      const checkHC_50_Elective = array => {\n        let count = 0;\n        let indexArray = 0;\n        let indexArray2 = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n\n          try {\n            for (let i = 1; i < array.length; i++) {\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined && array[i + indexArray] != 0) {\n                try {\n                  if (array[i][5] == array[i + indexArray][5]) {\n                    reshuffleElectice50.push([i + indexArray, array[i + indexArray]]);\n                  }\n\n                  if (array[i][6] == array[i + indexArray][6] && array[i][5] == array[i + indexArray][5]) {\n                    try {\n                      reshuffleElectice50.push([i + indexArray, array[i + indexArray]]);\n                    } catch {}\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        for (let x = 0; x < reshuffleElectice50.length; x++) {\n          try {\n            if (reshuffleElectice50[x][0] != reshuffleElectice50[x + 1][0]) {\n              notDupeShuffleElective50.push(reshuffleElectice50[x]);\n            }\n          } catch {}\n        }\n\n        reshuffleElectice50.pop(notDupeShuffleElective50);\n      };\n\n      checkHC_50_Elective(AntArrElective50);\n\n      const reshuffleElectice50_50 = (data, array) => {\n        let k = 0;\n        let count = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < data.length; x++) {\n          for (let i = 0; i < array.length; i++) {\n            try {\n              if (array[i] != undefined) {\n                if (data[x][0] == i) {\n                  array[i] = 0;\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[i + 38 * b] == 100) {\n                      array[i + 38 * b] = 0;\n                    }\n\n                    if (array[i - 38 * b] == 100) {\n                      array[i - 38 * b] = 0;\n                    }\n                  }\n                }\n              }\n            } catch {}\n          }\n        }\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 100) {\n            if (k < data.length) {\n              count += 1;\n              array[i] = data[k][1];\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n        } // console.log(\"count: \"+ count)\n\n      };\n\n      reshuffleElectice50_50(notDupeShuffleElective50, AntArrElective50);\n\n      const checkAmountData50_Elective_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_2 = checkAmountData50_Elective_2(AntArrInsElective50); // console.log(AntArrInsElective50)\n      // console.log(\"Amount of data: \"+checkAmount_2);\n      //___________________________________________________________________________________________________________________________________\n      //___________________________________________________________________________________________________________________________________\n\n      const array1DElective100 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective100 = array1DElective100(DataArrayElective100);\n      let extraDataElective100_Slot2_2 = [];\n      let extraData100Elective_Slot2_1 = [];\n      let insertedDataElective100_Slot2_2 = [];\n      let insertedDataElective100_Slot2_1 = [];\n\n      const AntAlgoInsertElective100 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let k4 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let remainderArray3 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterDataElective100.length; x++) {\n          test.push(filterDataElective100[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let slot1 = test[k][9];\n            let slot2 = test[k][10];\n\n            if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100 && array[i - 1] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i - 1] = array[j - 1];\n                array[i + 1] = array[j + 1];\n                array[j] = test[k];\n                array[j - 1] = test[k];\n                array[j + 1] = test[k];\n              } else {\n                remainderArray3.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                //slot in slot1 = 2\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const z = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[z];\n                      array[i - 1] = array[z - 1];\n                      array[i] = test[k];\n                      array[i - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[z];\n                      array[i + 1] = array[z + 1];\n                      array[z] = test[k];\n                      array[z + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } //slot in slot1 = 2\n                else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const v = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[v];\n                      array[i - 1] = array[v - 1];\n                      array[v] = test[k];\n                      array[v - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[v];\n                      array[i + 1] = array[v + 1];\n                      array[v] = test[k];\n                      array[v + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        }\n\n        for (let z = 0; z < array.length; z++) {\n          for (let x = 0; x < remainderArraySlot1.length; x++) {\n            if (array[z] == remainderArraySlot1[x]) {\n              for (let b = 1; b <= totalRoom; b++) {\n                if (array[z + 38 * b] == 100 && array[z + 38 * b - 1] == 100) {\n                  array[z + 38 * b] = 0;\n                  array[z + 38 * b - 1] = 0;\n                }\n\n                if (array[z - 38 * b] == 100 && array[z - 38 * b - 1] == 100) {\n                  array[z - 38 * b] = 0;\n                  array[z - 38 * b - 1] = 0;\n                }\n              }\n            }\n          }\n        } //slot in 3\n\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 100 && array[i + 1] == 100 && array[i + 2] == 100) {\n            if (k4 < remainderArray3.length) {\n              array[i] = remainderArray3[k4];\n              array[i + 1] = remainderArray3[k4];\n              array[i + 2] = remainderArray3[k4];\n            }\n\n            k4++;\n          }\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedDataElective100_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedDataElective100_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const c = Math.floor(Math.random() * (x + 1));\n              array[x] = array[c];\n              array[x + 1] = array[c + 1];\n              array[c] = remainderArray[k2];\n              array[c + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 2) {\n                insertedDataElective100_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const b = Math.floor(Math.random() * (x + 1));\n              array[x] = array[b];\n              array[x + 1] = array[b + 1];\n              array[b] = remainderArray[k2];\n              array[b + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 2) {\n                insertedDataElective100_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        } //if there is array in -1, reslot in into the array\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedDataElective100_Slot2_1.push(array[-1]);\n        }\n\n        return array;\n      };\n\n      var AntArrInsElective100 = AntAlgoInsertElective100(AntArrElective100);\n\n      const slot2Equal1forElective100 = array => {\n        let k = 0;\n        let test2 = [];\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedDataElective100_Slot2_1.length) {\n              array[x] = insertedDataElective100_Slot2_1[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal1forElective100(AntArrElective100);\n\n      const slot2Equal2forElective100 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedDataElective100_Slot2_2.length) {\n              array[x] = insertedDataElective100_Slot2_2[k];\n              array[x + 1] = insertedDataElective100_Slot2_2[k];\n            } else {\n              if (insertedDataElective100_Slot2_2[k] != undefined) {\n                extraDataElective100_Slot2_2.push(insertedDataElective100_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < extraDataElective100_Slot2_2.length) {\n              array[x] = extraDataElective100_Slot2_2[k];\n              array[x + 1] = extraDataElective100_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2forElective100(AntArrElective100);\n      let reshuffleElective100 = [];\n      let notDupeShuffleElective100 = [];\n\n      const checkHC_100_Elective = array => {\n        let count = 0;\n        let indexArray = 0;\n        let indexArray2 = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n\n          try {\n            for (let i = 1; i < array.length; i++) {\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined && array[i + indexArray] != 0) {\n                try {\n                  if (array[i][5] == array[i + indexArray][5]) {\n                    reshuffleElective100.push([i + indexArray, array[i + indexArray]]);\n                  }\n\n                  if (array[i][6] == array[i + indexArray][6] && array[i][5] == array[i + indexArray][5]) {\n                    try {\n                      reshuffleElective100.push([i + indexArray, array[i + indexArray]]);\n                    } catch {}\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        for (let x = 0; x < reshuffleElective100.length; x++) {\n          try {\n            if (reshuffleElective100[x][0] != reshuffleElective100[x + 1][0]) {\n              notDupeShuffleElective100.push(reshuffleElective100[x]);\n            }\n          } catch {}\n        }\n\n        reshuffleElective100.pop(notDupeShuffleElective100);\n      };\n\n      checkHC_100_Elective(AntArrElective100);\n\n      const reshuffleElective100_100 = (data, array) => {\n        let k = 0;\n        let count = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < data.length; x++) {\n          for (let i = 0; i < array.length; i++) {\n            try {\n              if (array[i] != undefined) {\n                if (data[x][0] == i) {\n                  array[i] = 0;\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[i + 38 * b] == 100) {\n                      array[i + 38 * b] = 0;\n                    }\n\n                    if (array[i - 38 * b] == 100) {\n                      array[i - 38 * b] = 0;\n                    }\n                  }\n                }\n              }\n            } catch {}\n          }\n        }\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 100) {\n            if (k < data.length) {\n              count += 1;\n              array[i] = data[k][1];\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n        } // console.log(\"count: \"+ count)\n\n      };\n\n      reshuffleElective100_100(notDupeShuffleElective100, AntArrElective100);\n\n      const checkAmountData100_Elective_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 100 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_2 = checkAmountData100_Elective_2(AntArrInsElective100); // console.log(AntArrInsElective100)\n      // console.log(\"Amount of data: \"+checkAmount_2);\n      //___________________________________________________________________________________________________________________________________\n      //___________________________________________________________________________________________________________________________________\n\n      const array1DElective200 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective200 = array1DElective200(DataArrayElective200);\n      let extraDataElective200_Slot2_2 = [];\n      let extraData200Elective_Slot2_1 = [];\n      let insertedDataElective200_Slot2_2 = [];\n      let insertedDataElective200_Slot2_1 = [];\n\n      const AntAlgoInsertElective200 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let k4 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let remainderArray3 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterDataElective200.length; x++) {\n          test.push(filterDataElective200[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let slot1 = test[k][9];\n            let slot2 = test[k][10];\n\n            if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100 && array[i - 1] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i - 1] = array[j - 1];\n                array[i + 1] = array[j + 1];\n                array[j] = test[k];\n                array[j - 1] = test[k];\n                array[j + 1] = test[k];\n              } else {\n                remainderArray3.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                //slot in slot1 = 2\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const z = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[z];\n                      array[i - 1] = array[z - 1];\n                      array[i] = test[k];\n                      array[i - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[z];\n                      array[i + 1] = array[z + 1];\n                      array[z] = test[k];\n                      array[z + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } //slot in slot1 = 2\n                else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const v = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[v];\n                      array[i - 1] = array[v - 1];\n                      array[v] = test[k];\n                      array[v - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[v];\n                      array[i + 1] = array[v + 1];\n                      array[v] = test[k];\n                      array[v + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        }\n\n        for (let z = 0; z < array.length; z++) {\n          for (let x = 0; x < remainderArraySlot1.length; x++) {\n            if (array[z] == remainderArraySlot1[x]) {\n              for (let b = 1; b <= totalRoom; b++) {\n                if (array[z + 38 * b] == 100 && array[z + 38 * b - 1] == 100) {\n                  array[z + 38 * b] = 0;\n                  array[z + 38 * b - 1] = 0;\n                }\n\n                if (array[z - 38 * b] == 100 && array[z - 38 * b - 1] == 100) {\n                  array[z - 38 * b] = 0;\n                  array[z - 38 * b - 1] = 0;\n                }\n              }\n            }\n          }\n        } //slot in 3\n\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 100 && array[i + 1] == 100 && array[i + 2] == 100) {\n            if (k4 < remainderArray3.length) {\n              array[i] = remainderArray3[k4];\n              array[i + 1] = remainderArray3[k4];\n              array[i + 2] = remainderArray3[k4];\n            }\n\n            k4++;\n          }\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedDataElective200_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedDataElective200_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const c = Math.floor(Math.random() * (x + 1));\n              array[x] = array[c];\n              array[x + 1] = array[c + 1];\n              array[c] = remainderArray[k2];\n              array[c + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 2) {\n                insertedDataElective200_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const b = Math.floor(Math.random() * (x + 1));\n              array[x] = array[b];\n              array[x + 1] = array[b + 1];\n              array[b] = remainderArray[k2];\n              array[b + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 2) {\n                insertedDataElective200_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        } //if there is array in -1, reslot in into the array\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedDataElective200_Slot2_1.push(array[-1]);\n        }\n\n        return array;\n      };\n\n      var AntArrInsElective200 = AntAlgoInsertElective200(AntArrElective200);\n\n      const slot2Equal1forElective200 = array => {\n        let k = 0;\n        let test2 = [];\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedDataElective200_Slot2_1.length) {\n              array[x] = insertedDataElective200_Slot2_1[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal1forElective200(AntArrElective200);\n\n      const slot2Equal2forElective200 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedDataElective200_Slot2_2.length) {\n              array[x] = insertedDataElective200_Slot2_2[k];\n              array[x + 1] = insertedDataElective200_Slot2_2[k];\n            } else {\n              if (insertedDataElective200_Slot2_2[k] != undefined) {\n                extraDataElective200_Slot2_2.push(insertedDataElective200_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < extraDataElective200_Slot2_2.length) {\n              array[x] = extraDataElective200_Slot2_2[k];\n              array[x + 1] = extraDataElective200_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2forElective200(AntArrElective200);\n      let reshuffleElective200 = [];\n      let notDupeShuffleElective200 = [];\n\n      const checkHC_200_Elective = array => {\n        let count = 0;\n        let indexArray = 0;\n        let indexArray2 = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n\n          try {\n            for (let i = 1; i < array.length; i++) {\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined && array[i + indexArray] != 0) {\n                try {\n                  if (array[i][5] == array[i + indexArray][5]) {\n                    reshuffleElective200.push([i + indexArray, array[i + indexArray]]);\n                  }\n\n                  if (array[i][6] == array[i + indexArray][6] && array[i][5] == array[i + indexArray][5]) {\n                    try {\n                      reshuffleElective200.push([i + indexArray, array[i + indexArray]]);\n                    } catch {}\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        for (let x = 0; x < reshuffleElective200.length; x++) {\n          try {\n            if (reshuffleElective200[x][0] != reshuffleElective200[x + 1][0]) {\n              notDupeShuffleElective200.push(reshuffleElective200[x]);\n            }\n          } catch {}\n        }\n\n        reshuffleElective200.pop(notDupeShuffleElective200);\n      };\n\n      checkHC_200_Elective(AntArrElective200);\n\n      const reshuffleElective200_200 = (data, array) => {\n        let k = 0;\n        let count = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < data.length; x++) {\n          for (let i = 0; i < array.length; i++) {\n            try {\n              if (array[i] != undefined) {\n                if (data[x][0] == i) {\n                  array[i] = 0;\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[i + 38 * b] == 100) {\n                      array[i + 38 * b] = 0;\n                    }\n\n                    if (array[i - 38 * b] == 100) {\n                      array[i - 38 * b] = 0;\n                    }\n                  }\n                }\n              }\n            } catch {}\n          }\n        }\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 100) {\n            if (k < data.length) {\n              count += 1;\n              array[i] = data[k][1];\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n        } // console.log(\"count: \"+ count)\n\n      };\n\n      reshuffleElective200_200(notDupeShuffleElective200, AntArrElective200);\n\n      const checkAmountData200_Elective_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 200 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_2 = checkAmountData200_Elective_2(AntArrInsElective200); // console.log(AntArrInsElective200)\n      // console.log(\"Amount of data: \"+checkAmount_2);\n      //___________________________________________________________________________________________________________________________________\n      //___________________________________________________________________________________________________________________________________\n\n      const array1DElective500 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective500 = array1DElective500(DataArrayElective500);\n      let extraDataElective500_Slot2_2 = [];\n      let extraData500Elective_Slot2_1 = [];\n      let insertedDataElective500_Slot2_2 = [];\n      let insertedDataElective500_Slot2_1 = [];\n\n      const AntAlgoInsertElective500 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let k4 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let remainderArray3 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterDataElective500.length; x++) {\n          test.push(filterDataElective500[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let slot1 = test[k][9];\n            let slot2 = test[k][10];\n\n            if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100 && array[i - 1] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i - 1] = array[j - 1];\n                array[i + 1] = array[j + 1];\n                array[j] = test[k];\n                array[j - 1] = test[k];\n                array[j + 1] = test[k];\n              } else {\n                remainderArray3.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                //slot in slot1 = 2\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const z = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[z];\n                      array[i - 1] = array[z - 1];\n                      array[i] = test[k];\n                      array[i - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[z];\n                      array[i + 1] = array[z + 1];\n                      array[z] = test[k];\n                      array[z + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } //slot in slot1 = 2\n                else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const v = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[v];\n                      array[i - 1] = array[v - 1];\n                      array[v] = test[k];\n                      array[v - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[v];\n                      array[i + 1] = array[v + 1];\n                      array[v] = test[k];\n                      array[v + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        }\n\n        for (let z = 0; z < array.length; z++) {\n          for (let x = 0; x < remainderArraySlot1.length; x++) {\n            if (array[z] == remainderArraySlot1[x]) {\n              for (let b = 1; b <= totalRoom; b++) {\n                if (array[z + 38 * b] == 100 && array[z + 38 * b - 1] == 100) {\n                  array[z + 38 * b] = 0;\n                  array[z + 38 * b - 1] = 0;\n                }\n\n                if (array[z - 38 * b] == 100 && array[z - 38 * b - 1] == 100) {\n                  array[z - 38 * b] = 0;\n                  array[z - 38 * b - 1] = 0;\n                }\n              }\n            }\n          }\n        } //slot in 3\n\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 100 && array[i + 1] == 100 && array[i + 2] == 100) {\n            if (k4 < remainderArray3.length) {\n              array[i] = remainderArray3[k4];\n              array[i + 1] = remainderArray3[k4];\n              array[i + 2] = remainderArray3[k4];\n            }\n\n            k4++;\n          }\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedDataElective500_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedDataElective500_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const c = Math.floor(Math.random() * (x + 1));\n              array[x] = array[c];\n              array[x + 1] = array[c + 1];\n              array[c] = remainderArray[k2];\n              array[c + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 2) {\n                insertedDataElective500_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const b = Math.floor(Math.random() * (x + 1));\n              array[x] = array[b];\n              array[x + 1] = array[b + 1];\n              array[b] = remainderArray[k2];\n              array[b + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 2) {\n                insertedDataElective500_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        } //if there is array in -1, reslot in into the array\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedDataElective500_Slot2_1.push(array[-1]);\n        }\n\n        return array;\n      };\n\n      var AntArrInsElective500 = AntAlgoInsertElective500(AntArrElective500);\n\n      const slot2Equal1forElective500 = array => {\n        let k = 0;\n        let test2 = [];\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedDataElective500_Slot2_1.length) {\n              array[x] = insertedDataElective500_Slot2_1[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal1forElective500(AntArrElective500);\n\n      const slot2Equal2forElective500 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedDataElective500_Slot2_2.length) {\n              array[x] = insertedDataElective500_Slot2_2[k];\n              array[x + 1] = insertedDataElective500_Slot2_2[k];\n            } else {\n              if (insertedDataElective500_Slot2_2[k] != undefined) {\n                extraDataElective500_Slot2_2.push(insertedDataElective500_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < extraDataElective500_Slot2_2.length) {\n              array[x] = extraDataElective500_Slot2_2[k];\n              array[x + 1] = extraDataElective500_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2forElective500(AntArrElective500);\n      let reshuffleElective500 = [];\n      let notDupeShuffleElective500 = [];\n\n      const checkHC_500_Elective = array => {\n        let count = 0;\n        let indexArray = 0;\n        let indexArray2 = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n\n          try {\n            for (let i = 1; i < array.length; i++) {\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined && array[i + indexArray] != 0) {\n                try {\n                  if (array[i][5] == array[i + indexArray][5]) {\n                    reshuffleElective500.push([i + indexArray, array[i + indexArray]]);\n                  }\n\n                  if (array[i][6] == array[i + indexArray][6] && array[i][5] == array[i + indexArray][5]) {\n                    try {\n                      reshuffleElective500.push([i + indexArray, array[i + indexArray]]);\n                    } catch {}\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        for (let x = 0; x < reshuffleElective500.length; x++) {\n          try {\n            if (reshuffleElective500[x][0] != reshuffleElective500[x + 1][0]) {\n              notDupeShuffleElective500.push(reshuffleElective500[x]);\n            }\n          } catch {}\n        }\n\n        reshuffleElective500.pop(notDupeShuffleElective500);\n      };\n\n      checkHC_500_Elective(AntArrElective500);\n\n      const reshuffleElective500_500 = (data, array) => {\n        let k = 0;\n        let count = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < data.length; x++) {\n          for (let i = 0; i < array.length; i++) {\n            try {\n              if (array[i] != undefined) {\n                if (data[x][0] == i) {\n                  array[i] = 0;\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[i + 38 * b] == 100) {\n                      array[i + 38 * b] = 0;\n                    }\n\n                    if (array[i - 38 * b] == 100) {\n                      array[i - 38 * b] = 0;\n                    }\n                  }\n                }\n              }\n            } catch {}\n          }\n        }\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 100) {\n            if (k < data.length) {\n              count += 1;\n              array[i] = data[k][1];\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n        } // console.log(\"count: \"+ count)\n\n      };\n\n      reshuffleElective500_500(notDupeShuffleElective500, AntArrElective500);\n\n      const checkAmountData500_ELective_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 500 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_2 = checkAmountData500_ELective_2(AntArrInsElective500); // console.log(AntArrInsElective500)\n      // console.log(\"Amount of data: \"+checkAmount_2);\n      //___________________________________________________________________________________________________________________________________\n      //______________________________________________________________________________________________________________________________________________\n      //---------------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------------\n\n      let combineData = [];\n      let combineElectiveData = []; //Combine all dataset\n\n      const combine = (data1, data2, data3, data4) => {\n        for (let i = 0; i < data1.length; i++) {\n          combineData.push(data1[i]);\n        }\n\n        for (let i = 0; i < data2.length; i++) {\n          combineData.push(data2[i]);\n        }\n\n        for (let i = 0; i < data3.length; i++) {\n          combineData.push(data3[i]);\n        }\n\n        for (let i = 0; i < data4.length; i++) {\n          combineData.push(data4[i]);\n        }\n\n        return combineData;\n      };\n\n      let dataCombine = combine(AntArr50, AntArr100, AntArr200, AntArr500); //combine elective data\n\n      const combineElective = (data1, data2, data3, data4) => {\n        for (let i = 0; i < data1.length; i++) {\n          combineElectiveData.push(data1[i]);\n        }\n\n        for (let i = 0; i < data2.length; i++) {\n          combineElectiveData.push(data2[i]);\n        }\n\n        for (let i = 0; i < data3.length; i++) {\n          combineElectiveData.push(data3[i]);\n        }\n\n        for (let i = 0; i < data4.length; i++) {\n          combineElectiveData.push(data4[i]);\n        }\n\n        return combineElectiveData;\n      };\n\n      let dataCombineElective = combineElective(AntArrElective50, AntArrElective100, AntArrElective200, AntArrElective500); //console.log(dataCombine)\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n      // Hard Constraint \n      // H1: No student attend more than one class/ event at the same time\n      // H2: The room is large enough to accomodate all of the student in attendace while also meeting the requirement \n      // H3: At any given time, each room can onle have one course booked\n      // H4: No student attend class during 12:00 pm -2:00 due to solat jumaat\n      // H5: One teacher can only teach one class at one time.\n      //Check for the H1 violation: same group attend more than 1 class at 1 time\n\n      const check1Group = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 37;\n        }\n\n        for (let x = 1; x <= totalRoom; x++) {\n          try {\n            //for(let x= 1 ; x <= totalRoom ; x++){\n            for (let i = 0; i < array.length; i++) {\n              indexArray = x * 37;\n\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined) {\n                try {\n                  //if(array[i][6] == array[i+indexArray][6] && array[i+1][6] == array[i+indexArray+1][6] && array[i][5] == array[i+indexArray][5] && array[i+1][5] == array[i+indexArray+1][5]){\n                  if (array[i][6] == array[i + indexArray][6] && array[i][5] == array[i + indexArray][5]) {\n                    try {\n                      //console.log(array[i])\n                      //console.log(array[i+indexArray])\n                      count += 1;\n                    } catch {}\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH1_ALL = check1Group(dataCombine);\n      console.log(checkH1_ALL);\n      var checkH1_ALLElective = check1Group(dataCombineElective); //Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\n\n      const checkRoomQuota = array => {\n        let count = 0;\n        return count;\n      };\n\n      var checkH2_ALL = checkRoomQuota(dataCombine);\n      var checkH2_ALLElective = checkRoomQuota(dataCombineElective); //Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\n\n      const checkSolatJummat = array => {\n        let count = 0;\n        return count;\n      };\n\n      var checkH4_ALL = checkSolatJummat(dataCombine);\n      var checkH4_ALLElective = checkSolatJummat(dataCombineElective); //Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\n\n      const check1Teacher = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n\n          try {\n            for (let i = 1; i < array.length; i++) {\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined) {\n                try {\n                  if (array[i][5] == array[i + indexArray][5]) {\n                    console.log(array[i]);\n                    console.log(array[i + indexArray]);\n                    count += 1;\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH5_ALL = check1Teacher(dataCombine);\n      console.log(checkH5_ALL);\n      var checkH5_ALLElective = check1Group(dataCombineElective); //----------------------------------------------------------------------------------------------------------------------------------------\n      // Soft Constraint \n      // S1: A student has a class schedule toward the end of the day\n      // S2: A student have more than two class in a row\n      //Check for the S1 violation: student have class at the end of the day\n\n      const checkEndOfClass = array => {\n        let count = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          let indexArray = x * 37;\n\n          if (array[indexArray] != 100) {\n            count = 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkS1_50 = checkEndOfClass(AntArr50);\n      var checkS1_100 = checkEndOfClass(AntArr100);\n      var checkS1_200 = checkEndOfClass(AntArr200);\n      var checkS1_500 = checkEndOfClass(AntArr500);\n      var checkS1_Elective50 = checkEndOfClass(AntArrElective50);\n      var checkS1_Elective100 = checkEndOfClass(AntArrElective100);\n      var checkS1_Elective200 = checkEndOfClass(AntArrElective200);\n      var checkS1_Elective500 = checkEndOfClass(AntArrElective500); //Check for the S2 violation: teacher have 2 class in a row\n\n      const check2ClassInARow = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          try {\n            if (array[i][5] != undefined && array[i + 3][5] != undefined && array[i + 2][5] != undefined && array[i + 4][5] != undefined) {\n              if (array[i][5] == array[i + 3][5] && array[i + 2][5] == array[i + 4][5]) {\n                count = 1;\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkS2_50 = check2ClassInARow(AntArr50);\n      var checkS2_100 = check2ClassInARow(AntArr100);\n      var checkS2_200 = check2ClassInARow(AntArr200);\n      var checkS2_500 = check2ClassInARow(AntArr500);\n      var checkS2_Elective50 = check2ClassInARow(AntArrElective50);\n      var checkS2_Elective100 = check2ClassInARow(AntArrElective100);\n      var checkS2_Elective200 = check2ClassInARow(AntArrElective200);\n      var checkS2_Elective500 = check2ClassInARow(AntArrElective500); //----------------------------------------------------------------------------------------------------------------------------------------------\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n      //Check total Hard Constraint\n\n      const checkTotalHardContraint = () => {\n        let count = 0;\n        let totalH1 = checkH1_ALL;\n        let totalH2 = checkH2_ALL;\n        let totalH4 = checkH4_ALL;\n        let totalH5 = checkH5_ALL;\n        let totalH1_Elective = checkH1_ALLElective;\n        let totalH2_Elective = checkH2_ALLElective;\n        let totalH4_Elective = checkH4_ALLElective;\n        let totalH5_Elective = checkH5_ALLElective;\n        let totalHC = totalH1 + totalH2 + totalH4 + totalH5 + totalH1_Elective + totalH2_Elective + totalH4_Elective + totalH5_Elective; //let totalHC = totalH1 + totalH2 + totalH4 + totalH5 \n\n        if (totalHC != 0) {\n          count += 1;\n        }\n\n        return count;\n      };\n\n      var checkTotalHardContraints = checkTotalHardContraint(); //console.log(\"Total Hard Constraint: \"+checkTotalHardContraints)\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n\n      const checkTotalSoftContraint = () => {\n        let count = 0;\n        let totalS1 = checkS1_50 + checkS1_100 + checkS1_200 + checkS1_500 + checkS1_Elective50 + checkS1_Elective100 + checkS1_Elective200 + checkS1_Elective500;\n        let totalS2 = checkS2_50 + checkS2_100 + checkS2_200 + checkS2_500 + checkS2_Elective50 + checkS2_Elective100 + checkS2_Elective200 + checkS2_Elective500;\n\n        if (totalS1 != 0) {\n          count += 1;\n        }\n\n        if (totalS2 != 0) {\n          count += 1;\n        }\n\n        return count;\n      };\n\n      var checkTotalSoftContraints = checkTotalSoftContraint(); //console.log(\"Total Soft Constraint: \"+checkTotalSoftContraints)\n      //----------------------------------------------------------------------------------------------------------------------------------------------\n\n      const change100ToEmpty = data => {\n        for (let i = 0; i < data.length; i++) {\n          if (data[i] == 100) {\n            data[i] = [];\n          }\n        }\n\n        return data;\n      };\n\n      let finalData = change100ToEmpty(combineData);\n\n      const change100ToEmptyElective = data => {\n        for (let i = 0; i < data.length; i++) {\n          if (data[i] == 100) {\n            data[i] = [];\n          }\n        }\n\n        return data;\n      };\n\n      let finalDataElective = change100ToEmptyElective(combineElectiveData);\n\n      const checkMissingData = (data50, data100, data200, data500, dataE50, dataE100, dataE200, dataE500) => {\n        let countData = [];\n\n        for (let i = 0; i < courseData[0].length; i++) {\n          for (let j = 0; j < courseData[0][i][7]; j++) {\n            countData.push(courseData[0][i]);\n          }\n        }\n\n        let totalGenerateScheduleData = data50 + data100 + data200 + data500 + dataE50 + dataE100 + dataE200 + dataE500;\n\n        if (countData.length == totalGenerateScheduleData) {} else {}\n      }; //checkMissingData(checkAmount50,checkAmount100,checkAmount200,checkAmount500,checkAmountElective50,checkAmountElective100,checkAmountElective200,checkAmountElective500)\n\n\n      checkTotalHardContraintsAll = checkTotalHardContraints;\n      checkTotalSoftContraintsAll = checkTotalSoftContraints;\n      finalDataAll.push(finalData);\n      finalDataAllElective.push(finalDataElective);\n      return {\n        checkTotalHardContraints,\n        checkTotalSoftContraints,\n        finalData,\n        finalDataAllElective\n      };\n    };\n\n    let antSystemAlgo = antSystem(); // -------------------------------------------------------------------------------------------------------------------------------------------\n\n    let trigger = 0;\n\n    const iteration = () => {\n      antSystem();\n      let globalBestHS = checkTotalHardContraintsAll;\n      let globalBestSS = checkTotalSoftContraintsAll;\n      let globalBestScehdule = finalDataAll[0];\n      let globalBestScehduleElective = finalDataAllElective[0];\n\n      for (let i = 1; i <= 1; i++) {\n        antSystem();\n        let localBestHS = checkTotalHardContraintsAll;\n        let localBestSS = checkTotalSoftContraintsAll;\n        let localBestScehdule = finalDataAll[0];\n        let localBestScehduleElective = finalDataAllElective[0];\n        console.log(\"iteraion: \" + i);\n\n        if (globalBestHS > localBestHS) {\n          globalBestHS = localBestHS;\n          globalBestSS = localBestSS;\n          globalBestScehdule = localBestScehdule;\n          globalBestScehduleElective = localBestScehduleElective;\n        }\n\n        if (localBestHS == 0) {\n          console.log(\"iteraion: \" + i);\n          console.log(\"workable solution is found\");\n          globalBestHS = localBestHS;\n          globalBestSS = localBestSS;\n          globalBestScehdule = localBestScehdule;\n          globalBestScehduleElective = localBestScehduleElective;\n          console.log(\"Workable Gloabal best HS: \" + globalBestHS);\n          console.log(\"Workable Gloabal best SS: \" + globalBestSS); //console.log(finalDataAll[0])\n\n          trigger = 1;\n          return [finalDataAll[0], finalDataAllElective[0]];\n        } else if (localBestHS == 0 && localBestSS == 0) {\n          console.log(\"iteraion: \" + i);\n          console.log(\"perfect solution is found\");\n          globalBestHS = localBestHS;\n          globalBestSS = localBestSS;\n          globalBestScehdule = localBestScehdule;\n          console.log(\"Perfect Gloabal best HS: \" + globalBestHS);\n          console.log(\"Perfect Gloabal best SS: \" + globalBestSS);\n          console.log(finalDataAll[0]);\n          trigger = 1;\n          return [finalDataAll[0], finalDataAllElective[0]];\n        }\n      }\n\n      return [finalDataAll[0], finalDataAllElective[0]];\n    };\n\n    let interations = iteration();\n    let presentableData = [];\n    let presentableDataElective = [];\n\n    if (trigger == 1) {\n      //shot course code, course name and lecturer    \n      const changeToPresentationData = data => {\n        for (let i = 0; i <= data[0].length; i++) {\n          try {\n            presentableData.push([data[0][i][1], data[0][i][2], data[0][i][5]]);\n          } catch (error) {}\n        }\n\n        for (let i = 0; i <= data[1].length; i++) {\n          try {\n            presentableDataElective.push([data[1][i][1], data[1][i][2], data[1][i][5]]);\n          } catch (error) {}\n        }\n      };\n\n      changeToPresentationData(interations);\n      let allRoomName = [];\n\n      for (let i = 0; i < roomData[0].length; i++) {\n        allRoomName.push(roomData[0][i][0]);\n      }\n\n      allRoomName.unshift(\"Room\");\n\n      if (allRoomName.pop() == undefined) {}\n\n      let weekday = ['Monday', 'Monday', 'Monday', 'Monday', 'Monday', 'Monday', 'Monday', 'Monday', 'Monday', 'Monday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Friday', 'Friday', 'Friday', 'Friday', 'Friday', 'Friday', 'Friday', 'Friday'];\n      let wed = ['Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday'];\n\n      const create2dArray = (weekdayArray, partDay, arrayAll, partAll) => {\n        var tmp = [];\n\n        for (var i = 0; i < weekdayArray.length; i += partDay) {\n          tmp.push(weekdayArray.slice(i, i + partDay));\n        }\n\n        for (var i = 0; i < arrayAll.length; i += partAll) {\n          tmp.push(arrayAll.slice(i, i + partAll));\n        }\n\n        return tmp;\n      };\n\n      let dataset = create2dArray(weekday, 38, presentableData, 38);\n      console.log(dataset);\n\n      const create2dArrayElective = (weekdayArray, partDay, arrayAll, partAll) => {\n        var tmp = [];\n\n        for (var i = 0; i < weekdayArray.length; i += partDay) {\n          tmp.push(weekdayArray.slice(i, i + partDay));\n        }\n\n        for (var i = 0; i < arrayAll.length; i += partAll) {\n          tmp.push(arrayAll.slice(i, i + partAll));\n        }\n\n        return tmp;\n      };\n\n      let datasetElective = create2dArrayElective(wed, 10, presentableDataElective, 10);\n      console.log(datasetElective); //let compileDataset = dataset.concat(datasetElective);\n      //console.log(dataset)\n\n      const insertRoomName = (roomData, array) => {\n        for (let i = 0; i < array.length; i++) {\n          array[i].unshift(roomData[i]);\n        }\n\n        return array;\n      };\n\n      insertRoomName(allRoomName, dataset);\n\n      const insertRoomNameElective = (roomData, array) => {\n        for (let i = 0; i < array.length; i++) {\n          array[i].unshift(roomData[i]);\n        }\n\n        return array;\n      };\n\n      insertRoomName(allRoomName, datasetElective);\n      /** Convert a 2D array into a CSV string\r\n       */\n\n      function arrayToCsv(data) {\n        //console.log(data)\n        return data.map(row => row.map(String) // convert every value to String\n        .map(v => v.replaceAll('\"', '\"\"')) // escape double colons\n        .map(v => `\"${v}\"`) // quote it\n        .join(',') // comma-separated\n        ).join('\\r\\n'); // rows starting on new lines\n      }\n\n      let csv = arrayToCsv(dataset);\n\n      function downloadBlob(content, filename, contentType) {\n        // Create a blob\n        var blob = new Blob([content], {\n          type: contentType\n        });\n        var url = URL.createObjectURL(blob); // Create a link to download it\n\n        var pom = document.createElement('a');\n        pom.href = url;\n        pom.setAttribute('download', filename);\n        pom.click();\n      }\n      /** Convert a 2D array into a CSV string\r\n       * elective\r\n      */\n\n\n      function arrayToCsvElective(data) {\n        //console.log(data)\n        return data.map(row => row.map(String) // convert every value to String\n        .map(v => v.replaceAll('\"', '\"\"')) // escape double colons\n        .map(v => `\"${v}\"`) // quote it\n        .join(',') // comma-separated\n        ).join('\\r\\n'); // rows starting on new lines\n      }\n\n      let csvElective = arrayToCsvElective(datasetElective);\n\n      function downloadBlobElective(content, filename, contentType) {\n        // Create a blob\n        var blob = new Blob([content], {\n          type: contentType\n        });\n        var url = URL.createObjectURL(blob); // Create a link to download it\n\n        var pom = document.createElement('a');\n        pom.href = url;\n        pom.setAttribute('download', filename);\n        pom.click();\n      }\n\n      downloadBlob(csv, 'ModifiedAntSystem_GeneratedSchedule.csv', 'text/csv;charset=utf-8;');\n      downloadBlobElective(csvElective, 'ModifiedAntSystemElective_GeneratedSchedule.csv', 'text/csv;charset=utf-8;');\n    } else {\n      alert(\"no workable solution found, please refersh until get workable solution\");\n    } //----------------------------------------------------------------------------------------------------------------------------------------\n\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4256,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4257,\n      columnNumber: 13\n    }\n  }, \"Generate Schedule Page\"));\n};\n\nexport default ArraySchedule; //result[i][j]=Course.splice(Math.floor(Math.random()* Course.length),1)[0] // create random placement of Course Value\n//const Schedule = new Array(10).fill(Array(5).fill(null));\n//console.log(Schedule);\n// const Course = [['TE1',4],['TE1',4],['TE1',4],['TE1',3],['TE1',4],['TE1',2],['TE1',4],['TE1',4],['TE1',4],['TE1',3]];\n//const Course = [['TE1',2],['TE2',2],['TE3',3],['TE4',4],['TE5',3],['TE6',4],['TE7',4],['TE8',2],['TE9',4]];\n//const Course = ['TE1','TE2','TE3','TE4','TE5','TE6','TE7','TE8','TE9'];","map":{"version":3,"sources":["C:/Users/acit/Desktop/FYP Code/FYP Code/frontend/src/components/RandomSchedule/arraySchedule.js"],"names":["create","find","forEach","indexOf","React","useEffect","useState","useContext","useParams","_","CSVLink","LoadingSpinner","finalDataAll","finalDataAllElective","checkHardConstraintOutsite","checkSoftConstraintOutsite","ArraySchedule","props","isLoading","setIsLoading","loadedFile","setLoaadedFile","roomData","setroomData","courseData","setcourseData","CsvData","setCsvData","userId","sendRequest","response","fetch","responsedata","json","stringifyData","JSON","stringify","userWithFiles","Dataset","ertRoom","map","ertCourse","ok","Error","message","err","console","log","testData","EnrollmentQuota","CourseCode","HMS","lecturerData","roomName","roomSize","filterData50","filterData100","filterData200","filterData500","filterDataElective50","filterDataElective100","filterDataElective200","filterDataElective500","dupeData","room","push","hardConstraintViolated","softConstraintViolated","i","length","enrollment","code","hms","lecturer","reduce","results","item","index","array","name","size","notDuplicatesRoom","filter","notDuplicatesLecturer","pop","courseDataXElective","courseDataWithElective","slice","splice","roomUnder50","roomUnder100","roomUnder200","roomUnder500","checkNumberofRoom","createArray","data","result","DataArray50","DataArray100","DataArray200","DataArray500","DataArrayElective50","DataArrayElective100","DataArrayElective200","DataArrayElective500","checkTotalHardContraintsAll","checkTotalSoftContraintsAll","antSystem","array1D50","AntArr50","insertedData50_Slot2_2","insertedData50_Slot2_1","AntAlgoInsert50","test","k","k2","k3","remainderArray","remainderArraySlot1","totalRoom","x","hourMS","b","j","Math","floor","random","slot2","undefined","AntArrIns50","slot2Equal1for50","test2","varchec50","slot2Equal2for50","reshuffle50","notDupeShuffle50","check1Teacher_50","count","indexArray","last","reshuffle50_50","checkAmountData50_2","checkAmount_2","checkAmountData50_0","array1D100","AntArr100","insertedData100_Slot2_2","insertedData100_Slot2_1","AntAlgoInsert100","AntArrIns100","slot2Equal1for100","varchec100","slot2Equal2for100","reshuffle100","notDupeShuffle100","check1Teacher_100","reshuffle100_100","checkAmountData100_2","checkAmountData100_0","array1D200","AntArr200","insertedData200_Slot2_2","insertedData200_Slot2_1","AntAlgoInsert200","AntArrIns200","slot2Equal1for200","varchec200","slot2Equal2for200","reshuffle200","notDupeShuffle200","check1Teacher_200","reshuffle200_200","checkAmountData200_2","checkAmountData200_0","array1D500","AntArr500","insertedData500_Slot2_2","insertedData500_Slot2_1","AntAlgoInsert500","AntArrIns500","slot2Equal1for500","varchec500","slot2Equal2for500","reshuffle500","notDupeShuffle500","check1Teacher_500","reshuffle500_500","checkAmountData500_2","checkAmountData500_0","array1DElective50","AntArrElective50","extraDataElective50_Slot2_2","extraData50Elective_Slot2_1","insertedDataElective50_Slot2_2","insertedDataElective50_Slot2_1","AntAlgoInsertElective50","k4","remainderArray3","slot1","z","v","q","c","AntArrInsElective50","slot2Equal1forElective50","slot2Equal2forElective50","reshuffleElectice50","notDupeShuffleElective50","checkHC_50_Elective","indexArray2","reshuffleElectice50_50","checkAmountData50_Elective_2","array1DElective100","AntArrElective100","extraDataElective100_Slot2_2","extraData100Elective_Slot2_1","insertedDataElective100_Slot2_2","insertedDataElective100_Slot2_1","AntAlgoInsertElective100","AntArrInsElective100","slot2Equal1forElective100","slot2Equal2forElective100","reshuffleElective100","notDupeShuffleElective100","checkHC_100_Elective","reshuffleElective100_100","checkAmountData100_Elective_2","array1DElective200","AntArrElective200","extraDataElective200_Slot2_2","extraData200Elective_Slot2_1","insertedDataElective200_Slot2_2","insertedDataElective200_Slot2_1","AntAlgoInsertElective200","AntArrInsElective200","slot2Equal1forElective200","slot2Equal2forElective200","reshuffleElective200","notDupeShuffleElective200","checkHC_200_Elective","reshuffleElective200_200","checkAmountData200_Elective_2","array1DElective500","AntArrElective500","extraDataElective500_Slot2_2","extraData500Elective_Slot2_1","insertedDataElective500_Slot2_2","insertedDataElective500_Slot2_1","AntAlgoInsertElective500","AntArrInsElective500","slot2Equal1forElective500","slot2Equal2forElective500","reshuffleElective500","notDupeShuffleElective500","checkHC_500_Elective","reshuffleElective500_500","checkAmountData500_ELective_2","combineData","combineElectiveData","combine","data1","data2","data3","data4","dataCombine","combineElective","dataCombineElective","check1Group","checkH1_ALL","checkH1_ALLElective","checkRoomQuota","checkH2_ALL","checkH2_ALLElective","checkSolatJummat","checkH4_ALL","checkH4_ALLElective","check1Teacher","checkH5_ALL","checkH5_ALLElective","checkEndOfClass","checkS1_50","checkS1_100","checkS1_200","checkS1_500","checkS1_Elective50","checkS1_Elective100","checkS1_Elective200","checkS1_Elective500","check2ClassInARow","checkS2_50","checkS2_100","checkS2_200","checkS2_500","checkS2_Elective50","checkS2_Elective100","checkS2_Elective200","checkS2_Elective500","checkTotalHardContraint","totalH1","totalH2","totalH4","totalH5","totalH1_Elective","totalH2_Elective","totalH4_Elective","totalH5_Elective","totalHC","checkTotalHardContraints","checkTotalSoftContraint","totalS1","totalS2","checkTotalSoftContraints","change100ToEmpty","finalData","change100ToEmptyElective","finalDataElective","checkMissingData","data50","data100","data200","data500","dataE50","dataE100","dataE200","dataE500","countData","totalGenerateScheduleData","antSystemAlgo","trigger","iteration","globalBestHS","globalBestSS","globalBestScehdule","globalBestScehduleElective","localBestHS","localBestSS","localBestScehdule","localBestScehduleElective","interations","presentableData","presentableDataElective","changeToPresentationData","error","allRoomName","unshift","weekday","wed","create2dArray","weekdayArray","partDay","arrayAll","partAll","tmp","dataset","create2dArrayElective","datasetElective","insertRoomName","insertRoomNameElective","arrayToCsv","row","String","replaceAll","join","csv","downloadBlob","content","filename","contentType","blob","Blob","type","url","URL","createObjectURL","pom","document","createElement","href","setAttribute","click","arrayToCsvElective","csvElective","downloadBlobElective","alert"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,EAAgCC,OAAhC,QAA+C,QAA/C;AACA,OAAOC,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,EAAmCC,UAAnC,QAAqD,OAArD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AAGA,IAAIC,YAAY,GAAG,EAAnB;AACA,IAAIC,oBAAoB,GAAG,EAA3B;AACA,IAAIC,0BAA0B,GAAG,CAAjC;AACA,IAAIC,0BAA0B,GAAG,CAAjC;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAG7B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACc,UAAD,EAAaC,cAAb,IAA+Bf,QAAQ,CAAC,KAAD,CAA7C;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,EAAxC;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,EAA5C;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,EAAtC,CAP6B,CAQ7B;AACA;AACA;;AAEA,QAAMsB,MAAM,GAAGpB,SAAS,GAAGoB,MAA3B;AACAvB,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMwB,WAAW,GAAG,YAAW;AAC3BV,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAG;AACH,cAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,gEAAD,CAA5B,CADG,CAEH;AACA;;AACA,cAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACA,YAAIC,aAAa,GAAGC,IAAI,CAACC,SAAL,CAAeJ,YAAY,CAACK,aAAb,CAA2BC,OAA1C,CAApB,CALG,CAOH;;AACA,cAAMC,OAAO,GAAGP,YAAY,CAACK,aAAb,CAA2BC,OAA3B,CAAmC,CAAnC,EAAsCA,OAAtC,CAA8CE,GAA9C,CAAkDF,OAAO,IAAG,CAACA,OAAO,CAAC,MAAD,CAAR,EAAiBA,OAAO,CAAC,MAAD,CAAxB,CAA5D,CAAhB,CARG,CAQ6G;;AAChHf,QAAAA,WAAW,CAAC,CAACgB,OAAD,CAAD,CAAX;AAEA,cAAME,SAAS,GAAGT,YAAY,CAACK,aAAb,CAA2BC,OAA3B,CAAmC,CAAnC,EAAsCA,OAAtC,CAA8CE,GAA9C,CAAkDF,OAAO,IAAI,CAACA,OAAO,CAAC,kBAAD,CAAR,EAA6BA,OAAO,CAAC,aAAD,CAApC,EAAoDA,OAAO,CAAC,aAAD,CAA3D,EAA2EA,OAAO,CAAC,MAAD,CAAlF,EAA2FA,OAAO,CAAC,UAAD,CAAlG,EAA+GA,OAAO,CAAC,UAAD,CAAtH,EAAmIA,OAAO,CAAC,OAAD,CAA1I,EAAoJA,OAAO,CAAC,KAAD,CAA3J,EAAmKA,OAAO,CAAC,gBAAD,CAA1K,EAA6LA,OAAO,CAAC,OAAD,CAApM,EAA8MA,OAAO,CAAC,OAAD,CAArN,CAA7D,CAAlB,CAXG,CAW8S;;AACjTb,QAAAA,aAAa,CAAC,CAACgB,SAAD,CAAD,CAAb;;AAEA,YAAI,CAACX,QAAQ,CAACY,EAAd,EAAiB;AACb,gBAAM,IAAIC,KAAJ,CAAUX,YAAY,CAACY,OAAvB,CAAN;AACH;;AACDvB,QAAAA,cAAc,CAACa,aAAD,CAAd;AACAf,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACC,OAnBD,CAmBC,OAAM0B,GAAN,EAAU;AACPC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACD,OAAhB;AACH;;AACDzB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAEH,KA1BD;;AA2BAU,IAAAA,WAAW;AACd,GA7BQ,EA6BP,CAACD,MAAD,CA7BO,CAAT;;AA+BI,MAAG,CAACV,SAAD,IAAcE,UAAjB,EAA4B;AACxB,UAAM4B,QAAQ,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,CAAjB;AACA,UAAMC,eAAe,GAAG,EAAxB;AACA,UAAMC,UAAU,GAAG,EAAnB;AACA,UAAMC,GAAG,GAAG,EAAZ;AACA,UAAMC,YAAY,GAAG,EAArB;AACA,UAAMC,QAAQ,GAAG,EAAjB;AACA,UAAMC,QAAQ,GAAG,EAAjB;AACA,UAAMC,YAAY,GAAI,EAAtB;AACA,UAAMC,aAAa,GAAI,EAAvB;AACA,UAAMC,aAAa,GAAI,EAAvB;AACA,UAAMC,aAAa,GAAI,EAAvB;AACA,UAAMC,oBAAoB,GAAI,EAA9B;AACA,UAAMC,qBAAqB,GAAI,EAA/B;AACA,UAAMC,qBAAqB,GAAI,EAA/B;AACA,UAAMC,qBAAqB,GAAI,EAA/B;AACA,UAAMC,QAAQ,GAAI,EAAlB;AACA,UAAMC,IAAI,GAAG,EAAb;AACAA,IAAAA,IAAI,CAACC,IAAL,CAAU3C,QAAQ,CAAC,CAAD,CAAlB;AAEA,QAAI4C,sBAAsB,GAAG,CAA7B;AACA,QAAIC,sBAAsB,GAAG,CAA7B,CArBwB,CAsBxB;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE5C,UAAU,CAAC,CAAD,CAAV,CAAc6C,MAAhC,EAAwCD,CAAC,EAAzC,EAA4C;AACxC,UAAIE,UAAU,GAAG,CAAC9C,UAAU,CAAC,CAAD,CAAV,CAAc4C,CAAd,EAAiB,CAAjB,CAAD,CAAjB;AACA,UAAIG,IAAI,GAAG,CAAC/C,UAAU,CAAC,CAAD,CAAV,CAAc4C,CAAd,EAAiB,CAAjB,CAAD,CAAX;AACA,UAAII,GAAG,GAAG,CAAChD,UAAU,CAAC,CAAD,CAAV,CAAc4C,CAAd,EAAiB,CAAjB,CAAD,CAAV;AACA,UAAIK,QAAQ,GAAG,CAACjD,UAAU,CAAC,CAAD,CAAV,CAAc4C,CAAd,EAAiB,CAAjB,CAAD,CAAf;AACAE,MAAAA,UAAU,CAACI,MAAX,CAAkB,UAASC,OAAT,EAAkBC,IAAlB,EAAwBC,KAAxB,EAA+BC,KAA/B,EAAqC;AACnDH,QAAAA,OAAO,CAACE,KAAD,CAAP,GAAiBD,IAAjB;AACA3B,QAAAA,eAAe,CAACgB,IAAhB,CAAqBW,IAArB,EAFmD,CAGnD;AACH,OAJD,EAIE,EAJF;AAKAL,MAAAA,IAAI,CAACG,MAAL,CAAY,UAASC,OAAT,EAAkBC,IAAlB,EAAwBC,KAAxB,EAA+BC,KAA/B,EAAqC;AAC7CH,QAAAA,OAAO,CAACE,KAAD,CAAP,GAAiBD,IAAjB;AACA1B,QAAAA,UAAU,CAACe,IAAX,CAAgBW,IAAhB,EAF6C,CAG7C;AACH,OAJD,EAIE,EAJF;AAKAJ,MAAAA,GAAG,CAACE,MAAJ,CAAW,UAASC,OAAT,EAAkBC,IAAlB,EAAwBC,KAAxB,EAA+BC,KAA/B,EAAqC;AAC5CH,QAAAA,OAAO,CAACE,KAAD,CAAP,GAAiBD,IAAjB;AACAzB,QAAAA,GAAG,CAACc,IAAJ,CAASW,IAAT,EAF4C,CAG5C;AACH,OAJD,EAIE,EAJF;AAKAH,MAAAA,QAAQ,CAACC,MAAT,CAAgB,UAASC,OAAT,EAAkBC,IAAlB,EAAwBC,KAAxB,EAA+BC,KAA/B,EAAqC;AACjDH,QAAAA,OAAO,CAACE,KAAD,CAAP,GAAiBD,IAAjB;AACAxB,QAAAA,YAAY,CAACa,IAAb,CAAkBW,IAAlB,EAFiD,CAGjD;AACH,OAJD,EAIE,EAJF;AAKH;;AAED,SAAI,IAAIR,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE9C,QAAQ,CAAC,CAAD,CAAR,CAAY+C,MAA9B,EAAsCD,CAAC,EAAvC,EAA0C;AACtC,UAAIW,IAAI,GAAG,CAACzD,QAAQ,CAAC,CAAD,CAAR,CAAY8C,CAAZ,EAAe,CAAf,CAAD,CAAX;AACA,UAAIY,IAAI,GAAG,CAAC1D,QAAQ,CAAC,CAAD,CAAR,CAAY8C,CAAZ,EAAe,CAAf,CAAD,CAAX;AACAW,MAAAA,IAAI,CAACL,MAAL,CAAY,UAASC,OAAT,EAAkBC,IAAlB,EAAwBC,KAAxB,EAA+BC,KAA/B,EAAqC;AAC7CH,QAAAA,OAAO,CAACE,KAAD,CAAP,GAAiBD,IAAjB;AACAvB,QAAAA,QAAQ,CAACY,IAAT,CAAcW,IAAd,EAF6C,CAG7C;AACH,OAJD,EAIE,EAJF;AAKAI,MAAAA,IAAI,CAACN,MAAL,CAAY,UAASC,OAAT,EAAkBC,IAAlB,EAAwBC,KAAxB,EAA+BC,KAA/B,EAAqC;AAC7CH,QAAAA,OAAO,CAACE,KAAD,CAAP,GAAiBD,IAAjB;AACAtB,QAAAA,QAAQ,CAACW,IAAT,CAAcW,IAAd,EAF6C,CAG7C;AACH,OAJD,EAIE,EAJF;AAKH;;AAGD,UAAMK,iBAAiB,GAAG3B,QAAQ,CAAC4B,MAAT,CAAgB,CAACN,IAAD,EAAOC,KAAP,KAAiBA,KAAK,IAAIvB,QAAQ,CAACnD,OAAT,CAAiByE,IAAjB,CAA1C,CAA1B;AAEA,UAAMO,qBAAqB,GAAG/B,YAAY,CAAC8B,MAAb,CAAoB,CAACN,IAAD,EAAOC,KAAP,KAAiBA,KAAK,IAAIzB,YAAY,CAACjD,OAAb,CAAqByE,IAArB,CAA9C,CAA9B;AACAO,IAAAA,qBAAqB,CAACC,GAAtB,GArEwB,CAsExB;;AAGA,QAAIC,mBAAmB,GAAG,EAA1B;AACA,QAAIC,sBAAsB,GAAG,EAA7B;AACA9D,IAAAA,UAAU,CAAC,CAAD,CAAV,CAAc4D,GAAd,GA3EwB,CA6ExB;;AACA,SAAI,IAAIhB,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAE5C,UAAU,CAAC,CAAD,CAAV,CAAc6C,MAA9B,EAAsCD,CAAC,EAAvC,EAA0C;AACtC,UAAG5C,UAAU,CAAC,CAAD,CAAV,CAAc4C,CAAd,EAAiB,CAAjB,EAAoBmB,KAApB,CAA0B,CAA1B,EAA4B,CAA5B,KAAkC,KAArC,EAA2C;AACvC/D,QAAAA,UAAU,CAAC,CAAD,CAAV,CAAc4C,CAAd,EAAiBoB,MAAjB;;AACA,YAAKhE,UAAU,CAAC,CAAD,CAAV,CAAc4C,CAAd,EAAiB,CAAjB,EAAoBmB,KAApB,CAA0B,CAA1B,EAA4B,CAA5B,KAAkC,KAAvC,EAA6C;AACzC/D,UAAAA,UAAU,CAAC,CAAD,CAAV,CAAc4C,CAAd,EAAiBoB,MAAjB;AACAH,UAAAA,mBAAmB,CAACpB,IAApB,CAAyBzC,UAAU,CAAC,CAAD,CAAV,CAAc4C,CAAd,CAAzB;AACH;AACJ;AACJ,KAtFuB,CAwFxB;;;AACA,SAAI,IAAIA,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAE5C,UAAU,CAAC,CAAD,CAAV,CAAc6C,MAA9B,EAAsCD,CAAC,EAAvC,EAA0C;AACtC,UAAG5C,UAAU,CAAC,CAAD,CAAV,CAAc4C,CAAd,EAAiB,CAAjB,EAAoBmB,KAApB,CAA0B,CAA1B,EAA4B,CAA5B,KAAkC,KAAlC,IAA4C/D,UAAU,CAAC,CAAD,CAAV,CAAc4C,CAAd,EAAiB,CAAjB,EAAoBmB,KAApB,CAA0B,CAA1B,EAA4B,CAA5B,KAAkC,KAAjF,EAAuF;AACnFD,QAAAA,sBAAsB,CAACrB,IAAvB,CAA4BzC,UAAU,CAAC,CAAD,CAAV,CAAc4C,CAAd,CAA5B;AACH;AACJ,KA7FuB,CA+FxB;;;AACI,SAAI,IAAIA,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAEiB,mBAAmB,CAAChB,MAAtC,EAA6CD,CAAC,EAA9C,EAAiD;AACzC,UAAIiB,mBAAmB,CAACjB,CAAD,CAAnB,CAAuB,CAAvB,IAA4B,EAAhC,EAAoC;AAChCb,QAAAA,YAAY,CAACU,IAAb,CAAkBoB,mBAAmB,CAACjB,CAAD,CAArC;AACH;;AACD,UAAIiB,mBAAmB,CAACjB,CAAD,CAAnB,CAAuB,CAAvB,KAA6B,EAA7B,IAAmCiB,mBAAmB,CAACjB,CAAD,CAAnB,CAAuB,CAAvB,IAA4B,GAAnE,EAAwE;AAEpEZ,QAAAA,aAAa,CAACS,IAAd,CAAmBoB,mBAAmB,CAACjB,CAAD,CAAtC;AACH;;AACD,UAAIiB,mBAAmB,CAACjB,CAAD,CAAnB,CAAuB,CAAvB,KAA6B,GAA7B,IAAoCiB,mBAAmB,CAACjB,CAAD,CAAnB,CAAuB,CAAvB,IAA4B,GAApE,EAA0E;AACtEX,QAAAA,aAAa,CAACQ,IAAd,CAAmBoB,mBAAmB,CAACjB,CAAD,CAAtC;AACH;;AACD,UAAIiB,mBAAmB,CAACjB,CAAD,CAAnB,CAAuB,CAAvB,KAA6B,GAA7B,IAAoCiB,mBAAmB,CAACjB,CAAD,CAAnB,CAAuB,CAAvB,IAA4B,GAApE,EAAyE;AACrEV,QAAAA,aAAa,CAACO,IAAd,CAAmBoB,mBAAmB,CAACjB,CAAD,CAAtC;AACH;AACR,KA9GmB,CA+GpB;AAEA;;;AACA,SAAI,IAAIA,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAEkB,sBAAsB,CAACjB,MAAzC,EAAgDD,CAAC,EAAjD,EAAoD;AAChD,UAAIkB,sBAAsB,CAAClB,CAAD,CAAtB,CAA0B,CAA1B,IAA+B,EAAnC,EAAuC;AACnCT,QAAAA,oBAAoB,CAACM,IAArB,CAA0BqB,sBAAsB,CAAClB,CAAD,CAAhD;AACH;;AACD,UAAIkB,sBAAsB,CAAClB,CAAD,CAAtB,CAA0B,CAA1B,KAAgC,EAAhC,IAAsCkB,sBAAsB,CAAClB,CAAD,CAAtB,CAA0B,CAA1B,IAA+B,GAAzE,EAA8E;AAE1ER,QAAAA,qBAAqB,CAACK,IAAtB,CAA2BqB,sBAAsB,CAAClB,CAAD,CAAjD;AACH;;AACD,UAAIkB,sBAAsB,CAAClB,CAAD,CAAtB,CAA0B,CAA1B,KAAgC,GAAhC,IAAuCkB,sBAAsB,CAAClB,CAAD,CAAtB,CAA0B,CAA1B,IAA+B,GAA1E,EAAgF;AAC5EP,QAAAA,qBAAqB,CAACI,IAAtB,CAA2BqB,sBAAsB,CAAClB,CAAD,CAAjD;AACH;;AACD,UAAIkB,sBAAsB,CAAClB,CAAD,CAAtB,CAA0B,CAA1B,KAAgC,GAAhC,IAAuCkB,sBAAsB,CAAClB,CAAD,CAAtB,CAA0B,CAA1B,IAA+B,GAA1E,EAA+E;AAC3EN,QAAAA,qBAAqB,CAACG,IAAtB,CAA2BqB,sBAAsB,CAAClB,CAAD,CAAjD;AACH;AACJ,KAhImB,CAiIpB;AACA;AACA;AACA;;;AAGJ,QAAIqB,WAAW,GAAG,EAAlB;AACA,QAAIC,YAAY,GAAG,EAAnB;AACA,QAAIC,YAAY,GAAG,EAAnB;AACA,QAAIC,YAAY,GAAG,EAAnB;;AACA,UAAMC,iBAAiB,GAAG,MAAM;AAC5B,WAAI,IAAIzB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG9C,QAAQ,CAAC,CAAD,CAAR,CAAY+C,MAA/B,EAAuCD,CAAC,EAAxC,EAA2C;AACvC,YAAIJ,IAAI,GAAG1C,QAAQ,CAAC,CAAD,CAAR,CAAY8C,CAAZ,EAAe,CAAf,CAAX,CADuC,CAEvC;;AACA,YAAGJ,IAAI,GAAG,EAAV,EAAa;AACTyB,UAAAA,WAAW,CAACxB,IAAZ,CAAiBD,IAAjB;AACH,SAFD,MAEM,IAAGA,IAAI,GAAG,EAAP,IAAaA,IAAI,GAAG,GAAvB,EAA2B;AAC7B0B,UAAAA,YAAY,CAACzB,IAAb,CAAkBD,IAAlB;AAEH,SAHK,MAGA,IAAGA,IAAI,GAAG,GAAP,IAAcA,IAAI,GAAG,GAAxB,EAA4B;AAC9B2B,UAAAA,YAAY,CAAC1B,IAAb,CAAkBD,IAAlB;AAEH,SAHK,MAGA,IAAGA,IAAI,GAAG,GAAV,EAAc;AAChB4B,UAAAA,YAAY,CAAC3B,IAAb,CAAkBD,IAAlB;AACH;AACJ;AACJ,KAhBD;;AAiBA6B,IAAAA,iBAAiB;;AAGjB,UAAMC,WAAW,GAAIC,IAAD,IAAU;AAC1B,UAAIC,MAAM,GAAG,EAAb;;AAEI,WAAI,IAAI5B,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAC2B,IAAjB,EAAuB3B,CAAC,EAAxB,EAA2B;AACvB4B,QAAAA,MAAM,CAAC5B,CAAD,CAAN,GAAY,EAAZ;AACH;;AACL,aAAO4B,MAAP;AACH,KAPD;;AASA,QAAIC,WAAW,GAAGR,WAAW,CAACpB,MAAZ,GAAqB,EAAvC;AACA,QAAI6B,YAAY,GAAGR,YAAY,CAACrB,MAAb,GAAsB,EAAzC;AACA,QAAI8B,YAAY,GAAGR,YAAY,CAACtB,MAAb,GAAsB,EAAzC;AACA,QAAI+B,YAAY,GAAGR,YAAY,CAACvB,MAAb,GAAsB,EAAzC;AAEA,QAAIgC,mBAAmB,GAAGZ,WAAW,CAACpB,MAAZ,GAAqB,EAA/C;AACA,QAAIiC,oBAAoB,GAAGZ,YAAY,CAACrB,MAAb,GAAsB,EAAjD;AACA,QAAIkC,oBAAoB,GAAGZ,YAAY,CAACtB,MAAb,GAAsB,EAAjD;AACA,QAAImC,oBAAoB,GAAGZ,YAAY,CAACvB,MAAb,GAAsB,EAAjD,CAhLwB,CAmLpC;;AAEA,QAAIoC,2BAA2B,GAAG,CAAlC;AACA,QAAIC,2BAA2B,GAAG,CAAlC;;AAEA,UAAMC,SAAS,GAAG,MAAM;AAExB;AACA;AAGA;AACI,YAAMC,SAAS,GAAIb,IAAD,IAAU;AACxB,YAAIC,MAAM,GAAG,EAAb;;AAEA,aAAI,IAAI5B,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE2B,IAAlB,EAAwB3B,CAAC,EAAzB,EAA4B;AACxB4B,UAAAA,MAAM,CAAC5B,CAAD,CAAN,GAAW,GAAX;AACH;;AACD,eAAO4B,MAAP;AACH,OAPD;;AAQA,UAAIa,QAAQ,GAAGD,SAAS,CAACX,WAAD,CAAxB;AAEA,UAAIa,sBAAsB,GAAG,EAA7B;AACA,UAAIC,sBAAsB,GAAE,EAA5B;;AAEA,YAAMC,eAAe,GAAIlC,KAAD,IAAW;AAC/B,YAAImC,IAAI,GAAG,EAAX;AACA,YAAIC,CAAC,GAAG,CAAR;AACA,YAAIC,EAAE,GAAE,CAAR;AACA,YAAIC,EAAE,GAAE,CAAR;AAEA,YAAIC,cAAc,GAAG,EAArB;AACA,YAAIC,mBAAmB,GAAG,EAA1B;AACA,YAAIC,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AAEA,aAAI,IAAImD,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACjE,YAAY,CAACc,MAA5B,EAAmCmD,CAAC,EAApC,EAAuC;AACnCP,UAAAA,IAAI,CAAChD,IAAL,CAAUV,YAAY,CAACiE,CAAD,CAAtB;AACH;;AAEA,aAAI,IAAIpD,CAAC,GAAGU,KAAK,CAACT,MAAN,GAAa,CAAzB,EAA2BD,CAAC,GAAC,CAA7B,EAA+BA,CAAC,EAAhC,EAAmC;AAC/B,cAAG8C,CAAC,GAAGD,IAAI,CAAC5C,MAAZ,EAAmB;AACnB,gBAAIoD,MAAM,GAAGR,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR,CAAb;AACA,gBAAIQ,CAAC,GAAG,CAAR;;AAEA,gBAAGA,CAAC,GAAGH,SAAP,EAAiB;AACb,kBAAG;AACA,oBAAIzC,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAe,GAAf,IAAsBU,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAe6C,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR,CAAzC,EAAoD;AAChD,sBAAIpC,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAnB,EAAuB;AACnB5C,oBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;;AACD,sBAAI5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAnB,EAAuB;AACnB5C,oBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;AACJ;AACH,eATD,CASC,MAAK,CAAE;AACZ;;AACDA,YAAAA,CAAC;;AAEA,gBAAGD,MAAM,IAAI,CAAb,EAAe;AACZ,oBAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,oBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AACjBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;;AAEA,sBAAGQ,CAAC,GAAGH,SAAP,EAAiB;AACb,wBAAIzC,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAe,GAAf,IAAsBU,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAe6C,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR,CAAzC,EAAoD;AAChD,0BAAIpC,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAACV,CAAC,GAAG,KAAGsD,CAAR,CAAL,IAAmB,GAA7C,EAAiD;AAC7C5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;;AACD,0BAAI5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAACV,CAAC,GAAG,KAAGsD,CAAR,CAAL,IAAmB,GAA7C,EAAiD;AAC7C5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;AACJ;AACJ;;AACDA,kBAAAA,CAAC,GAlBgB,CAoBjB;;AACA,sBAAG5C,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAApC,EAAwC;AAEhCU,oBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,oBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,oBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,oBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,mBANL,MAOS,IAAGpC,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAApC,EAAwC;AAC1CU,oBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,oBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,oBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,oBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,mBALK,MAMF;AACAI,oBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACH;;AAED,uBAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG1C,KAAK,CAACT,MAAzB,EAAkCmD,CAAC,EAAnC,EAAsC;AAClC,wBAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,sBAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ;AAEP,iBA5CD,MA6CK,IAAG1C,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AACvBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;;AAEA,sBAAGQ,CAAC,GAAGH,SAAP,EAAiB;AACb,wBAAGzC,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAe,GAAf,IAAsBU,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAe6C,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR,CAAxC,EAAmD;AAC/C,0BAAIpC,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAACV,CAAC,GAAG,KAAGsD,CAAR,CAAL,IAAmB,GAA7C,EAAiD;AAC7C5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;;AACD,0BAAG5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAACV,CAAC,GAAG,KAAGsD,CAAR,CAAL,IAAmB,GAA5C,EAAgD;AAC5C5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;AACJ;AACJ;;AACDA,kBAAAA,CAAC,GAlBsB,CAoBvB;;AACA,sBAAG5C,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAApC,EAAwC;AAChCU,oBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,oBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,oBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,oBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,mBALL,MAMS,IAAGpC,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAApC,EAAwC;AAC1CU,oBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,oBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,oBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,oBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,mBALK,MAMF;AACAI,oBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACH;;AACD,uBAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG1C,KAAK,CAACT,MAAzB,EAAkCmD,CAAC,EAAnC,EAAsC;AAClC,wBAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,sBAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ;AAEP,iBA1CI,MA2CD;AACAH,kBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACJ,eA5FD,MA4FK;AACDG,gBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACJ,aAjGA,MAmGK,IAAGO,MAAM,IAAI,CAAb,EAAe;AAChB,oBAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,oBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AACjBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,iBALD,MAKM,IAAGpC,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AACvBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,iBALK,MAMF;AACAG,kBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACJ,eAfD,MAeK;AACDG,gBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACJ,aApBI,MAsBA,IAAGO,MAAM,IAAI,CAAb,EAAe;AACjB,oBAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,oBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAd,IAAqBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAY,GAApC,EAAwC;AAAC;AACrCU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,iBAPD,MAOM,IAAGpC,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AAAC;AACxBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACAH,kBAAAA,sBAAsB,CAAC9C,IAAvB,CAA4BgD,IAAI,CAACC,CAAD,CAAhC;AACH,iBANK,MAMA,IAAGpC,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AAAC;AACxBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACAH,kBAAAA,sBAAsB,CAAC9C,IAAvB,CAA4BgD,IAAI,CAACC,CAAD,CAAhC;AACH,iBANK,MAMA,IAAGpC,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAoB;AAAC;AACvBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACAI,kBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACH;AACJ,eAzBD,MAyBK;AACDG,gBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACJ;AACH;;AACDA,UAAAA,CAAC;AACJ,SA3LiC,CA6LlC;;;AACA,aAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAuC;AACnC,gBAAGJ,EAAE,GAAGE,mBAAmB,CAACjD,MAA5B,EAAmC;AAC/BS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAWF,mBAAmB,CAACF,EAAD,CAA9B;AACAtC,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAaF,mBAAmB,CAACF,EAAD,CAAhC;AACH;;AACDA,YAAAA,EAAE;AACL;AACJ,SAtMiC,CAwMlC;;;AACA,aAAI,IAAII,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAC5B,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAuC;AACnC,gBAAGL,EAAE,GAAGE,cAAc,CAAChD,MAAvB,EAA8B;AAC1BS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAWH,cAAc,CAACF,EAAD,CAAzB;AACArC,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAaH,cAAc,CAACF,EAAD,CAA3B;AACH;;AACD,gBAAG;AACC,kBAAIY,KAAK,GAAGV,cAAc,CAACF,EAAD,CAAd,CAAmB,EAAnB,CAAZ;;AACA,kBAAGY,KAAK,IAAI,CAAZ,EAAc;AACVhB,gBAAAA,sBAAsB,CAAC9C,IAAvB,CAA4BoD,cAAc,CAACF,EAAD,CAA1C;AACH;;AACD,kBAAGY,KAAK,IAAI,CAAZ,EAAc;AACXjB,gBAAAA,sBAAsB,CAAC7C,IAAvB,CAA4BoD,cAAc,CAACF,EAAD,CAA1C;AACH;AACH,aARD,CAQC,MAAK,CAAE;;AACZA,YAAAA,EAAE;AACL;AACJ;;AAED,YAAGrC,KAAK,CAAC,CAAC,CAAF,CAAL,IAAakD,SAAhB,EAA0B;AACtBjB,UAAAA,sBAAsB,CAAC9C,IAAvB,CAA4Ba,KAAK,CAAC,CAAC,CAAF,CAAjC;AACH;;AAEE,eAAOA,KAAP;AACH,OAjOD;;AAmOA,UAAImD,WAAW,GAAGjB,eAAe,CAACH,QAAD,CAAjC,CAvPoB,CAwPpB;;AAEC,YAAMqB,gBAAgB,GAAGpD,KAAD,IAAW;AAC/B,YAAIoC,CAAC,GAAG,CAAR;AACA,YAAIiB,KAAK,GAAG,EAAZ;;AAEA,aAAI,IAAIX,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,gBAAGN,CAAC,GAAGH,sBAAsB,CAAC1C,MAA9B,EAAqC;AACjCS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAWT,sBAAsB,CAACG,CAAD,CAAjC;AACH;;AACLA,YAAAA,CAAC;AACA;AACJ;;AACD,eAAOpC,KAAP;AACH,OAbD;;AAcA,UAAIsD,SAAS,GAAGF,gBAAgB,CAACrB,QAAD,CAAhC;;AAGA,YAAMwB,gBAAgB,GAAIvD,KAAD,IAAW;AAChC,YAAIoC,CAAC,GAAG,CAAR;;AACA,aAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAuC;AACnC,gBAAGN,CAAC,GAAGJ,sBAAsB,CAACzC,MAA9B,EAAqC;AACjCS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAWV,sBAAsB,CAACI,CAAD,CAAjC;AACApC,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAaV,sBAAsB,CAACI,CAAD,CAAnC;AACH;;AACLA,YAAAA,CAAC;AACA;AACJ;;AAED,YAAGpC,KAAK,CAAC,CAAC,CAAF,CAAL,IAAakD,SAAhB,EAA0B;AACtBjB,UAAAA,sBAAsB,CAAC9C,IAAvB,CAA4Ba,KAAK,CAAC,CAAC,CAAF,CAAjC;AACH,SAFD,MAEK,CAEJ;;AAED,eAAOA,KAAP;AACH,OAnBD;;AAoBAuD,MAAAA,gBAAgB,CAACxB,QAAD,CAAhB;AAGD,UAAIyB,WAAW,GAAG,EAAlB;AACA,UAAIC,gBAAgB,GAAG,EAAvB;;AACA,YAAMC,gBAAgB,GAAI1D,KAAD,IAAW;AAChC,YAAI2D,KAAK,GAAE,CAAX;AACA,YAAIC,UAAU,GAAG,CAAjB;AACA,YAAInB,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AACA,aAAI,IAAImD,CAAC,GAAE,CAAX,EAAeA,CAAC,IAAID,SAApB,EAAgCC,CAAC,EAAjC,EAAoC;AACnCkB,UAAAA,UAAU,GAAIlB,CAAC,GAAG,EAAlB;;AACG,cAAG;AACF,iBAAI,IAAIpD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACU,KAAK,CAACT,MAAvB,EAAgCD,CAAC,EAAjC,EAAoC;AAC7B,kBAAGU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuB,GAAvB,IAA8B5D,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuBV,SAArD,IAAkElD,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuB,CAA5F,EAA+F;AAC3F,oBAAG;AACC,sBAAG5D,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAAlB,EAA0C;AACtCJ,oBAAAA,WAAW,CAACrE,IAAZ,CAAiB,CAACG,CAAC,GAACsE,UAAH,EAAc5D,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAnB,CAAjB;AACF;;AACD,sBAAG5D,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAAf,IAAyC5D,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAA3D,EAAkF;AAC/E,wBAAG;AACCJ,sBAAAA,WAAW,CAACrE,IAAZ,CAAiB,CAACG,CAAC,GAACsE,UAAH,EAAc5D,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAnB,CAAjB;AACH,qBAFD,CAEC,MAAK,CAAE;AACX;AACJ,iBATD,CASC,MAAK,CAAE;AACX;AACJ;AACJ,WAfD,CAeC,MAAK,CAAE;AACX;;AACD,aAAI,IAAIlB,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGc,WAAW,CAACjE,MAA9B,EAAsCmD,CAAC,EAAvC,EAA0C;AACtC,cAAG;AACC,gBAAIc,WAAW,CAACd,CAAD,CAAX,CAAe,CAAf,KAAqBc,WAAW,CAACd,CAAC,GAAC,CAAH,CAAX,CAAiB,CAAjB,CAAzB,EAA6C;AAC7Ce,cAAAA,gBAAgB,CAACtE,IAAjB,CAAsBqE,WAAW,CAACd,CAAD,CAAjC;AACH;AAEA,WALD,CAKC,MAAK,CAAE;AAEX;;AACD,YAAImB,IAAI,GAAGL,WAAW,CAAC9C,MAAZ,CAAmB,CAAC,CAApB,EAAuB,CAAvB,CAAX;AACA+C,QAAAA,gBAAgB,CAACtE,IAAjB,CAAsB0E,IAAtB;AAEH,OAnCD;;AAoCAH,MAAAA,gBAAgB,CAAC3B,QAAD,CAAhB;;AAEA,YAAM+B,cAAc,GAAG,CAAC7C,IAAD,EAAMjB,KAAN,KAAgB;AAEnC;AACA,YAAIoC,CAAC,GAAG,CAAR;AACA,YAAIuB,KAAK,GAAE,CAAX;AACA,YAAIlB,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AAEA,aAAI,IAAImD,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGzB,IAAI,CAAC1B,MAAvB,EAA+BmD,CAAC,EAAhC,EAAoC;AAChC,eAAI,IAAIpD,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGU,KAAK,CAACT,MAAxB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC,gBAAG;AACC,kBAAG2B,IAAI,CAACyB,CAAD,CAAJ,CAAQ,CAAR,KAAcpD,CAAjB,EAAmB;AACfU,gBAAAA,KAAK,CAACV,CAAD,CAAL,GAAW,CAAX;AACH;AACJ,aAJD,CAIC,MAAK,CAAE;AACX;AAEJ;;AAED,aAAI,IAAIoD,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGzB,IAAI,CAAC1B,MAAvB,EAA+BmD,CAAC,EAAhC,EAAoC;AAChC,eAAI,IAAIpD,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGU,KAAK,CAACT,MAAxB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC,gBAAG;AACC,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,oBAAGU,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAgB2B,IAAI,CAACmB,CAAD,CAAJ,CAAQ,CAAR,EAAW,CAAX,CAAnB,EAAkC;AAC9B,uBAAI,IAAIQ,CAAC,GAAG,CAAZ,EAAgBA,CAAC,IAAIH,SAArB,EAAiCG,CAAC,EAAlC,EAAqC;AACjC,wBAAI5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAnB,EAAuB;AACnB5C,sBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;;AACD,wBAAI5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAnB,EAAwB;AACpB5C,sBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;AACJ;AACJ;AAER;AACA,aAdD,CAcC,MAAK,CAAE;AACX;AAEJ;;AAGD,aAAI,IAAItD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,KAAK,CAACT,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC,cAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,gBAAG8C,CAAC,GAAGnB,IAAI,CAAC1B,MAAZ,EAAmB;AACnB;AACA,kBAAG;AACC,oBAAG0B,IAAI,CAACmB,CAAD,CAAJ,CAAQ,CAAR,KAAcc,SAAjB,EAA2B;AACvBlD,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAW2B,IAAI,CAACmB,CAAD,CAAJ,CAAQ,CAAR,CAAX;AACH;AACJ,eAJD,CAIC,MAAK,CAAE;AACP;;AACDA,YAAAA,CAAC;AACJ;AACJ;;AAEG,aAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,YAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;;AACD,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,YAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ,SA7D8B,CA+D/B;;AACP,OAhED;;AAiEAoB,MAAAA,cAAc,CAACL,gBAAD,EAAkB1B,QAAlB,CAAd;;AAEA,YAAMgC,mBAAmB,GAAI/D,KAAD,IAAW;AACnC,YAAI2D,KAAK,GAAG,CAAZ;;AACA,aAAI,IAAIrE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,KAAK,CAACT,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AAC7B,cAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAD,CAAL,IAAW,EAA9B,IAAoCU,KAAK,CAACV,CAAD,CAAL,IAAY,CAAhD,IAAqDU,KAAK,CAACV,CAAD,CAAL,IAAY4D,SAAjE,IAA8ElD,KAAK,CAACV,CAAD,CAAL,IAAY,CAA7F,EAA+F;AAC3FqE,YAAAA,KAAK,IAAI,CAAT;AACH;AACR;;AACD,eAAOA,KAAP;AACH,OARD;;AASA,UAAIK,aAAa,GAAGD,mBAAmB,CAACZ,WAAD,CAAvC,CAtZoB,CAuZpB;AACA;;AAEA,YAAMc,mBAAmB,GAAIjE,KAAD,IAAW;AACnC,YAAI2D,KAAK,GAAG,CAAZ;;AACA,aAAI,IAAIrE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,KAAK,CAACT,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AAC7B,cAAIU,KAAK,CAACV,CAAD,CAAL,IAAY,CAAhB,EAAmB;AACfqE,YAAAA,KAAK,IAAI,CAAT;AACH;AACR;;AACD,eAAOA,KAAP;AACH,OARD,CA1ZoB,CAmapB;AACA;AAEJ;AAEA;AAGA;;;AACA,YAAMO,UAAU,GAAIjD,IAAD,IAAU;AACzB,YAAIC,MAAM,GAAG,EAAb;;AAEA,aAAI,IAAI5B,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE2B,IAAlB,EAAwB3B,CAAC,EAAzB,EAA4B;AACxB4B,UAAAA,MAAM,CAAC5B,CAAD,CAAN,GAAW,GAAX;AACH;;AACD,eAAO4B,MAAP;AACH,OAPD;;AAQA,UAAIiD,SAAS,GAAGD,UAAU,CAAC9C,YAAD,CAA1B;AAEA,UAAIgD,uBAAuB,GAAG,EAA9B;AACA,UAAIC,uBAAuB,GAAE,EAA7B;;AAEA,YAAMC,gBAAgB,GAAItE,KAAD,IAAW;AAChC,YAAImC,IAAI,GAAG,EAAX;AACA,YAAIC,CAAC,GAAG,CAAR;AACA,YAAIC,EAAE,GAAE,CAAR;AACA,YAAIC,EAAE,GAAE,CAAR;AAEA,YAAIC,cAAc,GAAG,EAArB;AACA,YAAIC,mBAAmB,GAAG,EAA1B;AACA,YAAIC,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AAEA,aAAI,IAAImD,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAChE,aAAa,CAACa,MAA7B,EAAoCmD,CAAC,EAArC,EAAwC;AACpCP,UAAAA,IAAI,CAAChD,IAAL,CAAUT,aAAa,CAACgE,CAAD,CAAvB;AACH;;AAEA,aAAI,IAAIpD,CAAC,GAAGU,KAAK,CAACT,MAAN,GAAa,CAAzB,EAA2BD,CAAC,GAAC,CAA7B,EAA+BA,CAAC,EAAhC,EAAmC;AAC/B,cAAG8C,CAAC,GAAGD,IAAI,CAAC5C,MAAZ,EAAmB;AACnB,gBAAIoD,MAAM,GAAGR,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR,CAAb;AACA,gBAAIQ,CAAC,GAAG,CAAR;;AAEA,gBAAGA,CAAC,GAAGH,SAAP,EAAiB;AACb,kBAAG;AACA,oBAAIzC,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAe,GAAf,IAAsBU,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAe6C,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR,CAAzC,EAAoD;AAChD,sBAAIpC,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAnB,EAAuB;AACnB5C,oBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;;AACD,sBAAI5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAnB,EAAuB;AACnB5C,oBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;AACJ;AACH,eATD,CASC,MAAK,CAAE;AACZ;;AACDA,YAAAA,CAAC;;AAEA,gBAAGD,MAAM,IAAI,CAAb,EAAe;AACZ,oBAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,oBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AACjBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;;AAEA,sBAAGQ,CAAC,GAAGH,SAAP,EAAiB;AACb,wBAAIzC,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAe,GAAf,IAAsBU,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAe6C,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR,CAAzC,EAAoD;AAChD,0BAAIpC,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAACV,CAAC,GAAG,KAAGsD,CAAR,CAAL,IAAmB,GAA7C,EAAiD;AAC7C5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;;AACD,0BAAI5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAACV,CAAC,GAAG,KAAGsD,CAAR,CAAL,IAAmB,GAA7C,EAAiD;AAC7C5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;AACJ;AACJ;;AACDA,kBAAAA,CAAC,GAlBgB,CAoBjB;;AACA,sBAAG5C,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAApC,EAAwC;AAEhCU,oBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,oBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,oBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,oBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,mBANL,MAOS,IAAGpC,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAApC,EAAwC;AAC1CU,oBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,oBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,oBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,oBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,mBALK,MAMF;AACAI,oBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACH;;AAED,uBAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG1C,KAAK,CAACT,MAAzB,EAAkCmD,CAAC,EAAnC,EAAsC;AAClC,wBAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,sBAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ;AAEP,iBA5CD,MA6CK,IAAG1C,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AACvBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;;AAEA,sBAAGQ,CAAC,GAAGH,SAAP,EAAiB;AACb,wBAAGzC,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAe,GAAf,IAAsBU,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAe6C,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR,CAAxC,EAAmD;AAC/C,0BAAIpC,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAACV,CAAC,GAAG,KAAGsD,CAAR,CAAL,IAAmB,GAA7C,EAAiD;AAC7C5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;;AACD,0BAAG5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAACV,CAAC,GAAG,KAAGsD,CAAR,CAAL,IAAmB,GAA5C,EAAgD;AAC5C5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;AACJ;AACJ;;AACDA,kBAAAA,CAAC,GAlBsB,CAoBvB;;AACA,sBAAG5C,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAApC,EAAwC;AAChCU,oBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,oBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,oBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,oBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,mBALL,MAMS,IAAGpC,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAApC,EAAwC;AAC1CU,oBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,oBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,oBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,oBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,mBALK,MAMF;AACAI,oBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACH;;AACD,uBAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG1C,KAAK,CAACT,MAAzB,EAAkCmD,CAAC,EAAnC,EAAsC;AAClC,wBAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,sBAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ;AAEP,iBA1CI,MA2CD;AACAH,kBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACJ,eA5FD,MA4FK;AACDG,gBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACJ,aAjGA,MAmGK,IAAGO,MAAM,IAAI,CAAb,EAAe;AAChB,oBAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,oBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AACjBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,iBALD,MAKM,IAAGpC,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AACvBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,iBALK,MAMF;AACAG,kBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACJ,eAfD,MAeK;AACDG,gBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACJ,aApBI,MAsBA,IAAGO,MAAM,IAAI,CAAb,EAAe;AACjB,oBAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,oBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAd,IAAqBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAY,GAApC,EAAwC;AAAC;AACrCU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,iBAPD,MAOM,IAAGpC,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AAAC;AACxBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACAiC,kBAAAA,uBAAuB,CAAClF,IAAxB,CAA6BgD,IAAI,CAACC,CAAD,CAAjC;AACH,iBANK,MAMA,IAAGpC,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AAAC;AACxBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACAiC,kBAAAA,uBAAuB,CAAClF,IAAxB,CAA6BgD,IAAI,CAACC,CAAD,CAAjC;AACH,iBANK,MAMA,IAAGpC,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAoB;AAAC;AACvBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACAI,kBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACH;AACJ,eAzBD,MAyBK;AACDG,gBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACJ;AACH;;AACDA,UAAAA,CAAC;AACJ,SA3LkC,CA6LnC;;;AACA,aAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAuC;AACnC,gBAAGJ,EAAE,GAAGE,mBAAmB,CAACjD,MAA5B,EAAmC;AAC/BS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAWF,mBAAmB,CAACF,EAAD,CAA9B;AACAtC,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAaF,mBAAmB,CAACF,EAAD,CAAhC;AACH;;AACDA,YAAAA,EAAE;AACL;AACJ,SAtMkC,CAwMnC;;;AACA,aAAI,IAAII,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAC5B,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAuC;AACnC,gBAAGL,EAAE,GAAGE,cAAc,CAAChD,MAAvB,EAA8B;AAC1BS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAWH,cAAc,CAACF,EAAD,CAAzB;AACArC,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAaH,cAAc,CAACF,EAAD,CAA3B;AACH;;AACD,gBAAG;AACC,kBAAIY,KAAK,GAAGV,cAAc,CAACF,EAAD,CAAd,CAAmB,EAAnB,CAAZ;;AACA,kBAAGY,KAAK,IAAI,CAAZ,EAAc;AACVoB,gBAAAA,uBAAuB,CAAClF,IAAxB,CAA6BoD,cAAc,CAACF,EAAD,CAA3C;AACH;;AACD,kBAAGY,KAAK,IAAI,CAAZ,EAAc;AACXmB,gBAAAA,uBAAuB,CAACjF,IAAxB,CAA6BoD,cAAc,CAACF,EAAD,CAA3C;AACH;AACH,aARD,CAQC,MAAK,CAAE;;AACZA,YAAAA,EAAE;AACL;AACJ;;AAED,YAAGrC,KAAK,CAAC,CAAC,CAAF,CAAL,IAAakD,SAAhB,EAA0B;AACtBmB,UAAAA,uBAAuB,CAAClF,IAAxB,CAA6Ba,KAAK,CAAC,CAAC,CAAF,CAAlC;AACH;;AAEE,eAAOA,KAAP;AACH,OAjOD;;AAmOA,UAAIuE,YAAY,GAAGD,gBAAgB,CAACH,SAAD,CAAnC,CA5pBwB,CA6pBxB;;AAEC,YAAMK,iBAAiB,GAAGxE,KAAD,IAAW;AAChC,YAAIoC,CAAC,GAAG,CAAR;AACA,YAAIiB,KAAK,GAAG,EAAZ;;AAEA,aAAI,IAAIX,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,gBAAGN,CAAC,GAAGiC,uBAAuB,CAAC9E,MAA/B,EAAsC;AAClCS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW2B,uBAAuB,CAACjC,CAAD,CAAlC;AACH;;AACLA,YAAAA,CAAC;AACA;AACJ;;AACD,eAAOpC,KAAP;AACH,OAbD;;AAcA,UAAIyE,UAAU,GAAGD,iBAAiB,CAACL,SAAD,CAAlC;;AAGA,YAAMO,iBAAiB,GAAI1E,KAAD,IAAW;AACjC,YAAIoC,CAAC,GAAG,CAAR;;AACA,aAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAuC;AACnC,gBAAGN,CAAC,GAAGgC,uBAAuB,CAAC7E,MAA/B,EAAsC;AAClCS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW0B,uBAAuB,CAAChC,CAAD,CAAlC;AACApC,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAa0B,uBAAuB,CAAChC,CAAD,CAApC;AACH;;AACLA,YAAAA,CAAC;AACA;AACJ;;AAED,YAAGpC,KAAK,CAAC,CAAC,CAAF,CAAL,IAAakD,SAAhB,EAA0B;AACtBmB,UAAAA,uBAAuB,CAAClF,IAAxB,CAA6Ba,KAAK,CAAC,CAAC,CAAF,CAAlC;AACH,SAFD,MAEK,CAEJ;;AAED,eAAOA,KAAP;AACH,OAnBD;;AAoBA0E,MAAAA,iBAAiB,CAACP,SAAD,CAAjB;AAGD,UAAIQ,YAAY,GAAG,EAAnB;AACA,UAAIC,iBAAiB,GAAG,EAAxB;;AACA,YAAMC,iBAAiB,GAAI7E,KAAD,IAAW;AACjC,YAAI2D,KAAK,GAAE,CAAX;AACA,YAAIC,UAAU,GAAG,CAAjB;AACA,YAAInB,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AACA,aAAI,IAAImD,CAAC,GAAE,CAAX,EAAeA,CAAC,IAAID,SAApB,EAAgCC,CAAC,EAAjC,EAAoC;AACnCkB,UAAAA,UAAU,GAAIlB,CAAC,GAAG,EAAlB;;AACG,cAAG;AACF,iBAAI,IAAIpD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACU,KAAK,CAACT,MAAvB,EAAgCD,CAAC,EAAjC,EAAoC;AAC7B,kBAAGU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuB,GAAvB,IAA8B5D,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuBV,SAArD,IAAkElD,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuB,CAA5F,EAA+F;AAC3F,oBAAG;AACC,sBAAG5D,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAAlB,EAA0C;AACtCe,oBAAAA,YAAY,CAACxF,IAAb,CAAkB,CAACG,CAAC,GAACsE,UAAH,EAAc5D,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAnB,CAAlB;AACF;;AACD,sBAAG5D,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAAf,IAAyC5D,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAA3D,EAAkF;AAC/E,wBAAG;AACCe,sBAAAA,YAAY,CAACxF,IAAb,CAAkB,CAACG,CAAC,GAACsE,UAAH,EAAc5D,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAnB,CAAlB;AACH,qBAFD,CAEC,MAAK,CAAE;AACX;AACJ,iBATD,CASC,MAAK,CAAE;AACX;AACJ;AACJ,WAfD,CAeC,MAAK,CAAE;AACX;;AACD,aAAI,IAAIlB,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGiC,YAAY,CAACpF,MAA/B,EAAuCmD,CAAC,EAAxC,EAA2C;AACvC,cAAG;AACC,gBAAIiC,YAAY,CAACjC,CAAD,CAAZ,CAAgB,CAAhB,KAAsBiC,YAAY,CAACjC,CAAC,GAAC,CAAH,CAAZ,CAAkB,CAAlB,CAA1B,EAA+C;AAC/CkC,cAAAA,iBAAiB,CAACzF,IAAlB,CAAuBwF,YAAY,CAACjC,CAAD,CAAnC;AACH;AAEA,WALD,CAKC,MAAK,CAAE;AAEX;;AACD,YAAImB,IAAI,GAAGc,YAAY,CAACjE,MAAb,CAAoB,CAAC,CAArB,EAAwB,CAAxB,CAAX;AACAkE,QAAAA,iBAAiB,CAACzF,IAAlB,CAAuB0E,IAAvB;AAEH,OAnCD;;AAoCAgB,MAAAA,iBAAiB,CAACV,SAAD,CAAjB;;AAEA,YAAMW,gBAAgB,GAAG,CAAC7D,IAAD,EAAMjB,KAAN,KAAgB;AAErC;AACA,YAAIoC,CAAC,GAAG,CAAR;AACA,YAAIuB,KAAK,GAAE,CAAX;AACA,YAAIlB,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AAEA,aAAI,IAAImD,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGzB,IAAI,CAAC1B,MAAvB,EAA+BmD,CAAC,EAAhC,EAAoC;AAChC,eAAI,IAAIpD,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGU,KAAK,CAACT,MAAxB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC,gBAAG;AACC,kBAAG2B,IAAI,CAACyB,CAAD,CAAJ,CAAQ,CAAR,KAAcpD,CAAjB,EAAmB;AACfU,gBAAAA,KAAK,CAACV,CAAD,CAAL,GAAW,CAAX;AACH;AACJ,aAJD,CAIC,MAAK,CAAE;AACX;AAEJ;;AAED,aAAI,IAAIoD,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGzB,IAAI,CAAC1B,MAAvB,EAA+BmD,CAAC,EAAhC,EAAoC;AAChC,eAAI,IAAIpD,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGU,KAAK,CAACT,MAAxB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC,gBAAG;AACC,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,oBAAGU,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAgB2B,IAAI,CAACmB,CAAD,CAAJ,CAAQ,CAAR,EAAW,CAAX,CAAnB,EAAkC;AAC9B,uBAAI,IAAIQ,CAAC,GAAG,CAAZ,EAAgBA,CAAC,IAAIH,SAArB,EAAiCG,CAAC,EAAlC,EAAqC;AACjC,wBAAI5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAnB,EAAuB;AACnB5C,sBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;;AACD,wBAAI5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAnB,EAAwB;AACpB5C,sBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;AACJ;AACJ;AAER;AACA,aAdD,CAcC,MAAK,CAAE;AACX;AAEJ;;AAGD,aAAI,IAAItD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,KAAK,CAACT,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC,cAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,gBAAG8C,CAAC,GAAGnB,IAAI,CAAC1B,MAAZ,EAAmB;AACnB;AACA,kBAAG;AACC,oBAAG0B,IAAI,CAACmB,CAAD,CAAJ,CAAQ,CAAR,KAAcc,SAAjB,EAA2B;AACvBlD,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAW2B,IAAI,CAACmB,CAAD,CAAJ,CAAQ,CAAR,CAAX;AACH;AACJ,eAJD,CAIC,MAAK,CAAE;AACP;;AACDA,YAAAA,CAAC;AACJ;AACJ;;AAEG,aAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,YAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;;AACD,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,YAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ,SA7DgC,CA+DjC;;AACP,OAhED;;AAiEAoC,MAAAA,gBAAgB,CAACF,iBAAD,EAAmBT,SAAnB,CAAhB;;AAEA,YAAMY,oBAAoB,GAAI/E,KAAD,IAAW;AACpC,YAAI2D,KAAK,GAAG,CAAZ;;AACA,aAAI,IAAIrE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,KAAK,CAACT,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AAC7B,cAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAD,CAAL,IAAW,GAA9B,IAAqCU,KAAK,CAACV,CAAD,CAAL,IAAY,CAAjD,IAAsDU,KAAK,CAACV,CAAD,CAAL,IAAY4D,SAAlE,IAA+ElD,KAAK,CAACV,CAAD,CAAL,IAAY,CAA9F,EAAgG;AAC5FqE,YAAAA,KAAK,IAAI,CAAT;AACH;AACR;;AACD,eAAOA,KAAP;AACH,OARD;;AASA,UAAIK,aAAa,GAAGe,oBAAoB,CAACR,YAAD,CAAxC,CA3zBwB,CA4zBxB;AACA;;AAEA,YAAMS,oBAAoB,GAAIhF,KAAD,IAAW;AACpC,YAAI2D,KAAK,GAAG,CAAZ;;AACA,aAAI,IAAIrE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,KAAK,CAACT,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AAC7B,cAAIU,KAAK,CAACV,CAAD,CAAL,IAAY,CAAhB,EAAmB;AACfqE,YAAAA,KAAK,IAAI,CAAT;AACH;AACR;;AACD,eAAOA,KAAP;AACH,OARD,CA/zBwB,CAw0BxB;AACA;AAEA;AAEA;AAEA;;;AACA,YAAMsB,UAAU,GAAIhE,IAAD,IAAU;AACzB,YAAIC,MAAM,GAAG,EAAb;;AAEA,aAAI,IAAI5B,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE2B,IAAlB,EAAwB3B,CAAC,EAAzB,EAA4B;AACxB4B,UAAAA,MAAM,CAAC5B,CAAD,CAAN,GAAW,GAAX;AACH;;AACD,eAAO4B,MAAP;AACH,OAPD;;AAQA,UAAIgE,SAAS,GAAGD,UAAU,CAAC5D,YAAD,CAA1B;AAEA,UAAI8D,uBAAuB,GAAG,EAA9B;AACA,UAAIC,uBAAuB,GAAE,EAA7B;;AAEA,YAAMC,gBAAgB,GAAIrF,KAAD,IAAW;AAChC,YAAImC,IAAI,GAAG,EAAX;AACA,YAAIC,CAAC,GAAG,CAAR;AACA,YAAIC,EAAE,GAAE,CAAR;AACA,YAAIC,EAAE,GAAE,CAAR;AAEA,YAAIC,cAAc,GAAG,EAArB;AACA,YAAIC,mBAAmB,GAAG,EAA1B;AACA,YAAIC,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AAEA,aAAI,IAAImD,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC/D,aAAa,CAACY,MAA7B,EAAoCmD,CAAC,EAArC,EAAwC;AACpCP,UAAAA,IAAI,CAAChD,IAAL,CAAUR,aAAa,CAAC+D,CAAD,CAAvB;AACH;;AAEA,aAAI,IAAIpD,CAAC,GAAGU,KAAK,CAACT,MAAN,GAAa,CAAzB,EAA2BD,CAAC,GAAC,CAA7B,EAA+BA,CAAC,EAAhC,EAAmC;AAC/B,cAAG8C,CAAC,GAAGD,IAAI,CAAC5C,MAAZ,EAAmB;AACnB,gBAAIoD,MAAM,GAAGR,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR,CAAb;AACA,gBAAIQ,CAAC,GAAG,CAAR;;AAEA,gBAAGA,CAAC,GAAGH,SAAP,EAAiB;AACb,kBAAG;AACA,oBAAIzC,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAe,GAAf,IAAsBU,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAe6C,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR,CAAzC,EAAoD;AAChD,sBAAIpC,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAnB,EAAuB;AACnB5C,oBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;;AACD,sBAAI5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAnB,EAAuB;AACnB5C,oBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;AACJ;AACH,eATD,CASC,MAAK,CAAE;AACZ;;AACDA,YAAAA,CAAC;;AAEA,gBAAGD,MAAM,IAAI,CAAb,EAAe;AACZ,oBAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,oBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AACjBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;;AAEA,sBAAGQ,CAAC,GAAGH,SAAP,EAAiB;AACb,wBAAIzC,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAe,GAAf,IAAsBU,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAe6C,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR,CAAzC,EAAoD;AAChD,0BAAIpC,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAACV,CAAC,GAAG,KAAGsD,CAAR,CAAL,IAAmB,GAA7C,EAAiD;AAC7C5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;;AACD,0BAAI5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAACV,CAAC,GAAG,KAAGsD,CAAR,CAAL,IAAmB,GAA7C,EAAiD;AAC7C5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;AACJ;AACJ;;AACDA,kBAAAA,CAAC,GAlBgB,CAoBjB;;AACA,sBAAG5C,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAApC,EAAwC;AAEhCU,oBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,oBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,oBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,oBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,mBANL,MAOS,IAAGpC,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAApC,EAAwC;AAC1CU,oBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,oBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,oBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,oBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,mBALK,MAMF;AACAI,oBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACH;;AAED,uBAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG1C,KAAK,CAACT,MAAzB,EAAkCmD,CAAC,EAAnC,EAAsC;AAClC,wBAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,sBAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ;AAEP,iBA5CD,MA6CK,IAAG1C,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AACvBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;;AAEA,sBAAGQ,CAAC,GAAGH,SAAP,EAAiB;AACb,wBAAGzC,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAe,GAAf,IAAsBU,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAe6C,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR,CAAxC,EAAmD;AAC/C,0BAAIpC,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAACV,CAAC,GAAG,KAAGsD,CAAR,CAAL,IAAmB,GAA7C,EAAiD;AAC7C5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;;AACD,0BAAG5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAACV,CAAC,GAAG,KAAGsD,CAAR,CAAL,IAAmB,GAA5C,EAAgD;AAC5C5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;AACJ;AACJ;;AACDA,kBAAAA,CAAC,GAlBsB,CAoBvB;;AACA,sBAAG5C,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAApC,EAAwC;AAChCU,oBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,oBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,oBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,oBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,mBALL,MAMS,IAAGpC,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAApC,EAAwC;AAC1CU,oBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,oBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,oBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,oBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,mBALK,MAMF;AACAI,oBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACH;;AACD,uBAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG1C,KAAK,CAACT,MAAzB,EAAkCmD,CAAC,EAAnC,EAAsC;AAClC,wBAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,sBAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ;AAEP,iBA1CI,MA2CD;AACAH,kBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACJ,eA5FD,MA4FK;AACDG,gBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACJ,aAjGA,MAmGK,IAAGO,MAAM,IAAI,CAAb,EAAe;AAChB,oBAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,oBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AACjBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,iBALD,MAKM,IAAGpC,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AACvBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,iBALK,MAMF;AACAG,kBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACJ,eAfD,MAeK;AACDG,gBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACJ,aApBI,MAsBA,IAAGO,MAAM,IAAI,CAAb,EAAe;AACjB,oBAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,oBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAd,IAAqBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAY,GAApC,EAAwC;AAAC;AACrCU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,iBAPD,MAOM,IAAGpC,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AAAC;AACxBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACAgD,kBAAAA,uBAAuB,CAACjG,IAAxB,CAA6BgD,IAAI,CAACC,CAAD,CAAjC;AACH,iBANK,MAMA,IAAGpC,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AAAC;AACxBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACAgD,kBAAAA,uBAAuB,CAACjG,IAAxB,CAA6BgD,IAAI,CAACC,CAAD,CAAjC;AACH,iBANK,MAMA,IAAGpC,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAoB;AAAC;AACvBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACAI,kBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACH;AACJ,eAzBD,MAyBK;AACDG,gBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACJ;AACH;;AACDA,UAAAA,CAAC;AACJ,SA3LkC,CA6LnC;;;AACA,aAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAuC;AACnC,gBAAGJ,EAAE,GAAGE,mBAAmB,CAACjD,MAA5B,EAAmC;AAC/BS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAWF,mBAAmB,CAACF,EAAD,CAA9B;AACAtC,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAaF,mBAAmB,CAACF,EAAD,CAAhC;AACH;;AACDA,YAAAA,EAAE;AACL;AACJ,SAtMkC,CAwMnC;;;AACA,aAAI,IAAII,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAC5B,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAuC;AACnC,gBAAGL,EAAE,GAAGE,cAAc,CAAChD,MAAvB,EAA8B;AAC1BS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAWH,cAAc,CAACF,EAAD,CAAzB;AACArC,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAaH,cAAc,CAACF,EAAD,CAA3B;AACH;;AACD,gBAAG;AACC,kBAAIY,KAAK,GAAGV,cAAc,CAACF,EAAD,CAAd,CAAmB,EAAnB,CAAZ;;AACA,kBAAGY,KAAK,IAAI,CAAZ,EAAc;AACVmC,gBAAAA,uBAAuB,CAACjG,IAAxB,CAA6BoD,cAAc,CAACF,EAAD,CAA3C;AACH;;AACD,kBAAGY,KAAK,IAAI,CAAZ,EAAc;AACXkC,gBAAAA,uBAAuB,CAAChG,IAAxB,CAA6BoD,cAAc,CAACF,EAAD,CAA3C;AACH;AACH,aARD,CAQC,MAAK,CAAE;;AACZA,YAAAA,EAAE;AACL;AACJ;;AAED,YAAGrC,KAAK,CAAC,CAAC,CAAF,CAAL,IAAakD,SAAhB,EAA0B;AACtBkC,UAAAA,uBAAuB,CAACjG,IAAxB,CAA6Ba,KAAK,CAAC,CAAC,CAAF,CAAlC;AACH;;AAEE,eAAOA,KAAP;AACH,OAjOD;;AAmOA,UAAIsF,YAAY,GAAGD,gBAAgB,CAACH,SAAD,CAAnC,CAhkCwB,CAikCxB;;AAEC,YAAMK,iBAAiB,GAAGvF,KAAD,IAAW;AAChC,YAAIoC,CAAC,GAAG,CAAR;AACA,YAAIiB,KAAK,GAAG,EAAZ;;AAEA,aAAI,IAAIX,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,gBAAGN,CAAC,GAAGgD,uBAAuB,CAAC7F,MAA/B,EAAsC;AAClCS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW0C,uBAAuB,CAAChD,CAAD,CAAlC;AACH;;AACLA,YAAAA,CAAC;AACA;AACJ;;AACD,eAAOpC,KAAP;AACH,OAbD;;AAcA,UAAIwF,UAAU,GAAGD,iBAAiB,CAACL,SAAD,CAAlC;;AAGA,YAAMO,iBAAiB,GAAIzF,KAAD,IAAW;AACjC,YAAIoC,CAAC,GAAG,CAAR;;AACA,aAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAuC;AACnC,gBAAGN,CAAC,GAAG+C,uBAAuB,CAAC5F,MAA/B,EAAsC;AAClCS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAWyC,uBAAuB,CAAC/C,CAAD,CAAlC;AACApC,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAayC,uBAAuB,CAAC/C,CAAD,CAApC;AACH;;AACLA,YAAAA,CAAC;AACA;AACJ;;AAED,YAAGpC,KAAK,CAAC,CAAC,CAAF,CAAL,IAAakD,SAAhB,EAA0B;AACtBkC,UAAAA,uBAAuB,CAACjG,IAAxB,CAA6Ba,KAAK,CAAC,CAAC,CAAF,CAAlC;AACH,SAFD,MAEK,CAEJ;;AAED,eAAOA,KAAP;AACH,OAnBD;;AAoBAyF,MAAAA,iBAAiB,CAACP,SAAD,CAAjB;AAGD,UAAIQ,YAAY,GAAG,EAAnB;AACA,UAAIC,iBAAiB,GAAG,EAAxB;;AACA,YAAMC,iBAAiB,GAAI5F,KAAD,IAAW;AACjC,YAAI2D,KAAK,GAAE,CAAX;AACA,YAAIC,UAAU,GAAG,CAAjB;AACA,YAAInB,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AACA,aAAI,IAAImD,CAAC,GAAE,CAAX,EAAeA,CAAC,IAAID,SAApB,EAAgCC,CAAC,EAAjC,EAAoC;AACnCkB,UAAAA,UAAU,GAAIlB,CAAC,GAAG,EAAlB;;AACG,cAAG;AACF,iBAAI,IAAIpD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACU,KAAK,CAACT,MAAvB,EAAgCD,CAAC,EAAjC,EAAoC;AAC7B,kBAAGU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuB,GAAvB,IAA8B5D,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuBV,SAArD,IAAkElD,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuB,CAA5F,EAA+F;AAC3F,oBAAG;AACC,sBAAG5D,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAAlB,EAA0C;AACtC8B,oBAAAA,YAAY,CAACvG,IAAb,CAAkB,CAACG,CAAC,GAACsE,UAAH,EAAc5D,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAnB,CAAlB;AACF;;AACD,sBAAG5D,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAAf,IAAyC5D,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAA3D,EAAkF;AAC/E,wBAAG;AACC8B,sBAAAA,YAAY,CAACvG,IAAb,CAAkB,CAACG,CAAC,GAACsE,UAAH,EAAc5D,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAnB,CAAlB;AACH,qBAFD,CAEC,MAAK,CAAE;AACX;AACJ,iBATD,CASC,MAAK,CAAE;AACX;AACJ;AACJ,WAfD,CAeC,MAAK,CAAE;AACX;;AACD,aAAI,IAAIlB,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGgD,YAAY,CAACnG,MAA/B,EAAuCmD,CAAC,EAAxC,EAA2C;AACvC,cAAG;AACC,gBAAIgD,YAAY,CAAChD,CAAD,CAAZ,CAAgB,CAAhB,KAAsBgD,YAAY,CAAChD,CAAC,GAAC,CAAH,CAAZ,CAAkB,CAAlB,CAA1B,EAA+C;AAC/CiD,cAAAA,iBAAiB,CAACxG,IAAlB,CAAuBuG,YAAY,CAAChD,CAAD,CAAnC;AACH;AAEA,WALD,CAKC,MAAK,CAAE;AAEX;;AACD,YAAImB,IAAI,GAAG6B,YAAY,CAAChF,MAAb,CAAoB,CAAC,CAArB,EAAwB,CAAxB,CAAX;AACAiF,QAAAA,iBAAiB,CAACxG,IAAlB,CAAuB0E,IAAvB;AAEH,OAnCD;;AAoCA+B,MAAAA,iBAAiB,CAACV,SAAD,CAAjB;;AAEA,YAAMW,gBAAgB,GAAG,CAAC5E,IAAD,EAAMjB,KAAN,KAAgB;AAErC;AACA,YAAIoC,CAAC,GAAG,CAAR;AACA,YAAIuB,KAAK,GAAE,CAAX;AACA,YAAIlB,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AAEA,aAAI,IAAImD,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGzB,IAAI,CAAC1B,MAAvB,EAA+BmD,CAAC,EAAhC,EAAoC;AAChC,eAAI,IAAIpD,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGU,KAAK,CAACT,MAAxB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC,gBAAG;AACC,kBAAG2B,IAAI,CAACyB,CAAD,CAAJ,CAAQ,CAAR,KAAcpD,CAAjB,EAAmB;AACfU,gBAAAA,KAAK,CAACV,CAAD,CAAL,GAAW,CAAX;AACH;AACJ,aAJD,CAIC,MAAK,CAAE;AACX;AAEJ;;AAED,aAAI,IAAIoD,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGzB,IAAI,CAAC1B,MAAvB,EAA+BmD,CAAC,EAAhC,EAAoC;AAChC,eAAI,IAAIpD,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGU,KAAK,CAACT,MAAxB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC,gBAAG;AACC,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,oBAAGU,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAgB2B,IAAI,CAACmB,CAAD,CAAJ,CAAQ,CAAR,EAAW,CAAX,CAAnB,EAAkC;AAC9B,uBAAI,IAAIQ,CAAC,GAAG,CAAZ,EAAgBA,CAAC,IAAIH,SAArB,EAAiCG,CAAC,EAAlC,EAAqC;AACjC,wBAAI5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAnB,EAAuB;AACnB5C,sBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;;AACD,wBAAI5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAnB,EAAwB;AACpB5C,sBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;AACJ;AACJ;AAER;AACA,aAdD,CAcC,MAAK,CAAE;AACX;AAEJ;;AAGD,aAAI,IAAItD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,KAAK,CAACT,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC,cAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,gBAAG8C,CAAC,GAAGnB,IAAI,CAAC1B,MAAZ,EAAmB;AACnB;AACA,kBAAG;AACC,oBAAG0B,IAAI,CAACmB,CAAD,CAAJ,CAAQ,CAAR,KAAcc,SAAjB,EAA2B;AACvBlD,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAW2B,IAAI,CAACmB,CAAD,CAAJ,CAAQ,CAAR,CAAX;AACH;AACJ,eAJD,CAIC,MAAK,CAAE;AACP;;AACDA,YAAAA,CAAC;AACJ;AACJ;;AAEG,aAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,YAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;;AACD,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,YAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ,SA7DgC,CA+DjC;;AACP,OAhED;;AAiEAmD,MAAAA,gBAAgB,CAACF,iBAAD,EAAmBT,SAAnB,CAAhB;;AAEA,YAAMY,oBAAoB,GAAI9F,KAAD,IAAW;AACpC,YAAI2D,KAAK,GAAG,CAAZ;;AACA,aAAI,IAAIrE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,KAAK,CAACT,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AAC7B,cAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAD,CAAL,IAAW,GAA9B,IAAqCU,KAAK,CAACV,CAAD,CAAL,IAAY,CAAjD,IAAsDU,KAAK,CAACV,CAAD,CAAL,IAAY4D,SAAlE,IAA+ElD,KAAK,CAACV,CAAD,CAAL,IAAY,CAA9F,EAAgG;AAC5FqE,YAAAA,KAAK,IAAI,CAAT;AACH;AACR;;AACD,eAAOA,KAAP;AACH,OARD;;AASA,UAAIK,aAAa,GAAG8B,oBAAoB,CAACR,YAAD,CAAxC,CA/tCwB,CAguCxB;AACA;;AAEA,YAAMS,oBAAoB,GAAI/F,KAAD,IAAW;AACpC,YAAI2D,KAAK,GAAG,CAAZ;;AACA,aAAI,IAAIrE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,KAAK,CAACT,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AAC7B,cAAIU,KAAK,CAACV,CAAD,CAAL,IAAY,CAAhB,EAAmB;AACfqE,YAAAA,KAAK,IAAI,CAAT;AACH;AACR;;AACD,eAAOA,KAAP;AACH,OARD,CAnuCwB,CA4uCxB;AACA;AAEA;AAGA;AAEA;;;AACA,YAAMqC,UAAU,GAAI/E,IAAD,IAAU;AACzB,YAAIC,MAAM,GAAG,EAAb;;AAEA,aAAI,IAAI5B,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE2B,IAAlB,EAAwB3B,CAAC,EAAzB,EAA4B;AACxB4B,UAAAA,MAAM,CAAC5B,CAAD,CAAN,GAAW,GAAX;AACH;;AACD,eAAO4B,MAAP;AACH,OAPD;;AAQA,UAAI+E,SAAS,GAAGD,UAAU,CAAC1E,YAAD,CAA1B;AAGA,UAAI4E,uBAAuB,GAAG,EAA9B;AACA,UAAIC,uBAAuB,GAAE,EAA7B;;AAEA,YAAMC,gBAAgB,GAAIpG,KAAD,IAAW;AAChC,YAAImC,IAAI,GAAG,EAAX;AACA,YAAIC,CAAC,GAAG,CAAR;AACA,YAAIC,EAAE,GAAE,CAAR;AACA,YAAIC,EAAE,GAAE,CAAR;AAEA,YAAIC,cAAc,GAAG,EAArB;AACA,YAAIC,mBAAmB,GAAG,EAA1B;AACA,YAAIC,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AAEA,aAAI,IAAImD,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC9D,aAAa,CAACW,MAA7B,EAAoCmD,CAAC,EAArC,EAAwC;AACpCP,UAAAA,IAAI,CAAChD,IAAL,CAAUP,aAAa,CAAC8D,CAAD,CAAvB;AACH;;AAEA,aAAI,IAAIpD,CAAC,GAAGU,KAAK,CAACT,MAAN,GAAa,CAAzB,EAA2BD,CAAC,GAAC,CAA7B,EAA+BA,CAAC,EAAhC,EAAmC;AAC/B,cAAG8C,CAAC,GAAGD,IAAI,CAAC5C,MAAZ,EAAmB;AACnB,gBAAIoD,MAAM,GAAGR,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR,CAAb;AACA,gBAAIQ,CAAC,GAAG,CAAR;;AAEA,gBAAGA,CAAC,GAAGH,SAAP,EAAiB;AACb,kBAAG;AACA,oBAAIzC,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAe,GAAf,IAAsBU,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAe6C,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR,CAAzC,EAAoD;AAChD,sBAAIpC,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAnB,EAAuB;AACnB5C,oBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;;AACD,sBAAI5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAnB,EAAuB;AACnB5C,oBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;AACJ;AACH,eATD,CASC,MAAK,CAAE;AACZ;;AACDA,YAAAA,CAAC;;AAEA,gBAAGD,MAAM,IAAI,CAAb,EAAe;AACZ,oBAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,oBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AACjBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;;AAEA,sBAAGQ,CAAC,GAAGH,SAAP,EAAiB;AACb,wBAAIzC,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAe,GAAf,IAAsBU,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAe6C,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR,CAAzC,EAAoD;AAChD,0BAAIpC,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAACV,CAAC,GAAG,KAAGsD,CAAR,CAAL,IAAmB,GAA7C,EAAiD;AAC7C5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;;AACD,0BAAI5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAACV,CAAC,GAAG,KAAGsD,CAAR,CAAL,IAAmB,GAA7C,EAAiD;AAC7C5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;AACJ;AACJ;;AACDA,kBAAAA,CAAC,GAlBgB,CAoBjB;;AACA,sBAAG5C,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAApC,EAAwC;AAEhCU,oBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,oBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,oBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,oBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,mBANL,MAOS,IAAGpC,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAApC,EAAwC;AAC1CU,oBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,oBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,oBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,oBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,mBALK,MAMF;AACAI,oBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACH;;AAED,uBAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG1C,KAAK,CAACT,MAAzB,EAAkCmD,CAAC,EAAnC,EAAsC;AAClC,wBAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,sBAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ;AAEP,iBA5CD,MA6CK,IAAG1C,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AACvBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;;AAEA,sBAAGQ,CAAC,GAAGH,SAAP,EAAiB;AACb,wBAAGzC,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAe,GAAf,IAAsBU,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAe6C,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR,CAAxC,EAAmD;AAC/C,0BAAIpC,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAACV,CAAC,GAAG,KAAGsD,CAAR,CAAL,IAAmB,GAA7C,EAAiD;AAC7C5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;;AACD,0BAAG5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAACV,CAAC,GAAG,KAAGsD,CAAR,CAAL,IAAmB,GAA5C,EAAgD;AAC5C5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,wBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;AACJ;AACJ;;AACDA,kBAAAA,CAAC,GAlBsB,CAoBvB;;AACA,sBAAG5C,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAApC,EAAwC;AAChCU,oBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,oBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,oBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,oBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,mBALL,MAMS,IAAGpC,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAApC,EAAwC;AAC1CU,oBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,oBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,oBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,oBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,mBALK,MAMF;AACAI,oBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACH;;AACD,uBAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG1C,KAAK,CAACT,MAAzB,EAAkCmD,CAAC,EAAnC,EAAsC;AAClC,wBAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,sBAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ;AAEP,iBA1CI,MA2CD;AACAH,kBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACJ,eA5FD,MA4FK;AACDG,gBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACJ,aAjGA,MAmGK,IAAGO,MAAM,IAAI,CAAb,EAAe;AAChB,oBAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,oBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AACjBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,iBALD,MAKM,IAAGpC,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AACvBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,iBALK,MAMF;AACAG,kBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACJ,eAfD,MAeK;AACDG,gBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACJ,aApBI,MAsBA,IAAGO,MAAM,IAAI,CAAb,EAAe;AACjB,oBAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,oBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAd,IAAqBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAY,GAApC,EAAwC;AAAC;AACrCU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACH,iBAPD,MAOM,IAAGpC,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AAAC;AACxBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACA+D,kBAAAA,uBAAuB,CAAChH,IAAxB,CAA6BgD,IAAI,CAACC,CAAD,CAAjC;AACH,iBANK,MAMA,IAAGpC,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AAAC;AACxBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACA+D,kBAAAA,uBAAuB,CAAChH,IAAxB,CAA6BgD,IAAI,CAACC,CAAD,CAAjC;AACH,iBANK,MAMA,IAAGpC,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAoB;AAAC;AACvBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACAI,kBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACH;AACJ,eAzBD,MAyBK;AACDG,gBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACJ;AACH;;AACDA,UAAAA,CAAC;AACJ,SA3LkC,CA6LnC;;;AACA,aAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAuC;AACnC,gBAAGJ,EAAE,GAAGE,mBAAmB,CAACjD,MAA5B,EAAmC;AAC/BS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAWF,mBAAmB,CAACF,EAAD,CAA9B;AACAtC,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAaF,mBAAmB,CAACF,EAAD,CAAhC;AACH;;AACDA,YAAAA,EAAE;AACL;AACJ,SAtMkC,CAwMnC;;;AACA,aAAI,IAAII,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAC5B,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAuC;AACnC,gBAAGL,EAAE,GAAGE,cAAc,CAAChD,MAAvB,EAA8B;AAC1BS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAWH,cAAc,CAACF,EAAD,CAAzB;AACArC,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAaH,cAAc,CAACF,EAAD,CAA3B;AACH;;AACD,gBAAG;AACC,kBAAIY,KAAK,GAAGV,cAAc,CAACF,EAAD,CAAd,CAAmB,EAAnB,CAAZ;;AACA,kBAAGY,KAAK,IAAI,CAAZ,EAAc;AACVkD,gBAAAA,uBAAuB,CAAChH,IAAxB,CAA6BoD,cAAc,CAACF,EAAD,CAA3C;AACH;;AACD,kBAAGY,KAAK,IAAI,CAAZ,EAAc;AACXiD,gBAAAA,uBAAuB,CAAC/G,IAAxB,CAA6BoD,cAAc,CAACF,EAAD,CAA3C;AACH;AACH,aARD,CAQC,MAAK,CAAE;;AACZA,YAAAA,EAAE;AACL;AACJ;;AAED,YAAGrC,KAAK,CAAC,CAAC,CAAF,CAAL,IAAakD,SAAhB,EAA0B;AACtBiD,UAAAA,uBAAuB,CAAChH,IAAxB,CAA6Ba,KAAK,CAAC,CAAC,CAAF,CAAlC;AACH;;AAEE,eAAOA,KAAP;AACH,OAjOD;;AAmOA,UAAIqG,YAAY,GAAGD,gBAAgB,CAACH,SAAD,CAAnC,CAt+CwB,CAu+CxB;;AAEC,YAAMK,iBAAiB,GAAGtG,KAAD,IAAW;AAChC,YAAIoC,CAAC,GAAG,CAAR;AACA,YAAIiB,KAAK,GAAG,EAAZ;;AAEA,aAAI,IAAIX,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,gBAAGN,CAAC,GAAG+D,uBAAuB,CAAC5G,MAA/B,EAAsC;AAClCS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAWyD,uBAAuB,CAAC/D,CAAD,CAAlC;AACH;;AACLA,YAAAA,CAAC;AACA;AACJ;;AACD,eAAOpC,KAAP;AACH,OAbD;;AAcA,UAAIuG,UAAU,GAAGD,iBAAiB,CAACL,SAAD,CAAlC;;AAGA,YAAMO,iBAAiB,GAAIxG,KAAD,IAAW;AACjC,YAAIoC,CAAC,GAAG,CAAR;;AACA,aAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAuC;AACnC,gBAAGN,CAAC,GAAG8D,uBAAuB,CAAC3G,MAA/B,EAAsC;AAClCS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAWwD,uBAAuB,CAAC9D,CAAD,CAAlC;AACApC,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAawD,uBAAuB,CAAC9D,CAAD,CAApC;AACH;;AACLA,YAAAA,CAAC;AACA;AACJ;;AAED,YAAGpC,KAAK,CAAC,CAAC,CAAF,CAAL,IAAakD,SAAhB,EAA0B;AACtBiD,UAAAA,uBAAuB,CAAChH,IAAxB,CAA6Ba,KAAK,CAAC,CAAC,CAAF,CAAlC;AACH,SAFD,MAEK,CAEJ;;AAED,eAAOA,KAAP;AACH,OAnBD;;AAoBAwG,MAAAA,iBAAiB,CAACP,SAAD,CAAjB;AAGD,UAAIQ,YAAY,GAAG,EAAnB;AACA,UAAIC,iBAAiB,GAAG,EAAxB;;AACA,YAAMC,iBAAiB,GAAI3G,KAAD,IAAW;AACjC,YAAI2D,KAAK,GAAE,CAAX;AACA,YAAIC,UAAU,GAAG,CAAjB;AACA,YAAInB,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AACA,aAAI,IAAImD,CAAC,GAAE,CAAX,EAAeA,CAAC,IAAID,SAApB,EAAgCC,CAAC,EAAjC,EAAoC;AACnCkB,UAAAA,UAAU,GAAIlB,CAAC,GAAG,EAAlB;;AACG,cAAG;AACF,iBAAI,IAAIpD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACU,KAAK,CAACT,MAAvB,EAAgCD,CAAC,EAAjC,EAAoC;AAC7B,kBAAGU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuB,GAAvB,IAA8B5D,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuBV,SAArD,IAAkElD,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuB,CAA5F,EAA+F;AAC3F,oBAAG;AACC,sBAAG5D,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAAlB,EAA0C;AACtC6C,oBAAAA,YAAY,CAACtH,IAAb,CAAkB,CAACG,CAAC,GAACsE,UAAH,EAAc5D,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAnB,CAAlB;AACF;;AACD,sBAAG5D,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAAf,IAAyC5D,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAA3D,EAAkF;AAC/E,wBAAG;AACC6C,sBAAAA,YAAY,CAACtH,IAAb,CAAkB,CAACG,CAAC,GAACsE,UAAH,EAAc5D,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAnB,CAAlB;AACH,qBAFD,CAEC,MAAK,CAAE;AACX;AACJ,iBATD,CASC,MAAK,CAAE;AACX;AACJ;AACJ,WAfD,CAeC,MAAK,CAAE;AACX;;AACD,aAAI,IAAIlB,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAG+D,YAAY,CAAClH,MAA/B,EAAuCmD,CAAC,EAAxC,EAA2C;AACvC,cAAG;AACC,gBAAI+D,YAAY,CAAC/D,CAAD,CAAZ,CAAgB,CAAhB,KAAsB+D,YAAY,CAAC/D,CAAC,GAAC,CAAH,CAAZ,CAAkB,CAAlB,CAA1B,EAA+C;AAC/CgE,cAAAA,iBAAiB,CAACvH,IAAlB,CAAuBsH,YAAY,CAAC/D,CAAD,CAAnC;AACH;AAEA,WALD,CAKC,MAAK,CAAE;AAEX;;AACD,YAAImB,IAAI,GAAG4C,YAAY,CAAC/F,MAAb,CAAoB,CAAC,CAArB,EAAwB,CAAxB,CAAX;AACAgG,QAAAA,iBAAiB,CAACvH,IAAlB,CAAuB0E,IAAvB;AAEH,OAnCD;;AAoCA8C,MAAAA,iBAAiB,CAACV,SAAD,CAAjB;;AAEA,YAAMW,gBAAgB,GAAG,CAAC3F,IAAD,EAAMjB,KAAN,KAAgB;AAErC;AACA,YAAIoC,CAAC,GAAG,CAAR;AACA,YAAIuB,KAAK,GAAE,CAAX;AACA,YAAIlB,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AAEA,aAAI,IAAImD,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGzB,IAAI,CAAC1B,MAAvB,EAA+BmD,CAAC,EAAhC,EAAoC;AAChC,eAAI,IAAIpD,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGU,KAAK,CAACT,MAAxB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC,gBAAG;AACC,kBAAG2B,IAAI,CAACyB,CAAD,CAAJ,CAAQ,CAAR,KAAcpD,CAAjB,EAAmB;AACfU,gBAAAA,KAAK,CAACV,CAAD,CAAL,GAAW,CAAX;AACH;AACJ,aAJD,CAIC,MAAK,CAAE;AACX;AAEJ;;AAED,aAAI,IAAIoD,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGzB,IAAI,CAAC1B,MAAvB,EAA+BmD,CAAC,EAAhC,EAAoC;AAChC,eAAI,IAAIpD,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGU,KAAK,CAACT,MAAxB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC,gBAAG;AACC,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,oBAAGU,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAgB2B,IAAI,CAACmB,CAAD,CAAJ,CAAQ,CAAR,EAAW,CAAX,CAAnB,EAAkC;AAC9B,uBAAI,IAAIQ,CAAC,GAAG,CAAZ,EAAgBA,CAAC,IAAIH,SAArB,EAAiCG,CAAC,EAAlC,EAAqC;AACjC,wBAAI5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAnB,EAAuB;AACnB5C,sBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;;AACD,wBAAI5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAnB,EAAwB;AACpB5C,sBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;AACJ;AACJ;AAER;AACA,aAdD,CAcC,MAAK,CAAE;AACX;AAEJ;;AAGD,aAAI,IAAItD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,KAAK,CAACT,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC,cAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,gBAAG8C,CAAC,GAAGnB,IAAI,CAAC1B,MAAZ,EAAmB;AACnB;AACA,kBAAG;AACC,oBAAG0B,IAAI,CAACmB,CAAD,CAAJ,CAAQ,CAAR,KAAcc,SAAjB,EAA2B;AACvBlD,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAW2B,IAAI,CAACmB,CAAD,CAAJ,CAAQ,CAAR,CAAX;AACH;AACJ,eAJD,CAIC,MAAK,CAAE;AACP;;AACDA,YAAAA,CAAC;AACJ;AACJ;;AAEG,aAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,YAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;;AACD,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,YAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ,SA7DgC,CA+DjC;;AACP,OAhED;;AAiEAkE,MAAAA,gBAAgB,CAACF,iBAAD,EAAmBT,SAAnB,CAAhB;;AAEA,YAAMY,oBAAoB,GAAI7G,KAAD,IAAW;AACpC,YAAI2D,KAAK,GAAG,CAAZ;;AACA,aAAI,IAAIrE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,KAAK,CAACT,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AAC7B,cAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAD,CAAL,IAAW,GAA9B,IAAqCU,KAAK,CAACV,CAAD,CAAL,IAAY,CAAjD,IAAsDU,KAAK,CAACV,CAAD,CAAL,IAAY4D,SAAlE,IAA+ElD,KAAK,CAACV,CAAD,CAAL,IAAY,CAA9F,EAAgG;AAC5FqE,YAAAA,KAAK,IAAI,CAAT;AACH;AACR;;AACD,eAAOA,KAAP;AACH,OARD;;AASA,UAAIK,aAAa,GAAG6C,oBAAoB,CAACR,YAAD,CAAxC,CAroDwB,CAsoDxB;AACA;;AAEA,YAAMS,oBAAoB,GAAI9G,KAAD,IAAW;AACpC,YAAI2D,KAAK,GAAG,CAAZ;;AACA,aAAI,IAAIrE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,KAAK,CAACT,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AAC7B,cAAIU,KAAK,CAACV,CAAD,CAAL,IAAY,CAAhB,EAAmB;AACfqE,YAAAA,KAAK,IAAI,CAAT;AACH;AACR;;AACD,eAAOA,KAAP;AACH,OARD,CAzoDwB,CAkpDxB;AACA;AAEA;AAGA;AAGA;;;AACA,YAAMoD,iBAAiB,GAAI9F,IAAD,IAAU;AAChC,YAAIC,MAAM,GAAG,EAAb;;AAEA,aAAI,IAAI5B,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE2B,IAAlB,EAAwB3B,CAAC,EAAzB,EAA4B;AACxB4B,UAAAA,MAAM,CAAC5B,CAAD,CAAN,GAAW,GAAX;AACH;;AACD,eAAO4B,MAAP;AACH,OAPD;;AAQA,UAAI8F,gBAAgB,GAAGD,iBAAiB,CAACxF,mBAAD,CAAxC;AAEA,UAAI0F,2BAA2B,GAAG,EAAlC;AACA,UAAIC,2BAA2B,GAAG,EAAlC;AACA,UAAIC,8BAA8B,GAAG,EAArC;AACA,UAAIC,8BAA8B,GAAE,EAApC;;AAEA,YAAMC,uBAAuB,GAAIrH,KAAD,IAAW;AACvC,YAAImC,IAAI,GAAG,EAAX;AACA,YAAIC,CAAC,GAAG,CAAR;AACA,YAAIC,EAAE,GAAE,CAAR;AACA,YAAIC,EAAE,GAAE,CAAR;AACA,YAAIgF,EAAE,GAAE,CAAR;AAEA,YAAI/E,cAAc,GAAG,EAArB;AACA,YAAIC,mBAAmB,GAAG,EAA1B;AACA,YAAI+E,eAAe,GAAG,EAAtB;AAEA,YAAI9E,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AAEA,aAAI,IAAImD,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC7D,oBAAoB,CAACU,MAApC,EAA2CmD,CAAC,EAA5C,EAA+C;AAC3CP,UAAAA,IAAI,CAAChD,IAAL,CAAUN,oBAAoB,CAAC6D,CAAD,CAA9B;AACH;;AAEA,aAAI,IAAIpD,CAAC,GAAGU,KAAK,CAACT,MAAN,GAAa,CAAzB,EAA2BD,CAAC,GAAC,CAA7B,EAA+BA,CAAC,EAAhC,EAAmC;AAC/B,cAAG8C,CAAC,GAAGD,IAAI,CAAC5C,MAAZ,EAAmB;AACnB,gBAAIoD,MAAM,GAAGR,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR,CAAb;AACA,gBAAIoF,KAAK,GAAGrF,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR,CAAZ;AACA,gBAAIa,KAAK,GAAGd,IAAI,CAACC,CAAD,CAAJ,CAAQ,EAAR,CAAZ;;AAEA,gBAAGO,MAAM,IAAI,CAAb,EAAe;AACX,oBAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjC,IAAwCU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAY,GAAvD,EAA2D;AACnDU,gBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,gBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,gBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,gBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,gBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACApC,gBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AAEJ,eARJ,MASQ;AACDmF,gBAAAA,eAAe,CAACpI,IAAhB,CAAqBgD,IAAI,CAACC,CAAD,CAAzB;AACH;AACH,aAdL,MAgBM,IAAGO,MAAM,IAAI,CAAb,EAAe;AACjB,oBAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,oBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AAClBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AAEH,iBAND,MAMM,IAAGpC,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AACvBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AAEH,iBANK,MAOF;AACAG,kBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AAEH;AACJ,eAlBD,MAkBK;AACDG,gBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACA,aAvBC,MAyBE,IAAGO,MAAM,IAAI,CAAb,EAAe;AAChB,oBAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf;AACA,oBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AAClBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB,CAJkB,CAMlB;;AACA,uBAAI,IAAIQ,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIH,SAApB,EAA+BG,CAAC,EAAhC,EAAmC;AAClC,wBAAI5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,IAAiB,GAA3C,EAA+C;AAC3C5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,GAAkB,CAAlB;AACH;;AACD,wBAAI5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,IAAiB,GAA3C,EAA+C;AAC3C5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,GAAkB,CAAlB;AACH;AACD;;AACD,wBAAM6E,CAAC,GAAG3E,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,sBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf;AACA,wBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AAClBU,sBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAACyH,CAAD,CAAhB;AACAzH,sBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAACyH,CAAC,GAAC,CAAH,CAAlB;AACAzH,sBAAAA,KAAK,CAACV,CAAD,CAAL,GAAW6C,IAAI,CAACC,CAAD,CAAf;AACApC,sBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAa6C,IAAI,CAACC,CAAD,CAAjB;AACH,qBALD,MAMK,IAAGpC,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AACtBU,sBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAACyH,CAAD,CAAhB;AACAzH,sBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAACyH,CAAC,GAAC,CAAH,CAAlB;AACAzH,sBAAAA,KAAK,CAACyH,CAAD,CAAL,GAAWtF,IAAI,CAACC,CAAD,CAAf;AACApC,sBAAAA,KAAK,CAACyH,CAAC,GAAC,CAAH,CAAL,GAAatF,IAAI,CAACC,CAAD,CAAjB;AACJ,qBALI,MAMD;AACHI,sBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACC;AACJ,mBAjBF,MAkBK;AACAI,oBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACH,mBAtCgB,CAuCjB;;;AACA,uBAAI,IAAIM,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAC1C,KAAK,CAACT,MAAtB,EAA8BmD,CAAC,EAA/B,EAAkC;AAC9B,wBAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,sBAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ;AACL,iBA7CD,CA8CA;AA9CA,qBA+CK,IAAG1C,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AACvBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB,CAJuB,CAMtB;;AACD,uBAAI,IAAIQ,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIH,SAApB,EAA+BG,CAAC,EAAhC,EAAmC;AAClC,wBAAI5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,IAAiB,GAA3C,EAA+C;AAC3C5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,GAAkB,CAAlB;AACH;;AACD,wBAAI5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,IAAiB,GAA3C,EAA+C;AAC3C5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,GAAkB,CAAlB;AACH;AACD;;AACD,wBAAM8E,CAAC,GAAG5E,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,sBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf;AACA,wBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AAClBU,sBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC0H,CAAD,CAAhB;AACA1H,sBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC0H,CAAC,GAAC,CAAH,CAAlB;AACA1H,sBAAAA,KAAK,CAAC0H,CAAD,CAAL,GAAWvF,IAAI,CAACC,CAAD,CAAf;AACApC,sBAAAA,KAAK,CAAC0H,CAAC,GAAC,CAAH,CAAL,GAAavF,IAAI,CAACC,CAAD,CAAjB;AACH,qBALD,MAMK,IAAGpC,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AACrBU,sBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC0H,CAAD,CAAhB;AACA1H,sBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC0H,CAAC,GAAC,CAAH,CAAlB;AACA1H,sBAAAA,KAAK,CAAC0H,CAAD,CAAL,GAAWvF,IAAI,CAACC,CAAD,CAAf;AACApC,sBAAAA,KAAK,CAAC0H,CAAC,GAAC,CAAH,CAAL,GAAavF,IAAI,CAACC,CAAD,CAAjB;AACJ,qBALI,MAMD;AACHI,sBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACC;AACJ,mBAjBF,MAkBK;AACAI,oBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACH,mBAtCqB,CAuCtB;;;AACA,uBAAI,IAAIM,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAC1C,KAAK,CAACT,MAAtB,EAA8BmD,CAAC,EAA/B,EAAkC;AAC9B,wBAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,sBAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ;AACL,iBA7CI,MA8CD;AACAH,kBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACJ,eAlGD,MAkGK;AACDG,gBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AAEH;AACH;AACJ;;AACDA,UAAAA,CAAC;AACJ;;AAGD,aAAI,IAAIqF,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAEzH,KAAK,CAACT,MAAvB,EAA+BkI,CAAC,EAAhC,EAAmC;AAC/B,eAAI,IAAI/E,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,mBAAmB,CAACjD,MAAvC,EAA+CmD,CAAC,EAAhD,EAAmD;AAC/C,gBAAG1C,KAAK,CAACyH,CAAD,CAAL,IAAYjF,mBAAmB,CAACE,CAAD,CAAlC,EAAsC;AAClC,mBAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIH,SAApB,EAA+BG,CAAC,EAAhC,EAAmC;AAC/B,oBAAI5C,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAL,GAAO,CAAR,CAAL,IAAiB,GAA3C,EAA+C;AAC3C5C,kBAAAA,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAN,CAAL,GAAgB,CAAhB;AACA5C,kBAAAA,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAL,GAAO,CAAR,CAAL,GAAkB,CAAlB;AACH;;AACD,oBAAI5C,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAL,GAAO,CAAR,CAAL,IAAiB,GAA3C,EAA+C;AAC3C5C,kBAAAA,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAN,CAAL,GAAgB,CAAhB;AACA5C,kBAAAA,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAL,GAAO,CAAR,CAAL,GAAkB,CAAlB;AACH;AACD;AACP;AACJ;AACJ,SA7LqC,CA+LtC;;;AACA,aAAI,IAAItD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,KAAK,CAACT,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AAClC,cAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjC,IAAwCU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAY,GAAvD,EAA2D;AACnD,gBAAGgI,EAAE,GAAGC,eAAe,CAAChI,MAAxB,EAA+B;AAC3BS,cAAAA,KAAK,CAACV,CAAD,CAAL,GAAWiI,eAAe,CAACD,EAAD,CAA1B;AACAtH,cAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaiI,eAAe,CAACD,EAAD,CAA5B;AACAtH,cAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaiI,eAAe,CAACD,EAAD,CAA5B;AACH;;AACDA,YAAAA,EAAE;AACT;AACH,SAzMqC,CA2MtC;;;AACA,aAAI,IAAI5E,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAc,GAApC,EAAwC;AACpC,gBAAGJ,EAAE,GAAGE,mBAAmB,CAACjD,MAA5B,EAAmC;AAC/B,oBAAMoI,CAAC,GAAG7E,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAeN,CAAC,GAAC,CAAjB,CAAX,CAAV;AACI1C,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW1C,KAAK,CAAC2H,CAAD,CAAhB;AACA3H,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAa1C,KAAK,CAAC2H,CAAC,GAAC,CAAH,CAAlB;AACA3H,cAAAA,KAAK,CAAC2H,CAAD,CAAL,GAAWnF,mBAAmB,CAACF,EAAD,CAA9B;AACAtC,cAAAA,KAAK,CAAC2H,CAAC,GAAC,CAAH,CAAL,GAAanF,mBAAmB,CAACF,EAAD,CAAhC;AACP,aAND,MAMK;AACD,kBAAGE,mBAAmB,CAACF,EAAD,CAAnB,IAA2BY,SAA9B,EAAwC;AACpCiE,gBAAAA,8BAA8B,CAAChI,IAA/B,CAAoCqD,mBAAmB,CAACF,EAAD,CAAvD;AACH;AACJ;;AACDA,YAAAA,EAAE;AACL,WAbD,MAaM,IAAGtC,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAwC;AAC1C,gBAAGJ,EAAE,GAAGE,mBAAmB,CAACjD,MAA5B,EAAmC;AAC/B,oBAAMoI,CAAC,GAAG7E,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAeN,CAAC,GAAC,CAAjB,CAAX,CAAV;AACI1C,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW1C,KAAK,CAAC2H,CAAD,CAAhB;AACA3H,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAa1C,KAAK,CAAC2H,CAAC,GAAC,CAAH,CAAlB;AACA3H,cAAAA,KAAK,CAAC2H,CAAD,CAAL,GAAWnF,mBAAmB,CAACF,EAAD,CAA9B;AACAtC,cAAAA,KAAK,CAAC2H,CAAC,GAAC,CAAH,CAAL,GAAanF,mBAAmB,CAACF,EAAD,CAAhC;AACP,aAND,MAMK;AACD,kBAAGE,mBAAmB,CAACF,EAAD,CAAnB,IAA2BY,SAA9B,EAAwC;AACpCiE,gBAAAA,8BAA8B,CAAChI,IAA/B,CAAoCqD,mBAAmB,CAACF,EAAD,CAAvD;AACH;AACJ;;AACDA,YAAAA,EAAE;AACL;AACJ;;AAGD,aAAI,IAAII,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAC5B,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAwC;AACpC,gBAAGL,EAAE,GAAGE,cAAc,CAAChD,MAAvB,EAA8B;AAC1B,oBAAMqI,CAAC,GAAG9E,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAeN,CAAC,GAAC,CAAjB,CAAX,CAAV;AACA1C,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW1C,KAAK,CAAC4H,CAAD,CAAhB;AACA5H,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAa1C,KAAK,CAAC4H,CAAC,GAAC,CAAH,CAAlB;AACA5H,cAAAA,KAAK,CAAC4H,CAAD,CAAL,GAAWrF,cAAc,CAACF,EAAD,CAAzB;AACArC,cAAAA,KAAK,CAAC4H,CAAC,GAAC,CAAH,CAAL,GAAarF,cAAc,CAACF,EAAD,CAA3B;AACH;;AACD,gBAAG;AACC,kBAAIY,KAAK,GAAGV,cAAc,CAACF,EAAD,CAAd,CAAmB,EAAnB,CAAZ;;AACA,kBAAGY,KAAK,IAAI,CAAZ,EAAc;AACVkE,gBAAAA,8BAA8B,CAAChI,IAA/B,CAAoCoD,cAAc,CAACF,EAAD,CAAlD;AACH;AACJ,aALD,CAKC,MAAK,CAAE;;AACZA,YAAAA,EAAE;AACL,WAfG,MAeE,IAAGrC,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAwC;AAC1C,gBAAGL,EAAE,GAAGE,cAAc,CAAChD,MAAvB,EAA8B;AAC1B,oBAAMqD,CAAC,GAAGE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAeN,CAAC,GAAC,CAAjB,CAAX,CAAV;AACA1C,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW1C,KAAK,CAAC4C,CAAD,CAAhB;AACA5C,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAa1C,KAAK,CAAC4C,CAAC,GAAC,CAAH,CAAlB;AACA5C,cAAAA,KAAK,CAAC4C,CAAD,CAAL,GAAWL,cAAc,CAACF,EAAD,CAAzB;AACArC,cAAAA,KAAK,CAAC4C,CAAC,GAAC,CAAH,CAAL,GAAaL,cAAc,CAACF,EAAD,CAA3B;AACH;;AACD,gBAAG;AACC,kBAAIY,KAAK,GAAGV,cAAc,CAACF,EAAD,CAAd,CAAmB,EAAnB,CAAZ;;AACA,kBAAGY,KAAK,IAAI,CAAZ,EAAc;AACVkE,gBAAAA,8BAA8B,CAAChI,IAA/B,CAAoCoD,cAAc,CAACF,EAAD,CAAlD;AACH;AACJ,aALD,CAKC,MAAK,CAAE;;AACZA,YAAAA,EAAE;AACL;AACA,SA3QqC,CA6QtC;;;AACA,aAAI,IAAIK,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAC1C,KAAK,CAACT,MAAtB,EAA8BmD,CAAC,EAA/B,EAAkC;AAC9B,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,YAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ;;AAED,YAAG1C,KAAK,CAAC,CAAC,CAAF,CAAL,IAAakD,SAAhB,EAA0B;AACtBkE,UAAAA,8BAA8B,CAACjI,IAA/B,CAAoCa,KAAK,CAAC,CAAC,CAAF,CAAzC;AACH;;AAEF,eAAOA,KAAP;AACH,OAzRD;;AA0RA,UAAI6H,mBAAmB,GAAGR,uBAAuB,CAACL,gBAAD,CAAjD;;AAGC,YAAMc,wBAAwB,GAAI9H,KAAD,IAAW;AACxC,YAAIoC,CAAC,GAAG,CAAR;AACA,YAAIiB,KAAK,GAAG,EAAZ;;AAEA,aAAI,IAAIX,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAf,EAAmB;AACZ,gBAAGN,CAAC,GAAGgF,8BAA8B,CAAC7H,MAAtC,EAA6C;AACzCS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW0E,8BAA8B,CAAChF,CAAD,CAAzC;AACH;;AACDA,YAAAA,CAAC;AACP;AACJ;;AAED,eAAOpC,KAAP;AACH,OAdD;;AAeA8H,MAAAA,wBAAwB,CAACd,gBAAD,CAAxB;;AAGA,YAAMe,wBAAwB,GAAI/H,KAAD,IAAW;AACxC,YAAIoC,CAAC,GAAG,CAAR;;AACA,aAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAuC;AACnC,gBAAGN,CAAC,GAAG+E,8BAA8B,CAAC5H,MAAtC,EAA6C;AACrCS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAWyE,8BAA8B,CAAC/E,CAAD,CAAzC;AACApC,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAayE,8BAA8B,CAAC/E,CAAD,CAA3C;AACP,aAHD,MAGK;AACD,kBAAG+E,8BAA8B,CAAC/E,CAAD,CAA9B,IAAqCc,SAAxC,EAAkD;AAC9C+D,gBAAAA,2BAA2B,CAAC9H,IAA5B,CAAiCgI,8BAA8B,CAAC/E,CAAD,CAA/D;AACH;AACJ;;AACDA,YAAAA,CAAC;AACJ;AACJ;;AAED,aAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAuC;AACnC,gBAAGN,CAAC,GAAG6E,2BAA2B,CAAC1H,MAAnC,EAA0C;AACtCS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAWuE,2BAA2B,CAAC7E,CAAD,CAAtC;AACApC,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAauE,2BAA2B,CAAC7E,CAAD,CAAxC;AACH;;AACLA,YAAAA,CAAC;AACA;AACJ;;AACD,eAAOpC,KAAP;AACJ,OA1BA;;AA2BA+H,MAAAA,wBAAwB,CAACf,gBAAD,CAAxB;AAGD,UAAIgB,mBAAmB,GAAG,EAA1B;AACA,UAAIC,wBAAwB,GAAG,EAA/B;;AACA,YAAMC,mBAAmB,GAAIlI,KAAD,IAAW;AACnC,YAAI2D,KAAK,GAAE,CAAX;AACA,YAAIC,UAAU,GAAG,CAAjB;AACA,YAAIuE,WAAW,GAAG,CAAlB;AACA,YAAI1F,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AACA,aAAI,IAAImD,CAAC,GAAE,CAAX,EAAeA,CAAC,IAAID,SAApB,EAAgCC,CAAC,EAAjC,EAAoC;AACnCkB,UAAAA,UAAU,GAAIlB,CAAC,GAAG,EAAlB;;AACG,cAAG;AACF,iBAAI,IAAIpD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACU,KAAK,CAACT,MAAvB,EAAgCD,CAAC,EAAjC,EAAoC;AAC7B,kBAAGU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuB,GAAvB,IAA8B5D,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuBV,SAArD,IAAkElD,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuB,CAA5F,EAA+F;AAC3F,oBAAG;AACC,sBAAG5D,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAAlB,EAA0C;AACtCoE,oBAAAA,mBAAmB,CAAC7I,IAApB,CAAyB,CAACG,CAAC,GAACsE,UAAH,EAAc5D,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAnB,CAAzB;AACF;;AACD,sBAAG5D,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAAf,IAAyC5D,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAA3D,EAAkF;AAC/E,wBAAG;AACCoE,sBAAAA,mBAAmB,CAAC7I,IAApB,CAAyB,CAACG,CAAC,GAACsE,UAAH,EAAc5D,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAnB,CAAzB;AACH,qBAFD,CAEC,MAAK,CAAE;AACX;AACJ,iBATD,CASC,MAAK,CAAE;AACX;AACJ;AACJ,WAfD,CAeC,MAAK,CAAE;AACX;;AACD,aAAI,IAAIlB,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGsF,mBAAmB,CAACzI,MAAtC,EAA8CmD,CAAC,EAA/C,EAAkD;AAC9C,cAAG;AACC,gBAAIsF,mBAAmB,CAACtF,CAAD,CAAnB,CAAuB,CAAvB,KAA6BsF,mBAAmB,CAACtF,CAAC,GAAC,CAAH,CAAnB,CAAyB,CAAzB,CAAjC,EAA6D;AAC7DuF,cAAAA,wBAAwB,CAAC9I,IAAzB,CAA8B6I,mBAAmB,CAACtF,CAAD,CAAjD;AACH;AAEA,WALD,CAKC,MAAK,CAAE;AAEX;;AACDsF,QAAAA,mBAAmB,CAAC1H,GAApB,CAAwB2H,wBAAxB;AAEH,OAnCD;;AAoCAC,MAAAA,mBAAmB,CAAClB,gBAAD,CAAnB;;AAEA,YAAMoB,sBAAsB,GAAG,CAACnH,IAAD,EAAMjB,KAAN,KAAgB;AAE3C,YAAIoC,CAAC,GAAG,CAAR;AACA,YAAIuB,KAAK,GAAE,CAAX;AACA,YAAIlB,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AAEA,aAAI,IAAImD,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGzB,IAAI,CAAC1B,MAAvB,EAA+BmD,CAAC,EAAhC,EAAoC;AAChC,eAAI,IAAIpD,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGU,KAAK,CAACT,MAAxB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC,gBAAG;AACC,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY4D,SAAf,EAAyB;AACrB,oBAAGjC,IAAI,CAACyB,CAAD,CAAJ,CAAQ,CAAR,KAAcpD,CAAjB,EAAmB;AACfU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAW,CAAX;;AACA,uBAAI,IAAIsD,CAAC,GAAG,CAAZ,EAAgBA,CAAC,IAAGH,SAApB,EAAgCG,CAAC,EAAjC,EAAoC;AAChC,wBAAI5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAnB,EAAuB;AACnB5C,sBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;;AACD,wBAAI5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAnB,EAAwB;AACpB5C,sBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;AACJ;AACJ;AACJ;AACJ,aAdD,CAcC,MAAK,CAAE;AACX;AAEJ;;AACG,aAAI,IAAItD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,KAAK,CAACT,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AAC7B,cAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,gBAAG8C,CAAC,GAAEnB,IAAI,CAAC1B,MAAX,EAAkB;AAClBoE,cAAAA,KAAK,IAAG,CAAR;AACA3D,cAAAA,KAAK,CAACV,CAAD,CAAL,GAAW2B,IAAI,CAACmB,CAAD,CAAJ,CAAQ,CAAR,CAAX;AACC;;AACDA,YAAAA,CAAC;AACR;AACJ;;AAED,aAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,YAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ,SAxCsC,CAyCvC;;AACP,OA1CD;;AA2CA0F,MAAAA,sBAAsB,CAACH,wBAAD,EAA0BjB,gBAA1B,CAAtB;;AAEA,YAAMqB,4BAA4B,GAAIrI,KAAD,IAAW;AAC5C,YAAI2D,KAAK,GAAG,CAAZ;;AACA,aAAI,IAAIrE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,KAAK,CAACT,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AAC7B,cAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAD,CAAL,IAAW,EAA9B,IAAoCU,KAAK,CAACV,CAAD,CAAL,IAAY,CAAhD,IAAqDU,KAAK,CAACV,CAAD,CAAL,IAAY4D,SAApE,EAA8E;AAC1ES,YAAAA,KAAK,IAAI,CAAT;AACH;AACR;;AACD,eAAOA,KAAP;AACH,OARD;;AASA,UAAIK,aAAa,GAAGqE,4BAA4B,CAACR,mBAAD,CAAhD,CAtlEwB,CAulExB;AACA;AAEA;AAEA;;AAEA,YAAMS,kBAAkB,GAAIrH,IAAD,IAAU;AACjC,YAAIC,MAAM,GAAG,EAAb;;AAEA,aAAI,IAAI5B,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE2B,IAAlB,EAAwB3B,CAAC,EAAzB,EAA4B;AACxB4B,UAAAA,MAAM,CAAC5B,CAAD,CAAN,GAAW,GAAX;AACH;;AACD,eAAO4B,MAAP;AACH,OAPD;;AAQA,UAAIqH,iBAAiB,GAAGD,kBAAkB,CAAC9G,oBAAD,CAA1C;AAEA,UAAIgH,4BAA4B,GAAG,EAAnC;AACA,UAAIC,4BAA4B,GAAG,EAAnC;AACA,UAAIC,+BAA+B,GAAG,EAAtC;AACA,UAAIC,+BAA+B,GAAE,EAArC;;AAEA,YAAMC,wBAAwB,GAAI5I,KAAD,IAAW;AACxC,YAAImC,IAAI,GAAG,EAAX;AACA,YAAIC,CAAC,GAAG,CAAR;AACA,YAAIC,EAAE,GAAE,CAAR;AACA,YAAIC,EAAE,GAAE,CAAR;AACA,YAAIgF,EAAE,GAAE,CAAR;AAEA,YAAI/E,cAAc,GAAG,EAArB;AACA,YAAIC,mBAAmB,GAAG,EAA1B;AACA,YAAI+E,eAAe,GAAG,EAAtB;AAEA,YAAI9E,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AAEA,aAAI,IAAImD,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC5D,qBAAqB,CAACS,MAArC,EAA4CmD,CAAC,EAA7C,EAAgD;AAC5CP,UAAAA,IAAI,CAAChD,IAAL,CAAUL,qBAAqB,CAAC4D,CAAD,CAA/B;AACH;;AAEA,aAAI,IAAIpD,CAAC,GAAGU,KAAK,CAACT,MAAN,GAAa,CAAzB,EAA2BD,CAAC,GAAC,CAA7B,EAA+BA,CAAC,EAAhC,EAAmC;AAC/B,cAAG8C,CAAC,GAAGD,IAAI,CAAC5C,MAAZ,EAAmB;AACnB,gBAAIoD,MAAM,GAAGR,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR,CAAb;AACA,gBAAIoF,KAAK,GAAGrF,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR,CAAZ;AACA,gBAAIa,KAAK,GAAGd,IAAI,CAACC,CAAD,CAAJ,CAAQ,EAAR,CAAZ;;AAEA,gBAAGO,MAAM,IAAI,CAAb,EAAe;AACX,oBAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjC,IAAwCU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAY,GAAvD,EAA2D;AACnDU,gBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,gBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,gBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,gBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,gBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACApC,gBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AAEJ,eARJ,MASQ;AACDmF,gBAAAA,eAAe,CAACpI,IAAhB,CAAqBgD,IAAI,CAACC,CAAD,CAAzB;AACH;AACH,aAdL,MAgBM,IAAGO,MAAM,IAAI,CAAb,EAAe;AACjB,oBAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,oBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AAClBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AAEH,iBAND,MAMM,IAAGpC,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AACvBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AAEH,iBANK,MAOF;AACAG,kBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AAEH;AACJ,eAlBD,MAkBK;AACDG,gBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACA,aAvBC,MAyBE,IAAGO,MAAM,IAAI,CAAb,EAAe;AAChB,oBAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf;AACA,oBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AAClBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB,CAJkB,CAMlB;;AACA,uBAAI,IAAIQ,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIH,SAApB,EAA+BG,CAAC,EAAhC,EAAmC;AAClC,wBAAI5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,IAAiB,GAA3C,EAA+C;AAC3C5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,GAAkB,CAAlB;AACH;;AACD,wBAAI5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,IAAiB,GAA3C,EAA+C;AAC3C5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,GAAkB,CAAlB;AACH;AACD;;AACD,wBAAM6E,CAAC,GAAG3E,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,sBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf;AACA,wBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AAClBU,sBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAACyH,CAAD,CAAhB;AACAzH,sBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAACyH,CAAC,GAAC,CAAH,CAAlB;AACAzH,sBAAAA,KAAK,CAACV,CAAD,CAAL,GAAW6C,IAAI,CAACC,CAAD,CAAf;AACApC,sBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAa6C,IAAI,CAACC,CAAD,CAAjB;AACH,qBALD,MAMK,IAAGpC,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AACtBU,sBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAACyH,CAAD,CAAhB;AACAzH,sBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAACyH,CAAC,GAAC,CAAH,CAAlB;AACAzH,sBAAAA,KAAK,CAACyH,CAAD,CAAL,GAAWtF,IAAI,CAACC,CAAD,CAAf;AACApC,sBAAAA,KAAK,CAACyH,CAAC,GAAC,CAAH,CAAL,GAAatF,IAAI,CAACC,CAAD,CAAjB;AACJ,qBALI,MAMD;AACHI,sBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACC;AACJ,mBAjBF,MAkBK;AACAI,oBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACH,mBAtCgB,CAuCjB;;;AACA,uBAAI,IAAIM,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAC1C,KAAK,CAACT,MAAtB,EAA8BmD,CAAC,EAA/B,EAAkC;AAC9B,wBAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,sBAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ;AACL,iBA7CD,CA8CA;AA9CA,qBA+CK,IAAG1C,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AACvBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB,CAJuB,CAMtB;;AACD,uBAAI,IAAIQ,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIH,SAApB,EAA+BG,CAAC,EAAhC,EAAmC;AAClC,wBAAI5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,IAAiB,GAA3C,EAA+C;AAC3C5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,GAAkB,CAAlB;AACH;;AACD,wBAAI5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,IAAiB,GAA3C,EAA+C;AAC3C5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,GAAkB,CAAlB;AACH;AACD;;AACD,wBAAM8E,CAAC,GAAG5E,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,sBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf;AACA,wBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AAClBU,sBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC0H,CAAD,CAAhB;AACA1H,sBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC0H,CAAC,GAAC,CAAH,CAAlB;AACA1H,sBAAAA,KAAK,CAAC0H,CAAD,CAAL,GAAWvF,IAAI,CAACC,CAAD,CAAf;AACApC,sBAAAA,KAAK,CAAC0H,CAAC,GAAC,CAAH,CAAL,GAAavF,IAAI,CAACC,CAAD,CAAjB;AACH,qBALD,MAMK,IAAGpC,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AACrBU,sBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC0H,CAAD,CAAhB;AACA1H,sBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC0H,CAAC,GAAC,CAAH,CAAlB;AACA1H,sBAAAA,KAAK,CAAC0H,CAAD,CAAL,GAAWvF,IAAI,CAACC,CAAD,CAAf;AACApC,sBAAAA,KAAK,CAAC0H,CAAC,GAAC,CAAH,CAAL,GAAavF,IAAI,CAACC,CAAD,CAAjB;AACJ,qBALI,MAMD;AACHI,sBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACC;AACJ,mBAjBF,MAkBK;AACAI,oBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACH,mBAtCqB,CAuCtB;;;AACA,uBAAI,IAAIM,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAC1C,KAAK,CAACT,MAAtB,EAA8BmD,CAAC,EAA/B,EAAkC;AAC9B,wBAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,sBAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ;AACL,iBA7CI,MA8CD;AACAH,kBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACJ,eAlGD,MAkGK;AACDG,gBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AAEH;AACH;AACJ;;AACDA,UAAAA,CAAC;AACJ;;AAGD,aAAI,IAAIqF,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAEzH,KAAK,CAACT,MAAvB,EAA+BkI,CAAC,EAAhC,EAAmC;AAC/B,eAAI,IAAI/E,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,mBAAmB,CAACjD,MAAvC,EAA+CmD,CAAC,EAAhD,EAAmD;AAC/C,gBAAG1C,KAAK,CAACyH,CAAD,CAAL,IAAYjF,mBAAmB,CAACE,CAAD,CAAlC,EAAsC;AAClC,mBAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIH,SAApB,EAA+BG,CAAC,EAAhC,EAAmC;AAC/B,oBAAI5C,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAL,GAAO,CAAR,CAAL,IAAiB,GAA3C,EAA+C;AAC3C5C,kBAAAA,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAN,CAAL,GAAgB,CAAhB;AACA5C,kBAAAA,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAL,GAAO,CAAR,CAAL,GAAkB,CAAlB;AACH;;AACD,oBAAI5C,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAL,GAAO,CAAR,CAAL,IAAiB,GAA3C,EAA+C;AAC3C5C,kBAAAA,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAN,CAAL,GAAgB,CAAhB;AACA5C,kBAAAA,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAL,GAAO,CAAR,CAAL,GAAkB,CAAlB;AACH;AACD;AACP;AACJ;AACJ,SA7LsC,CA+LvC;;;AACA,aAAI,IAAItD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,KAAK,CAACT,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AAClC,cAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjC,IAAwCU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAY,GAAvD,EAA2D;AACnD,gBAAGgI,EAAE,GAAGC,eAAe,CAAChI,MAAxB,EAA+B;AAC3BS,cAAAA,KAAK,CAACV,CAAD,CAAL,GAAWiI,eAAe,CAACD,EAAD,CAA1B;AACAtH,cAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaiI,eAAe,CAACD,EAAD,CAA5B;AACAtH,cAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaiI,eAAe,CAACD,EAAD,CAA5B;AACH;;AACDA,YAAAA,EAAE;AACT;AACH,SAzMsC,CA2MvC;;;AACA,aAAI,IAAI5E,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAc,GAApC,EAAwC;AACpC,gBAAGJ,EAAE,GAAGE,mBAAmB,CAACjD,MAA5B,EAAmC;AAC/B,oBAAMoI,CAAC,GAAG7E,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAeN,CAAC,GAAC,CAAjB,CAAX,CAAV;AACI1C,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW1C,KAAK,CAAC2H,CAAD,CAAhB;AACA3H,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAa1C,KAAK,CAAC2H,CAAC,GAAC,CAAH,CAAlB;AACA3H,cAAAA,KAAK,CAAC2H,CAAD,CAAL,GAAWnF,mBAAmB,CAACF,EAAD,CAA9B;AACAtC,cAAAA,KAAK,CAAC2H,CAAC,GAAC,CAAH,CAAL,GAAanF,mBAAmB,CAACF,EAAD,CAAhC;AACP,aAND,MAMK;AACD,kBAAGE,mBAAmB,CAACF,EAAD,CAAnB,IAA2BY,SAA9B,EAAwC;AACpCwF,gBAAAA,+BAA+B,CAACvJ,IAAhC,CAAqCqD,mBAAmB,CAACF,EAAD,CAAxD;AACH;AACJ;;AACDA,YAAAA,EAAE;AACL,WAbD,MAaM,IAAGtC,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAwC;AAC1C,gBAAGJ,EAAE,GAAGE,mBAAmB,CAACjD,MAA5B,EAAmC;AAC/B,oBAAMoI,CAAC,GAAG7E,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAeN,CAAC,GAAC,CAAjB,CAAX,CAAV;AACI1C,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW1C,KAAK,CAAC2H,CAAD,CAAhB;AACA3H,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAa1C,KAAK,CAAC2H,CAAC,GAAC,CAAH,CAAlB;AACA3H,cAAAA,KAAK,CAAC2H,CAAD,CAAL,GAAWnF,mBAAmB,CAACF,EAAD,CAA9B;AACAtC,cAAAA,KAAK,CAAC2H,CAAC,GAAC,CAAH,CAAL,GAAanF,mBAAmB,CAACF,EAAD,CAAhC;AACP,aAND,MAMK;AACD,kBAAGE,mBAAmB,CAACF,EAAD,CAAnB,IAA2BY,SAA9B,EAAwC;AACpCwF,gBAAAA,+BAA+B,CAACvJ,IAAhC,CAAqCqD,mBAAmB,CAACF,EAAD,CAAxD;AACH;AACJ;;AACDA,YAAAA,EAAE;AACL;AACJ;;AAGD,aAAI,IAAII,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAC5B,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAwC;AACpC,gBAAGL,EAAE,GAAGE,cAAc,CAAChD,MAAvB,EAA8B;AAC1B,oBAAMqI,CAAC,GAAG9E,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAeN,CAAC,GAAC,CAAjB,CAAX,CAAV;AACA1C,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW1C,KAAK,CAAC4H,CAAD,CAAhB;AACA5H,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAa1C,KAAK,CAAC4H,CAAC,GAAC,CAAH,CAAlB;AACA5H,cAAAA,KAAK,CAAC4H,CAAD,CAAL,GAAWrF,cAAc,CAACF,EAAD,CAAzB;AACArC,cAAAA,KAAK,CAAC4H,CAAC,GAAC,CAAH,CAAL,GAAarF,cAAc,CAACF,EAAD,CAA3B;AACH;;AACD,gBAAG;AACC,kBAAIY,KAAK,GAAGV,cAAc,CAACF,EAAD,CAAd,CAAmB,EAAnB,CAAZ;;AACA,kBAAGY,KAAK,IAAI,CAAZ,EAAc;AACVyF,gBAAAA,+BAA+B,CAACvJ,IAAhC,CAAqCoD,cAAc,CAACF,EAAD,CAAnD;AACH;AACJ,aALD,CAKC,MAAK,CAAE;;AACZA,YAAAA,EAAE;AACL,WAfG,MAeE,IAAGrC,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAwC;AAC1C,gBAAGL,EAAE,GAAGE,cAAc,CAAChD,MAAvB,EAA8B;AAC1B,oBAAMqD,CAAC,GAAGE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAeN,CAAC,GAAC,CAAjB,CAAX,CAAV;AACA1C,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW1C,KAAK,CAAC4C,CAAD,CAAhB;AACA5C,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAa1C,KAAK,CAAC4C,CAAC,GAAC,CAAH,CAAlB;AACA5C,cAAAA,KAAK,CAAC4C,CAAD,CAAL,GAAWL,cAAc,CAACF,EAAD,CAAzB;AACArC,cAAAA,KAAK,CAAC4C,CAAC,GAAC,CAAH,CAAL,GAAaL,cAAc,CAACF,EAAD,CAA3B;AACH;;AACD,gBAAG;AACC,kBAAIY,KAAK,GAAGV,cAAc,CAACF,EAAD,CAAd,CAAmB,EAAnB,CAAZ;;AACA,kBAAGY,KAAK,IAAI,CAAZ,EAAc;AACVyF,gBAAAA,+BAA+B,CAACvJ,IAAhC,CAAqCoD,cAAc,CAACF,EAAD,CAAnD;AACH;AACJ,aALD,CAKC,MAAK,CAAE;;AACZA,YAAAA,EAAE;AACL;AACA,SA3QsC,CA6QvC;;;AACA,aAAI,IAAIK,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAC1C,KAAK,CAACT,MAAtB,EAA8BmD,CAAC,EAA/B,EAAkC;AAC9B,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,YAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ;;AAED,YAAG1C,KAAK,CAAC,CAAC,CAAF,CAAL,IAAakD,SAAhB,EAA0B;AACtByF,UAAAA,+BAA+B,CAACxJ,IAAhC,CAAqCa,KAAK,CAAC,CAAC,CAAF,CAA1C;AACH;;AAEF,eAAOA,KAAP;AACH,OAzRD;;AA0RA,UAAI6I,oBAAoB,GAAGD,wBAAwB,CAACL,iBAAD,CAAnD;;AAGC,YAAMO,yBAAyB,GAAI9I,KAAD,IAAW;AACzC,YAAIoC,CAAC,GAAG,CAAR;AACA,YAAIiB,KAAK,GAAG,EAAZ;;AAEA,aAAI,IAAIX,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAf,EAAmB;AACZ,gBAAGN,CAAC,GAAGuG,+BAA+B,CAACpJ,MAAvC,EAA8C;AAC1CS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAWiG,+BAA+B,CAACvG,CAAD,CAA1C;AACH;;AACDA,YAAAA,CAAC;AACP;AACJ;;AAED,eAAOpC,KAAP;AACH,OAdD;;AAeA8I,MAAAA,yBAAyB,CAACP,iBAAD,CAAzB;;AAGA,YAAMQ,yBAAyB,GAAI/I,KAAD,IAAW;AACzC,YAAIoC,CAAC,GAAG,CAAR;;AACA,aAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAuC;AACnC,gBAAGN,CAAC,GAAGsG,+BAA+B,CAACnJ,MAAvC,EAA8C;AACtCS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAWgG,+BAA+B,CAACtG,CAAD,CAA1C;AACApC,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAagG,+BAA+B,CAACtG,CAAD,CAA5C;AACP,aAHD,MAGK;AACD,kBAAGsG,+BAA+B,CAACtG,CAAD,CAA/B,IAAsCc,SAAzC,EAAmD;AAC/CsF,gBAAAA,4BAA4B,CAACrJ,IAA7B,CAAkCuJ,+BAA+B,CAACtG,CAAD,CAAjE;AACH;AACJ;;AACDA,YAAAA,CAAC;AACJ;AACJ;;AAED,aAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAuC;AACnC,gBAAGN,CAAC,GAAGoG,4BAA4B,CAACjJ,MAApC,EAA2C;AACvCS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW8F,4BAA4B,CAACpG,CAAD,CAAvC;AACApC,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAa8F,4BAA4B,CAACpG,CAAD,CAAzC;AACH;;AACLA,YAAAA,CAAC;AACA;AACJ;;AACD,eAAOpC,KAAP;AACJ,OA1BA;;AA2BA+I,MAAAA,yBAAyB,CAACR,iBAAD,CAAzB;AAGD,UAAIS,oBAAoB,GAAG,EAA3B;AACA,UAAIC,yBAAyB,GAAG,EAAhC;;AACA,YAAMC,oBAAoB,GAAIlJ,KAAD,IAAW;AACpC,YAAI2D,KAAK,GAAE,CAAX;AACA,YAAIC,UAAU,GAAG,CAAjB;AACA,YAAIuE,WAAW,GAAG,CAAlB;AACA,YAAI1F,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AACA,aAAI,IAAImD,CAAC,GAAE,CAAX,EAAeA,CAAC,IAAID,SAApB,EAAgCC,CAAC,EAAjC,EAAoC;AACnCkB,UAAAA,UAAU,GAAIlB,CAAC,GAAG,EAAlB;;AACG,cAAG;AACF,iBAAI,IAAIpD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACU,KAAK,CAACT,MAAvB,EAAgCD,CAAC,EAAjC,EAAoC;AAC7B,kBAAGU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuB,GAAvB,IAA8B5D,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuBV,SAArD,IAAkElD,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuB,CAA5F,EAA+F;AAC3F,oBAAG;AACC,sBAAG5D,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAAlB,EAA0C;AACtCoF,oBAAAA,oBAAoB,CAAC7J,IAArB,CAA0B,CAACG,CAAC,GAACsE,UAAH,EAAc5D,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAnB,CAA1B;AACF;;AACD,sBAAG5D,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAAf,IAAyC5D,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAA3D,EAAkF;AAC/E,wBAAG;AACCoF,sBAAAA,oBAAoB,CAAC7J,IAArB,CAA0B,CAACG,CAAC,GAACsE,UAAH,EAAc5D,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAnB,CAA1B;AACH,qBAFD,CAEC,MAAK,CAAE;AACX;AACJ,iBATD,CASC,MAAK,CAAE;AACX;AACJ;AACJ,WAfD,CAeC,MAAK,CAAE;AACX;;AACD,aAAI,IAAIlB,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGsG,oBAAoB,CAACzJ,MAAvC,EAA+CmD,CAAC,EAAhD,EAAmD;AAC/C,cAAG;AACC,gBAAIsG,oBAAoB,CAACtG,CAAD,CAApB,CAAwB,CAAxB,KAA8BsG,oBAAoB,CAACtG,CAAC,GAAC,CAAH,CAApB,CAA0B,CAA1B,CAAlC,EAA+D;AAC/DuG,cAAAA,yBAAyB,CAAC9J,IAA1B,CAA+B6J,oBAAoB,CAACtG,CAAD,CAAnD;AACH;AAEA,WALD,CAKC,MAAK,CAAE;AAEX;;AACDsG,QAAAA,oBAAoB,CAAC1I,GAArB,CAAyB2I,yBAAzB;AAEH,OAnCD;;AAoCAC,MAAAA,oBAAoB,CAACX,iBAAD,CAApB;;AAEA,YAAMY,wBAAwB,GAAG,CAAClI,IAAD,EAAMjB,KAAN,KAAgB;AAE7C,YAAIoC,CAAC,GAAG,CAAR;AACA,YAAIuB,KAAK,GAAE,CAAX;AACA,YAAIlB,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AAEA,aAAI,IAAImD,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGzB,IAAI,CAAC1B,MAAvB,EAA+BmD,CAAC,EAAhC,EAAoC;AAChC,eAAI,IAAIpD,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGU,KAAK,CAACT,MAAxB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC,gBAAG;AACC,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY4D,SAAf,EAAyB;AACrB,oBAAGjC,IAAI,CAACyB,CAAD,CAAJ,CAAQ,CAAR,KAAcpD,CAAjB,EAAmB;AACfU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAW,CAAX;;AACA,uBAAI,IAAIsD,CAAC,GAAG,CAAZ,EAAgBA,CAAC,IAAGH,SAApB,EAAgCG,CAAC,EAAjC,EAAoC;AAChC,wBAAI5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAnB,EAAuB;AACnB5C,sBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;;AACD,wBAAI5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAnB,EAAwB;AACpB5C,sBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;AACJ;AACJ;AACJ;AACJ,aAdD,CAcC,MAAK,CAAE;AACX;AAEJ;;AACG,aAAI,IAAItD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,KAAK,CAACT,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AAC7B,cAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,gBAAG8C,CAAC,GAAEnB,IAAI,CAAC1B,MAAX,EAAkB;AAClBoE,cAAAA,KAAK,IAAG,CAAR;AACA3D,cAAAA,KAAK,CAACV,CAAD,CAAL,GAAW2B,IAAI,CAACmB,CAAD,CAAJ,CAAQ,CAAR,CAAX;AACC;;AACDA,YAAAA,CAAC;AACR;AACJ;;AAED,aAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,YAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ,SAxCwC,CAyCzC;;AACP,OA1CD;;AA2CAyG,MAAAA,wBAAwB,CAACF,yBAAD,EAA2BV,iBAA3B,CAAxB;;AAEA,YAAMa,6BAA6B,GAAIpJ,KAAD,IAAW;AAC7C,YAAI2D,KAAK,GAAG,CAAZ;;AACA,aAAI,IAAIrE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,KAAK,CAACT,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AAC7B,cAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAD,CAAL,IAAW,GAA9B,IAAqCU,KAAK,CAACV,CAAD,CAAL,IAAY,CAAjD,IAAsDU,KAAK,CAACV,CAAD,CAAL,IAAY4D,SAArE,EAA+E;AAC3ES,YAAAA,KAAK,IAAI,CAAT;AACH;AACR;;AACD,eAAOA,KAAP;AACH,OARD;;AASA,UAAIK,aAAa,GAAGoF,6BAA6B,CAACP,oBAAD,CAAjD,CAxhFwB,CAyhFxB;AACA;AAEA;AAEA;;AAEA,YAAMQ,kBAAkB,GAAIpI,IAAD,IAAU;AACjC,YAAIC,MAAM,GAAG,EAAb;;AAEA,aAAI,IAAI5B,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE2B,IAAlB,EAAwB3B,CAAC,EAAzB,EAA4B;AACxB4B,UAAAA,MAAM,CAAC5B,CAAD,CAAN,GAAW,GAAX;AACH;;AACD,eAAO4B,MAAP;AACH,OAPD;;AAQA,UAAIoI,iBAAiB,GAAGD,kBAAkB,CAAC5H,oBAAD,CAA1C;AAEA,UAAI8H,4BAA4B,GAAG,EAAnC;AACA,UAAIC,4BAA4B,GAAG,EAAnC;AACA,UAAIC,+BAA+B,GAAG,EAAtC;AACA,UAAIC,+BAA+B,GAAE,EAArC;;AAEA,YAAMC,wBAAwB,GAAI3J,KAAD,IAAW;AACxC,YAAImC,IAAI,GAAG,EAAX;AACA,YAAIC,CAAC,GAAG,CAAR;AACA,YAAIC,EAAE,GAAE,CAAR;AACA,YAAIC,EAAE,GAAE,CAAR;AACA,YAAIgF,EAAE,GAAE,CAAR;AAEA,YAAI/E,cAAc,GAAG,EAArB;AACA,YAAIC,mBAAmB,GAAG,EAA1B;AACA,YAAI+E,eAAe,GAAG,EAAtB;AAEA,YAAI9E,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AAEA,aAAI,IAAImD,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC3D,qBAAqB,CAACQ,MAArC,EAA4CmD,CAAC,EAA7C,EAAgD;AAC5CP,UAAAA,IAAI,CAAChD,IAAL,CAAUJ,qBAAqB,CAAC2D,CAAD,CAA/B;AACH;;AAEA,aAAI,IAAIpD,CAAC,GAAGU,KAAK,CAACT,MAAN,GAAa,CAAzB,EAA2BD,CAAC,GAAC,CAA7B,EAA+BA,CAAC,EAAhC,EAAmC;AAC/B,cAAG8C,CAAC,GAAGD,IAAI,CAAC5C,MAAZ,EAAmB;AACnB,gBAAIoD,MAAM,GAAGR,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR,CAAb;AACA,gBAAIoF,KAAK,GAAGrF,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR,CAAZ;AACA,gBAAIa,KAAK,GAAGd,IAAI,CAACC,CAAD,CAAJ,CAAQ,EAAR,CAAZ;;AAEA,gBAAGO,MAAM,IAAI,CAAb,EAAe;AACX,oBAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjC,IAAwCU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAY,GAAvD,EAA2D;AACnDU,gBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,gBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,gBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,gBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,gBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACApC,gBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AAEJ,eARJ,MASQ;AACDmF,gBAAAA,eAAe,CAACpI,IAAhB,CAAqBgD,IAAI,CAACC,CAAD,CAAzB;AACH;AACH,aAdL,MAgBM,IAAGO,MAAM,IAAI,CAAb,EAAe;AACjB,oBAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,oBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AAClBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AAEH,iBAND,MAMM,IAAGpC,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AACvBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AAEH,iBANK,MAOF;AACAG,kBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AAEH;AACJ,eAlBD,MAkBK;AACDG,gBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACA,aAvBC,MAyBE,IAAGO,MAAM,IAAI,CAAb,EAAe;AAChB,oBAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf;AACA,oBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AAClBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB,CAJkB,CAMlB;;AACA,uBAAI,IAAIQ,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIH,SAApB,EAA+BG,CAAC,EAAhC,EAAmC;AAClC,wBAAI5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,IAAiB,GAA3C,EAA+C;AAC3C5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,GAAkB,CAAlB;AACH;;AACD,wBAAI5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,IAAiB,GAA3C,EAA+C;AAC3C5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,GAAkB,CAAlB;AACH;AACD;;AACD,wBAAM6E,CAAC,GAAG3E,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,sBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf;AACA,wBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AAClBU,sBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAACyH,CAAD,CAAhB;AACAzH,sBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAACyH,CAAC,GAAC,CAAH,CAAlB;AACAzH,sBAAAA,KAAK,CAACV,CAAD,CAAL,GAAW6C,IAAI,CAACC,CAAD,CAAf;AACApC,sBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAa6C,IAAI,CAACC,CAAD,CAAjB;AACH,qBALD,MAMK,IAAGpC,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AACtBU,sBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAACyH,CAAD,CAAhB;AACAzH,sBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAACyH,CAAC,GAAC,CAAH,CAAlB;AACAzH,sBAAAA,KAAK,CAACyH,CAAD,CAAL,GAAWtF,IAAI,CAACC,CAAD,CAAf;AACApC,sBAAAA,KAAK,CAACyH,CAAC,GAAC,CAAH,CAAL,GAAatF,IAAI,CAACC,CAAD,CAAjB;AACJ,qBALI,MAMD;AACHI,sBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACC;AACJ,mBAjBF,MAkBK;AACAI,oBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACH,mBAtCgB,CAuCjB;;;AACA,uBAAI,IAAIM,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAC1C,KAAK,CAACT,MAAtB,EAA8BmD,CAAC,EAA/B,EAAkC;AAC9B,wBAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,sBAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ;AACL,iBA7CD,CA8CA;AA9CA,qBA+CK,IAAG1C,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AACvBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB,CAJuB,CAMtB;;AACD,uBAAI,IAAIQ,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIH,SAApB,EAA+BG,CAAC,EAAhC,EAAmC;AAClC,wBAAI5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,IAAiB,GAA3C,EAA+C;AAC3C5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,GAAkB,CAAlB;AACH;;AACD,wBAAI5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,IAAiB,GAA3C,EAA+C;AAC3C5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,GAAkB,CAAlB;AACH;AACD;;AACD,wBAAM8E,CAAC,GAAG5E,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,sBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf;AACA,wBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AAClBU,sBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC0H,CAAD,CAAhB;AACA1H,sBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC0H,CAAC,GAAC,CAAH,CAAlB;AACA1H,sBAAAA,KAAK,CAAC0H,CAAD,CAAL,GAAWvF,IAAI,CAACC,CAAD,CAAf;AACApC,sBAAAA,KAAK,CAAC0H,CAAC,GAAC,CAAH,CAAL,GAAavF,IAAI,CAACC,CAAD,CAAjB;AACH,qBALD,MAMK,IAAGpC,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AACrBU,sBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC0H,CAAD,CAAhB;AACA1H,sBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC0H,CAAC,GAAC,CAAH,CAAlB;AACA1H,sBAAAA,KAAK,CAAC0H,CAAD,CAAL,GAAWvF,IAAI,CAACC,CAAD,CAAf;AACApC,sBAAAA,KAAK,CAAC0H,CAAC,GAAC,CAAH,CAAL,GAAavF,IAAI,CAACC,CAAD,CAAjB;AACJ,qBALI,MAMD;AACHI,sBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACC;AACJ,mBAjBF,MAkBK;AACAI,oBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACH,mBAtCqB,CAuCtB;;;AACA,uBAAI,IAAIM,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAC1C,KAAK,CAACT,MAAtB,EAA8BmD,CAAC,EAA/B,EAAkC;AAC9B,wBAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,sBAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ;AACL,iBA7CI,MA8CD;AACAH,kBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACJ,eAlGD,MAkGK;AACDG,gBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AAEH;AACH;AACJ;;AACDA,UAAAA,CAAC;AACJ;;AAGD,aAAI,IAAIqF,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAEzH,KAAK,CAACT,MAAvB,EAA+BkI,CAAC,EAAhC,EAAmC;AAC/B,eAAI,IAAI/E,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,mBAAmB,CAACjD,MAAvC,EAA+CmD,CAAC,EAAhD,EAAmD;AAC/C,gBAAG1C,KAAK,CAACyH,CAAD,CAAL,IAAYjF,mBAAmB,CAACE,CAAD,CAAlC,EAAsC;AAClC,mBAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIH,SAApB,EAA+BG,CAAC,EAAhC,EAAmC;AAC/B,oBAAI5C,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAL,GAAO,CAAR,CAAL,IAAiB,GAA3C,EAA+C;AAC3C5C,kBAAAA,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAN,CAAL,GAAgB,CAAhB;AACA5C,kBAAAA,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAL,GAAO,CAAR,CAAL,GAAkB,CAAlB;AACH;;AACD,oBAAI5C,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAL,GAAO,CAAR,CAAL,IAAiB,GAA3C,EAA+C;AAC3C5C,kBAAAA,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAN,CAAL,GAAgB,CAAhB;AACA5C,kBAAAA,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAL,GAAO,CAAR,CAAL,GAAkB,CAAlB;AACH;AACD;AACP;AACJ;AACJ,SA7LsC,CA+LvC;;;AACA,aAAI,IAAItD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,KAAK,CAACT,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AAClC,cAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjC,IAAwCU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAY,GAAvD,EAA2D;AACnD,gBAAGgI,EAAE,GAAGC,eAAe,CAAChI,MAAxB,EAA+B;AAC3BS,cAAAA,KAAK,CAACV,CAAD,CAAL,GAAWiI,eAAe,CAACD,EAAD,CAA1B;AACAtH,cAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaiI,eAAe,CAACD,EAAD,CAA5B;AACAtH,cAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaiI,eAAe,CAACD,EAAD,CAA5B;AACH;;AACDA,YAAAA,EAAE;AACT;AACH,SAzMsC,CA2MvC;;;AACA,aAAI,IAAI5E,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAc,GAApC,EAAwC;AACpC,gBAAGJ,EAAE,GAAGE,mBAAmB,CAACjD,MAA5B,EAAmC;AAC/B,oBAAMoI,CAAC,GAAG7E,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAeN,CAAC,GAAC,CAAjB,CAAX,CAAV;AACI1C,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW1C,KAAK,CAAC2H,CAAD,CAAhB;AACA3H,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAa1C,KAAK,CAAC2H,CAAC,GAAC,CAAH,CAAlB;AACA3H,cAAAA,KAAK,CAAC2H,CAAD,CAAL,GAAWnF,mBAAmB,CAACF,EAAD,CAA9B;AACAtC,cAAAA,KAAK,CAAC2H,CAAC,GAAC,CAAH,CAAL,GAAanF,mBAAmB,CAACF,EAAD,CAAhC;AACP,aAND,MAMK;AACD,kBAAGE,mBAAmB,CAACF,EAAD,CAAnB,IAA2BY,SAA9B,EAAwC;AACpCuG,gBAAAA,+BAA+B,CAACtK,IAAhC,CAAqCqD,mBAAmB,CAACF,EAAD,CAAxD;AACH;AACJ;;AACDA,YAAAA,EAAE;AACL,WAbD,MAaM,IAAGtC,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAwC;AAC1C,gBAAGJ,EAAE,GAAGE,mBAAmB,CAACjD,MAA5B,EAAmC;AAC/B,oBAAMoI,CAAC,GAAG7E,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAeN,CAAC,GAAC,CAAjB,CAAX,CAAV;AACI1C,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW1C,KAAK,CAAC2H,CAAD,CAAhB;AACA3H,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAa1C,KAAK,CAAC2H,CAAC,GAAC,CAAH,CAAlB;AACA3H,cAAAA,KAAK,CAAC2H,CAAD,CAAL,GAAWnF,mBAAmB,CAACF,EAAD,CAA9B;AACAtC,cAAAA,KAAK,CAAC2H,CAAC,GAAC,CAAH,CAAL,GAAanF,mBAAmB,CAACF,EAAD,CAAhC;AACP,aAND,MAMK;AACD,kBAAGE,mBAAmB,CAACF,EAAD,CAAnB,IAA2BY,SAA9B,EAAwC;AACpCuG,gBAAAA,+BAA+B,CAACtK,IAAhC,CAAqCqD,mBAAmB,CAACF,EAAD,CAAxD;AACH;AACJ;;AACDA,YAAAA,EAAE;AACL;AACJ;;AAGD,aAAI,IAAII,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAC5B,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAwC;AACpC,gBAAGL,EAAE,GAAGE,cAAc,CAAChD,MAAvB,EAA8B;AAC1B,oBAAMqI,CAAC,GAAG9E,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAeN,CAAC,GAAC,CAAjB,CAAX,CAAV;AACA1C,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW1C,KAAK,CAAC4H,CAAD,CAAhB;AACA5H,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAa1C,KAAK,CAAC4H,CAAC,GAAC,CAAH,CAAlB;AACA5H,cAAAA,KAAK,CAAC4H,CAAD,CAAL,GAAWrF,cAAc,CAACF,EAAD,CAAzB;AACArC,cAAAA,KAAK,CAAC4H,CAAC,GAAC,CAAH,CAAL,GAAarF,cAAc,CAACF,EAAD,CAA3B;AACH;;AACD,gBAAG;AACC,kBAAIY,KAAK,GAAGV,cAAc,CAACF,EAAD,CAAd,CAAmB,EAAnB,CAAZ;;AACA,kBAAGY,KAAK,IAAI,CAAZ,EAAc;AACVwG,gBAAAA,+BAA+B,CAACtK,IAAhC,CAAqCoD,cAAc,CAACF,EAAD,CAAnD;AACH;AACJ,aALD,CAKC,MAAK,CAAE;;AACZA,YAAAA,EAAE;AACL,WAfG,MAeE,IAAGrC,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAwC;AAC1C,gBAAGL,EAAE,GAAGE,cAAc,CAAChD,MAAvB,EAA8B;AAC1B,oBAAMqD,CAAC,GAAGE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAeN,CAAC,GAAC,CAAjB,CAAX,CAAV;AACA1C,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW1C,KAAK,CAAC4C,CAAD,CAAhB;AACA5C,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAa1C,KAAK,CAAC4C,CAAC,GAAC,CAAH,CAAlB;AACA5C,cAAAA,KAAK,CAAC4C,CAAD,CAAL,GAAWL,cAAc,CAACF,EAAD,CAAzB;AACArC,cAAAA,KAAK,CAAC4C,CAAC,GAAC,CAAH,CAAL,GAAaL,cAAc,CAACF,EAAD,CAA3B;AACH;;AACD,gBAAG;AACC,kBAAIY,KAAK,GAAGV,cAAc,CAACF,EAAD,CAAd,CAAmB,EAAnB,CAAZ;;AACA,kBAAGY,KAAK,IAAI,CAAZ,EAAc;AACVwG,gBAAAA,+BAA+B,CAACtK,IAAhC,CAAqCoD,cAAc,CAACF,EAAD,CAAnD;AACH;AACJ,aALD,CAKC,MAAK,CAAE;;AACZA,YAAAA,EAAE;AACL;AACA,SA3QsC,CA6QvC;;;AACA,aAAI,IAAIK,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAC1C,KAAK,CAACT,MAAtB,EAA8BmD,CAAC,EAA/B,EAAkC;AAC9B,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,YAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ;;AAED,YAAG1C,KAAK,CAAC,CAAC,CAAF,CAAL,IAAakD,SAAhB,EAA0B;AACtBwG,UAAAA,+BAA+B,CAACvK,IAAhC,CAAqCa,KAAK,CAAC,CAAC,CAAF,CAA1C;AACH;;AAEF,eAAOA,KAAP;AACH,OAzRD;;AA0RA,UAAI4J,oBAAoB,GAAGD,wBAAwB,CAACL,iBAAD,CAAnD;;AAGC,YAAMO,yBAAyB,GAAI7J,KAAD,IAAW;AACzC,YAAIoC,CAAC,GAAG,CAAR;AACA,YAAIiB,KAAK,GAAG,EAAZ;;AAEA,aAAI,IAAIX,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAf,EAAmB;AACZ,gBAAGN,CAAC,GAAGsH,+BAA+B,CAACnK,MAAvC,EAA8C;AAC1CS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAWgH,+BAA+B,CAACtH,CAAD,CAA1C;AACH;;AACDA,YAAAA,CAAC;AACP;AACJ;;AAED,eAAOpC,KAAP;AACH,OAdD;;AAeA6J,MAAAA,yBAAyB,CAACP,iBAAD,CAAzB;;AAGA,YAAMQ,yBAAyB,GAAI9J,KAAD,IAAW;AACzC,YAAIoC,CAAC,GAAG,CAAR;;AACA,aAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAuC;AACnC,gBAAGN,CAAC,GAAGqH,+BAA+B,CAAClK,MAAvC,EAA8C;AACtCS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW+G,+BAA+B,CAACrH,CAAD,CAA1C;AACApC,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAa+G,+BAA+B,CAACrH,CAAD,CAA5C;AACP,aAHD,MAGK;AACD,kBAAGqH,+BAA+B,CAACrH,CAAD,CAA/B,IAAsCc,SAAzC,EAAmD;AAC/CqG,gBAAAA,4BAA4B,CAACpK,IAA7B,CAAkCsK,+BAA+B,CAACrH,CAAD,CAAjE;AACH;AACJ;;AACDA,YAAAA,CAAC;AACJ;AACJ;;AAED,aAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAuC;AACnC,gBAAGN,CAAC,GAAGmH,4BAA4B,CAAChK,MAApC,EAA2C;AACvCS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW6G,4BAA4B,CAACnH,CAAD,CAAvC;AACApC,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAa6G,4BAA4B,CAACnH,CAAD,CAAzC;AACH;;AACLA,YAAAA,CAAC;AACA;AACJ;;AACD,eAAOpC,KAAP;AACJ,OA1BA;;AA2BA8J,MAAAA,yBAAyB,CAACR,iBAAD,CAAzB;AAGD,UAAIS,oBAAoB,GAAG,EAA3B;AACA,UAAIC,yBAAyB,GAAG,EAAhC;;AACA,YAAMC,oBAAoB,GAAIjK,KAAD,IAAW;AACpC,YAAI2D,KAAK,GAAE,CAAX;AACA,YAAIC,UAAU,GAAG,CAAjB;AACA,YAAIuE,WAAW,GAAG,CAAlB;AACA,YAAI1F,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AACA,aAAI,IAAImD,CAAC,GAAE,CAAX,EAAeA,CAAC,IAAID,SAApB,EAAgCC,CAAC,EAAjC,EAAoC;AACnCkB,UAAAA,UAAU,GAAIlB,CAAC,GAAG,EAAlB;;AACG,cAAG;AACF,iBAAI,IAAIpD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACU,KAAK,CAACT,MAAvB,EAAgCD,CAAC,EAAjC,EAAoC;AAC7B,kBAAGU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuB,GAAvB,IAA8B5D,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuBV,SAArD,IAAkElD,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuB,CAA5F,EAA+F;AAC3F,oBAAG;AACC,sBAAG5D,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAAlB,EAA0C;AACtCmG,oBAAAA,oBAAoB,CAAC5K,IAArB,CAA0B,CAACG,CAAC,GAACsE,UAAH,EAAc5D,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAnB,CAA1B;AACF;;AACD,sBAAG5D,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAAf,IAAyC5D,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAA3D,EAAkF;AAC/E,wBAAG;AACCmG,sBAAAA,oBAAoB,CAAC5K,IAArB,CAA0B,CAACG,CAAC,GAACsE,UAAH,EAAc5D,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAnB,CAA1B;AACH,qBAFD,CAEC,MAAK,CAAE;AACX;AACJ,iBATD,CASC,MAAK,CAAE;AACX;AACJ;AACJ,WAfD,CAeC,MAAK,CAAE;AACX;;AACD,aAAI,IAAIlB,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGqH,oBAAoB,CAACxK,MAAvC,EAA+CmD,CAAC,EAAhD,EAAmD;AAC/C,cAAG;AACC,gBAAIqH,oBAAoB,CAACrH,CAAD,CAApB,CAAwB,CAAxB,KAA8BqH,oBAAoB,CAACrH,CAAC,GAAC,CAAH,CAApB,CAA0B,CAA1B,CAAlC,EAA+D;AAC/DsH,cAAAA,yBAAyB,CAAC7K,IAA1B,CAA+B4K,oBAAoB,CAACrH,CAAD,CAAnD;AACH;AAEA,WALD,CAKC,MAAK,CAAE;AAEX;;AACDqH,QAAAA,oBAAoB,CAACzJ,GAArB,CAAyB0J,yBAAzB;AAEH,OAnCD;;AAoCAC,MAAAA,oBAAoB,CAACX,iBAAD,CAApB;;AAEA,YAAMY,wBAAwB,GAAG,CAACjJ,IAAD,EAAMjB,KAAN,KAAgB;AAE7C,YAAIoC,CAAC,GAAG,CAAR;AACA,YAAIuB,KAAK,GAAE,CAAX;AACA,YAAIlB,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AAEA,aAAI,IAAImD,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGzB,IAAI,CAAC1B,MAAvB,EAA+BmD,CAAC,EAAhC,EAAoC;AAChC,eAAI,IAAIpD,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGU,KAAK,CAACT,MAAxB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC,gBAAG;AACC,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY4D,SAAf,EAAyB;AACrB,oBAAGjC,IAAI,CAACyB,CAAD,CAAJ,CAAQ,CAAR,KAAcpD,CAAjB,EAAmB;AACfU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAW,CAAX;;AACA,uBAAI,IAAIsD,CAAC,GAAG,CAAZ,EAAgBA,CAAC,IAAGH,SAApB,EAAgCG,CAAC,EAAjC,EAAoC;AAChC,wBAAI5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAnB,EAAuB;AACnB5C,sBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;;AACD,wBAAI5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAnB,EAAwB;AACpB5C,sBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;AACJ;AACJ;AACJ;AACJ,aAdD,CAcC,MAAK,CAAE;AACX;AAEJ;;AACG,aAAI,IAAItD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,KAAK,CAACT,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AAC7B,cAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,gBAAG8C,CAAC,GAAEnB,IAAI,CAAC1B,MAAX,EAAkB;AAClBoE,cAAAA,KAAK,IAAG,CAAR;AACA3D,cAAAA,KAAK,CAACV,CAAD,CAAL,GAAW2B,IAAI,CAACmB,CAAD,CAAJ,CAAQ,CAAR,CAAX;AACC;;AACDA,YAAAA,CAAC;AACR;AACJ;;AAED,aAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,YAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ,SAxCwC,CAyCzC;;AACP,OA1CD;;AA2CAwH,MAAAA,wBAAwB,CAACF,yBAAD,EAA2BV,iBAA3B,CAAxB;;AAEA,YAAMa,6BAA6B,GAAInK,KAAD,IAAW;AAC7C,YAAI2D,KAAK,GAAG,CAAZ;;AACA,aAAI,IAAIrE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,KAAK,CAACT,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AAC7B,cAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAD,CAAL,IAAW,GAA9B,IAAqCU,KAAK,CAACV,CAAD,CAAL,IAAY,CAAjD,IAAsDU,KAAK,CAACV,CAAD,CAAL,IAAY4D,SAArE,EAA+E;AAC3ES,YAAAA,KAAK,IAAI,CAAT;AACH;AACR;;AACD,eAAOA,KAAP;AACH,OARD;;AASA,UAAIK,aAAa,GAAGmG,6BAA6B,CAACP,oBAAD,CAAjD,CA19FwB,CA29FxB;AACA;AAEA;AAEA;;AAEA,YAAMQ,kBAAkB,GAAInJ,IAAD,IAAU;AACjC,YAAIC,MAAM,GAAG,EAAb;;AAEA,aAAI,IAAI5B,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE2B,IAAlB,EAAwB3B,CAAC,EAAzB,EAA4B;AACxB4B,UAAAA,MAAM,CAAC5B,CAAD,CAAN,GAAW,GAAX;AACH;;AACD,eAAO4B,MAAP;AACH,OAPD;;AAQA,UAAImJ,iBAAiB,GAAGD,kBAAkB,CAAC1I,oBAAD,CAA1C;AAEA,UAAI4I,4BAA4B,GAAG,EAAnC;AACA,UAAIC,4BAA4B,GAAG,EAAnC;AACA,UAAIC,+BAA+B,GAAG,EAAtC;AACA,UAAIC,+BAA+B,GAAE,EAArC;;AAEA,YAAMC,wBAAwB,GAAI1K,KAAD,IAAW;AACxC,YAAImC,IAAI,GAAG,EAAX;AACA,YAAIC,CAAC,GAAG,CAAR;AACA,YAAIC,EAAE,GAAE,CAAR;AACA,YAAIC,EAAE,GAAE,CAAR;AACA,YAAIgF,EAAE,GAAE,CAAR;AAEA,YAAI/E,cAAc,GAAG,EAArB;AACA,YAAIC,mBAAmB,GAAG,EAA1B;AACA,YAAI+E,eAAe,GAAG,EAAtB;AAEA,YAAI9E,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AAEA,aAAI,IAAImD,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC1D,qBAAqB,CAACO,MAArC,EAA4CmD,CAAC,EAA7C,EAAgD;AAC5CP,UAAAA,IAAI,CAAChD,IAAL,CAAUH,qBAAqB,CAAC0D,CAAD,CAA/B;AACH;;AAEA,aAAI,IAAIpD,CAAC,GAAGU,KAAK,CAACT,MAAN,GAAa,CAAzB,EAA2BD,CAAC,GAAC,CAA7B,EAA+BA,CAAC,EAAhC,EAAmC;AAC/B,cAAG8C,CAAC,GAAGD,IAAI,CAAC5C,MAAZ,EAAmB;AACnB,gBAAIoD,MAAM,GAAGR,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR,CAAb;AACA,gBAAIoF,KAAK,GAAGrF,IAAI,CAACC,CAAD,CAAJ,CAAQ,CAAR,CAAZ;AACA,gBAAIa,KAAK,GAAGd,IAAI,CAACC,CAAD,CAAJ,CAAQ,EAAR,CAAZ;;AAEA,gBAAGO,MAAM,IAAI,CAAb,EAAe;AACX,oBAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjC,IAAwCU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAY,GAAvD,EAA2D;AACnDU,gBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,gBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,gBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,gBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,gBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AACApC,gBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AAEJ,eARJ,MASQ;AACDmF,gBAAAA,eAAe,CAACpI,IAAhB,CAAqBgD,IAAI,CAACC,CAAD,CAAzB;AACH;AACH,aAdL,MAgBM,IAAGO,MAAM,IAAI,CAAb,EAAe;AACjB,oBAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,oBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AAClBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AAEH,iBAND,MAMM,IAAGpC,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AACvBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB;AAEH,iBANK,MAOF;AACAG,kBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AAEH;AACJ,eAlBD,MAkBK;AACDG,gBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACA,aAvBC,MAyBE,IAAGO,MAAM,IAAI,CAAb,EAAe;AAChB,oBAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf;AACA,oBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AAClBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB,CAJkB,CAMlB;;AACA,uBAAI,IAAIQ,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIH,SAApB,EAA+BG,CAAC,EAAhC,EAAmC;AAClC,wBAAI5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,IAAiB,GAA3C,EAA+C;AAC3C5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,GAAkB,CAAlB;AACH;;AACD,wBAAI5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,IAAiB,GAA3C,EAA+C;AAC3C5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,GAAkB,CAAlB;AACH;AACD;;AACD,wBAAM6E,CAAC,GAAG3E,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,sBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf;AACA,wBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AAClBU,sBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAACyH,CAAD,CAAhB;AACAzH,sBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAACyH,CAAC,GAAC,CAAH,CAAlB;AACAzH,sBAAAA,KAAK,CAACV,CAAD,CAAL,GAAW6C,IAAI,CAACC,CAAD,CAAf;AACApC,sBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAa6C,IAAI,CAACC,CAAD,CAAjB;AACH,qBALD,MAMK,IAAGpC,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AACtBU,sBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAACyH,CAAD,CAAhB;AACAzH,sBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAACyH,CAAC,GAAC,CAAH,CAAlB;AACAzH,sBAAAA,KAAK,CAACyH,CAAD,CAAL,GAAWtF,IAAI,CAACC,CAAD,CAAf;AACApC,sBAAAA,KAAK,CAACyH,CAAC,GAAC,CAAH,CAAL,GAAatF,IAAI,CAACC,CAAD,CAAjB;AACJ,qBALI,MAMD;AACHI,sBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACC;AACJ,mBAjBF,MAkBK;AACAI,oBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACH,mBAtCgB,CAuCjB;;;AACA,uBAAI,IAAIM,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAC1C,KAAK,CAACT,MAAtB,EAA8BmD,CAAC,EAA/B,EAAkC;AAC9B,wBAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,sBAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ;AACL,iBA7CD,CA8CA;AA9CA,qBA+CK,IAAG1C,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AACvBU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC6C,CAAD,CAAhB;AACA7C,kBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAlB;AACA7C,kBAAAA,KAAK,CAAC6C,CAAD,CAAL,GAAWV,IAAI,CAACC,CAAD,CAAf;AACApC,kBAAAA,KAAK,CAAC6C,CAAC,GAAC,CAAH,CAAL,GAAaV,IAAI,CAACC,CAAD,CAAjB,CAJuB,CAMtB;;AACD,uBAAI,IAAIQ,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIH,SAApB,EAA+BG,CAAC,EAAhC,EAAmC;AAClC,wBAAI5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,IAAiB,GAA3C,EAA+C;AAC3C5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,GAAkB,CAAlB;AACH;;AACD,wBAAI5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,IAAiB,GAA3C,EAA+C;AAC3C5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAN,CAAL,GAAgB,CAAhB;AACA5C,sBAAAA,KAAK,CAAC6C,CAAC,GAAC,KAAGD,CAAL,GAAO,CAAR,CAAL,GAAkB,CAAlB;AACH;AACD;;AACD,wBAAM8E,CAAC,GAAG5E,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAe1D,CAAC,GAAC,CAAjB,CAAX,CAAV;;AACA,sBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf;AACA,wBAAGU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAsB;AAClBU,sBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC0H,CAAD,CAAhB;AACA1H,sBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC0H,CAAC,GAAC,CAAH,CAAlB;AACA1H,sBAAAA,KAAK,CAAC0H,CAAD,CAAL,GAAWvF,IAAI,CAACC,CAAD,CAAf;AACApC,sBAAAA,KAAK,CAAC0H,CAAC,GAAC,CAAH,CAAL,GAAavF,IAAI,CAACC,CAAD,CAAjB;AACH,qBALD,MAMK,IAAGpC,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjB,EAAqB;AACrBU,sBAAAA,KAAK,CAACV,CAAD,CAAL,GAAWU,KAAK,CAAC0H,CAAD,CAAhB;AACA1H,sBAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaU,KAAK,CAAC0H,CAAC,GAAC,CAAH,CAAlB;AACA1H,sBAAAA,KAAK,CAAC0H,CAAD,CAAL,GAAWvF,IAAI,CAACC,CAAD,CAAf;AACApC,sBAAAA,KAAK,CAAC0H,CAAC,GAAC,CAAH,CAAL,GAAavF,IAAI,CAACC,CAAD,CAAjB;AACJ,qBALI,MAMD;AACHI,sBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACC;AACJ,mBAjBF,MAkBK;AACAI,oBAAAA,mBAAmB,CAACrD,IAApB,CAAyBgD,IAAI,CAACC,CAAD,CAA7B;AACH,mBAtCqB,CAuCtB;;;AACA,uBAAI,IAAIM,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAC1C,KAAK,CAACT,MAAtB,EAA8BmD,CAAC,EAA/B,EAAkC;AAC9B,wBAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,sBAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ;AACL,iBA7CI,MA8CD;AACAH,kBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AACH;AACJ,eAlGD,MAkGK;AACDG,gBAAAA,cAAc,CAACpD,IAAf,CAAoBgD,IAAI,CAACC,CAAD,CAAxB;AAEH;AACH;AACJ;;AACDA,UAAAA,CAAC;AACJ;;AAGD,aAAI,IAAIqF,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAEzH,KAAK,CAACT,MAAvB,EAA+BkI,CAAC,EAAhC,EAAmC;AAC/B,eAAI,IAAI/E,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,mBAAmB,CAACjD,MAAvC,EAA+CmD,CAAC,EAAhD,EAAmD;AAC/C,gBAAG1C,KAAK,CAACyH,CAAD,CAAL,IAAYjF,mBAAmB,CAACE,CAAD,CAAlC,EAAsC;AAClC,mBAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIH,SAApB,EAA+BG,CAAC,EAAhC,EAAmC;AAC/B,oBAAI5C,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAL,GAAO,CAAR,CAAL,IAAiB,GAA3C,EAA+C;AAC3C5C,kBAAAA,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAN,CAAL,GAAgB,CAAhB;AACA5C,kBAAAA,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAL,GAAO,CAAR,CAAL,GAAkB,CAAlB;AACH;;AACD,oBAAI5C,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAN,CAAL,IAAe,GAAf,IAAsB5C,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAL,GAAO,CAAR,CAAL,IAAiB,GAA3C,EAA+C;AAC3C5C,kBAAAA,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAN,CAAL,GAAgB,CAAhB;AACA5C,kBAAAA,KAAK,CAACyH,CAAC,GAAC,KAAG7E,CAAL,GAAO,CAAR,CAAL,GAAkB,CAAlB;AACH;AACD;AACP;AACJ;AACJ,SA7LsC,CA+LvC;;;AACA,aAAI,IAAItD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,KAAK,CAACT,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AAClC,cAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAc,GAAjC,IAAwCU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,IAAY,GAAvD,EAA2D;AACnD,gBAAGgI,EAAE,GAAGC,eAAe,CAAChI,MAAxB,EAA+B;AAC3BS,cAAAA,KAAK,CAACV,CAAD,CAAL,GAAWiI,eAAe,CAACD,EAAD,CAA1B;AACAtH,cAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaiI,eAAe,CAACD,EAAD,CAA5B;AACAtH,cAAAA,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,GAAaiI,eAAe,CAACD,EAAD,CAA5B;AACH;;AACDA,YAAAA,EAAE;AACT;AACH,SAzMsC,CA2MvC;;;AACA,aAAI,IAAI5E,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAc,GAApC,EAAwC;AACpC,gBAAGJ,EAAE,GAAGE,mBAAmB,CAACjD,MAA5B,EAAmC;AAC/B,oBAAMoI,CAAC,GAAG7E,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAeN,CAAC,GAAC,CAAjB,CAAX,CAAV;AACI1C,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW1C,KAAK,CAAC2H,CAAD,CAAhB;AACA3H,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAa1C,KAAK,CAAC2H,CAAC,GAAC,CAAH,CAAlB;AACA3H,cAAAA,KAAK,CAAC2H,CAAD,CAAL,GAAWnF,mBAAmB,CAACF,EAAD,CAA9B;AACAtC,cAAAA,KAAK,CAAC2H,CAAC,GAAC,CAAH,CAAL,GAAanF,mBAAmB,CAACF,EAAD,CAAhC;AACP,aAND,MAMK;AACD,kBAAGE,mBAAmB,CAACF,EAAD,CAAnB,IAA2BY,SAA9B,EAAwC;AACpCsH,gBAAAA,+BAA+B,CAACrL,IAAhC,CAAqCqD,mBAAmB,CAACF,EAAD,CAAxD;AACH;AACJ;;AACDA,YAAAA,EAAE;AACL,WAbD,MAaM,IAAGtC,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAwC;AAC1C,gBAAGJ,EAAE,GAAGE,mBAAmB,CAACjD,MAA5B,EAAmC;AAC/B,oBAAMoI,CAAC,GAAG7E,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAeN,CAAC,GAAC,CAAjB,CAAX,CAAV;AACI1C,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW1C,KAAK,CAAC2H,CAAD,CAAhB;AACA3H,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAa1C,KAAK,CAAC2H,CAAC,GAAC,CAAH,CAAlB;AACA3H,cAAAA,KAAK,CAAC2H,CAAD,CAAL,GAAWnF,mBAAmB,CAACF,EAAD,CAA9B;AACAtC,cAAAA,KAAK,CAAC2H,CAAC,GAAC,CAAH,CAAL,GAAanF,mBAAmB,CAACF,EAAD,CAAhC;AACP,aAND,MAMK;AACD,kBAAGE,mBAAmB,CAACF,EAAD,CAAnB,IAA2BY,SAA9B,EAAwC;AACpCsH,gBAAAA,+BAA+B,CAACrL,IAAhC,CAAqCqD,mBAAmB,CAACF,EAAD,CAAxD;AACH;AACJ;;AACDA,YAAAA,EAAE;AACL;AACJ;;AAGD,aAAI,IAAII,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAC5B,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAwC;AACpC,gBAAGL,EAAE,GAAGE,cAAc,CAAChD,MAAvB,EAA8B;AAC1B,oBAAMqI,CAAC,GAAG9E,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAeN,CAAC,GAAC,CAAjB,CAAX,CAAV;AACA1C,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW1C,KAAK,CAAC4H,CAAD,CAAhB;AACA5H,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAa1C,KAAK,CAAC4H,CAAC,GAAC,CAAH,CAAlB;AACA5H,cAAAA,KAAK,CAAC4H,CAAD,CAAL,GAAWrF,cAAc,CAACF,EAAD,CAAzB;AACArC,cAAAA,KAAK,CAAC4H,CAAC,GAAC,CAAH,CAAL,GAAarF,cAAc,CAACF,EAAD,CAA3B;AACH;;AACD,gBAAG;AACC,kBAAIY,KAAK,GAAGV,cAAc,CAACF,EAAD,CAAd,CAAmB,EAAnB,CAAZ;;AACA,kBAAGY,KAAK,IAAI,CAAZ,EAAc;AACVuH,gBAAAA,+BAA+B,CAACrL,IAAhC,CAAqCoD,cAAc,CAACF,EAAD,CAAnD;AACH;AACJ,aALD,CAKC,MAAK,CAAE;;AACZA,YAAAA,EAAE;AACL,WAfG,MAeE,IAAGrC,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAwC;AAC1C,gBAAGL,EAAE,GAAGE,cAAc,CAAChD,MAAvB,EAA8B;AAC1B,oBAAMqD,CAAC,GAAGE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAeN,CAAC,GAAC,CAAjB,CAAX,CAAV;AACA1C,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW1C,KAAK,CAAC4C,CAAD,CAAhB;AACA5C,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAa1C,KAAK,CAAC4C,CAAC,GAAC,CAAH,CAAlB;AACA5C,cAAAA,KAAK,CAAC4C,CAAD,CAAL,GAAWL,cAAc,CAACF,EAAD,CAAzB;AACArC,cAAAA,KAAK,CAAC4C,CAAC,GAAC,CAAH,CAAL,GAAaL,cAAc,CAACF,EAAD,CAA3B;AACH;;AACD,gBAAG;AACC,kBAAIY,KAAK,GAAGV,cAAc,CAACF,EAAD,CAAd,CAAmB,EAAnB,CAAZ;;AACA,kBAAGY,KAAK,IAAI,CAAZ,EAAc;AACVuH,gBAAAA,+BAA+B,CAACrL,IAAhC,CAAqCoD,cAAc,CAACF,EAAD,CAAnD;AACH;AACJ,aALD,CAKC,MAAK,CAAE;;AACZA,YAAAA,EAAE;AACL;AACA,SA3QsC,CA6QvC;;;AACA,aAAI,IAAIK,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAC1C,KAAK,CAACT,MAAtB,EAA8BmD,CAAC,EAA/B,EAAkC;AAC9B,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,YAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ;;AAED,YAAG1C,KAAK,CAAC,CAAC,CAAF,CAAL,IAAakD,SAAhB,EAA0B;AACtBuH,UAAAA,+BAA+B,CAACtL,IAAhC,CAAqCa,KAAK,CAAC,CAAC,CAAF,CAA1C;AACH;;AAEF,eAAOA,KAAP;AACH,OAzRD;;AA0RA,UAAI2K,oBAAoB,GAAGD,wBAAwB,CAACL,iBAAD,CAAnD;;AAGC,YAAMO,yBAAyB,GAAI5K,KAAD,IAAW;AACzC,YAAIoC,CAAC,GAAG,CAAR;AACA,YAAIiB,KAAK,GAAG,EAAZ;;AAEA,aAAI,IAAIX,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAf,EAAmB;AACZ,gBAAGN,CAAC,GAAGqI,+BAA+B,CAAClL,MAAvC,EAA8C;AAC1CS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW+H,+BAA+B,CAACrI,CAAD,CAA1C;AACH;;AACDA,YAAAA,CAAC;AACP;AACJ;;AAED,eAAOpC,KAAP;AACH,OAdD;;AAeA4K,MAAAA,yBAAyB,CAACP,iBAAD,CAAzB;;AAGA,YAAMQ,yBAAyB,GAAI7K,KAAD,IAAW;AACzC,YAAIoC,CAAC,GAAG,CAAR;;AACA,aAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAuC;AACnC,gBAAGN,CAAC,GAAGoI,+BAA+B,CAACjL,MAAvC,EAA8C;AACtCS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW8H,+BAA+B,CAACpI,CAAD,CAA1C;AACApC,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAa8H,+BAA+B,CAACpI,CAAD,CAA5C;AACP,aAHD,MAGK;AACD,kBAAGoI,+BAA+B,CAACpI,CAAD,CAA/B,IAAsCc,SAAzC,EAAmD;AAC/CoH,gBAAAA,4BAA4B,CAACnL,IAA7B,CAAkCqL,+BAA+B,CAACpI,CAAD,CAAjE;AACH;AACJ;;AACDA,YAAAA,CAAC;AACJ;AACJ;;AAED,aAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,GAAZ,IAAmB1C,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,IAAa,GAAnC,EAAuC;AACnC,gBAAGN,CAAC,GAAGkI,4BAA4B,CAAC/K,MAApC,EAA2C;AACvCS,cAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW4H,4BAA4B,CAAClI,CAAD,CAAvC;AACApC,cAAAA,KAAK,CAAC0C,CAAC,GAAC,CAAH,CAAL,GAAa4H,4BAA4B,CAAClI,CAAD,CAAzC;AACH;;AACLA,YAAAA,CAAC;AACA;AACJ;;AACD,eAAOpC,KAAP;AACJ,OA1BA;;AA2BA6K,MAAAA,yBAAyB,CAACR,iBAAD,CAAzB;AAGD,UAAIS,oBAAoB,GAAG,EAA3B;AACA,UAAIC,yBAAyB,GAAG,EAAhC;;AACA,YAAMC,oBAAoB,GAAIhL,KAAD,IAAW;AACpC,YAAI2D,KAAK,GAAE,CAAX;AACA,YAAIC,UAAU,GAAG,CAAjB;AACA,YAAIuE,WAAW,GAAG,CAAlB;AACA,YAAI1F,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AACA,aAAI,IAAImD,CAAC,GAAE,CAAX,EAAeA,CAAC,IAAID,SAApB,EAAgCC,CAAC,EAAjC,EAAoC;AACnCkB,UAAAA,UAAU,GAAIlB,CAAC,GAAG,EAAlB;;AACG,cAAG;AACF,iBAAI,IAAIpD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACU,KAAK,CAACT,MAAvB,EAAgCD,CAAC,EAAjC,EAAoC;AAC7B,kBAAGU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuB,GAAvB,IAA8B5D,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuBV,SAArD,IAAkElD,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuB,CAA5F,EAA+F;AAC3F,oBAAG;AACC,sBAAG5D,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAAlB,EAA0C;AACtCkH,oBAAAA,oBAAoB,CAAC3L,IAArB,CAA0B,CAACG,CAAC,GAACsE,UAAH,EAAc5D,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAnB,CAA1B;AACF;;AACD,sBAAG5D,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAAf,IAAyC5D,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAA3D,EAAkF;AAC/E,wBAAG;AACCkH,sBAAAA,oBAAoB,CAAC3L,IAArB,CAA0B,CAACG,CAAC,GAACsE,UAAH,EAAc5D,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAnB,CAA1B;AACH,qBAFD,CAEC,MAAK,CAAE;AACX;AACJ,iBATD,CASC,MAAK,CAAE;AACX;AACJ;AACJ,WAfD,CAeC,MAAK,CAAE;AACX;;AACD,aAAI,IAAIlB,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGoI,oBAAoB,CAACvL,MAAvC,EAA+CmD,CAAC,EAAhD,EAAmD;AAC/C,cAAG;AACC,gBAAIoI,oBAAoB,CAACpI,CAAD,CAApB,CAAwB,CAAxB,KAA8BoI,oBAAoB,CAACpI,CAAC,GAAC,CAAH,CAApB,CAA0B,CAA1B,CAAlC,EAA+D;AAC/DqI,cAAAA,yBAAyB,CAAC5L,IAA1B,CAA+B2L,oBAAoB,CAACpI,CAAD,CAAnD;AACH;AAEA,WALD,CAKC,MAAK,CAAE;AAEX;;AACDoI,QAAAA,oBAAoB,CAACxK,GAArB,CAAyByK,yBAAzB;AAEH,OAnCD;;AAoCAC,MAAAA,oBAAoB,CAACX,iBAAD,CAApB;;AAEA,YAAMY,wBAAwB,GAAG,CAAChK,IAAD,EAAMjB,KAAN,KAAgB;AAE7C,YAAIoC,CAAC,GAAG,CAAR;AACA,YAAIuB,KAAK,GAAE,CAAX;AACA,YAAIlB,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AAEA,aAAI,IAAImD,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGzB,IAAI,CAAC1B,MAAvB,EAA+BmD,CAAC,EAAhC,EAAoC;AAChC,eAAI,IAAIpD,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGU,KAAK,CAACT,MAAxB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC,gBAAG;AACC,kBAAGU,KAAK,CAACV,CAAD,CAAL,IAAY4D,SAAf,EAAyB;AACrB,oBAAGjC,IAAI,CAACyB,CAAD,CAAJ,CAAQ,CAAR,KAAcpD,CAAjB,EAAmB;AACfU,kBAAAA,KAAK,CAACV,CAAD,CAAL,GAAW,CAAX;;AACA,uBAAI,IAAIsD,CAAC,GAAG,CAAZ,EAAgBA,CAAC,IAAGH,SAApB,EAAgCG,CAAC,EAAjC,EAAoC;AAChC,wBAAI5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAnB,EAAuB;AACnB5C,sBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;;AACD,wBAAI5C,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,IAAe,GAAnB,EAAwB;AACpB5C,sBAAAA,KAAK,CAACV,CAAC,GAAC,KAAGsD,CAAN,CAAL,GAAgB,CAAhB;AACH;AACJ;AACJ;AACJ;AACJ,aAdD,CAcC,MAAK,CAAE;AACX;AAEJ;;AACG,aAAI,IAAItD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,KAAK,CAACT,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AAC7B,cAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAf,EAAmB;AACf,gBAAG8C,CAAC,GAAEnB,IAAI,CAAC1B,MAAX,EAAkB;AAClBoE,cAAAA,KAAK,IAAG,CAAR;AACA3D,cAAAA,KAAK,CAACV,CAAD,CAAL,GAAW2B,IAAI,CAACmB,CAAD,CAAJ,CAAQ,CAAR,CAAX;AACC;;AACDA,YAAAA,CAAC;AACR;AACJ;;AAED,aAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE1C,KAAK,CAACT,MAAxB,EAAgCmD,CAAC,EAAjC,EAAoC;AAChC,cAAG1C,KAAK,CAAC0C,CAAD,CAAL,IAAY,CAAf,EAAiB;AACb1C,YAAAA,KAAK,CAAC0C,CAAD,CAAL,GAAW,GAAX;AACH;AACJ,SAxCwC,CAyCzC;;AACP,OA1CD;;AA2CAuI,MAAAA,wBAAwB,CAACF,yBAAD,EAA2BV,iBAA3B,CAAxB;;AAEA,YAAMa,6BAA6B,GAAIlL,KAAD,IAAW;AAC7C,YAAI2D,KAAK,GAAG,CAAZ;;AACA,aAAI,IAAIrE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,KAAK,CAACT,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AAC7B,cAAGU,KAAK,CAACV,CAAD,CAAL,IAAY,GAAZ,IAAmBU,KAAK,CAACV,CAAD,CAAL,IAAW,GAA9B,IAAqCU,KAAK,CAACV,CAAD,CAAL,IAAY,CAAjD,IAAsDU,KAAK,CAACV,CAAD,CAAL,IAAY4D,SAArE,EAA+E;AAC3ES,YAAAA,KAAK,IAAI,CAAT;AACH;AACR;;AACD,eAAOA,KAAP;AACH,OARD;;AASA,UAAIK,aAAa,GAAGkH,6BAA6B,CAACP,oBAAD,CAAjD,CA55GwB,CA65GxB;AACA;AAEA;AAQA;AAEA;AACA;;AAEA,UAAIQ,WAAW,GAAG,EAAlB;AACA,UAAIC,mBAAmB,GAAG,EAA1B,CA96GwB,CAg7GxB;;AACA,YAAMC,OAAO,GAAG,CAACC,KAAD,EAAOC,KAAP,EAAaC,KAAb,EAAmBC,KAAnB,KAA8B;AAC1C,aAAI,IAAInM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGgM,KAAK,CAAC/L,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC6L,UAAAA,WAAW,CAAChM,IAAZ,CAAiBmM,KAAK,CAAChM,CAAD,CAAtB;AACH;;AACD,aAAI,IAAIA,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGiM,KAAK,CAAChM,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC6L,UAAAA,WAAW,CAAChM,IAAZ,CAAiBoM,KAAK,CAACjM,CAAD,CAAtB;AACH;;AACD,aAAI,IAAIA,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGkM,KAAK,CAACjM,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC6L,UAAAA,WAAW,CAAChM,IAAZ,CAAiBqM,KAAK,CAAClM,CAAD,CAAtB;AACH;;AACD,aAAI,IAAIA,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGmM,KAAK,CAAClM,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC6L,UAAAA,WAAW,CAAChM,IAAZ,CAAiBsM,KAAK,CAACnM,CAAD,CAAtB;AACH;;AACD,eAAO6L,WAAP;AACH,OAdD;;AAeA,UAAIO,WAAW,GAAGL,OAAO,CAACtJ,QAAD,EAAUoC,SAAV,EAAoBe,SAApB,EAA8Be,SAA9B,CAAzB,CAh8GwB,CAo8GxB;;AACA,YAAM0F,eAAe,GAAG,CAACL,KAAD,EAAOC,KAAP,EAAaC,KAAb,EAAmBC,KAAnB,KAA8B;AAClD,aAAI,IAAInM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGgM,KAAK,CAAC/L,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC8L,UAAAA,mBAAmB,CAACjM,IAApB,CAAyBmM,KAAK,CAAChM,CAAD,CAA9B;AACH;;AACD,aAAI,IAAIA,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGiM,KAAK,CAAChM,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC8L,UAAAA,mBAAmB,CAACjM,IAApB,CAAyBoM,KAAK,CAACjM,CAAD,CAA9B;AACH;;AACD,aAAI,IAAIA,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGkM,KAAK,CAACjM,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC8L,UAAAA,mBAAmB,CAACjM,IAApB,CAAyBqM,KAAK,CAAClM,CAAD,CAA9B;AACH;;AACD,aAAI,IAAIA,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGmM,KAAK,CAAClM,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC8L,UAAAA,mBAAmB,CAACjM,IAApB,CAAyBsM,KAAK,CAACnM,CAAD,CAA9B;AACH;;AACD,eAAO8L,mBAAP;AACH,OAdD;;AAeA,UAAIQ,mBAAmB,GAAGD,eAAe,CAAC3E,gBAAD,EAAkBuB,iBAAlB,EAAoCe,iBAApC,EAAsDe,iBAAtD,CAAzC,CAp9GwB,CAq9GxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,YAAMwB,WAAW,GAAI7L,KAAD,IAAW;AAC5B,YAAI2D,KAAK,GAAE,CAAX;AACA,YAAIC,UAAU,GAAG,CAAjB;AACA,YAAInB,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AACA,aAAI,IAAImD,CAAC,GAAE,CAAX,EAAeA,CAAC,IAAID,SAApB,EAAgCC,CAAC,EAAjC,EAAoC;AAChCkB,UAAAA,UAAU,GAAIlB,CAAC,GAAG,EAAlB;AACH;;AACD,aAAI,IAAIA,CAAC,GAAE,CAAX,EAAeA,CAAC,IAAID,SAApB,EAAgCC,CAAC,EAAjC,EAAoC;AAChC,cAAG;AACC;AACC,iBAAI,IAAIpD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACU,KAAK,CAACT,MAAvB,EAAgCD,CAAC,EAAjC,EAAoC;AACjCsE,cAAAA,UAAU,GAAIlB,CAAC,GAAG,EAAlB;;AACA,kBAAG1C,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuB,GAAvB,IAA8B5D,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuBV,SAAxD,EAAmE;AAC/D,oBAAG;AACC;AACA,sBAAGlD,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAAf,IAAyC5D,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAA3D,EAAkF;AAC7E,wBAAG;AACC;AACA;AACAD,sBAAAA,KAAK,IAAG,CAAR;AACH,qBAJD,CAIC,MAAK,CAAE;AACZ;AACJ,iBATD,CASC,MAAK,CAAE;AACX;AACJ;AACJ,WAjBD,CAiBC,MAAK,CAAE;AACX;;AACD,eAAOA,KAAP;AAEF,OA7BD;;AA+BA,UAAImI,WAAW,GAAGD,WAAW,CAACH,WAAD,CAA7B;AACA1N,MAAAA,OAAO,CAACC,GAAR,CAAY6N,WAAZ;AACA,UAAIC,mBAAmB,GAAGF,WAAW,CAACD,mBAAD,CAArC,CAjgHwB,CAugHxB;;AAEA,YAAMI,cAAc,GAAIhM,KAAD,IAAW;AAC/B,YAAI2D,KAAK,GAAG,CAAZ;AACA,eAAOA,KAAP;AACF,OAHD;;AAIA,UAAIsI,WAAW,GAAGD,cAAc,CAACN,WAAD,CAAhC;AACA,UAAIQ,mBAAmB,GAAGF,cAAc,CAACJ,mBAAD,CAAxC,CA9gHwB,CAihHxB;;AACA,YAAMO,gBAAgB,GAAInM,KAAD,IAAW;AACjC,YAAI2D,KAAK,GAAG,CAAZ;AACA,eAAOA,KAAP;AACF,OAHD;;AAIA,UAAIyI,WAAW,GAAGD,gBAAgB,CAACT,WAAD,CAAlC;AACA,UAAIW,mBAAmB,GAAGF,gBAAgB,CAACP,mBAAD,CAA1C,CAvhHwB,CAyhHxB;;AAEA,YAAMU,aAAa,GAAItM,KAAD,IAAW;AAC9B,YAAI2D,KAAK,GAAE,CAAX;AACA,YAAIC,UAAU,GAAG,CAAjB;AACA,YAAInB,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AACA,aAAI,IAAImD,CAAC,GAAE,CAAX,EAAeA,CAAC,IAAID,SAApB,EAAgCC,CAAC,EAAjC,EAAoC;AACnCkB,UAAAA,UAAU,GAAIlB,CAAC,GAAG,EAAlB;;AACG,cAAG;AACF,iBAAI,IAAIpD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACU,KAAK,CAACT,MAAvB,EAAgCD,CAAC,EAAjC,EAAoC;AAC7B,kBAAGU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuB,GAAvB,IAA8B5D,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,IAAuBV,SAAxD,EAAmE;AAC/D,oBAAG;AACC,sBAAGlD,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAL,CAAoB,CAApB,CAAlB,EAAyC;AACrC5F,oBAAAA,OAAO,CAACC,GAAR,CAAY+B,KAAK,CAACV,CAAD,CAAjB;AACAtB,oBAAAA,OAAO,CAACC,GAAR,CAAY+B,KAAK,CAACV,CAAC,GAACsE,UAAH,CAAjB;AACAD,oBAAAA,KAAK,IAAG,CAAR;AACF;AACL,iBAND,CAMC,MAAK,CAAE;AACX;AACJ;AACJ,WAZD,CAYC,MAAK,CAAE;AACX;;AACD,eAAOA,KAAP;AAGF,OAvBD;;AAwBA,UAAI4I,WAAW,GAAGD,aAAa,CAACZ,WAAD,CAA/B;AACA1N,MAAAA,OAAO,CAACC,GAAR,CAAYsO,WAAZ;AACA,UAAIC,mBAAmB,GAAGX,WAAW,CAACD,mBAAD,CAArC,CArjHwB,CA0jHxB;AAGA;AACA;AACA;AAGA;;AACA,YAAMa,eAAe,GAAIzM,KAAD,IAAW;AAChC,YAAI2D,KAAK,GAAE,CAAX;AACA,YAAIlB,SAAS,GAAGzC,KAAK,CAACT,MAAN,GAAe,EAA/B;;AACA,aAAI,IAAImD,CAAC,GAAE,CAAX,EAAeA,CAAC,IAAID,SAApB,EAAgCC,CAAC,EAAjC,EAAoC;AAChC,cAAIkB,UAAU,GAAIlB,CAAC,GAAG,EAAtB;;AACA,cAAG1C,KAAK,CAAC4D,UAAD,CAAL,IAAqB,GAAxB,EAA6B;AACzBD,YAAAA,KAAK,GAAG,CAAR;AACH;AACJ;;AACD,eAAOA,KAAP;AAEF,OAXD;;AAYA,UAAI+I,UAAU,GAAGD,eAAe,CAAC1K,QAAD,CAAhC;AACA,UAAI4K,WAAW,GAAGF,eAAe,CAACtI,SAAD,CAAjC;AACA,UAAIyI,WAAW,GAAGH,eAAe,CAACvH,SAAD,CAAjC;AACA,UAAI2H,WAAW,GAAGJ,eAAe,CAACxG,SAAD,CAAjC;AACA,UAAI6G,kBAAkB,GAAGL,eAAe,CAACzF,gBAAD,CAAxC;AACA,UAAI+F,mBAAmB,GAAGN,eAAe,CAAClE,iBAAD,CAAzC;AACA,UAAIyE,mBAAmB,GAAGP,eAAe,CAACnD,iBAAD,CAAzC;AACA,UAAI2D,mBAAmB,GAAGR,eAAe,CAACpC,iBAAD,CAAzC,CAtlHwB,CAylHxB;;AAEA,YAAM6C,iBAAiB,GAAIlN,KAAD,IAAW;AAClC,YAAI2D,KAAK,GAAE,CAAX;;AACA,aAAI,IAAIrE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,KAAK,CAACT,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC,cAAG;AACF,gBAAGU,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAe4D,SAAf,IAA4BlD,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,CAAW,CAAX,KAAiB4D,SAA7C,IAA0DlD,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,CAAW,CAAX,KAAiB4D,SAA3E,IAAwFlD,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,CAAW,CAAX,KAAiB4D,SAA5G,EAAsH;AAClH,kBAAGlD,KAAK,CAACV,CAAD,CAAL,CAAS,CAAT,KAAeU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,CAAW,CAAX,CAAf,IAAgCU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,CAAW,CAAX,KAAiBU,KAAK,CAACV,CAAC,GAAC,CAAH,CAAL,CAAW,CAAX,CAApD,EAAkE;AAC9DqE,gBAAAA,KAAK,GAAG,CAAR;AACH;AACL;AACA,WAND,CAMC,MAAK,CAAE;AACX;;AACD,eAAOA,KAAP;AAEF,OAbD;;AAcA,UAAIwJ,UAAU,GAAGD,iBAAiB,CAACnL,QAAD,CAAlC;AACA,UAAIqL,WAAW,GAAGF,iBAAiB,CAAC/I,SAAD,CAAnC;AACA,UAAIkJ,WAAW,GAAGH,iBAAiB,CAAChI,SAAD,CAAnC;AACA,UAAIoI,WAAW,GAAGJ,iBAAiB,CAACjH,SAAD,CAAnC;AACA,UAAIsH,kBAAkB,GAAGL,iBAAiB,CAAClG,gBAAD,CAA1C;AACA,UAAIwG,mBAAmB,GAAGN,iBAAiB,CAAC3E,iBAAD,CAA3C;AACA,UAAIkF,mBAAmB,GAAGP,iBAAiB,CAAC5D,iBAAD,CAA3C;AACA,UAAIoE,mBAAmB,GAAGR,iBAAiB,CAAC7C,iBAAD,CAA3C,CAhnHwB,CAmnHxB;AAEA;AAEA;;AAEA,YAAMsD,uBAAuB,GAAG,MAAM;AACnC,YAAIhK,KAAK,GAAE,CAAX;AACA,YAAIiK,OAAO,GAAG9B,WAAd;AACA,YAAI+B,OAAO,GAAG5B,WAAd;AACA,YAAI6B,OAAO,GAAG1B,WAAd;AACA,YAAI2B,OAAO,GAAGxB,WAAd;AAEA,YAAIyB,gBAAgB,GAAGjC,mBAAvB;AACA,YAAIkC,gBAAgB,GAAG/B,mBAAvB;AACA,YAAIgC,gBAAgB,GAAG7B,mBAAvB;AACA,YAAI8B,gBAAgB,GAAG3B,mBAAvB;AACA,YAAI4B,OAAO,GAAGR,OAAO,GAAGC,OAAV,GAAoBC,OAApB,GAA8BC,OAA9B,GAAwCC,gBAAxC,GAA2DC,gBAA3D,GAA8EC,gBAA9E,GAAiGC,gBAA/G,CAXmC,CAYnC;;AAEA,YAAIC,OAAO,IAAI,CAAf,EAAiB;AACbzK,UAAAA,KAAK,IAAG,CAAR;AACH;;AAED,eAAOA,KAAP;AACF,OAnBD;;AAoBA,UAAI0K,wBAAwB,GAAGV,uBAAuB,EAAtD,CA7oHwB,CA8oHxB;AAGA;AAKA;;AAEA,YAAMW,uBAAuB,GAAG,MAAM;AAClC,YAAI3K,KAAK,GAAE,CAAX;AACA,YAAI4K,OAAO,GAAG7B,UAAU,GAAGC,WAAb,GAA2BC,WAA3B,GAAyCC,WAAzC,GAAuDC,kBAAvD,GAA4EC,mBAA5E,GAAkGC,mBAAlG,GAAwHC,mBAAtI;AACA,YAAIuB,OAAO,GAAGrB,UAAU,GAAGC,WAAb,GAA2BC,WAA3B,GAAyCC,WAAzC,GAAuDC,kBAAvD,GAA4EC,mBAA5E,GAAkGC,mBAAlG,GAAwHC,mBAAtI;;AAEA,YAAGa,OAAO,IAAI,CAAd,EAAgB;AACZ5K,UAAAA,KAAK,IAAG,CAAR;AACH;;AACD,YAAG6K,OAAO,IAAI,CAAd,EAAgB;AACZ7K,UAAAA,KAAK,IAAG,CAAR;AACH;;AACD,eAAOA,KAAP;AACH,OAZD;;AAaA,UAAI8K,wBAAwB,GAAGH,uBAAuB,EAAtD,CArqHwB,CAsqHxB;AACA;;AAEA,YAAMI,gBAAgB,GAAIzN,IAAD,IAAU;AAC/B,aAAI,IAAI3B,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE2B,IAAI,CAAC1B,MAAvB,EAA+BD,CAAC,EAAhC,EAAmC;AAC/B,cAAG2B,IAAI,CAAC3B,CAAD,CAAJ,IAAW,GAAd,EAAkB;AACd2B,YAAAA,IAAI,CAAC3B,CAAD,CAAJ,GAAU,EAAV;AACH;AACJ;;AACD,eAAO2B,IAAP;AACH,OAPD;;AAQA,UAAI0N,SAAS,GAAGD,gBAAgB,CAACvD,WAAD,CAAhC;;AAEA,YAAMyD,wBAAwB,GAAI3N,IAAD,IAAU;AACvC,aAAI,IAAI3B,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE2B,IAAI,CAAC1B,MAAvB,EAA+BD,CAAC,EAAhC,EAAmC;AAC/B,cAAG2B,IAAI,CAAC3B,CAAD,CAAJ,IAAW,GAAd,EAAkB;AACd2B,YAAAA,IAAI,CAAC3B,CAAD,CAAJ,GAAU,EAAV;AACH;AACJ;;AACD,eAAO2B,IAAP;AACH,OAPD;;AAQA,UAAI4N,iBAAiB,GAAGD,wBAAwB,CAACxD,mBAAD,CAAhD;;AAGA,YAAM0D,gBAAgB,GAAG,CAACC,MAAD,EAAQC,OAAR,EAAgBC,OAAhB,EAAwBC,OAAxB,EAAgCC,OAAhC,EAAwCC,QAAxC,EAAiDC,QAAjD,EAA0DC,QAA1D,KAAuE;AAC5F,YAAIC,SAAS,GAAG,EAAhB;;AACA,aAAI,IAAIjQ,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE5C,UAAU,CAAC,CAAD,CAAV,CAAc6C,MAAhC,EAAuCD,CAAC,EAAxC,EAA2C;AACvC,eAAI,IAAIuD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAEnG,UAAU,CAAC,CAAD,CAAV,CAAc4C,CAAd,EAAiB,CAAjB,CAAlB,EAAuCuD,CAAC,EAAxC,EAA2C;AACvC0M,YAAAA,SAAS,CAACpQ,IAAV,CAAezC,UAAU,CAAC,CAAD,CAAV,CAAc4C,CAAd,CAAf;AACH;AACJ;;AAED,YAAIkQ,yBAAyB,GAAGT,MAAM,GAAGC,OAAT,GAAmBC,OAAnB,GAA6BC,OAA7B,GAAuCC,OAAvC,GAAiDC,QAAjD,GAA4DC,QAA5D,GAAuEC,QAAvG;;AAEA,YAAGC,SAAS,CAAChQ,MAAV,IAAoBiQ,yBAAvB,EAAiD,CAEhD,CAFD,MAEK,CAEJ;AACJ,OAfD,CA9rHwB,CA8sHxB;;;AAGA7N,MAAAA,2BAA2B,GAAG0M,wBAA9B;AACAzM,MAAAA,2BAA2B,GAAG6M,wBAA9B;AACA3S,MAAAA,YAAY,CAACqD,IAAb,CAAkBwP,SAAlB;AACA5S,MAAAA,oBAAoB,CAACoD,IAArB,CAA0B0P,iBAA1B;AACA,aAAO;AAACR,QAAAA,wBAAD;AAA0BI,QAAAA,wBAA1B;AAAmDE,QAAAA,SAAnD;AAA6D5S,QAAAA;AAA7D,OAAP;AACC,KAttHD;;AAutHA,QAAI0T,aAAa,GAAG5N,SAAS,EAA7B,CA/4HoC,CAg5HpC;;AAEA,QAAI6N,OAAO,GAAG,CAAd;;AAEA,UAAMC,SAAS,GAAG,MAAM;AAChB9N,MAAAA,SAAS;AACT,UAAI+N,YAAY,GAAGjO,2BAAnB;AACA,UAAIkO,YAAY,GAAGjO,2BAAnB;AACA,UAAIkO,kBAAkB,GAAGhU,YAAY,CAAC,CAAD,CAArC;AACA,UAAIiU,0BAA0B,GAAGhU,oBAAoB,CAAC,CAAD,CAArD;;AACJ,WAAI,IAAIuD,CAAC,GAAE,CAAX,EAAcA,CAAC,IAAI,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;AACtBuC,QAAAA,SAAS;AACT,YAAImO,WAAW,GAAGrO,2BAAlB;AACA,YAAIsO,WAAW,GAAGrO,2BAAlB;AACA,YAAIsO,iBAAiB,GAAGpU,YAAY,CAAC,CAAD,CAApC;AACA,YAAIqU,yBAAyB,GAAGpU,oBAAoB,CAAC,CAAD,CAApD;AACIiC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAeqB,CAA3B;;AACA,YAAGsQ,YAAY,GAAGI,WAAlB,EAA+B;AAC3BJ,UAAAA,YAAY,GAAGI,WAAf;AACAH,UAAAA,YAAY,GAAGI,WAAf;AACAH,UAAAA,kBAAkB,GAAGI,iBAArB;AACAH,UAAAA,0BAA0B,GAAGI,yBAA7B;AACH;;AACD,YAAGH,WAAW,IAAI,CAAlB,EAAoB;AAChBhS,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAeqB,CAA3B;AACAtB,UAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA2R,UAAAA,YAAY,GAAGI,WAAf;AACAH,UAAAA,YAAY,GAAGI,WAAf;AACAH,UAAAA,kBAAkB,GAAGI,iBAArB;AACAH,UAAAA,0BAA0B,GAAGI,yBAA7B;AACAnS,UAAAA,OAAO,CAACC,GAAR,CAAY,+BAA6B2R,YAAzC;AACA5R,UAAAA,OAAO,CAACC,GAAR,CAAY,+BAA8B4R,YAA1C,EARgB,CAShB;;AACAH,UAAAA,OAAO,GAAG,CAAV;AACA,iBAAO,CAAC5T,YAAY,CAAC,CAAD,CAAb,EAAkBC,oBAAoB,CAAC,CAAD,CAAtC,CAAP;AACH,SAZD,MAaK,IAAGiU,WAAW,IAAI,CAAf,IAAoBC,WAAW,IAAI,CAAtC,EAAwC;AACzCjS,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAeqB,CAA3B;AACAtB,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA2R,UAAAA,YAAY,GAAGI,WAAf;AACAH,UAAAA,YAAY,GAAGI,WAAf;AACAH,UAAAA,kBAAkB,GAAGI,iBAArB;AACAlS,UAAAA,OAAO,CAACC,GAAR,CAAY,8BAA4B2R,YAAxC;AACA5R,UAAAA,OAAO,CAACC,GAAR,CAAY,8BAA6B4R,YAAzC;AACA7R,UAAAA,OAAO,CAACC,GAAR,CAAYnC,YAAY,CAAC,CAAD,CAAxB;AACA4T,UAAAA,OAAO,GAAG,CAAV;AACA,iBAAO,CAAC5T,YAAY,CAAC,CAAD,CAAb,EAAkBC,oBAAoB,CAAC,CAAD,CAAtC,CAAP;AACH;AACR;;AACD,aAAO,CAACD,YAAY,CAAC,CAAD,CAAb,EAAkBC,oBAAoB,CAAC,CAAD,CAAtC,CAAP;AACH,KA9CD;;AA+CA,QAAIqU,WAAW,GAAGT,SAAS,EAA3B;AAEA,QAAIU,eAAe,GAAG,EAAtB;AACA,QAAIC,uBAAuB,GAAG,EAA9B;;AAEA,QAAGZ,OAAO,IAAI,CAAd,EAAgB;AAChB;AACA,YAAMa,wBAAwB,GAAItP,IAAD,IAAU;AACvC,aAAI,IAAI3B,CAAC,GAAE,CAAX,EAAcA,CAAC,IAAI2B,IAAI,CAAC,CAAD,CAAJ,CAAQ1B,MAA3B,EAAmCD,CAAC,EAApC,EAAuC;AACnC,cAAI;AACA+Q,YAAAA,eAAe,CAAClR,IAAhB,CAAqB,CAAC8B,IAAI,CAAC,CAAD,CAAJ,CAAQ3B,CAAR,EAAW,CAAX,CAAD,EAAe2B,IAAI,CAAC,CAAD,CAAJ,CAAQ3B,CAAR,EAAW,CAAX,CAAf,EAA6B2B,IAAI,CAAC,CAAD,CAAJ,CAAQ3B,CAAR,EAAW,CAAX,CAA7B,CAArB;AACH,WAFD,CAEE,OAAOkR,KAAP,EAAc,CAEf;AACJ;;AACD,aAAI,IAAIlR,CAAC,GAAE,CAAX,EAAcA,CAAC,IAAI2B,IAAI,CAAC,CAAD,CAAJ,CAAQ1B,MAA3B,EAAmCD,CAAC,EAApC,EAAuC;AACnC,cAAI;AACAgR,YAAAA,uBAAuB,CAACnR,IAAxB,CAA6B,CAAC8B,IAAI,CAAC,CAAD,CAAJ,CAAQ3B,CAAR,EAAW,CAAX,CAAD,EAAe2B,IAAI,CAAC,CAAD,CAAJ,CAAQ3B,CAAR,EAAW,CAAX,CAAf,EAA6B2B,IAAI,CAAC,CAAD,CAAJ,CAAQ3B,CAAR,EAAW,CAAX,CAA7B,CAA7B;AACH,WAFD,CAEE,OAAOkR,KAAP,EAAc,CAEf;AACJ;AACJ,OAfD;;AAgBAD,MAAAA,wBAAwB,CAACH,WAAD,CAAxB;AAGA,UAAIK,WAAW,GAAG,EAAlB;;AACA,WAAI,IAAInR,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG9C,QAAQ,CAAC,CAAD,CAAR,CAAY+C,MAA/B,EAAuCD,CAAC,EAAxC,EAA2C;AACvCmR,QAAAA,WAAW,CAACtR,IAAZ,CAAiB3C,QAAQ,CAAC,CAAD,CAAR,CAAY8C,CAAZ,EAAe,CAAf,CAAjB;AACH;;AACDmR,MAAAA,WAAW,CAACC,OAAZ,CAAoB,MAApB;;AACA,UAAGD,WAAW,CAACnQ,GAAZ,MAAqB4C,SAAxB,EAAkC,CACjC;;AAGD,UAAIyN,OAAO,GAAG,CAAC,QAAD,EAAU,QAAV,EAAmB,QAAnB,EAA4B,QAA5B,EAAqC,QAArC,EAA8C,QAA9C,EAAuD,QAAvD,EAAgE,QAAhE,EAAyE,QAAzE,EAAkF,QAAlF,EACd,SADc,EACJ,SADI,EACM,SADN,EACgB,SADhB,EAC0B,SAD1B,EACoC,SADpC,EAC8C,SAD9C,EACwD,SADxD,EACkE,SADlE,EAC4E,SAD5E,EAEd,UAFc,EAEH,UAFG,EAEQ,UAFR,EAEmB,UAFnB,EAE8B,UAF9B,EAEyC,UAFzC,EAEoD,UAFpD,EAE+D,UAF/D,EAE0E,UAF1E,EAEqF,UAFrF,EAGd,QAHc,EAGL,QAHK,EAGI,QAHJ,EAGa,QAHb,EAGsB,QAHtB,EAG+B,QAH/B,EAGwC,QAHxC,EAGiD,QAHjD,CAAd;AAKA,UAAIC,GAAG,GAAG,CAAC,WAAD,EAAa,WAAb,EAAyB,WAAzB,EAAqC,WAArC,EAAiD,WAAjD,EAA6D,WAA7D,EAAyE,WAAzE,EAAqF,WAArF,EAAiG,WAAjG,EAA6G,WAA7G,CAAV;;AAGA,YAAMC,aAAa,GAAG,CAACC,YAAD,EAAcC,OAAd,EAAsBC,QAAtB,EAAgCC,OAAhC,KAA4C;AAC9D,YAAIC,GAAG,GAAG,EAAV;;AAEA,aAAI,IAAI5R,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGwR,YAAY,CAACvR,MAAhC,EAAwCD,CAAC,IAAIyR,OAA7C,EAAsD;AAClDG,UAAAA,GAAG,CAAC/R,IAAJ,CAAS2R,YAAY,CAACrQ,KAAb,CAAmBnB,CAAnB,EAAsBA,CAAC,GAAGyR,OAA1B,CAAT;AACH;;AACD,aAAI,IAAIzR,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG0R,QAAQ,CAACzR,MAA5B,EAAoCD,CAAC,IAAI2R,OAAzC,EAAkD;AAC9CC,UAAAA,GAAG,CAAC/R,IAAJ,CAAS6R,QAAQ,CAACvQ,KAAT,CAAenB,CAAf,EAAkBA,CAAC,GAAG2R,OAAtB,CAAT;AACH;;AACD,eAAOC,GAAP;AACH,OAVD;;AAWA,UAAIC,OAAO,GAAGN,aAAa,CAACF,OAAD,EAAS,EAAT,EAAYN,eAAZ,EAA4B,EAA5B,CAA3B;AACArS,MAAAA,OAAO,CAACC,GAAR,CAAYkT,OAAZ;;AAEA,YAAMC,qBAAqB,GAAG,CAACN,YAAD,EAAcC,OAAd,EAAsBC,QAAtB,EAAgCC,OAAhC,KAA4C;AACtE,YAAIC,GAAG,GAAG,EAAV;;AAEA,aAAI,IAAI5R,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGwR,YAAY,CAACvR,MAAhC,EAAwCD,CAAC,IAAIyR,OAA7C,EAAsD;AAClDG,UAAAA,GAAG,CAAC/R,IAAJ,CAAS2R,YAAY,CAACrQ,KAAb,CAAmBnB,CAAnB,EAAsBA,CAAC,GAAGyR,OAA1B,CAAT;AACH;;AACD,aAAI,IAAIzR,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG0R,QAAQ,CAACzR,MAA5B,EAAoCD,CAAC,IAAI2R,OAAzC,EAAkD;AAC9CC,UAAAA,GAAG,CAAC/R,IAAJ,CAAS6R,QAAQ,CAACvQ,KAAT,CAAenB,CAAf,EAAkBA,CAAC,GAAG2R,OAAtB,CAAT;AACH;;AACD,eAAOC,GAAP;AACH,OAVD;;AAWA,UAAIG,eAAe,GAAGD,qBAAqB,CAACR,GAAD,EAAK,EAAL,EAAQN,uBAAR,EAAgC,EAAhC,CAA3C;AACAtS,MAAAA,OAAO,CAACC,GAAR,CAAYoT,eAAZ,EAhEgB,CAkEhB;AACA;;AAEA,YAAMC,cAAc,GAAG,CAAC9U,QAAD,EAAUwD,KAAV,KAAoB;AACvC,aAAI,IAAIV,CAAC,GAAE,CAAX,EAAcA,CAAC,GAACU,KAAK,CAACT,MAAtB,EAA8BD,CAAC,EAA/B,EAAkC;AAC9BU,UAAAA,KAAK,CAACV,CAAD,CAAL,CAASoR,OAAT,CAAiBlU,QAAQ,CAAC8C,CAAD,CAAzB;AACH;;AACD,eAAOU,KAAP;AACH,OALD;;AAOAsR,MAAAA,cAAc,CAACb,WAAD,EAAaU,OAAb,CAAd;;AAEA,YAAMI,sBAAsB,GAAG,CAAC/U,QAAD,EAAUwD,KAAV,KAAoB;AAC/C,aAAI,IAAIV,CAAC,GAAE,CAAX,EAAcA,CAAC,GAACU,KAAK,CAACT,MAAtB,EAA8BD,CAAC,EAA/B,EAAkC;AAC9BU,UAAAA,KAAK,CAACV,CAAD,CAAL,CAASoR,OAAT,CAAiBlU,QAAQ,CAAC8C,CAAD,CAAzB;AACH;;AACD,eAAOU,KAAP;AACH,OALD;;AAOAsR,MAAAA,cAAc,CAACb,WAAD,EAAaY,eAAb,CAAd;AAGA;AACA;;AACE,eAASG,UAAT,CAAoBvQ,IAApB,EAAyB;AACvB;AACA,eAAOA,IAAI,CAACvD,GAAL,CAAS+T,GAAG,IACjBA,GAAG,CACF/T,GADD,CACKgU,MADL,EACc;AADd,SAEChU,GAFD,CAEKgK,CAAC,IAAIA,CAAC,CAACiK,UAAF,CAAa,GAAb,EAAkB,IAAlB,CAFV,EAEoC;AAFpC,SAGCjU,GAHD,CAGKgK,CAAC,IAAK,IAAGA,CAAE,GAHhB,EAGqB;AAHrB,SAICkK,IAJD,CAIM,GAJN,CADK,CAKO;AALP,UAMLA,IANK,CAMA,MANA,CAAP,CAFuB,CAQN;AAClB;;AAEH,UAAIC,GAAG,GAAGL,UAAU,CAChBL,OADgB,CAApB;;AAIA,eAASW,YAAT,CAAsBC,OAAtB,EAA+BC,QAA/B,EAAyCC,WAAzC,EAAsD;AAClD;AACA,YAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACJ,OAAD,CAAT,EAAoB;AAAEK,UAAAA,IAAI,EAAEH;AAAR,SAApB,CAAX;AACA,YAAII,GAAG,GAAGC,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAAV,CAHkD,CAKlD;;AACA,YAAIM,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAV;AACAF,QAAAA,GAAG,CAACG,IAAJ,GAAWN,GAAX;AACAG,QAAAA,GAAG,CAACI,YAAJ,CAAiB,UAAjB,EAA6BZ,QAA7B;AACAQ,QAAAA,GAAG,CAACK,KAAJ;AACD;AAED;AACF;AACA;;;AACG,eAASC,kBAAT,CAA4B7R,IAA5B,EAAiC;AAChC;AACA,eAAOA,IAAI,CAACvD,GAAL,CAAS+T,GAAG,IACjBA,GAAG,CACF/T,GADD,CACKgU,MADL,EACc;AADd,SAEChU,GAFD,CAEKgK,CAAC,IAAIA,CAAC,CAACiK,UAAF,CAAa,GAAb,EAAkB,IAAlB,CAFV,EAEoC;AAFpC,SAGCjU,GAHD,CAGKgK,CAAC,IAAK,IAAGA,CAAE,GAHhB,EAGqB;AAHrB,SAICkK,IAJD,CAIM,GAJN,CADK,CAKO;AALP,UAMLA,IANK,CAMA,MANA,CAAP,CAFgC,CAQf;AAClB;;AAEH,UAAImB,WAAW,GAAGD,kBAAkB,CAChCzB,eADgC,CAApC;;AAIA,eAAS2B,oBAAT,CAA8BjB,OAA9B,EAAuCC,QAAvC,EAAiDC,WAAjD,EAA8D;AAC1D;AACA,YAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACJ,OAAD,CAAT,EAAoB;AAAEK,UAAAA,IAAI,EAAEH;AAAR,SAApB,CAAX;AACA,YAAII,GAAG,GAAGC,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAAV,CAH0D,CAK1D;;AACA,YAAIM,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAV;AACAF,QAAAA,GAAG,CAACG,IAAJ,GAAWN,GAAX;AACAG,QAAAA,GAAG,CAACI,YAAJ,CAAiB,UAAjB,EAA6BZ,QAA7B;AACAQ,QAAAA,GAAG,CAACK,KAAJ;AACD;;AAEDf,MAAAA,YAAY,CAACD,GAAD,EAAM,yCAAN,EAAiD,yBAAjD,CAAZ;AACAmB,MAAAA,oBAAoB,CAACD,WAAD,EAAc,iDAAd,EAAiE,yBAAjE,CAApB;AACD,KArJD,MAqJK;AACDE,MAAAA,KAAK,CAAC,wEAAD,CAAL;AACH,KA/lImC,CAkmIpC;;AAES;;AACL,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,CADJ;AAQH,CAzpID;;AA4pIA,eAAe/W,aAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { create, find, forEach, indexOf } from \"lodash\";\r\nimport React,{ useEffect,useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport _ from 'lodash';\r\nimport { CSVLink } from \"react-csv\";\r\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\r\n\r\n\r\nlet finalDataAll = [];\r\nlet finalDataAllElective = [];\r\nlet checkHardConstraintOutsite = 0;\r\nlet checkSoftConstraintOutsite = 0;\r\n\r\nconst ArraySchedule = (props) => {\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [loadedFile, setLoaadedFile] = useState(false);\r\n    const [roomData, setroomData] = useState();\r\n    const [courseData, setcourseData] = useState();\r\n    const [CsvData, setCsvData] = useState();\r\n    // const [Keys, setKeys] = useState();\r\n    //const [uploadedData, setUploadedData] = useState([]);\r\n    //console.log(\"props dataset:\"+ props.test)\r\n\r\n    const userId = useParams().userId;\r\n    useEffect(()=>{\r\n        const sendRequest = async () =>{\r\n            setIsLoading(true);\r\n            try{\r\n            const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875');\r\n            //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\r\n            //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\r\n            const responsedata = await response.json();\r\n            let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset);\r\n\r\n            // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\r\n            const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset =>[Dataset['Room'],Dataset['Size']]); //Extract Room\r\n            setroomData([ertRoom]);\r\n\r\n            const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'],Dataset['Course Code'],Dataset['Course Name'],Dataset['Year'],Dataset['Semester'],Dataset['Lecturer'],Dataset['Group'],Dataset['HMS'],Dataset['Programme Code'],Dataset['Slot1'],Dataset['Slot2']]); //Extract Enrollment Quota\r\n            setcourseData([ertCourse]);\r\n\r\n            if (!response.ok){\r\n                throw new Error(responsedata.message);\r\n            }\r\n            setLoaadedFile(stringifyData);\r\n            setIsLoading(true);\r\n            }catch(err){\r\n                console.log(err.message);\r\n            }\r\n            setIsLoading(false);\r\n            \r\n        };\r\n        sendRequest();\r\n    },[userId]);\r\n\r\n        if(!isLoading && loadedFile){\r\n            const testData = [1,2,3,4,5,6,7,8,9];\r\n            const EnrollmentQuota = [];\r\n            const CourseCode = [];\r\n            const HMS = [];\r\n            const lecturerData = []\r\n            const roomName = [];\r\n            const roomSize = [];\r\n            const filterData50  = [];\r\n            const filterData100  = [];\r\n            const filterData200  = [];\r\n            const filterData500  = [];\r\n            const filterDataElective50  = [];\r\n            const filterDataElective100  = [];\r\n            const filterDataElective200  = [];\r\n            const filterDataElective500  = [];\r\n            const dupeData  = [];\r\n            const room = []\r\n            room.push(roomData[0])\r\n            \r\n            let hardConstraintViolated = 0;\r\n            let softConstraintViolated = 0;\r\n            //console.log(courseData[0][0][1]);\r\n            for(let i = 0; i <courseData[0].length; i++){\r\n                let enrollment = [courseData[0][i][0]];\r\n                let code = [courseData[0][i][1]];\r\n                let hms = [courseData[0][i][7]];\r\n                let lecturer = [courseData[0][i][5]];\r\n                enrollment.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    EnrollmentQuota.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                code.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    CourseCode.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                hms.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    HMS.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                lecturer.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    lecturerData.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n            }\r\n\r\n            for(let i = 0; i <roomData[0].length; i++){\r\n                let name = [roomData[0][i][0]];\r\n                let size = [roomData[0][i][1]];\r\n                name.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomName.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                size.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomSize.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n            }\r\n \r\n            \r\n            const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\r\n\r\n            const notDuplicatesLecturer = lecturerData.filter((item, index) => index == lecturerData.indexOf(item));\r\n            notDuplicatesLecturer.pop();\r\n            //console.log(notDuplicatesLecturer)\r\n\r\n\r\n            let courseDataXElective = []\r\n            let courseDataWithElective = []\r\n            courseData[0].pop()\r\n\r\n            //saparate faculty course with the elective course\r\n            for(let i=0; i< courseData[0].length; i++){\r\n                if(courseData[0][i][1].slice(0,3) != 'TMU'){\r\n                    courseData[0][i].splice()\r\n                    if(  courseData[0][i][1].slice(0,3) != 'TMX'){\r\n                        courseData[0][i].splice()\r\n                        courseDataXElective.push(courseData[0][i])\r\n                    }\r\n                }\r\n            }\r\n\r\n            //saparate elective course with the faculty course\r\n            for(let i=0; i< courseData[0].length; i++){\r\n                if(courseData[0][i][1].slice(0,3) == 'TMU' ||  courseData[0][i][1].slice(0,3) == 'TMX'){\r\n                    courseDataWithElective.push(courseData[0][i])\r\n                }\r\n            }\r\n\r\n            //insert data without elective courses into correct room capacity\r\n                for(let i = 0; i< courseDataXElective.length;i++){\r\n                        if (courseDataXElective[i][0] < 50) {\r\n                            filterData50.push(courseDataXElective[i]);\r\n                        }\r\n                        if (courseDataXElective[i][0] >= 50 && courseDataXElective[i][0] < 100) {\r\n                            \r\n                            filterData100.push(courseDataXElective[i]);\r\n                        }\r\n                        if (courseDataXElective[i][0] >= 100 && courseDataXElective[i][0] < 200 ) {\r\n                            filterData200.push(courseDataXElective[i]);\r\n                        }\r\n                        if (courseDataXElective[i][0] >= 200 && courseDataXElective[i][0] < 500) {\r\n                            filterData500.push(courseDataXElective[i]);\r\n                        }\r\n                }\r\n                //console.log(filterData50)\r\n\r\n                //insert data without faculty courses into correct room capacity\r\n                for(let i = 0; i< courseDataWithElective.length;i++){\r\n                    if (courseDataWithElective[i][0] < 50) {\r\n                        filterDataElective50.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 50 && courseDataWithElective[i][0] < 100) {\r\n                        \r\n                        filterDataElective100.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 100 && courseDataWithElective[i][0] < 200 ) {\r\n                        filterDataElective200.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 200 && courseDataWithElective[i][0] < 500) {\r\n                        filterDataElective500.push(courseDataWithElective[i]);\r\n                    }\r\n                }\r\n                // console.log(filterDataElective50);\r\n                // console.log(filterDataElective100);\r\n                // console.log(filterDataElective200);\r\n                // console.log(filterDataElective500);\r\n\r\n\r\n            let roomUnder50 = []\r\n            let roomUnder100 = []\r\n            let roomUnder200 = []\r\n            let roomUnder500 = []\r\n            const checkNumberofRoom = () => {\r\n                for(let i = 0; i < roomData[0].length; i++){\r\n                    let room = roomData[0][i][1]\r\n                    //console.log(roomData[0][i][1]);\r\n                    if(room < 50){\r\n                        roomUnder50.push(room)\r\n                    }else if(room > 50 && room < 100){\r\n                        roomUnder100.push(room)\r\n\r\n                    }else if(room > 100 && room < 200){\r\n                        roomUnder200.push(room)\r\n\r\n                    }else if(room > 200){\r\n                        roomUnder500.push(room)\r\n                    }\r\n                }\r\n            }\r\n            checkNumberofRoom();\r\n\r\n\r\n            const createArray = (data) => {\r\n                var result = []\r\n\r\n                    for(let i = 0; i<data; i++){\r\n                        result[i] = []\r\n                    }\r\n                return result;\r\n            }\r\n\r\n            let DataArray50 = roomUnder50.length * 38;\r\n            let DataArray100 = roomUnder100.length * 38;\r\n            let DataArray200 = roomUnder200.length * 38;\r\n            let DataArray500 = roomUnder500.length * 38;\r\n\r\n            let DataArrayElective50 = roomUnder50.length * 10;\r\n            let DataArrayElective100 = roomUnder100.length * 10;\r\n            let DataArrayElective200 = roomUnder200.length * 10;\r\n            let DataArrayElective500 = roomUnder500.length * 10;\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nvar checkTotalHardContraintsAll = 0\r\nvar checkTotalSoftContraintsAll = 0\r\n\r\nconst antSystem = () => {\r\n\r\n//______________________________________________________________________________________________________________________________________________\r\n//Faculty courses\r\n\r\n\r\n//create 1d array for dataset less than 50\r\n    const array1D50 = (data) => {\r\n        var result = []\r\n    \r\n        for(let i = 0; i< data; i++){\r\n            result[i]= 100;\r\n        }\r\n        return result;\r\n    }\r\n    var AntArr50 = array1D50(DataArray50);\r\n    \r\n    let insertedData50_Slot2_2 = []\r\n    let insertedData50_Slot2_1= []\r\n    \r\n    const AntAlgoInsert50 = (array) => {\r\n        let test = []\r\n        let k = 0;\r\n        let k2 =0\r\n        let k3 =0\r\n        \r\n        let remainderArray = []\r\n        let remainderArraySlot1 = []\r\n        let totalRoom = array.length / 38\r\n    \r\n        for(let x=0; x<filterData50.length;x++){\r\n            test.push(filterData50[x]);\r\n        }\r\n    \r\n         for(let i = array.length-1;i>0;i--){\r\n             if(k < test.length){\r\n             let hourMS = test[k][7]\r\n             let b = 0\r\n             \r\n             if(b < totalRoom){\r\n                 try{\r\n                    if( array[i][5] != 100 && array[i][5] == test[k][5]){\r\n                        if( array[i+38*b]==100){\r\n                            array[i+38*b] = 0\r\n                        }\r\n                        if( array[i-38*b]==100){\r\n                            array[i-38*b] = 0\r\n                        }\r\n                    }\r\n                 }catch{}\r\n            }   \r\n            b++\r\n    \r\n             if(hourMS == 4){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    if(array[i-1] == 100){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n    \r\n                        if(b < totalRoom){\r\n                            if( array[i][5] != 100 && array[i][5] == test[k][5]){\r\n                                if( array[i+38*b]==100 && array[i + 37*b] == 100){\r\n                                    array[i+38*b] = 0\r\n                                    array[i+37*b] = 0\r\n                                }\r\n                                if( array[i-38*b]==100 && array[i - 37*b] == 100){\r\n                                    array[i-38*b] = 0\r\n                                    array[i-37*b] = 0\r\n                                }\r\n                            }\r\n                        }   \r\n                        b++\r\n    \r\n                        //const j = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100 && array[i-1] == 100){\r\n                            \r\n                                array[i] = array[j];\r\n                                array[i-1] = array[j-1];\r\n                                array[j] = test[k];\r\n                                array[j-1] = test[k];\r\n                            }\r\n                            else if(array[i] == 100 && array[i+1] == 100){\r\n                               array[i] = array[j];\r\n                               array[i+1] = array[j+1];\r\n                               array[j] = test[k];\r\n                               array[j+1] = test[k];\r\n                           }\r\n                           else{\r\n                               remainderArraySlot1.push(test[k]);\r\n                           }\r\n    \r\n                           for(let x = 0; x < array.length ; x++){\r\n                               if(array[x] == 0){\r\n                                   array[x] = 100;\r\n                               }\r\n                           }\r\n    \r\n                    }\r\n                    else if(array[i+1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        \r\n                        if(b < totalRoom){\r\n                            if(array[i][5] != 100 && array[i][5] == test[k][5]){\r\n                                if( array[i+38*b]==100 && array[i + 39*b] == 100){\r\n                                    array[i+38*b] = 0\r\n                                    array[i+39*b] = 0\r\n                                }\r\n                                if(array[i-38*b]==100 && array[i - 39*b] == 100){\r\n                                    array[i-38*b] = 0\r\n                                    array[i-39*b] = 0\r\n                                }\r\n                            }\r\n                        }   \r\n                        b++\r\n    \r\n                        //const j = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100 && array[i-1] == 100){\r\n                                array[i] = array[j];\r\n                                array[i-1] = array[j-1];\r\n                                array[j] = test[k];\r\n                                array[j-1] = test[k];\r\n                            }\r\n                            else if(array[i] == 100 && array[i+1] == 100){\r\n                               array[i] = array[j];\r\n                               array[i+1] = array[j+1];\r\n                               array[j] = test[k];\r\n                               array[j+1] = test[k];\r\n                           }\r\n                           else{\r\n                               remainderArraySlot1.push(test[k]);\r\n                           }\r\n                           for(let x = 0; x < array.length ; x++){\r\n                               if(array[x] == 0){\r\n                                   array[x] = 100;\r\n                               }\r\n                           }\r\n                        \r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                }\r\n            }\r\n    \r\n             else if(hourMS == 2){\r\n                 const j = Math.floor(Math.random()*(i+1));\r\n                 if(array[i] == 100){\r\n                     if(array[i-1] == 100){\r\n                         array[i] = array[j];\r\n                         array[i-1] = array[j-1];\r\n                         array[j] = test[k];\r\n                         array[j-1] = test[k];\r\n                     }else if(array[i+1] == 100){\r\n                         array[i] = array[j];\r\n                         array[i+1] = array[j+1];\r\n                         array[j] = test[k];\r\n                         array[j+1] = test[k];\r\n                     }\r\n                     else{\r\n                         remainderArray.push(test[k]);\r\n                     }\r\n                 }else{\r\n                     remainderArray.push(test[k]);\r\n                 }\r\n             }\r\n    \r\n             else if(hourMS == 3){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        array[j+1] = test[k];\r\n                    }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        insertedData50_Slot2_1.push(test[k])\r\n                    }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        insertedData50_Slot2_1.push(test[k])\r\n                    }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                        array[i] = array[j];\r\n                        array[j] = test[k];\r\n                        remainderArraySlot1.push(test[k])\r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                }\r\n            }\r\n         }\r\n         k++  \r\n     }\r\n    \r\n     //fullfill the slot 3\r\n     for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100 && array[x+1] ==100){\r\n             if(k3 < remainderArraySlot1.length){\r\n                 array[x] = remainderArraySlot1[k3]\r\n                 array[x+1] = remainderArraySlot1[k3]\r\n             }\r\n             k3++   \r\n         }\r\n     }\r\n    \r\n     //console.log(remainderArray);\r\n     for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k2 < remainderArray.length){\r\n                     array[x] = remainderArray[k2]\r\n                     array[x+1] = remainderArray[k2]\r\n                 }\r\n                 try{\r\n                     let slot2 = remainderArray[k2][10]\r\n                     if(slot2 == 1){\r\n                         insertedData50_Slot2_1.push(remainderArray[k2])\r\n                     }\r\n                     if(slot2 == 2){\r\n                        insertedData50_Slot2_2.push(remainderArray[k2])\r\n                    }\r\n                 }catch{}\r\n             k2++   \r\n         }\r\n     }\r\n    \r\n     if(array[-1] != undefined){\r\n         insertedData50_Slot2_1.push(array[-1]);\r\n     }\r\n    \r\n        return array;\r\n    }\r\n    \r\n    var AntArrIns50 = AntAlgoInsert50(AntArr50);\r\n    //console.log(AntArrIns50);\r\n    \r\n     const slot2Equal1for50= (array) => {\r\n         let k = 0;\r\n         let test2 = []\r\n         \r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100){\r\n                 if(k < insertedData50_Slot2_1.length){\r\n                     array[x] = insertedData50_Slot2_1[k]\r\n                 }\r\n             k++   \r\n             }\r\n         }\r\n         return array;\r\n     }\r\n     let varchec50 = slot2Equal1for50(AntArr50);\r\n    \r\n    \r\n     const slot2Equal2for50 = (array) => {\r\n         let k = 0;\r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k < insertedData50_Slot2_2.length){\r\n                     array[x] = insertedData50_Slot2_2[k]\r\n                     array[x+1] = insertedData50_Slot2_2[k]\r\n                 }\r\n             k++   \r\n             }\r\n         }\r\n    \r\n         if(array[-1] != undefined){\r\n             insertedData50_Slot2_1.push(array[-1]);\r\n         }else{\r\n    \r\n         }\r\n    \r\n         return array;\r\n     }\r\n     slot2Equal2for50(AntArr50);\r\n    \r\n    \r\n    let reshuffle50 = []\r\n    let notDupeShuffle50 = []\r\n    const check1Teacher_50 = (array) => {\r\n        let count =0\r\n        let indexArray = 0\r\n        let totalRoom = array.length / 38\r\n        for(let x= 1 ; x <= totalRoom ; x++){\r\n         indexArray = (x * 38)\r\n            try{\r\n             for(let i = 1; i<array.length ; i++){\r\n                    if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 0 ){\r\n                        try{\r\n                            if(array[i][5] == array[i+indexArray][5] ){\r\n                                reshuffle50.push([i+indexArray,array[i+indexArray]]);\r\n                             }\r\n                             if(array[i][6] == array[i+indexArray][6] && array[i][5] == array[i+indexArray][5]){\r\n                                try{\r\n                                    reshuffle50.push([i+indexArray,array[i+indexArray]]);\r\n                                }catch{}\r\n                            }\r\n                        }catch{}\r\n                    }    \r\n                }\r\n            }catch{}\r\n        }\r\n        for(let x =0; x < reshuffle50.length; x++){\r\n            try{\r\n                if( reshuffle50[x][0] != reshuffle50[x+1][0]){\r\n                notDupeShuffle50.push(reshuffle50[x]);\r\n            }\r\n    \r\n            }catch{}\r\n    \r\n        }\r\n        var last = reshuffle50.splice(-1)[0]\r\n        notDupeShuffle50.push(last);\r\n    \r\n    }\r\n    check1Teacher_50(AntArr50)\r\n    \r\n    const reshuffle50_50 = (data,array) => {\r\n    \r\n        //console.log(data)\r\n        let k = 0\r\n        let count =0\r\n        let totalRoom = array.length / 38\r\n    \r\n        for(let x =0; x < data.length; x ++){\r\n            for(let i =0; i < array.length ; i++){\r\n                try{\r\n                    if(data[x][0] == i){\r\n                        array[i] = 1\r\n                    }\r\n                }catch{}\r\n            }\r\n    \r\n        }\r\n\r\n        for(let x =0; x < data.length; x ++){\r\n            for(let i =0; i < array.length ; i++){\r\n                try{\r\n                    if(array[i] != 100){\r\n                        if(array[i][5] ==  data[k][1][5] ){\r\n                            for(let b = 1 ; b <= totalRoom ; b++){\r\n                                if( array[i+38*b]==100){\r\n                                    array[i+38*b] = 0\r\n                                }\r\n                                if( array[i-38*b]==100 ){\r\n                                    array[i-38*b] = 0\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                }\r\n                }catch{}\r\n            }\r\n    \r\n        }\r\n\r\n        \r\n        for(let i = 0; i < array.length; i++){\r\n            if(array[i] == 100){\r\n                if(k < data.length){\r\n                //count +=1\r\n                try{\r\n                    if(data[k][1] != undefined){\r\n                        array[i] = data[k][1]\r\n                    }\r\n                }catch{}\r\n                }\r\n                k++\r\n            }\r\n        }\r\n    \r\n            for(let x = 0; x< array.length; x++){\r\n                if(array[x] == 0){\r\n                    array[x] = 100\r\n                }\r\n                if(array[x] == 1){\r\n                    array[x] = 100\r\n                }\r\n            }\r\n            \r\n            // console.log(\"count: \"+ count)\r\n    }\r\n    reshuffle50_50(notDupeShuffle50,AntArr50);\r\n    \r\n    const checkAmountData50_2 = (array) => {\r\n        let count = 0\r\n        for(let i = 0; i < array.length; i++){\r\n                if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n                    count += 1\r\n                }\r\n        }\r\n        return count\r\n    }\r\n    var checkAmount_2 = checkAmountData50_2(AntArrIns50)\r\n    // console.log(AntArrIns50)\r\n    // console.log(\"Amount of data: \" +checkAmount_2);\r\n    \r\n    const checkAmountData50_0 = (array) => {\r\n        let count = 0\r\n        for(let i = 0; i < array.length; i++){\r\n                if( array[i] == 0 ){\r\n                    count += 1\r\n                }\r\n        }\r\n        return count\r\n    }\r\n    // var checkAmount_0 = checkAmountData50_0(AntArrIns50)\r\n    // console.log(\"zero counter: \"+checkAmount_0);\r\n\r\n//______________________________________________________________________________________________________________________________________________\r\n\r\n//______________________________________________________________________________________________________________________________________________\r\n\r\n\r\n//create 1d array for dataset more or equal to 500 and less than 100\r\nconst array1D100 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArr100 = array1D100(DataArray100);\r\n\r\nlet insertedData100_Slot2_2 = []\r\nlet insertedData100_Slot2_1= []\r\n\r\nconst AntAlgoInsert100 = (array) => {\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    \r\n    let remainderArray = []\r\n    let remainderArraySlot1 = []\r\n    let totalRoom = array.length / 38\r\n\r\n    for(let x=0; x<filterData100.length;x++){\r\n        test.push(filterData100[x]);\r\n    }\r\n\r\n     for(let i = array.length-1;i>0;i--){\r\n         if(k < test.length){\r\n         let hourMS = test[k][7]\r\n         let b = 0\r\n         \r\n         if(b < totalRoom){\r\n             try{\r\n                if( array[i][5] != 100 && array[i][5] == test[k][5]){\r\n                    if( array[i+38*b]==100){\r\n                        array[i+38*b] = 0\r\n                    }\r\n                    if( array[i-38*b]==100){\r\n                        array[i-38*b] = 0\r\n                    }\r\n                }\r\n             }catch{}\r\n        }   \r\n        b++\r\n\r\n         if(hourMS == 4){\r\n            const j = Math.floor(Math.random()*(i+1));\r\n            if(array[i] == 100){\r\n                if(array[i-1] == 100){\r\n                    array[i] = array[j];\r\n                    array[i-1] = array[j-1];\r\n                    array[j] = test[k];\r\n                    array[j-1] = test[k];\r\n\r\n                    if(b < totalRoom){\r\n                        if( array[i][5] != 100 && array[i][5] == test[k][5]){\r\n                            if( array[i+38*b]==100 && array[i + 37*b] == 100){\r\n                                array[i+38*b] = 0\r\n                                array[i+37*b] = 0\r\n                            }\r\n                            if( array[i-38*b]==100 && array[i - 37*b] == 100){\r\n                                array[i-38*b] = 0\r\n                                array[i-37*b] = 0\r\n                            }\r\n                        }\r\n                    }   \r\n                    b++\r\n\r\n                    //const j = Math.floor(Math.random()*(i+1));\r\n                    if(array[i] == 100 && array[i-1] == 100){\r\n                        \r\n                            array[i] = array[j];\r\n                            array[i-1] = array[j-1];\r\n                            array[j] = test[k];\r\n                            array[j-1] = test[k];\r\n                        }\r\n                        else if(array[i] == 100 && array[i+1] == 100){\r\n                           array[i] = array[j];\r\n                           array[i+1] = array[j+1];\r\n                           array[j] = test[k];\r\n                           array[j+1] = test[k];\r\n                       }\r\n                       else{\r\n                           remainderArraySlot1.push(test[k]);\r\n                       }\r\n\r\n                       for(let x = 0; x < array.length ; x++){\r\n                           if(array[x] == 0){\r\n                               array[x] = 100;\r\n                           }\r\n                       }\r\n\r\n                }\r\n                else if(array[i+1] == 100 ){\r\n                    array[i] = array[j];\r\n                    array[i+1] = array[j+1];\r\n                    array[j] = test[k];\r\n                    array[j+1] = test[k];\r\n                    \r\n                    if(b < totalRoom){\r\n                        if(array[i][5] != 100 && array[i][5] == test[k][5]){\r\n                            if( array[i+38*b]==100 && array[i + 39*b] == 100){\r\n                                array[i+38*b] = 0\r\n                                array[i+39*b] = 0\r\n                            }\r\n                            if(array[i-38*b]==100 && array[i - 39*b] == 100){\r\n                                array[i-38*b] = 0\r\n                                array[i-39*b] = 0\r\n                            }\r\n                        }\r\n                    }   \r\n                    b++\r\n\r\n                    //const j = Math.floor(Math.random()*(i+1));\r\n                    if(array[i] == 100 && array[i-1] == 100){\r\n                            array[i] = array[j];\r\n                            array[i-1] = array[j-1];\r\n                            array[j] = test[k];\r\n                            array[j-1] = test[k];\r\n                        }\r\n                        else if(array[i] == 100 && array[i+1] == 100){\r\n                           array[i] = array[j];\r\n                           array[i+1] = array[j+1];\r\n                           array[j] = test[k];\r\n                           array[j+1] = test[k];\r\n                       }\r\n                       else{\r\n                           remainderArraySlot1.push(test[k]);\r\n                       }\r\n                       for(let x = 0; x < array.length ; x++){\r\n                           if(array[x] == 0){\r\n                               array[x] = 100;\r\n                           }\r\n                       }\r\n                    \r\n                }\r\n                else{\r\n                    remainderArray.push(test[k]);\r\n                }\r\n            }else{\r\n                remainderArray.push(test[k]);\r\n            }\r\n        }\r\n\r\n         else if(hourMS == 2){\r\n             const j = Math.floor(Math.random()*(i+1));\r\n             if(array[i] == 100){\r\n                 if(array[i-1] == 100){\r\n                     array[i] = array[j];\r\n                     array[i-1] = array[j-1];\r\n                     array[j] = test[k];\r\n                     array[j-1] = test[k];\r\n                 }else if(array[i+1] == 100){\r\n                     array[i] = array[j];\r\n                     array[i+1] = array[j+1];\r\n                     array[j] = test[k];\r\n                     array[j+1] = test[k];\r\n                 }\r\n                 else{\r\n                     remainderArray.push(test[k]);\r\n                 }\r\n             }else{\r\n                 remainderArray.push(test[k]);\r\n             }\r\n         }\r\n\r\n         else if(hourMS == 3){\r\n            const j = Math.floor(Math.random()*(i+1));\r\n            if(array[i] == 100){\r\n                if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                    array[i] = array[j];\r\n                    array[i-1] = array[j-1];\r\n                    array[i+1] = array[j+1];\r\n                    array[j] = test[k];\r\n                    array[j-1] = test[k];\r\n                    array[j+1] = test[k];\r\n                }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                    array[i] = array[j];\r\n                    array[i-1] = array[j-1];\r\n                    array[j] = test[k];\r\n                    array[j-1] = test[k];\r\n                    insertedData100_Slot2_1.push(test[k])\r\n                }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                    array[i] = array[j];\r\n                    array[i+1] = array[j+1];\r\n                    array[j] = test[k];\r\n                    array[j+1] = test[k];\r\n                    insertedData100_Slot2_1.push(test[k])\r\n                }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                    array[i] = array[j];\r\n                    array[j] = test[k];\r\n                    remainderArraySlot1.push(test[k])\r\n                }\r\n            }else{\r\n                remainderArray.push(test[k]);\r\n            }\r\n        }\r\n     }\r\n     k++  \r\n }\r\n\r\n //fullfill the slot 3\r\n for(let x = 0; x< array.length; x++){\r\n     if(array[x] == 100 && array[x+1] ==100){\r\n         if(k3 < remainderArraySlot1.length){\r\n             array[x] = remainderArraySlot1[k3]\r\n             array[x+1] = remainderArraySlot1[k3]\r\n         }\r\n         k3++   \r\n     }\r\n }\r\n\r\n //console.log(remainderArray);\r\n for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100 && array[x+1] ==100){\r\n             if(k2 < remainderArray.length){\r\n                 array[x] = remainderArray[k2]\r\n                 array[x+1] = remainderArray[k2]\r\n             }\r\n             try{\r\n                 let slot2 = remainderArray[k2][10]\r\n                 if(slot2 == 1){\r\n                     insertedData100_Slot2_1.push(remainderArray[k2])\r\n                 }\r\n                 if(slot2 == 2){\r\n                    insertedData100_Slot2_2.push(remainderArray[k2])\r\n                }\r\n             }catch{}\r\n         k2++   \r\n     }\r\n }\r\n\r\n if(array[-1] != undefined){\r\n     insertedData100_Slot2_1.push(array[-1]);\r\n }\r\n\r\n    return array;\r\n}\r\n\r\nvar AntArrIns100 = AntAlgoInsert100(AntArr100);\r\n//console.log(AntArrIns100);\r\n\r\n const slot2Equal1for100= (array) => {\r\n     let k = 0;\r\n     let test2 = []\r\n     \r\n     for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100){\r\n             if(k < insertedData100_Slot2_1.length){\r\n                 array[x] = insertedData100_Slot2_1[k]\r\n             }\r\n         k++   \r\n         }\r\n     }\r\n     return array;\r\n }\r\n let varchec100 = slot2Equal1for100(AntArr100);\r\n\r\n\r\n const slot2Equal2for100 = (array) => {\r\n     let k = 0;\r\n     for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100 && array[x+1] ==100){\r\n             if(k < insertedData100_Slot2_2.length){\r\n                 array[x] = insertedData100_Slot2_2[k]\r\n                 array[x+1] = insertedData100_Slot2_2[k]\r\n             }\r\n         k++   \r\n         }\r\n     }\r\n\r\n     if(array[-1] != undefined){\r\n         insertedData100_Slot2_1.push(array[-1]);\r\n     }else{\r\n\r\n     }\r\n\r\n     return array;\r\n }\r\n slot2Equal2for100(AntArr100);\r\n\r\n\r\nlet reshuffle100 = []\r\nlet notDupeShuffle100 = []\r\nconst check1Teacher_100 = (array) => {\r\n    let count =0\r\n    let indexArray = 0\r\n    let totalRoom = array.length / 38\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n     indexArray = (x * 38)\r\n        try{\r\n         for(let i = 1; i<array.length ; i++){\r\n                if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 0 ){\r\n                    try{\r\n                        if(array[i][5] == array[i+indexArray][5] ){\r\n                            reshuffle100.push([i+indexArray,array[i+indexArray]]);\r\n                         }\r\n                         if(array[i][6] == array[i+indexArray][6] && array[i][5] == array[i+indexArray][5]){\r\n                            try{\r\n                                reshuffle100.push([i+indexArray,array[i+indexArray]]);\r\n                            }catch{}\r\n                        }\r\n                    }catch{}\r\n                }    \r\n            }\r\n        }catch{}\r\n    }\r\n    for(let x =0; x < reshuffle100.length; x++){\r\n        try{\r\n            if( reshuffle100[x][0] != reshuffle100[x+1][0]){\r\n            notDupeShuffle100.push(reshuffle100[x]);\r\n        }\r\n\r\n        }catch{}\r\n\r\n    }\r\n    var last = reshuffle100.splice(-1)[0]\r\n    notDupeShuffle100.push(last);\r\n\r\n}\r\ncheck1Teacher_100(AntArr100)\r\n\r\nconst reshuffle100_100 = (data,array) => {\r\n\r\n    //console.log(data)\r\n    let k = 0\r\n    let count =0\r\n    let totalRoom = array.length / 38\r\n\r\n    for(let x =0; x < data.length; x ++){\r\n        for(let i =0; i < array.length ; i++){\r\n            try{\r\n                if(data[x][0] == i){\r\n                    array[i] = 1\r\n                }\r\n            }catch{}\r\n        }\r\n\r\n    }\r\n\r\n    for(let x =0; x < data.length; x ++){\r\n        for(let i =0; i < array.length ; i++){\r\n            try{\r\n                if(array[i] != 100){\r\n                    if(array[i][5] ==  data[k][1][5] ){\r\n                        for(let b = 1 ; b <= totalRoom ; b++){\r\n                            if( array[i+38*b]==100){\r\n                                array[i+38*b] = 0\r\n                            }\r\n                            if( array[i-38*b]==100 ){\r\n                                array[i-38*b] = 0\r\n                            }\r\n                        }\r\n                    }\r\n\r\n            }\r\n            }catch{}\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    for(let i = 0; i < array.length; i++){\r\n        if(array[i] == 100){\r\n            if(k < data.length){\r\n            //count +=1\r\n            try{\r\n                if(data[k][1] != undefined){\r\n                    array[i] = data[k][1]\r\n                }\r\n            }catch{}\r\n            }\r\n            k++\r\n        }\r\n    }\r\n\r\n        for(let x = 0; x< array.length; x++){\r\n            if(array[x] == 0){\r\n                array[x] = 100\r\n            }\r\n            if(array[x] == 1){\r\n                array[x] = 100\r\n            }\r\n        }\r\n        \r\n        // console.log(\"count: \"+ count)\r\n}\r\nreshuffle100_100(notDupeShuffle100,AntArr100);\r\n\r\nconst checkAmountData100_2 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=100 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_2 = checkAmountData100_2(AntArrIns100)\r\n// console.log(AntArrIns100)\r\n// console.log(\"Amount of data: \" +checkAmount_2);\r\n\r\nconst checkAmountData100_0 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if( array[i] == 0 ){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\n// var checkAmount_0 = checkAmountData100_0(AntArrIns100)\r\n// console.log(\"zero counter: \"+checkAmount_0);\r\n\r\n//______________________________________________________________________________________________________________________________________________\r\n\r\n//______________________________________________________________________________________________________________________________________________\r\n\r\n//create 1d array for dataset more or equal to 100 and less than 200\r\nconst array1D200 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArr200 = array1D200(DataArray200);\r\n\r\nlet insertedData200_Slot2_2 = []\r\nlet insertedData200_Slot2_1= []\r\n\r\nconst AntAlgoInsert200 = (array) => {\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    \r\n    let remainderArray = []\r\n    let remainderArraySlot1 = []\r\n    let totalRoom = array.length / 38\r\n\r\n    for(let x=0; x<filterData200.length;x++){\r\n        test.push(filterData200[x]);\r\n    }\r\n\r\n     for(let i = array.length-1;i>0;i--){\r\n         if(k < test.length){\r\n         let hourMS = test[k][7]\r\n         let b = 0\r\n         \r\n         if(b < totalRoom){\r\n             try{\r\n                if( array[i][5] != 100 && array[i][5] == test[k][5]){\r\n                    if( array[i+38*b]==100){\r\n                        array[i+38*b] = 0\r\n                    }\r\n                    if( array[i-38*b]==100){\r\n                        array[i-38*b] = 0\r\n                    }\r\n                }\r\n             }catch{}\r\n        }   \r\n        b++\r\n\r\n         if(hourMS == 4){\r\n            const j = Math.floor(Math.random()*(i+1));\r\n            if(array[i] == 100){\r\n                if(array[i-1] == 100){\r\n                    array[i] = array[j];\r\n                    array[i-1] = array[j-1];\r\n                    array[j] = test[k];\r\n                    array[j-1] = test[k];\r\n\r\n                    if(b < totalRoom){\r\n                        if( array[i][5] != 100 && array[i][5] == test[k][5]){\r\n                            if( array[i+38*b]==100 && array[i + 37*b] == 100){\r\n                                array[i+38*b] = 0\r\n                                array[i+37*b] = 0\r\n                            }\r\n                            if( array[i-38*b]==100 && array[i - 37*b] == 100){\r\n                                array[i-38*b] = 0\r\n                                array[i-37*b] = 0\r\n                            }\r\n                        }\r\n                    }   \r\n                    b++\r\n\r\n                    //const j = Math.floor(Math.random()*(i+1));\r\n                    if(array[i] == 100 && array[i-1] == 100){\r\n                        \r\n                            array[i] = array[j];\r\n                            array[i-1] = array[j-1];\r\n                            array[j] = test[k];\r\n                            array[j-1] = test[k];\r\n                        }\r\n                        else if(array[i] == 100 && array[i+1] == 100){\r\n                           array[i] = array[j];\r\n                           array[i+1] = array[j+1];\r\n                           array[j] = test[k];\r\n                           array[j+1] = test[k];\r\n                       }\r\n                       else{\r\n                           remainderArraySlot1.push(test[k]);\r\n                       }\r\n\r\n                       for(let x = 0; x < array.length ; x++){\r\n                           if(array[x] == 0){\r\n                               array[x] = 100;\r\n                           }\r\n                       }\r\n\r\n                }\r\n                else if(array[i+1] == 100 ){\r\n                    array[i] = array[j];\r\n                    array[i+1] = array[j+1];\r\n                    array[j] = test[k];\r\n                    array[j+1] = test[k];\r\n                    \r\n                    if(b < totalRoom){\r\n                        if(array[i][5] != 100 && array[i][5] == test[k][5]){\r\n                            if( array[i+38*b]==100 && array[i + 39*b] == 100){\r\n                                array[i+38*b] = 0\r\n                                array[i+39*b] = 0\r\n                            }\r\n                            if(array[i-38*b]==100 && array[i - 39*b] == 100){\r\n                                array[i-38*b] = 0\r\n                                array[i-39*b] = 0\r\n                            }\r\n                        }\r\n                    }   \r\n                    b++\r\n\r\n                    //const j = Math.floor(Math.random()*(i+1));\r\n                    if(array[i] == 100 && array[i-1] == 100){\r\n                            array[i] = array[j];\r\n                            array[i-1] = array[j-1];\r\n                            array[j] = test[k];\r\n                            array[j-1] = test[k];\r\n                        }\r\n                        else if(array[i] == 100 && array[i+1] == 100){\r\n                           array[i] = array[j];\r\n                           array[i+1] = array[j+1];\r\n                           array[j] = test[k];\r\n                           array[j+1] = test[k];\r\n                       }\r\n                       else{\r\n                           remainderArraySlot1.push(test[k]);\r\n                       }\r\n                       for(let x = 0; x < array.length ; x++){\r\n                           if(array[x] == 0){\r\n                               array[x] = 100;\r\n                           }\r\n                       }\r\n                    \r\n                }\r\n                else{\r\n                    remainderArray.push(test[k]);\r\n                }\r\n            }else{\r\n                remainderArray.push(test[k]);\r\n            }\r\n        }\r\n\r\n         else if(hourMS == 2){\r\n             const j = Math.floor(Math.random()*(i+1));\r\n             if(array[i] == 100){\r\n                 if(array[i-1] == 100){\r\n                     array[i] = array[j];\r\n                     array[i-1] = array[j-1];\r\n                     array[j] = test[k];\r\n                     array[j-1] = test[k];\r\n                 }else if(array[i+1] == 100){\r\n                     array[i] = array[j];\r\n                     array[i+1] = array[j+1];\r\n                     array[j] = test[k];\r\n                     array[j+1] = test[k];\r\n                 }\r\n                 else{\r\n                     remainderArray.push(test[k]);\r\n                 }\r\n             }else{\r\n                 remainderArray.push(test[k]);\r\n             }\r\n         }\r\n\r\n         else if(hourMS == 3){\r\n            const j = Math.floor(Math.random()*(i+1));\r\n            if(array[i] == 100){\r\n                if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                    array[i] = array[j];\r\n                    array[i-1] = array[j-1];\r\n                    array[i+1] = array[j+1];\r\n                    array[j] = test[k];\r\n                    array[j-1] = test[k];\r\n                    array[j+1] = test[k];\r\n                }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                    array[i] = array[j];\r\n                    array[i-1] = array[j-1];\r\n                    array[j] = test[k];\r\n                    array[j-1] = test[k];\r\n                    insertedData200_Slot2_1.push(test[k])\r\n                }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                    array[i] = array[j];\r\n                    array[i+1] = array[j+1];\r\n                    array[j] = test[k];\r\n                    array[j+1] = test[k];\r\n                    insertedData200_Slot2_1.push(test[k])\r\n                }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                    array[i] = array[j];\r\n                    array[j] = test[k];\r\n                    remainderArraySlot1.push(test[k])\r\n                }\r\n            }else{\r\n                remainderArray.push(test[k]);\r\n            }\r\n        }\r\n     }\r\n     k++  \r\n }\r\n\r\n //fullfill the slot 3\r\n for(let x = 0; x< array.length; x++){\r\n     if(array[x] == 100 && array[x+1] ==100){\r\n         if(k3 < remainderArraySlot1.length){\r\n             array[x] = remainderArraySlot1[k3]\r\n             array[x+1] = remainderArraySlot1[k3]\r\n         }\r\n         k3++   \r\n     }\r\n }\r\n\r\n //console.log(remainderArray);\r\n for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100 && array[x+1] ==100){\r\n             if(k2 < remainderArray.length){\r\n                 array[x] = remainderArray[k2]\r\n                 array[x+1] = remainderArray[k2]\r\n             }\r\n             try{\r\n                 let slot2 = remainderArray[k2][10]\r\n                 if(slot2 == 1){\r\n                     insertedData200_Slot2_1.push(remainderArray[k2])\r\n                 }\r\n                 if(slot2 == 2){\r\n                    insertedData200_Slot2_2.push(remainderArray[k2])\r\n                }\r\n             }catch{}\r\n         k2++   \r\n     }\r\n }\r\n\r\n if(array[-1] != undefined){\r\n     insertedData200_Slot2_1.push(array[-1]);\r\n }\r\n\r\n    return array;\r\n}\r\n\r\nvar AntArrIns200 = AntAlgoInsert200(AntArr200);\r\n//console.log(AntArrIns200);\r\n\r\n const slot2Equal1for200= (array) => {\r\n     let k = 0;\r\n     let test2 = []\r\n     \r\n     for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100){\r\n             if(k < insertedData200_Slot2_1.length){\r\n                 array[x] = insertedData200_Slot2_1[k]\r\n             }\r\n         k++   \r\n         }\r\n     }\r\n     return array;\r\n }\r\n let varchec200 = slot2Equal1for200(AntArr200);\r\n\r\n\r\n const slot2Equal2for200 = (array) => {\r\n     let k = 0;\r\n     for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100 && array[x+1] ==100){\r\n             if(k < insertedData200_Slot2_2.length){\r\n                 array[x] = insertedData200_Slot2_2[k]\r\n                 array[x+1] = insertedData200_Slot2_2[k]\r\n             }\r\n         k++   \r\n         }\r\n     }\r\n\r\n     if(array[-1] != undefined){\r\n         insertedData200_Slot2_1.push(array[-1]);\r\n     }else{\r\n\r\n     }\r\n\r\n     return array;\r\n }\r\n slot2Equal2for200(AntArr200);\r\n\r\n\r\nlet reshuffle200 = []\r\nlet notDupeShuffle200 = []\r\nconst check1Teacher_200 = (array) => {\r\n    let count =0\r\n    let indexArray = 0\r\n    let totalRoom = array.length / 38\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n     indexArray = (x * 38)\r\n        try{\r\n         for(let i = 1; i<array.length ; i++){\r\n                if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 0 ){\r\n                    try{\r\n                        if(array[i][5] == array[i+indexArray][5] ){\r\n                            reshuffle200.push([i+indexArray,array[i+indexArray]]);\r\n                         }\r\n                         if(array[i][6] == array[i+indexArray][6] && array[i][5] == array[i+indexArray][5]){\r\n                            try{\r\n                                reshuffle200.push([i+indexArray,array[i+indexArray]]);\r\n                            }catch{}\r\n                        }\r\n                    }catch{}\r\n                }    \r\n            }\r\n        }catch{}\r\n    }\r\n    for(let x =0; x < reshuffle200.length; x++){\r\n        try{\r\n            if( reshuffle200[x][0] != reshuffle200[x+1][0]){\r\n            notDupeShuffle200.push(reshuffle200[x]);\r\n        }\r\n\r\n        }catch{}\r\n\r\n    }\r\n    var last = reshuffle200.splice(-1)[0]\r\n    notDupeShuffle200.push(last);\r\n\r\n}\r\ncheck1Teacher_200(AntArr200)\r\n\r\nconst reshuffle200_200 = (data,array) => {\r\n\r\n    //console.log(data)\r\n    let k = 0\r\n    let count =0\r\n    let totalRoom = array.length / 38\r\n\r\n    for(let x =0; x < data.length; x ++){\r\n        for(let i =0; i < array.length ; i++){\r\n            try{\r\n                if(data[x][0] == i){\r\n                    array[i] = 1\r\n                }\r\n            }catch{}\r\n        }\r\n\r\n    }\r\n\r\n    for(let x =0; x < data.length; x ++){\r\n        for(let i =0; i < array.length ; i++){\r\n            try{\r\n                if(array[i] != 100){\r\n                    if(array[i][5] ==  data[k][1][5] ){\r\n                        for(let b = 1 ; b <= totalRoom ; b++){\r\n                            if( array[i+38*b]==100){\r\n                                array[i+38*b] = 0\r\n                            }\r\n                            if( array[i-38*b]==100 ){\r\n                                array[i-38*b] = 0\r\n                            }\r\n                        }\r\n                    }\r\n\r\n            }\r\n            }catch{}\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    for(let i = 0; i < array.length; i++){\r\n        if(array[i] == 100){\r\n            if(k < data.length){\r\n            //count +=1\r\n            try{\r\n                if(data[k][1] != undefined){\r\n                    array[i] = data[k][1]\r\n                }\r\n            }catch{}\r\n            }\r\n            k++\r\n        }\r\n    }\r\n\r\n        for(let x = 0; x< array.length; x++){\r\n            if(array[x] == 0){\r\n                array[x] = 100\r\n            }\r\n            if(array[x] == 1){\r\n                array[x] = 100\r\n            }\r\n        }\r\n        \r\n        // console.log(\"count: \"+ count)\r\n}\r\nreshuffle200_200(notDupeShuffle200,AntArr200);\r\n\r\nconst checkAmountData200_2 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=200 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_2 = checkAmountData200_2(AntArrIns200)\r\n// console.log(AntArrIns200)\r\n// console.log(\"Amount of data: \" +checkAmount_2);\r\n\r\nconst checkAmountData200_0 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if( array[i] == 0 ){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\n// var checkAmount_0 = checkAmountData200_0(AntArrIns200)\r\n// console.log(\"zero counter: \"+checkAmount_0);\r\n\r\n//______________________________________________________________________________________________________________________________________________\r\n\r\n\r\n//______________________________________________________________________________________________________________________________________________\r\n\r\n//create 1d array for dataset more or equal to 200 \r\nconst array1D500 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArr500 = array1D500(DataArray500);\r\n\r\n\r\nlet insertedData500_Slot2_2 = []\r\nlet insertedData500_Slot2_1= []\r\n\r\nconst AntAlgoInsert500 = (array) => {\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    \r\n    let remainderArray = []\r\n    let remainderArraySlot1 = []\r\n    let totalRoom = array.length / 38\r\n\r\n    for(let x=0; x<filterData500.length;x++){\r\n        test.push(filterData500[x]);\r\n    }\r\n\r\n     for(let i = array.length-1;i>0;i--){\r\n         if(k < test.length){\r\n         let hourMS = test[k][7]\r\n         let b = 0\r\n         \r\n         if(b < totalRoom){\r\n             try{\r\n                if( array[i][5] != 100 && array[i][5] == test[k][5]){\r\n                    if( array[i+38*b]==100){\r\n                        array[i+38*b] = 0\r\n                    }\r\n                    if( array[i-38*b]==100){\r\n                        array[i-38*b] = 0\r\n                    }\r\n                }\r\n             }catch{}\r\n        }   \r\n        b++\r\n\r\n         if(hourMS == 4){\r\n            const j = Math.floor(Math.random()*(i+1));\r\n            if(array[i] == 100){\r\n                if(array[i-1] == 100){\r\n                    array[i] = array[j];\r\n                    array[i-1] = array[j-1];\r\n                    array[j] = test[k];\r\n                    array[j-1] = test[k];\r\n\r\n                    if(b < totalRoom){\r\n                        if( array[i][5] != 100 && array[i][5] == test[k][5]){\r\n                            if( array[i+38*b]==100 && array[i + 37*b] == 100){\r\n                                array[i+38*b] = 0\r\n                                array[i+37*b] = 0\r\n                            }\r\n                            if( array[i-38*b]==100 && array[i - 37*b] == 100){\r\n                                array[i-38*b] = 0\r\n                                array[i-37*b] = 0\r\n                            }\r\n                        }\r\n                    }   \r\n                    b++\r\n\r\n                    //const j = Math.floor(Math.random()*(i+1));\r\n                    if(array[i] == 100 && array[i-1] == 100){\r\n                        \r\n                            array[i] = array[j];\r\n                            array[i-1] = array[j-1];\r\n                            array[j] = test[k];\r\n                            array[j-1] = test[k];\r\n                        }\r\n                        else if(array[i] == 100 && array[i+1] == 100){\r\n                           array[i] = array[j];\r\n                           array[i+1] = array[j+1];\r\n                           array[j] = test[k];\r\n                           array[j+1] = test[k];\r\n                       }\r\n                       else{\r\n                           remainderArraySlot1.push(test[k]);\r\n                       }\r\n\r\n                       for(let x = 0; x < array.length ; x++){\r\n                           if(array[x] == 0){\r\n                               array[x] = 100;\r\n                           }\r\n                       }\r\n\r\n                }\r\n                else if(array[i+1] == 100 ){\r\n                    array[i] = array[j];\r\n                    array[i+1] = array[j+1];\r\n                    array[j] = test[k];\r\n                    array[j+1] = test[k];\r\n                    \r\n                    if(b < totalRoom){\r\n                        if(array[i][5] != 100 && array[i][5] == test[k][5]){\r\n                            if( array[i+38*b]==100 && array[i + 39*b] == 100){\r\n                                array[i+38*b] = 0\r\n                                array[i+39*b] = 0\r\n                            }\r\n                            if(array[i-38*b]==100 && array[i - 39*b] == 100){\r\n                                array[i-38*b] = 0\r\n                                array[i-39*b] = 0\r\n                            }\r\n                        }\r\n                    }   \r\n                    b++\r\n\r\n                    //const j = Math.floor(Math.random()*(i+1));\r\n                    if(array[i] == 100 && array[i-1] == 100){\r\n                            array[i] = array[j];\r\n                            array[i-1] = array[j-1];\r\n                            array[j] = test[k];\r\n                            array[j-1] = test[k];\r\n                        }\r\n                        else if(array[i] == 100 && array[i+1] == 100){\r\n                           array[i] = array[j];\r\n                           array[i+1] = array[j+1];\r\n                           array[j] = test[k];\r\n                           array[j+1] = test[k];\r\n                       }\r\n                       else{\r\n                           remainderArraySlot1.push(test[k]);\r\n                       }\r\n                       for(let x = 0; x < array.length ; x++){\r\n                           if(array[x] == 0){\r\n                               array[x] = 100;\r\n                           }\r\n                       }\r\n                    \r\n                }\r\n                else{\r\n                    remainderArray.push(test[k]);\r\n                }\r\n            }else{\r\n                remainderArray.push(test[k]);\r\n            }\r\n        }\r\n\r\n         else if(hourMS == 2){\r\n             const j = Math.floor(Math.random()*(i+1));\r\n             if(array[i] == 100){\r\n                 if(array[i-1] == 100){\r\n                     array[i] = array[j];\r\n                     array[i-1] = array[j-1];\r\n                     array[j] = test[k];\r\n                     array[j-1] = test[k];\r\n                 }else if(array[i+1] == 100){\r\n                     array[i] = array[j];\r\n                     array[i+1] = array[j+1];\r\n                     array[j] = test[k];\r\n                     array[j+1] = test[k];\r\n                 }\r\n                 else{\r\n                     remainderArray.push(test[k]);\r\n                 }\r\n             }else{\r\n                 remainderArray.push(test[k]);\r\n             }\r\n         }\r\n\r\n         else if(hourMS == 3){\r\n            const j = Math.floor(Math.random()*(i+1));\r\n            if(array[i] == 100){\r\n                if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                    array[i] = array[j];\r\n                    array[i-1] = array[j-1];\r\n                    array[i+1] = array[j+1];\r\n                    array[j] = test[k];\r\n                    array[j-1] = test[k];\r\n                    array[j+1] = test[k];\r\n                }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                    array[i] = array[j];\r\n                    array[i-1] = array[j-1];\r\n                    array[j] = test[k];\r\n                    array[j-1] = test[k];\r\n                    insertedData500_Slot2_1.push(test[k])\r\n                }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                    array[i] = array[j];\r\n                    array[i+1] = array[j+1];\r\n                    array[j] = test[k];\r\n                    array[j+1] = test[k];\r\n                    insertedData500_Slot2_1.push(test[k])\r\n                }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                    array[i] = array[j];\r\n                    array[j] = test[k];\r\n                    remainderArraySlot1.push(test[k])\r\n                }\r\n            }else{\r\n                remainderArray.push(test[k]);\r\n            }\r\n        }\r\n     }\r\n     k++  \r\n }\r\n\r\n //fullfill the slot 3\r\n for(let x = 0; x< array.length; x++){\r\n     if(array[x] == 100 && array[x+1] ==100){\r\n         if(k3 < remainderArraySlot1.length){\r\n             array[x] = remainderArraySlot1[k3]\r\n             array[x+1] = remainderArraySlot1[k3]\r\n         }\r\n         k3++   \r\n     }\r\n }\r\n\r\n //console.log(remainderArray);\r\n for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100 && array[x+1] ==100){\r\n             if(k2 < remainderArray.length){\r\n                 array[x] = remainderArray[k2]\r\n                 array[x+1] = remainderArray[k2]\r\n             }\r\n             try{\r\n                 let slot2 = remainderArray[k2][10]\r\n                 if(slot2 == 1){\r\n                     insertedData500_Slot2_1.push(remainderArray[k2])\r\n                 }\r\n                 if(slot2 == 2){\r\n                    insertedData500_Slot2_2.push(remainderArray[k2])\r\n                }\r\n             }catch{}\r\n         k2++   \r\n     }\r\n }\r\n\r\n if(array[-1] != undefined){\r\n     insertedData500_Slot2_1.push(array[-1]);\r\n }\r\n\r\n    return array;\r\n}\r\n\r\nvar AntArrIns500 = AntAlgoInsert500(AntArr500);\r\n//console.log(AntArrIns500);\r\n\r\n const slot2Equal1for500= (array) => {\r\n     let k = 0;\r\n     let test2 = []\r\n     \r\n     for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100){\r\n             if(k < insertedData500_Slot2_1.length){\r\n                 array[x] = insertedData500_Slot2_1[k]\r\n             }\r\n         k++   \r\n         }\r\n     }\r\n     return array;\r\n }\r\n let varchec500 = slot2Equal1for500(AntArr500);\r\n\r\n\r\n const slot2Equal2for500 = (array) => {\r\n     let k = 0;\r\n     for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100 && array[x+1] ==100){\r\n             if(k < insertedData500_Slot2_2.length){\r\n                 array[x] = insertedData500_Slot2_2[k]\r\n                 array[x+1] = insertedData500_Slot2_2[k]\r\n             }\r\n         k++   \r\n         }\r\n     }\r\n\r\n     if(array[-1] != undefined){\r\n         insertedData500_Slot2_1.push(array[-1]);\r\n     }else{\r\n\r\n     }\r\n\r\n     return array;\r\n }\r\n slot2Equal2for500(AntArr500);\r\n\r\n\r\nlet reshuffle500 = []\r\nlet notDupeShuffle500 = []\r\nconst check1Teacher_500 = (array) => {\r\n    let count =0\r\n    let indexArray = 0\r\n    let totalRoom = array.length / 38\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n     indexArray = (x * 38)\r\n        try{\r\n         for(let i = 1; i<array.length ; i++){\r\n                if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 0 ){\r\n                    try{\r\n                        if(array[i][5] == array[i+indexArray][5] ){\r\n                            reshuffle500.push([i+indexArray,array[i+indexArray]]);\r\n                         }\r\n                         if(array[i][6] == array[i+indexArray][6] && array[i][5] == array[i+indexArray][5]){\r\n                            try{\r\n                                reshuffle500.push([i+indexArray,array[i+indexArray]]);\r\n                            }catch{}\r\n                        }\r\n                    }catch{}\r\n                }    \r\n            }\r\n        }catch{}\r\n    }\r\n    for(let x =0; x < reshuffle500.length; x++){\r\n        try{\r\n            if( reshuffle500[x][0] != reshuffle500[x+1][0]){\r\n            notDupeShuffle500.push(reshuffle500[x]);\r\n        }\r\n\r\n        }catch{}\r\n\r\n    }\r\n    var last = reshuffle500.splice(-1)[0]\r\n    notDupeShuffle500.push(last);\r\n\r\n}\r\ncheck1Teacher_500(AntArr500)\r\n\r\nconst reshuffle500_500 = (data,array) => {\r\n\r\n    //console.log(data)\r\n    let k = 0\r\n    let count =0\r\n    let totalRoom = array.length / 38\r\n\r\n    for(let x =0; x < data.length; x ++){\r\n        for(let i =0; i < array.length ; i++){\r\n            try{\r\n                if(data[x][0] == i){\r\n                    array[i] = 1\r\n                }\r\n            }catch{}\r\n        }\r\n\r\n    }\r\n\r\n    for(let x =0; x < data.length; x ++){\r\n        for(let i =0; i < array.length ; i++){\r\n            try{\r\n                if(array[i] != 100){\r\n                    if(array[i][5] ==  data[k][1][5] ){\r\n                        for(let b = 1 ; b <= totalRoom ; b++){\r\n                            if( array[i+38*b]==100){\r\n                                array[i+38*b] = 0\r\n                            }\r\n                            if( array[i-38*b]==100 ){\r\n                                array[i-38*b] = 0\r\n                            }\r\n                        }\r\n                    }\r\n\r\n            }\r\n            }catch{}\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    for(let i = 0; i < array.length; i++){\r\n        if(array[i] == 100){\r\n            if(k < data.length){\r\n            //count +=1\r\n            try{\r\n                if(data[k][1] != undefined){\r\n                    array[i] = data[k][1]\r\n                }\r\n            }catch{}\r\n            }\r\n            k++\r\n        }\r\n    }\r\n\r\n        for(let x = 0; x< array.length; x++){\r\n            if(array[x] == 0){\r\n                array[x] = 100\r\n            }\r\n            if(array[x] == 1){\r\n                array[x] = 100\r\n            }\r\n        }\r\n        \r\n        // console.log(\"count: \"+ count)\r\n}\r\nreshuffle500_500(notDupeShuffle500,AntArr500);\r\n\r\nconst checkAmountData500_2 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=500 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_2 = checkAmountData500_2(AntArrIns500)\r\n// console.log(AntArrIns500)\r\n// console.log(\"Amount of data: \" +checkAmount_2);\r\n\r\nconst checkAmountData500_0 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if( array[i] == 0 ){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\n// var checkAmount_0 = checkAmountData500_0(AntArrIns500)\r\n// console.log(\"zero counter: \"+checkAmount_0);\r\n\r\n//______________________________________________________________________________________________________________________________________________\r\n\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\n\r\n//Elective Courses\r\nconst array1DElective50 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrElective50 = array1DElective50(DataArrayElective50);\r\n\r\nlet extraDataElective50_Slot2_2 = []\r\nlet extraData50Elective_Slot2_1 = []\r\nlet insertedDataElective50_Slot2_2 = []\r\nlet insertedDataElective50_Slot2_1= []\r\n\r\nconst AntAlgoInsertElective50 = (array) => {\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    let k4 =0 \r\n\r\n    let remainderArray = []\r\n    let remainderArraySlot1 = []\r\n    let remainderArray3 = []\r\n\r\n    let totalRoom = array.length / 38\r\n\r\n    for(let x=0; x<filterDataElective50.length;x++){\r\n        test.push(filterDataElective50[x]);\r\n    }\r\n\r\n     for(let i = array.length-1;i>0;i--){\r\n         if(k < test.length){\r\n         let hourMS = test[k][7]\r\n         let slot1 = test[k][9]\r\n         let slot2 = test[k][10]\r\n\r\n         if(hourMS == 3){\r\n             const j = Math.floor(Math.random()*(i+1));\r\n             if(array[i] == 100 && array[i-1] == 100 && array[i+1]==100){\r\n                     array[i] = array[j];\r\n                     array[i-1] = array[j-1];\r\n                     array[i+1] = array[j+1];\r\n                     array[j] = test[k];\r\n                     array[j-1] = test[k];\r\n                     array[j+1] = test[k];\r\n                     \r\n                }\r\n                 else{\r\n                    remainderArray3.push(test[k]);    \r\n                }\r\n             }\r\n\r\n          else if(hourMS == 2){\r\n             const j = Math.floor(Math.random()*(i+1));\r\n             if(array[i] == 100){\r\n                 if(array[i-1] == 100 ){\r\n                     array[i] = array[j];\r\n                     array[i-1] = array[j-1];\r\n                     array[j] = test[k];\r\n                     array[j-1] = test[k];\r\n                     \r\n                 }else if(array[i+1] == 100){\r\n                     array[i] = array[j];\r\n                     array[i+1] = array[j+1];\r\n                     array[j] = test[k];\r\n                     array[j+1] = test[k];\r\n                     \r\n                 }\r\n                 else{\r\n                     remainderArray.push(test[k]);\r\n                     \r\n                 }\r\n             }else{\r\n                 remainderArray.push(test[k]);\r\n             }\r\n             }\r\n\r\n            else if(hourMS == 4){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    //slot in slot1 = 2\r\n                    if(array[i-1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        \r\n                        // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                             array[j+38*b] = 0         \r\n                             array[j+38*b-1] = 0\r\n                         }\r\n                         if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                             array[j-38*b] = 0         \r\n                             array[j-38*b-1] = 0\r\n                         }\r\n                        }\r\n                        const z = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[z];\r\n                                array[i-1] = array[z-1];\r\n                                array[i] = test[k];\r\n                                array[i-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100 ){\r\n                                 array[i] = array[z];\r\n                                 array[i+1] = array[z+1];\r\n                                 array[z] = test[k];\r\n                                 array[z+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                         }\r\n                         //revert back to 100\r\n                         for(let x =0; x<array.length; x++){\r\n                             if(array[x] == 0){\r\n                                 array[x] = 100\r\n                             }\r\n                         }\r\n                    }\r\n                    //slot in slot1 = 2\r\n                    else if(array[i+1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        \r\n                         // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                             array[j+38*b] = 0         \r\n                             array[j+38*b-1] = 0\r\n                         }\r\n                         if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                             array[j-38*b] = 0         \r\n                             array[j-38*b-1] = 0\r\n                         }\r\n                        }\r\n                        const v = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[v];\r\n                                array[i-1] = array[v-1];\r\n                                array[v] = test[k];\r\n                                array[v-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100){\r\n                                 array[i] = array[v];\r\n                                 array[i+1] = array[v+1];\r\n                                 array[v] = test[k];\r\n                                 array[v+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                         }\r\n                         //revert back to 100\r\n                         for(let x =0; x<array.length; x++){\r\n                             if(array[x] == 0){\r\n                                 array[x] = 100\r\n                             }\r\n                         }\r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                    \r\n                }\r\n             }\r\n         }\r\n         k++  \r\n     }\r\n\r\n\r\n     for(let z =0; z< array.length; z++){\r\n         for(let x = 0; x < remainderArraySlot1.length; x++){\r\n             if(array[z] == remainderArraySlot1[x]){\r\n                 for(let b = 1; b <= totalRoom; b++){\r\n                     if( array[z+38*b]==100 && array[z+38*b-1]==100){\r\n                         array[z+38*b] = 0         \r\n                         array[z+38*b-1] = 0\r\n                     }\r\n                     if( array[z-38*b]==100 && array[z-38*b-1]==100){\r\n                         array[z-38*b] = 0         \r\n                         array[z-38*b-1] = 0\r\n                     }\r\n                    }\r\n             }\r\n         }\r\n     }\r\n\r\n     //slot in 3\r\n     for(let i = 0; i < array.length; i++){\r\n        if(array[i] == 100 && array[i+1] == 100 && array[i+2]==100){\r\n                if(k4 < remainderArray3.length){\r\n                    array[i] = remainderArray3[k4];\r\n                    array[i+1] = remainderArray3[k4];\r\n                    array[i+2] = remainderArray3[k4];\r\n                }\r\n                k4++\r\n        }\r\n     }\r\n\r\n     //fullfill the slot 3\r\n     for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100 && array[x+1] == 100){\r\n             if(k3 < remainderArraySlot1.length){\r\n                 const q = Math.floor(Math.random()*(x+1));\r\n                     array[x] = array[q]\r\n                     array[x+1] = array[q+1]\r\n                     array[q] = remainderArraySlot1[k3]\r\n                     array[q+1] = remainderArraySlot1[k3]\r\n             }else{\r\n                 if(remainderArraySlot1[k3] != undefined){\r\n                     insertedDataElective50_Slot2_2.push(remainderArraySlot1[k3])\r\n                 }\r\n             }\r\n             k3++   \r\n         }else if(array[x] == 100 && array[x+1] ==100 ){\r\n             if(k3 < remainderArraySlot1.length){\r\n                 const q = Math.floor(Math.random()*(x+1));\r\n                     array[x] = array[q]\r\n                     array[x+1] = array[q+1]\r\n                     array[q] = remainderArraySlot1[k3]\r\n                     array[q+1] = remainderArraySlot1[k3]\r\n             }else{\r\n                 if(remainderArraySlot1[k3] != undefined){\r\n                     insertedDataElective50_Slot2_2.push(remainderArraySlot1[k3])\r\n                 }\r\n             }\r\n             k3++   \r\n         }\r\n     }\r\n\r\n\r\n     for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100 ){\r\n                 if(k2 < remainderArray.length){\r\n                     const c = Math.floor(Math.random()*(x+1));\r\n                     array[x] = array[c]\r\n                     array[x+1] = array[c+1]\r\n                     array[c] = remainderArray[k2]\r\n                     array[c+1] = remainderArray[k2]\r\n                 }\r\n                 try{\r\n                     let slot2 = remainderArray[k2][10]\r\n                     if(slot2 == 2){\r\n                         insertedDataElective50_Slot2_2.push(remainderArray[k2])\r\n                     }\r\n                 }catch{}\r\n             k2++   \r\n         }else if(array[x] == 100 && array[x+1] ==100 ){\r\n             if(k2 < remainderArray.length){\r\n                 const b = Math.floor(Math.random()*(x+1));\r\n                 array[x] = array[b]\r\n                 array[x+1] = array[b+1]\r\n                 array[b] = remainderArray[k2]\r\n                 array[b+1] = remainderArray[k2]\r\n             }\r\n             try{\r\n                 let slot2 = remainderArray[k2][10]\r\n                 if(slot2 == 2){\r\n                     insertedDataElective50_Slot2_2.push(remainderArray[k2])\r\n                 }\r\n             }catch{}\r\n         k2++   \r\n     }\r\n     }\r\n\r\n     //if there is array in -1, reslot in into the array\r\n     for(let x =0; x<array.length; x++){\r\n         if(array[x] == 0){\r\n             array[x] = 100\r\n         }\r\n     }\r\n\r\n     if(array[-1] != undefined){\r\n         insertedDataElective50_Slot2_1.push(array[-1]);\r\n     }\r\n\r\n    return array;\r\n}\r\nvar AntArrInsElective50 = AntAlgoInsertElective50(AntArrElective50);\r\n\r\n\r\n const slot2Equal1forElective50 = (array) => {\r\n     let k = 0;\r\n     let test2 = []\r\n     \r\n     for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100){\r\n                if(k < insertedDataElective50_Slot2_1.length){\r\n                    array[x] = insertedDataElective50_Slot2_1[k];\r\n                }\r\n                k++\r\n         }\r\n     }\r\n\r\n     return array;\r\n }\r\n slot2Equal1forElective50(AntArrElective50);\r\n\r\n\r\n const slot2Equal2forElective50 = (array) => {\r\n     let k = 0;\r\n     for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100 && array[x+1] ==100){\r\n             if(k < insertedDataElective50_Slot2_2.length){\r\n                     array[x] = insertedDataElective50_Slot2_2[k]\r\n                     array[x+1] = insertedDataElective50_Slot2_2[k]\r\n             }else{\r\n                 if(insertedDataElective50_Slot2_2[k] != undefined){\r\n                     extraDataElective50_Slot2_2.push(insertedDataElective50_Slot2_2[k])\r\n                 }\r\n             }\r\n             k++   \r\n         }\r\n     }\r\n\r\n     for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100 && array[x+1] ==100){\r\n             if(k < extraDataElective50_Slot2_2.length){\r\n                 array[x] = extraDataElective50_Slot2_2[k]\r\n                 array[x+1] = extraDataElective50_Slot2_2[k]\r\n             }\r\n         k++   \r\n         }\r\n     }\r\n     return array;\r\n}\r\n slot2Equal2forElective50(AntArrElective50);\r\n\r\n\r\nlet reshuffleElectice50 = []\r\nlet notDupeShuffleElective50 = []\r\nconst checkHC_50_Elective = (array) => {\r\n    let count =0\r\n    let indexArray = 0\r\n    let indexArray2 = 0\r\n    let totalRoom = array.length / 38\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n     indexArray = (x * 38)\r\n        try{\r\n         for(let i = 1; i<array.length ; i++){\r\n                if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 0 ){\r\n                    try{\r\n                        if(array[i][5] == array[i+indexArray][5] ){\r\n                            reshuffleElectice50.push([i+indexArray,array[i+indexArray]]);\r\n                         }\r\n                         if(array[i][6] == array[i+indexArray][6] && array[i][5] == array[i+indexArray][5]){\r\n                            try{\r\n                                reshuffleElectice50.push([i+indexArray,array[i+indexArray]]);\r\n                            }catch{}\r\n                        }\r\n                    }catch{}\r\n                }    \r\n            }\r\n        }catch{}\r\n    }\r\n    for(let x =0; x < reshuffleElectice50.length; x++){\r\n        try{\r\n            if( reshuffleElectice50[x][0] != reshuffleElectice50[x+1][0]){\r\n            notDupeShuffleElective50.push(reshuffleElectice50[x]);\r\n        }\r\n\r\n        }catch{}\r\n\r\n    }\r\n    reshuffleElectice50.pop(notDupeShuffleElective50);\r\n\r\n}\r\ncheckHC_50_Elective(AntArrElective50)\r\n\r\nconst reshuffleElectice50_50 = (data,array) => {\r\n\r\n    let k = 0\r\n    let count =0\r\n    let totalRoom = array.length / 38\r\n\r\n    for(let x =0; x < data.length; x ++){\r\n        for(let i =0; i < array.length ; i++){\r\n            try{\r\n                if(array[i] != undefined){\r\n                    if(data[x][0] == i){\r\n                        array[i] = 0\r\n                        for(let b = 1 ; b<= totalRoom ; b++){\r\n                            if( array[i+38*b]==100){\r\n                                array[i+38*b] = 0\r\n                            }\r\n                            if( array[i-38*b]==100 ){\r\n                                array[i-38*b] = 0\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n\r\n    }\r\n        for(let i = 0; i < array.length; i++){\r\n                if(array[i] == 100){\r\n                    if(k< data.length){\r\n                    count +=1\r\n                    array[i] = data[k][1]\r\n                    }\r\n                    k++\r\n            }\r\n        }\r\n\r\n        for(let x = 0; x< array.length; x++){\r\n            if(array[x] == 0){\r\n                array[x] = 100\r\n            }\r\n        }\r\n        // console.log(\"count: \"+ count)\r\n}\r\nreshuffleElectice50_50(notDupeShuffleElective50,AntArrElective50);\r\n\r\nconst checkAmountData50_Elective_2 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_2 = checkAmountData50_Elective_2(AntArrInsElective50)\r\n// console.log(AntArrInsElective50)\r\n// console.log(\"Amount of data: \"+checkAmount_2);\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\nconst array1DElective100 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrElective100 = array1DElective100(DataArrayElective100);\r\n\r\nlet extraDataElective100_Slot2_2 = []\r\nlet extraData100Elective_Slot2_1 = []\r\nlet insertedDataElective100_Slot2_2 = []\r\nlet insertedDataElective100_Slot2_1= []\r\n\r\nconst AntAlgoInsertElective100 = (array) => {\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    let k4 =0 \r\n\r\n    let remainderArray = []\r\n    let remainderArraySlot1 = []\r\n    let remainderArray3 = []\r\n\r\n    let totalRoom = array.length / 38\r\n\r\n    for(let x=0; x<filterDataElective100.length;x++){\r\n        test.push(filterDataElective100[x]);\r\n    }\r\n\r\n     for(let i = array.length-1;i>0;i--){\r\n         if(k < test.length){\r\n         let hourMS = test[k][7]\r\n         let slot1 = test[k][9]\r\n         let slot2 = test[k][10]\r\n\r\n         if(hourMS == 3){\r\n             const j = Math.floor(Math.random()*(i+1));\r\n             if(array[i] == 100 && array[i-1] == 100 && array[i+1]==100){\r\n                     array[i] = array[j];\r\n                     array[i-1] = array[j-1];\r\n                     array[i+1] = array[j+1];\r\n                     array[j] = test[k];\r\n                     array[j-1] = test[k];\r\n                     array[j+1] = test[k];\r\n                     \r\n                }\r\n                 else{\r\n                    remainderArray3.push(test[k]);    \r\n                }\r\n             }\r\n\r\n          else if(hourMS == 2){\r\n             const j = Math.floor(Math.random()*(i+1));\r\n             if(array[i] == 100){\r\n                 if(array[i-1] == 100 ){\r\n                     array[i] = array[j];\r\n                     array[i-1] = array[j-1];\r\n                     array[j] = test[k];\r\n                     array[j-1] = test[k];\r\n                     \r\n                 }else if(array[i+1] == 100){\r\n                     array[i] = array[j];\r\n                     array[i+1] = array[j+1];\r\n                     array[j] = test[k];\r\n                     array[j+1] = test[k];\r\n                     \r\n                 }\r\n                 else{\r\n                     remainderArray.push(test[k]);\r\n                     \r\n                 }\r\n             }else{\r\n                 remainderArray.push(test[k]);\r\n             }\r\n             }\r\n\r\n            else if(hourMS == 4){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    //slot in slot1 = 2\r\n                    if(array[i-1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        \r\n                        // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                             array[j+38*b] = 0         \r\n                             array[j+38*b-1] = 0\r\n                         }\r\n                         if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                             array[j-38*b] = 0         \r\n                             array[j-38*b-1] = 0\r\n                         }\r\n                        }\r\n                        const z = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[z];\r\n                                array[i-1] = array[z-1];\r\n                                array[i] = test[k];\r\n                                array[i-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100 ){\r\n                                 array[i] = array[z];\r\n                                 array[i+1] = array[z+1];\r\n                                 array[z] = test[k];\r\n                                 array[z+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                         }\r\n                         //revert back to 100\r\n                         for(let x =0; x<array.length; x++){\r\n                             if(array[x] == 0){\r\n                                 array[x] = 100\r\n                             }\r\n                         }\r\n                    }\r\n                    //slot in slot1 = 2\r\n                    else if(array[i+1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        \r\n                         // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                             array[j+38*b] = 0         \r\n                             array[j+38*b-1] = 0\r\n                         }\r\n                         if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                             array[j-38*b] = 0         \r\n                             array[j-38*b-1] = 0\r\n                         }\r\n                        }\r\n                        const v = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[v];\r\n                                array[i-1] = array[v-1];\r\n                                array[v] = test[k];\r\n                                array[v-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100){\r\n                                 array[i] = array[v];\r\n                                 array[i+1] = array[v+1];\r\n                                 array[v] = test[k];\r\n                                 array[v+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                         }\r\n                         //revert back to 100\r\n                         for(let x =0; x<array.length; x++){\r\n                             if(array[x] == 0){\r\n                                 array[x] = 100\r\n                             }\r\n                         }\r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                    \r\n                }\r\n             }\r\n         }\r\n         k++  \r\n     }\r\n\r\n\r\n     for(let z =0; z< array.length; z++){\r\n         for(let x = 0; x < remainderArraySlot1.length; x++){\r\n             if(array[z] == remainderArraySlot1[x]){\r\n                 for(let b = 1; b <= totalRoom; b++){\r\n                     if( array[z+38*b]==100 && array[z+38*b-1]==100){\r\n                         array[z+38*b] = 0         \r\n                         array[z+38*b-1] = 0\r\n                     }\r\n                     if( array[z-38*b]==100 && array[z-38*b-1]==100){\r\n                         array[z-38*b] = 0         \r\n                         array[z-38*b-1] = 0\r\n                     }\r\n                    }\r\n             }\r\n         }\r\n     }\r\n\r\n     //slot in 3\r\n     for(let i = 0; i < array.length; i++){\r\n        if(array[i] == 100 && array[i+1] == 100 && array[i+2]==100){\r\n                if(k4 < remainderArray3.length){\r\n                    array[i] = remainderArray3[k4];\r\n                    array[i+1] = remainderArray3[k4];\r\n                    array[i+2] = remainderArray3[k4];\r\n                }\r\n                k4++\r\n        }\r\n     }\r\n\r\n     //fullfill the slot 3\r\n     for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100 && array[x+1] == 100){\r\n             if(k3 < remainderArraySlot1.length){\r\n                 const q = Math.floor(Math.random()*(x+1));\r\n                     array[x] = array[q]\r\n                     array[x+1] = array[q+1]\r\n                     array[q] = remainderArraySlot1[k3]\r\n                     array[q+1] = remainderArraySlot1[k3]\r\n             }else{\r\n                 if(remainderArraySlot1[k3] != undefined){\r\n                     insertedDataElective100_Slot2_2.push(remainderArraySlot1[k3])\r\n                 }\r\n             }\r\n             k3++   \r\n         }else if(array[x] == 100 && array[x+1] ==100 ){\r\n             if(k3 < remainderArraySlot1.length){\r\n                 const q = Math.floor(Math.random()*(x+1));\r\n                     array[x] = array[q]\r\n                     array[x+1] = array[q+1]\r\n                     array[q] = remainderArraySlot1[k3]\r\n                     array[q+1] = remainderArraySlot1[k3]\r\n             }else{\r\n                 if(remainderArraySlot1[k3] != undefined){\r\n                     insertedDataElective100_Slot2_2.push(remainderArraySlot1[k3])\r\n                 }\r\n             }\r\n             k3++   \r\n         }\r\n     }\r\n\r\n\r\n     for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100 ){\r\n                 if(k2 < remainderArray.length){\r\n                     const c = Math.floor(Math.random()*(x+1));\r\n                     array[x] = array[c]\r\n                     array[x+1] = array[c+1]\r\n                     array[c] = remainderArray[k2]\r\n                     array[c+1] = remainderArray[k2]\r\n                 }\r\n                 try{\r\n                     let slot2 = remainderArray[k2][10]\r\n                     if(slot2 == 2){\r\n                         insertedDataElective100_Slot2_2.push(remainderArray[k2])\r\n                     }\r\n                 }catch{}\r\n             k2++   \r\n         }else if(array[x] == 100 && array[x+1] ==100 ){\r\n             if(k2 < remainderArray.length){\r\n                 const b = Math.floor(Math.random()*(x+1));\r\n                 array[x] = array[b]\r\n                 array[x+1] = array[b+1]\r\n                 array[b] = remainderArray[k2]\r\n                 array[b+1] = remainderArray[k2]\r\n             }\r\n             try{\r\n                 let slot2 = remainderArray[k2][10]\r\n                 if(slot2 == 2){\r\n                     insertedDataElective100_Slot2_2.push(remainderArray[k2])\r\n                 }\r\n             }catch{}\r\n         k2++   \r\n     }\r\n     }\r\n\r\n     //if there is array in -1, reslot in into the array\r\n     for(let x =0; x<array.length; x++){\r\n         if(array[x] == 0){\r\n             array[x] = 100\r\n         }\r\n     }\r\n\r\n     if(array[-1] != undefined){\r\n         insertedDataElective100_Slot2_1.push(array[-1]);\r\n     }\r\n\r\n    return array;\r\n}\r\nvar AntArrInsElective100 = AntAlgoInsertElective100(AntArrElective100);\r\n\r\n\r\n const slot2Equal1forElective100 = (array) => {\r\n     let k = 0;\r\n     let test2 = []\r\n     \r\n     for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100){\r\n                if(k < insertedDataElective100_Slot2_1.length){\r\n                    array[x] = insertedDataElective100_Slot2_1[k];\r\n                }\r\n                k++\r\n         }\r\n     }\r\n\r\n     return array;\r\n }\r\n slot2Equal1forElective100(AntArrElective100);\r\n\r\n\r\n const slot2Equal2forElective100 = (array) => {\r\n     let k = 0;\r\n     for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100 && array[x+1] ==100){\r\n             if(k < insertedDataElective100_Slot2_2.length){\r\n                     array[x] = insertedDataElective100_Slot2_2[k]\r\n                     array[x+1] = insertedDataElective100_Slot2_2[k]\r\n             }else{\r\n                 if(insertedDataElective100_Slot2_2[k] != undefined){\r\n                     extraDataElective100_Slot2_2.push(insertedDataElective100_Slot2_2[k])\r\n                 }\r\n             }\r\n             k++   \r\n         }\r\n     }\r\n\r\n     for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100 && array[x+1] ==100){\r\n             if(k < extraDataElective100_Slot2_2.length){\r\n                 array[x] = extraDataElective100_Slot2_2[k]\r\n                 array[x+1] = extraDataElective100_Slot2_2[k]\r\n             }\r\n         k++   \r\n         }\r\n     }\r\n     return array;\r\n}\r\n slot2Equal2forElective100(AntArrElective100);\r\n\r\n\r\nlet reshuffleElective100 = []\r\nlet notDupeShuffleElective100 = []\r\nconst checkHC_100_Elective = (array) => {\r\n    let count =0\r\n    let indexArray = 0\r\n    let indexArray2 = 0\r\n    let totalRoom = array.length / 38\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n     indexArray = (x * 38)\r\n        try{\r\n         for(let i = 1; i<array.length ; i++){\r\n                if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 0 ){\r\n                    try{\r\n                        if(array[i][5] == array[i+indexArray][5] ){\r\n                            reshuffleElective100.push([i+indexArray,array[i+indexArray]]);\r\n                         }\r\n                         if(array[i][6] == array[i+indexArray][6] && array[i][5] == array[i+indexArray][5]){\r\n                            try{\r\n                                reshuffleElective100.push([i+indexArray,array[i+indexArray]]);\r\n                            }catch{}\r\n                        }\r\n                    }catch{}\r\n                }    \r\n            }\r\n        }catch{}\r\n    }\r\n    for(let x =0; x < reshuffleElective100.length; x++){\r\n        try{\r\n            if( reshuffleElective100[x][0] != reshuffleElective100[x+1][0]){\r\n            notDupeShuffleElective100.push(reshuffleElective100[x]);\r\n        }\r\n\r\n        }catch{}\r\n\r\n    }\r\n    reshuffleElective100.pop(notDupeShuffleElective100);\r\n\r\n}\r\ncheckHC_100_Elective(AntArrElective100)\r\n\r\nconst reshuffleElective100_100 = (data,array) => {\r\n\r\n    let k = 0\r\n    let count =0\r\n    let totalRoom = array.length / 38\r\n\r\n    for(let x =0; x < data.length; x ++){\r\n        for(let i =0; i < array.length ; i++){\r\n            try{\r\n                if(array[i] != undefined){\r\n                    if(data[x][0] == i){\r\n                        array[i] = 0\r\n                        for(let b = 1 ; b<= totalRoom ; b++){\r\n                            if( array[i+38*b]==100){\r\n                                array[i+38*b] = 0\r\n                            }\r\n                            if( array[i-38*b]==100 ){\r\n                                array[i-38*b] = 0\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n\r\n    }\r\n        for(let i = 0; i < array.length; i++){\r\n                if(array[i] == 100){\r\n                    if(k< data.length){\r\n                    count +=1\r\n                    array[i] = data[k][1]\r\n                    }\r\n                    k++\r\n            }\r\n        }\r\n\r\n        for(let x = 0; x< array.length; x++){\r\n            if(array[x] == 0){\r\n                array[x] = 100\r\n            }\r\n        }\r\n        // console.log(\"count: \"+ count)\r\n}\r\nreshuffleElective100_100(notDupeShuffleElective100,AntArrElective100);\r\n\r\nconst checkAmountData100_Elective_2 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=100 && array[i] != 0 && array[i] != undefined){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_2 = checkAmountData100_Elective_2(AntArrInsElective100)\r\n// console.log(AntArrInsElective100)\r\n// console.log(\"Amount of data: \"+checkAmount_2);\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\nconst array1DElective200 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrElective200 = array1DElective200(DataArrayElective200);\r\n\r\nlet extraDataElective200_Slot2_2 = []\r\nlet extraData200Elective_Slot2_1 = []\r\nlet insertedDataElective200_Slot2_2 = []\r\nlet insertedDataElective200_Slot2_1= []\r\n\r\nconst AntAlgoInsertElective200 = (array) => {\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    let k4 =0 \r\n\r\n    let remainderArray = []\r\n    let remainderArraySlot1 = []\r\n    let remainderArray3 = []\r\n\r\n    let totalRoom = array.length / 38\r\n\r\n    for(let x=0; x<filterDataElective200.length;x++){\r\n        test.push(filterDataElective200[x]);\r\n    }\r\n\r\n     for(let i = array.length-1;i>0;i--){\r\n         if(k < test.length){\r\n         let hourMS = test[k][7]\r\n         let slot1 = test[k][9]\r\n         let slot2 = test[k][10]\r\n\r\n         if(hourMS == 3){\r\n             const j = Math.floor(Math.random()*(i+1));\r\n             if(array[i] == 100 && array[i-1] == 100 && array[i+1]==100){\r\n                     array[i] = array[j];\r\n                     array[i-1] = array[j-1];\r\n                     array[i+1] = array[j+1];\r\n                     array[j] = test[k];\r\n                     array[j-1] = test[k];\r\n                     array[j+1] = test[k];\r\n                     \r\n                }\r\n                 else{\r\n                    remainderArray3.push(test[k]);    \r\n                }\r\n             }\r\n\r\n          else if(hourMS == 2){\r\n             const j = Math.floor(Math.random()*(i+1));\r\n             if(array[i] == 100){\r\n                 if(array[i-1] == 100 ){\r\n                     array[i] = array[j];\r\n                     array[i-1] = array[j-1];\r\n                     array[j] = test[k];\r\n                     array[j-1] = test[k];\r\n                     \r\n                 }else if(array[i+1] == 100){\r\n                     array[i] = array[j];\r\n                     array[i+1] = array[j+1];\r\n                     array[j] = test[k];\r\n                     array[j+1] = test[k];\r\n                     \r\n                 }\r\n                 else{\r\n                     remainderArray.push(test[k]);\r\n                     \r\n                 }\r\n             }else{\r\n                 remainderArray.push(test[k]);\r\n             }\r\n             }\r\n\r\n            else if(hourMS == 4){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    //slot in slot1 = 2\r\n                    if(array[i-1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        \r\n                        // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                             array[j+38*b] = 0         \r\n                             array[j+38*b-1] = 0\r\n                         }\r\n                         if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                             array[j-38*b] = 0         \r\n                             array[j-38*b-1] = 0\r\n                         }\r\n                        }\r\n                        const z = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[z];\r\n                                array[i-1] = array[z-1];\r\n                                array[i] = test[k];\r\n                                array[i-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100 ){\r\n                                 array[i] = array[z];\r\n                                 array[i+1] = array[z+1];\r\n                                 array[z] = test[k];\r\n                                 array[z+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                         }\r\n                         //revert back to 100\r\n                         for(let x =0; x<array.length; x++){\r\n                             if(array[x] == 0){\r\n                                 array[x] = 100\r\n                             }\r\n                         }\r\n                    }\r\n                    //slot in slot1 = 2\r\n                    else if(array[i+1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        \r\n                         // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                             array[j+38*b] = 0         \r\n                             array[j+38*b-1] = 0\r\n                         }\r\n                         if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                             array[j-38*b] = 0         \r\n                             array[j-38*b-1] = 0\r\n                         }\r\n                        }\r\n                        const v = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[v];\r\n                                array[i-1] = array[v-1];\r\n                                array[v] = test[k];\r\n                                array[v-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100){\r\n                                 array[i] = array[v];\r\n                                 array[i+1] = array[v+1];\r\n                                 array[v] = test[k];\r\n                                 array[v+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                         }\r\n                         //revert back to 100\r\n                         for(let x =0; x<array.length; x++){\r\n                             if(array[x] == 0){\r\n                                 array[x] = 100\r\n                             }\r\n                         }\r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                    \r\n                }\r\n             }\r\n         }\r\n         k++  \r\n     }\r\n\r\n\r\n     for(let z =0; z< array.length; z++){\r\n         for(let x = 0; x < remainderArraySlot1.length; x++){\r\n             if(array[z] == remainderArraySlot1[x]){\r\n                 for(let b = 1; b <= totalRoom; b++){\r\n                     if( array[z+38*b]==100 && array[z+38*b-1]==100){\r\n                         array[z+38*b] = 0         \r\n                         array[z+38*b-1] = 0\r\n                     }\r\n                     if( array[z-38*b]==100 && array[z-38*b-1]==100){\r\n                         array[z-38*b] = 0         \r\n                         array[z-38*b-1] = 0\r\n                     }\r\n                    }\r\n             }\r\n         }\r\n     }\r\n\r\n     //slot in 3\r\n     for(let i = 0; i < array.length; i++){\r\n        if(array[i] == 100 && array[i+1] == 100 && array[i+2]==100){\r\n                if(k4 < remainderArray3.length){\r\n                    array[i] = remainderArray3[k4];\r\n                    array[i+1] = remainderArray3[k4];\r\n                    array[i+2] = remainderArray3[k4];\r\n                }\r\n                k4++\r\n        }\r\n     }\r\n\r\n     //fullfill the slot 3\r\n     for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100 && array[x+1] == 100){\r\n             if(k3 < remainderArraySlot1.length){\r\n                 const q = Math.floor(Math.random()*(x+1));\r\n                     array[x] = array[q]\r\n                     array[x+1] = array[q+1]\r\n                     array[q] = remainderArraySlot1[k3]\r\n                     array[q+1] = remainderArraySlot1[k3]\r\n             }else{\r\n                 if(remainderArraySlot1[k3] != undefined){\r\n                     insertedDataElective200_Slot2_2.push(remainderArraySlot1[k3])\r\n                 }\r\n             }\r\n             k3++   \r\n         }else if(array[x] == 100 && array[x+1] ==100 ){\r\n             if(k3 < remainderArraySlot1.length){\r\n                 const q = Math.floor(Math.random()*(x+1));\r\n                     array[x] = array[q]\r\n                     array[x+1] = array[q+1]\r\n                     array[q] = remainderArraySlot1[k3]\r\n                     array[q+1] = remainderArraySlot1[k3]\r\n             }else{\r\n                 if(remainderArraySlot1[k3] != undefined){\r\n                     insertedDataElective200_Slot2_2.push(remainderArraySlot1[k3])\r\n                 }\r\n             }\r\n             k3++   \r\n         }\r\n     }\r\n\r\n\r\n     for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100 ){\r\n                 if(k2 < remainderArray.length){\r\n                     const c = Math.floor(Math.random()*(x+1));\r\n                     array[x] = array[c]\r\n                     array[x+1] = array[c+1]\r\n                     array[c] = remainderArray[k2]\r\n                     array[c+1] = remainderArray[k2]\r\n                 }\r\n                 try{\r\n                     let slot2 = remainderArray[k2][10]\r\n                     if(slot2 == 2){\r\n                         insertedDataElective200_Slot2_2.push(remainderArray[k2])\r\n                     }\r\n                 }catch{}\r\n             k2++   \r\n         }else if(array[x] == 100 && array[x+1] ==100 ){\r\n             if(k2 < remainderArray.length){\r\n                 const b = Math.floor(Math.random()*(x+1));\r\n                 array[x] = array[b]\r\n                 array[x+1] = array[b+1]\r\n                 array[b] = remainderArray[k2]\r\n                 array[b+1] = remainderArray[k2]\r\n             }\r\n             try{\r\n                 let slot2 = remainderArray[k2][10]\r\n                 if(slot2 == 2){\r\n                     insertedDataElective200_Slot2_2.push(remainderArray[k2])\r\n                 }\r\n             }catch{}\r\n         k2++   \r\n     }\r\n     }\r\n\r\n     //if there is array in -1, reslot in into the array\r\n     for(let x =0; x<array.length; x++){\r\n         if(array[x] == 0){\r\n             array[x] = 100\r\n         }\r\n     }\r\n\r\n     if(array[-1] != undefined){\r\n         insertedDataElective200_Slot2_1.push(array[-1]);\r\n     }\r\n\r\n    return array;\r\n}\r\nvar AntArrInsElective200 = AntAlgoInsertElective200(AntArrElective200);\r\n\r\n\r\n const slot2Equal1forElective200 = (array) => {\r\n     let k = 0;\r\n     let test2 = []\r\n     \r\n     for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100){\r\n                if(k < insertedDataElective200_Slot2_1.length){\r\n                    array[x] = insertedDataElective200_Slot2_1[k];\r\n                }\r\n                k++\r\n         }\r\n     }\r\n\r\n     return array;\r\n }\r\n slot2Equal1forElective200(AntArrElective200);\r\n\r\n\r\n const slot2Equal2forElective200 = (array) => {\r\n     let k = 0;\r\n     for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100 && array[x+1] ==100){\r\n             if(k < insertedDataElective200_Slot2_2.length){\r\n                     array[x] = insertedDataElective200_Slot2_2[k]\r\n                     array[x+1] = insertedDataElective200_Slot2_2[k]\r\n             }else{\r\n                 if(insertedDataElective200_Slot2_2[k] != undefined){\r\n                     extraDataElective200_Slot2_2.push(insertedDataElective200_Slot2_2[k])\r\n                 }\r\n             }\r\n             k++   \r\n         }\r\n     }\r\n\r\n     for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100 && array[x+1] ==100){\r\n             if(k < extraDataElective200_Slot2_2.length){\r\n                 array[x] = extraDataElective200_Slot2_2[k]\r\n                 array[x+1] = extraDataElective200_Slot2_2[k]\r\n             }\r\n         k++   \r\n         }\r\n     }\r\n     return array;\r\n}\r\n slot2Equal2forElective200(AntArrElective200);\r\n\r\n\r\nlet reshuffleElective200 = []\r\nlet notDupeShuffleElective200 = []\r\nconst checkHC_200_Elective = (array) => {\r\n    let count =0\r\n    let indexArray = 0\r\n    let indexArray2 = 0\r\n    let totalRoom = array.length / 38\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n     indexArray = (x * 38)\r\n        try{\r\n         for(let i = 1; i<array.length ; i++){\r\n                if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 0 ){\r\n                    try{\r\n                        if(array[i][5] == array[i+indexArray][5] ){\r\n                            reshuffleElective200.push([i+indexArray,array[i+indexArray]]);\r\n                         }\r\n                         if(array[i][6] == array[i+indexArray][6] && array[i][5] == array[i+indexArray][5]){\r\n                            try{\r\n                                reshuffleElective200.push([i+indexArray,array[i+indexArray]]);\r\n                            }catch{}\r\n                        }\r\n                    }catch{}\r\n                }    \r\n            }\r\n        }catch{}\r\n    }\r\n    for(let x =0; x < reshuffleElective200.length; x++){\r\n        try{\r\n            if( reshuffleElective200[x][0] != reshuffleElective200[x+1][0]){\r\n            notDupeShuffleElective200.push(reshuffleElective200[x]);\r\n        }\r\n\r\n        }catch{}\r\n\r\n    }\r\n    reshuffleElective200.pop(notDupeShuffleElective200);\r\n\r\n}\r\ncheckHC_200_Elective(AntArrElective200)\r\n\r\nconst reshuffleElective200_200 = (data,array) => {\r\n\r\n    let k = 0\r\n    let count =0\r\n    let totalRoom = array.length / 38\r\n\r\n    for(let x =0; x < data.length; x ++){\r\n        for(let i =0; i < array.length ; i++){\r\n            try{\r\n                if(array[i] != undefined){\r\n                    if(data[x][0] == i){\r\n                        array[i] = 0\r\n                        for(let b = 1 ; b<= totalRoom ; b++){\r\n                            if( array[i+38*b]==100){\r\n                                array[i+38*b] = 0\r\n                            }\r\n                            if( array[i-38*b]==100 ){\r\n                                array[i-38*b] = 0\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n\r\n    }\r\n        for(let i = 0; i < array.length; i++){\r\n                if(array[i] == 100){\r\n                    if(k< data.length){\r\n                    count +=1\r\n                    array[i] = data[k][1]\r\n                    }\r\n                    k++\r\n            }\r\n        }\r\n\r\n        for(let x = 0; x< array.length; x++){\r\n            if(array[x] == 0){\r\n                array[x] = 100\r\n            }\r\n        }\r\n        // console.log(\"count: \"+ count)\r\n}\r\nreshuffleElective200_200(notDupeShuffleElective200,AntArrElective200);\r\n\r\nconst checkAmountData200_Elective_2 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=200 && array[i] != 0 && array[i] != undefined){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_2 = checkAmountData200_Elective_2(AntArrInsElective200)\r\n// console.log(AntArrInsElective200)\r\n// console.log(\"Amount of data: \"+checkAmount_2);\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\nconst array1DElective500 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrElective500 = array1DElective500(DataArrayElective500);\r\n\r\nlet extraDataElective500_Slot2_2 = []\r\nlet extraData500Elective_Slot2_1 = []\r\nlet insertedDataElective500_Slot2_2 = []\r\nlet insertedDataElective500_Slot2_1= []\r\n\r\nconst AntAlgoInsertElective500 = (array) => {\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    let k4 =0 \r\n\r\n    let remainderArray = []\r\n    let remainderArraySlot1 = []\r\n    let remainderArray3 = []\r\n\r\n    let totalRoom = array.length / 38\r\n\r\n    for(let x=0; x<filterDataElective500.length;x++){\r\n        test.push(filterDataElective500[x]);\r\n    }\r\n\r\n     for(let i = array.length-1;i>0;i--){\r\n         if(k < test.length){\r\n         let hourMS = test[k][7]\r\n         let slot1 = test[k][9]\r\n         let slot2 = test[k][10]\r\n\r\n         if(hourMS == 3){\r\n             const j = Math.floor(Math.random()*(i+1));\r\n             if(array[i] == 100 && array[i-1] == 100 && array[i+1]==100){\r\n                     array[i] = array[j];\r\n                     array[i-1] = array[j-1];\r\n                     array[i+1] = array[j+1];\r\n                     array[j] = test[k];\r\n                     array[j-1] = test[k];\r\n                     array[j+1] = test[k];\r\n                     \r\n                }\r\n                 else{\r\n                    remainderArray3.push(test[k]);    \r\n                }\r\n             }\r\n\r\n          else if(hourMS == 2){\r\n             const j = Math.floor(Math.random()*(i+1));\r\n             if(array[i] == 100){\r\n                 if(array[i-1] == 100 ){\r\n                     array[i] = array[j];\r\n                     array[i-1] = array[j-1];\r\n                     array[j] = test[k];\r\n                     array[j-1] = test[k];\r\n                     \r\n                 }else if(array[i+1] == 100){\r\n                     array[i] = array[j];\r\n                     array[i+1] = array[j+1];\r\n                     array[j] = test[k];\r\n                     array[j+1] = test[k];\r\n                     \r\n                 }\r\n                 else{\r\n                     remainderArray.push(test[k]);\r\n                     \r\n                 }\r\n             }else{\r\n                 remainderArray.push(test[k]);\r\n             }\r\n             }\r\n\r\n            else if(hourMS == 4){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    //slot in slot1 = 2\r\n                    if(array[i-1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        \r\n                        // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                             array[j+38*b] = 0         \r\n                             array[j+38*b-1] = 0\r\n                         }\r\n                         if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                             array[j-38*b] = 0         \r\n                             array[j-38*b-1] = 0\r\n                         }\r\n                        }\r\n                        const z = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[z];\r\n                                array[i-1] = array[z-1];\r\n                                array[i] = test[k];\r\n                                array[i-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100 ){\r\n                                 array[i] = array[z];\r\n                                 array[i+1] = array[z+1];\r\n                                 array[z] = test[k];\r\n                                 array[z+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                         }\r\n                         //revert back to 100\r\n                         for(let x =0; x<array.length; x++){\r\n                             if(array[x] == 0){\r\n                                 array[x] = 100\r\n                             }\r\n                         }\r\n                    }\r\n                    //slot in slot1 = 2\r\n                    else if(array[i+1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        \r\n                         // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                             array[j+38*b] = 0         \r\n                             array[j+38*b-1] = 0\r\n                         }\r\n                         if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                             array[j-38*b] = 0         \r\n                             array[j-38*b-1] = 0\r\n                         }\r\n                        }\r\n                        const v = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[v];\r\n                                array[i-1] = array[v-1];\r\n                                array[v] = test[k];\r\n                                array[v-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100){\r\n                                 array[i] = array[v];\r\n                                 array[i+1] = array[v+1];\r\n                                 array[v] = test[k];\r\n                                 array[v+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                         }\r\n                         //revert back to 100\r\n                         for(let x =0; x<array.length; x++){\r\n                             if(array[x] == 0){\r\n                                 array[x] = 100\r\n                             }\r\n                         }\r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                    \r\n                }\r\n             }\r\n         }\r\n         k++  \r\n     }\r\n\r\n\r\n     for(let z =0; z< array.length; z++){\r\n         for(let x = 0; x < remainderArraySlot1.length; x++){\r\n             if(array[z] == remainderArraySlot1[x]){\r\n                 for(let b = 1; b <= totalRoom; b++){\r\n                     if( array[z+38*b]==100 && array[z+38*b-1]==100){\r\n                         array[z+38*b] = 0         \r\n                         array[z+38*b-1] = 0\r\n                     }\r\n                     if( array[z-38*b]==100 && array[z-38*b-1]==100){\r\n                         array[z-38*b] = 0         \r\n                         array[z-38*b-1] = 0\r\n                     }\r\n                    }\r\n             }\r\n         }\r\n     }\r\n\r\n     //slot in 3\r\n     for(let i = 0; i < array.length; i++){\r\n        if(array[i] == 100 && array[i+1] == 100 && array[i+2]==100){\r\n                if(k4 < remainderArray3.length){\r\n                    array[i] = remainderArray3[k4];\r\n                    array[i+1] = remainderArray3[k4];\r\n                    array[i+2] = remainderArray3[k4];\r\n                }\r\n                k4++\r\n        }\r\n     }\r\n\r\n     //fullfill the slot 3\r\n     for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100 && array[x+1] == 100){\r\n             if(k3 < remainderArraySlot1.length){\r\n                 const q = Math.floor(Math.random()*(x+1));\r\n                     array[x] = array[q]\r\n                     array[x+1] = array[q+1]\r\n                     array[q] = remainderArraySlot1[k3]\r\n                     array[q+1] = remainderArraySlot1[k3]\r\n             }else{\r\n                 if(remainderArraySlot1[k3] != undefined){\r\n                     insertedDataElective500_Slot2_2.push(remainderArraySlot1[k3])\r\n                 }\r\n             }\r\n             k3++   \r\n         }else if(array[x] == 100 && array[x+1] ==100 ){\r\n             if(k3 < remainderArraySlot1.length){\r\n                 const q = Math.floor(Math.random()*(x+1));\r\n                     array[x] = array[q]\r\n                     array[x+1] = array[q+1]\r\n                     array[q] = remainderArraySlot1[k3]\r\n                     array[q+1] = remainderArraySlot1[k3]\r\n             }else{\r\n                 if(remainderArraySlot1[k3] != undefined){\r\n                     insertedDataElective500_Slot2_2.push(remainderArraySlot1[k3])\r\n                 }\r\n             }\r\n             k3++   \r\n         }\r\n     }\r\n\r\n\r\n     for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100 ){\r\n                 if(k2 < remainderArray.length){\r\n                     const c = Math.floor(Math.random()*(x+1));\r\n                     array[x] = array[c]\r\n                     array[x+1] = array[c+1]\r\n                     array[c] = remainderArray[k2]\r\n                     array[c+1] = remainderArray[k2]\r\n                 }\r\n                 try{\r\n                     let slot2 = remainderArray[k2][10]\r\n                     if(slot2 == 2){\r\n                         insertedDataElective500_Slot2_2.push(remainderArray[k2])\r\n                     }\r\n                 }catch{}\r\n             k2++   \r\n         }else if(array[x] == 100 && array[x+1] ==100 ){\r\n             if(k2 < remainderArray.length){\r\n                 const b = Math.floor(Math.random()*(x+1));\r\n                 array[x] = array[b]\r\n                 array[x+1] = array[b+1]\r\n                 array[b] = remainderArray[k2]\r\n                 array[b+1] = remainderArray[k2]\r\n             }\r\n             try{\r\n                 let slot2 = remainderArray[k2][10]\r\n                 if(slot2 == 2){\r\n                     insertedDataElective500_Slot2_2.push(remainderArray[k2])\r\n                 }\r\n             }catch{}\r\n         k2++   \r\n     }\r\n     }\r\n\r\n     //if there is array in -1, reslot in into the array\r\n     for(let x =0; x<array.length; x++){\r\n         if(array[x] == 0){\r\n             array[x] = 100\r\n         }\r\n     }\r\n\r\n     if(array[-1] != undefined){\r\n         insertedDataElective500_Slot2_1.push(array[-1]);\r\n     }\r\n\r\n    return array;\r\n}\r\nvar AntArrInsElective500 = AntAlgoInsertElective500(AntArrElective500);\r\n\r\n\r\n const slot2Equal1forElective500 = (array) => {\r\n     let k = 0;\r\n     let test2 = []\r\n     \r\n     for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100){\r\n                if(k < insertedDataElective500_Slot2_1.length){\r\n                    array[x] = insertedDataElective500_Slot2_1[k];\r\n                }\r\n                k++\r\n         }\r\n     }\r\n\r\n     return array;\r\n }\r\n slot2Equal1forElective500(AntArrElective500);\r\n\r\n\r\n const slot2Equal2forElective500 = (array) => {\r\n     let k = 0;\r\n     for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100 && array[x+1] ==100){\r\n             if(k < insertedDataElective500_Slot2_2.length){\r\n                     array[x] = insertedDataElective500_Slot2_2[k]\r\n                     array[x+1] = insertedDataElective500_Slot2_2[k]\r\n             }else{\r\n                 if(insertedDataElective500_Slot2_2[k] != undefined){\r\n                     extraDataElective500_Slot2_2.push(insertedDataElective500_Slot2_2[k])\r\n                 }\r\n             }\r\n             k++   \r\n         }\r\n     }\r\n\r\n     for(let x = 0; x< array.length; x++){\r\n         if(array[x] == 100 && array[x+1] ==100){\r\n             if(k < extraDataElective500_Slot2_2.length){\r\n                 array[x] = extraDataElective500_Slot2_2[k]\r\n                 array[x+1] = extraDataElective500_Slot2_2[k]\r\n             }\r\n         k++   \r\n         }\r\n     }\r\n     return array;\r\n}\r\n slot2Equal2forElective500(AntArrElective500);\r\n\r\n\r\nlet reshuffleElective500 = []\r\nlet notDupeShuffleElective500 = []\r\nconst checkHC_500_Elective = (array) => {\r\n    let count =0\r\n    let indexArray = 0\r\n    let indexArray2 = 0\r\n    let totalRoom = array.length / 38\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n     indexArray = (x * 38)\r\n        try{\r\n         for(let i = 1; i<array.length ; i++){\r\n                if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 0 ){\r\n                    try{\r\n                        if(array[i][5] == array[i+indexArray][5] ){\r\n                            reshuffleElective500.push([i+indexArray,array[i+indexArray]]);\r\n                         }\r\n                         if(array[i][6] == array[i+indexArray][6] && array[i][5] == array[i+indexArray][5]){\r\n                            try{\r\n                                reshuffleElective500.push([i+indexArray,array[i+indexArray]]);\r\n                            }catch{}\r\n                        }\r\n                    }catch{}\r\n                }    \r\n            }\r\n        }catch{}\r\n    }\r\n    for(let x =0; x < reshuffleElective500.length; x++){\r\n        try{\r\n            if( reshuffleElective500[x][0] != reshuffleElective500[x+1][0]){\r\n            notDupeShuffleElective500.push(reshuffleElective500[x]);\r\n        }\r\n\r\n        }catch{}\r\n\r\n    }\r\n    reshuffleElective500.pop(notDupeShuffleElective500);\r\n\r\n}\r\ncheckHC_500_Elective(AntArrElective500)\r\n\r\nconst reshuffleElective500_500 = (data,array) => {\r\n\r\n    let k = 0\r\n    let count =0\r\n    let totalRoom = array.length / 38\r\n\r\n    for(let x =0; x < data.length; x ++){\r\n        for(let i =0; i < array.length ; i++){\r\n            try{\r\n                if(array[i] != undefined){\r\n                    if(data[x][0] == i){\r\n                        array[i] = 0\r\n                        for(let b = 1 ; b<= totalRoom ; b++){\r\n                            if( array[i+38*b]==100){\r\n                                array[i+38*b] = 0\r\n                            }\r\n                            if( array[i-38*b]==100 ){\r\n                                array[i-38*b] = 0\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n\r\n    }\r\n        for(let i = 0; i < array.length; i++){\r\n                if(array[i] == 100){\r\n                    if(k< data.length){\r\n                    count +=1\r\n                    array[i] = data[k][1]\r\n                    }\r\n                    k++\r\n            }\r\n        }\r\n\r\n        for(let x = 0; x< array.length; x++){\r\n            if(array[x] == 0){\r\n                array[x] = 100\r\n            }\r\n        }\r\n        // console.log(\"count: \"+ count)\r\n}\r\nreshuffleElective500_500(notDupeShuffleElective500,AntArrElective500);\r\n\r\nconst checkAmountData500_ELective_2 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=500 && array[i] != 0 && array[i] != undefined){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_2 = checkAmountData500_ELective_2(AntArrInsElective500)\r\n// console.log(AntArrInsElective500)\r\n// console.log(\"Amount of data: \"+checkAmount_2);\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//______________________________________________________________________________________________________________________________________________\r\n\r\n//---------------------------------------------------------------------------------------------------------------------------------------------\r\n//----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nlet combineData = []\r\nlet combineElectiveData = []\r\n\r\n//Combine all dataset\r\nconst combine = (data1,data2,data3,data4)  => {\r\n    for(let i = 0; i < data1.length; i++){\r\n        combineData.push(data1[i])\r\n    }\r\n    for(let i = 0; i < data2.length; i++){\r\n        combineData.push(data2[i])\r\n    }\r\n    for(let i = 0; i < data3.length; i++){\r\n        combineData.push(data3[i])\r\n    }\r\n    for(let i = 0; i < data4.length; i++){\r\n        combineData.push(data4[i])\r\n    }\r\n    return combineData;\r\n}\r\nlet dataCombine = combine(AntArr50,AntArr100,AntArr200,AntArr500)\r\n\r\n\r\n\r\n//combine elective data\r\nconst combineElective = (data1,data2,data3,data4)  => {\r\n    for(let i = 0; i < data1.length; i++){\r\n        combineElectiveData.push(data1[i])\r\n    }\r\n    for(let i = 0; i < data2.length; i++){\r\n        combineElectiveData.push(data2[i])\r\n    }\r\n    for(let i = 0; i < data3.length; i++){\r\n        combineElectiveData.push(data3[i])\r\n    }\r\n    for(let i = 0; i < data4.length; i++){\r\n        combineElectiveData.push(data4[i])\r\n    }\r\n    return combineElectiveData;\r\n}\r\nlet dataCombineElective = combineElective(AntArrElective50,AntArrElective100,AntArrElective200,AntArrElective500)\r\n//console.log(dataCombine)\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n// Hard Constraint \r\n// H1: No student attend more than one class/ event at the same time\r\n// H2: The room is large enough to accomodate all of the student in attendace while also meeting the requirement \r\n// H3: At any given time, each room can onle have one course booked\r\n// H4: No student attend class during 12:00 pm -2:00 due to solat jumaat\r\n// H5: One teacher can only teach one class at one time.\r\n\r\n//Check for the H1 violation: same group attend more than 1 class at 1 time\r\n\r\nconst check1Group = (array) => {\r\n   let count =0\r\n   let indexArray = 0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       indexArray = (x * 37)\r\n   }\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       try{\r\n           //for(let x= 1 ; x <= totalRoom ; x++){\r\n            for(let i = 0; i<array.length ; i++){\r\n               indexArray = (x * 37)\r\n               if(array[i+indexArray] != 100 && array[i+indexArray] != undefined ){\r\n                   try{\r\n                       //if(array[i][6] == array[i+indexArray][6] && array[i+1][6] == array[i+indexArray+1][6] && array[i][5] == array[i+indexArray][5] && array[i+1][5] == array[i+indexArray+1][5]){\r\n                       if(array[i][6] == array[i+indexArray][6] && array[i][5] == array[i+indexArray][5]){\r\n                            try{\r\n                                //console.log(array[i])\r\n                                //console.log(array[i+indexArray])\r\n                                count +=1\r\n                            }catch{}\r\n                       }\r\n                   }catch{}\r\n               }   \r\n           }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n}\r\n\r\nvar checkH1_ALL = check1Group(dataCombine)\r\nconsole.log(checkH1_ALL);\r\nvar checkH1_ALLElective = check1Group(dataCombineElective)\r\n\r\n\r\n\r\n\r\n\r\n//Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\r\n\r\nconst checkRoomQuota = (array) => {\r\n   let count = 0\r\n   return count \r\n}\r\nvar checkH2_ALL = checkRoomQuota(dataCombine)\r\nvar checkH2_ALLElective = checkRoomQuota(dataCombineElective)\r\n\r\n\r\n//Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\r\nconst checkSolatJummat = (array) => {\r\n   let count = 0\r\n   return count \r\n}\r\nvar checkH4_ALL = checkSolatJummat(dataCombine)\r\nvar checkH4_ALLElective = checkSolatJummat(dataCombineElective)\r\n\r\n//Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\r\n\r\nconst check1Teacher = (array) => {\r\n   let count =0\r\n   let indexArray = 0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n    indexArray = (x * 38)\r\n       try{\r\n        for(let i = 1; i<array.length ; i++){\r\n               if(array[i+indexArray] != 100 && array[i+indexArray] != undefined ){\r\n                   try{\r\n                       if(array[i][5] == array[i+indexArray][5]){\r\n                           console.log(array[i])\r\n                           console.log(array[i+indexArray])\r\n                           count +=1\r\n                        }\r\n                   }catch{}\r\n               }    \r\n           }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n\r\n}\r\nvar checkH5_ALL = check1Teacher(dataCombine)\r\nconsole.log(checkH5_ALL)\r\nvar checkH5_ALLElective = check1Group(dataCombineElective)\r\n\r\n\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n// Soft Constraint \r\n// S1: A student has a class schedule toward the end of the day\r\n// S2: A student have more than two class in a row\r\n\r\n\r\n//Check for the S1 violation: student have class at the end of the day\r\nconst checkEndOfClass = (array) => {\r\n   let count =0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       let indexArray = (x * 37)\r\n       if(array[indexArray] != 100 ){\r\n           count = 1\r\n       }\r\n   }\r\n   return count\r\n\r\n}\r\nvar checkS1_50 = checkEndOfClass(AntArr50)\r\nvar checkS1_100 = checkEndOfClass(AntArr100)\r\nvar checkS1_200 = checkEndOfClass(AntArr200)\r\nvar checkS1_500 = checkEndOfClass(AntArr500)\r\nvar checkS1_Elective50 = checkEndOfClass(AntArrElective50)\r\nvar checkS1_Elective100 = checkEndOfClass(AntArrElective100)\r\nvar checkS1_Elective200 = checkEndOfClass(AntArrElective200)\r\nvar checkS1_Elective500 = checkEndOfClass(AntArrElective500)\r\n\r\n\r\n//Check for the S2 violation: teacher have 2 class in a row\r\n\r\nconst check2ClassInARow = (array) => {\r\n   let count =0\r\n   for(let i = 0; i < array.length; i++){\r\n       try{\r\n        if(array[i][5] != undefined && array[i+3][5] != undefined && array[i+2][5] != undefined && array[i+4][5] != undefined){\r\n            if(array[i][5] == array[i+3][5] && array[i+2][5] == array[i+4][5]){\r\n                count = 1\r\n            }\r\n       }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n}\r\nvar checkS2_50 = check2ClassInARow(AntArr50)\r\nvar checkS2_100 = check2ClassInARow(AntArr100)\r\nvar checkS2_200 = check2ClassInARow(AntArr200)\r\nvar checkS2_500 = check2ClassInARow(AntArr500)\r\nvar checkS2_Elective50 = check2ClassInARow(AntArrElective50)\r\nvar checkS2_Elective100 = check2ClassInARow(AntArrElective100)\r\nvar checkS2_Elective200 = check2ClassInARow(AntArrElective200)\r\nvar checkS2_Elective500 = check2ClassInARow(AntArrElective500)\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n//Check total Hard Constraint\r\n\r\nconst checkTotalHardContraint = () => {\r\n   let count =0\r\n   let totalH1 = checkH1_ALL\r\n   let totalH2 = checkH2_ALL\r\n   let totalH4 = checkH4_ALL\r\n   let totalH5 = checkH5_ALL\r\n\r\n   let totalH1_Elective = checkH1_ALLElective\r\n   let totalH2_Elective = checkH2_ALLElective\r\n   let totalH4_Elective = checkH4_ALLElective\r\n   let totalH5_Elective = checkH5_ALLElective\r\n   let totalHC = totalH1 + totalH2 + totalH4 + totalH5 + totalH1_Elective + totalH2_Elective + totalH4_Elective + totalH5_Elective\r\n   //let totalHC = totalH1 + totalH2 + totalH4 + totalH5 \r\n\r\n   if( totalHC != 0){\r\n       count +=1\r\n   }   \r\n\r\n   return count\r\n}\r\nvar checkTotalHardContraints = checkTotalHardContraint()\r\n//console.log(\"Total Hard Constraint: \"+checkTotalHardContraints)\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nconst checkTotalSoftContraint = () => {\r\n    let count =0\r\n    let totalS1 = checkS1_50 + checkS1_100 + checkS1_200 + checkS1_500 + checkS1_Elective50 + checkS1_Elective100 + checkS1_Elective200 + checkS1_Elective500\r\n    let totalS2 = checkS2_50 + checkS2_100 + checkS2_200 + checkS2_500 + checkS2_Elective50 + checkS2_Elective100 + checkS2_Elective200 + checkS2_Elective500\r\n    \r\n    if(totalS1 != 0){\r\n        count +=1\r\n    }\r\n    if(totalS2 != 0){\r\n        count +=1\r\n    }   \r\n    return count\r\n}\r\nvar checkTotalSoftContraints = checkTotalSoftContraint()\r\n//console.log(\"Total Soft Constraint: \"+checkTotalSoftContraints)\r\n//----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nconst change100ToEmpty = (data) => {\r\n    for(let i = 0; i< data.length; i++){\r\n        if(data[i] == 100){\r\n            data[i] = [];\r\n        }\r\n    }\r\n    return data;\r\n}\r\nlet finalData = change100ToEmpty(combineData)\r\n\r\nconst change100ToEmptyElective = (data) => {\r\n    for(let i = 0; i< data.length; i++){\r\n        if(data[i] == 100){\r\n            data[i] = [];\r\n        }\r\n    }\r\n    return data;\r\n}\r\nlet finalDataElective = change100ToEmptyElective(combineElectiveData)\r\n\r\n\r\nconst checkMissingData = (data50,data100,data200,data500,dataE50,dataE100,dataE200,dataE500) => {\r\n    let countData = []\r\n    for(let i = 0; i< courseData[0].length;i++){\r\n        for(let j = 0; j <courseData[0][i][7]; j++){\r\n            countData.push(courseData[0][i]);\r\n        }\r\n    }\r\n\r\n    let totalGenerateScheduleData = data50 + data100 + data200 + data500 + dataE50 + dataE100 + dataE200 + dataE500\r\n\r\n    if(countData.length == totalGenerateScheduleData){\r\n  \r\n    }else{\r\n\r\n    }\r\n}\r\n//checkMissingData(checkAmount50,checkAmount100,checkAmount200,checkAmount500,checkAmountElective50,checkAmountElective100,checkAmountElective200,checkAmountElective500)\r\n\r\n\r\ncheckTotalHardContraintsAll = checkTotalHardContraints\r\ncheckTotalSoftContraintsAll = checkTotalSoftContraints\r\nfinalDataAll.push(finalData)\r\nfinalDataAllElective.push(finalDataElective)\r\nreturn {checkTotalHardContraints,checkTotalSoftContraints,finalData,finalDataAllElective}\r\n}\r\nlet antSystemAlgo = antSystem();\r\n// -------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nlet trigger = 0\r\n\r\nconst iteration = () => {\r\n        antSystem()\r\n        let globalBestHS = checkTotalHardContraintsAll \r\n        let globalBestSS = checkTotalSoftContraintsAll\r\n        let globalBestScehdule = finalDataAll[0]\r\n        let globalBestScehduleElective = finalDataAllElective[0]\r\n    for(let i= 1; i <= 1; i++){\r\n        antSystem()\r\n        let localBestHS = checkTotalHardContraintsAll \r\n        let localBestSS = checkTotalSoftContraintsAll\r\n        let localBestScehdule = finalDataAll[0]\r\n        let localBestScehduleElective = finalDataAllElective[0]\r\n            console.log(\"iteraion: \" + i)\r\n            if(globalBestHS > localBestHS ){\r\n                globalBestHS = localBestHS\r\n                globalBestSS = localBestSS\r\n                globalBestScehdule = localBestScehdule\r\n                globalBestScehduleElective = localBestScehduleElective\r\n            }\r\n            if(localBestHS == 0){\r\n                console.log(\"iteraion: \" + i)\r\n                console.log(\"workable solution is found\")\r\n                globalBestHS = localBestHS\r\n                globalBestSS = localBestSS\r\n                globalBestScehdule = localBestScehdule\r\n                globalBestScehduleElective = localBestScehduleElective\r\n                console.log(\"Workable Gloabal best HS: \"+globalBestHS)\r\n                console.log(\"Workable Gloabal best SS: \" +globalBestSS)\r\n                //console.log(finalDataAll[0])\r\n                trigger = 1\r\n                return [finalDataAll[0], finalDataAllElective[0]]\r\n            }\r\n            else if(localBestHS == 0 && localBestSS == 0){\r\n                console.log(\"iteraion: \" + i)\r\n                console.log(\"perfect solution is found\")\r\n                globalBestHS = localBestHS\r\n                globalBestSS = localBestSS\r\n                globalBestScehdule = localBestScehdule\r\n                console.log(\"Perfect Gloabal best HS: \"+globalBestHS)\r\n                console.log(\"Perfect Gloabal best SS: \" +globalBestSS)\r\n                console.log(finalDataAll[0])\r\n                trigger = 1\r\n                return [finalDataAll[0], finalDataAllElective[0]]\r\n            }\r\n    }\r\n    return [finalDataAll[0], finalDataAllElective[0]]\r\n}\r\nlet interations = iteration()\r\n\r\nlet presentableData = []\r\nlet presentableDataElective = []\r\n\r\nif(trigger == 1){\r\n//shot course code, course name and lecturer    \r\nconst changeToPresentationData = (data) => {\r\n    for(let i= 0; i <= data[0].length; i++){\r\n        try {\r\n            presentableData.push([data[0][i][1],data[0][i][2],data[0][i][5]])\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n    for(let i= 0; i <= data[1].length; i++){\r\n        try {\r\n            presentableDataElective.push([data[1][i][1],data[1][i][2],data[1][i][5]])\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n}\r\nchangeToPresentationData(interations)\r\n\r\n\r\nlet allRoomName = []\r\nfor(let i = 0; i < roomData[0].length; i++){\r\n    allRoomName.push(roomData[0][i][0])\r\n}\r\nallRoomName.unshift(\"Room\");\r\nif(allRoomName.pop() == undefined){\r\n}\r\n\r\n\r\nlet weekday = ['Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday',\r\n'Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday',\r\n'Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday',\r\n'Friday','Friday','Friday','Friday','Friday','Friday','Friday','Friday']\r\n\r\nlet wed = ['Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday']\r\n\r\n\r\nconst create2dArray = (weekdayArray,partDay,arrayAll, partAll) => {\r\n    var tmp = [];\r\n\r\n    for(var i = 0; i < weekdayArray.length; i += partDay) {\r\n        tmp.push(weekdayArray.slice(i, i + partDay));\r\n    }\r\n    for(var i = 0; i < arrayAll.length; i += partAll) {\r\n        tmp.push(arrayAll.slice(i, i + partAll));\r\n    }\r\n    return tmp;\r\n}\r\nlet dataset = create2dArray(weekday,38,presentableData,38)\r\nconsole.log(dataset);\r\n\r\nconst create2dArrayElective = (weekdayArray,partDay,arrayAll, partAll) => {\r\n    var tmp = [];\r\n\r\n    for(var i = 0; i < weekdayArray.length; i += partDay) {\r\n        tmp.push(weekdayArray.slice(i, i + partDay));\r\n    }\r\n    for(var i = 0; i < arrayAll.length; i += partAll) {\r\n        tmp.push(arrayAll.slice(i, i + partAll));\r\n    }\r\n    return tmp;\r\n}\r\nlet datasetElective = create2dArrayElective(wed,10,presentableDataElective,10);\r\nconsole.log(datasetElective)\r\n\r\n//let compileDataset = dataset.concat(datasetElective);\r\n//console.log(dataset)\r\n\r\nconst insertRoomName = (roomData,array) => {\r\n    for(let i= 0; i<array.length; i++){\r\n        array[i].unshift(roomData[i]);\r\n    }\r\n    return array;\r\n}\r\n\r\ninsertRoomName(allRoomName,dataset)\r\n\r\nconst insertRoomNameElective = (roomData,array) => {\r\n    for(let i= 0; i<array.length; i++){\r\n        array[i].unshift(roomData[i]);\r\n    }\r\n    return array;\r\n}\r\n\r\ninsertRoomName(allRoomName,datasetElective)\r\n\r\n\r\n/** Convert a 2D array into a CSV string\r\n */\r\n  function arrayToCsv(data){\r\n    //console.log(data)\r\n    return data.map(row =>\r\n      row\r\n      .map(String)  // convert every value to String\r\n      .map(v => v.replaceAll('\"', '\"\"'))  // escape double colons\r\n      .map(v => `\"${v}\"`)  // quote it\r\n      .join(',')  // comma-separated\r\n    ).join('\\r\\n');  // rows starting on new lines\r\n  }\r\n\r\nlet csv = arrayToCsv(\r\n    dataset\r\n);\r\n\r\nfunction downloadBlob(content, filename, contentType) {\r\n    // Create a blob\r\n    var blob = new Blob([content], { type: contentType });\r\n    var url = URL.createObjectURL(blob);\r\n  \r\n    // Create a link to download it\r\n    var pom = document.createElement('a');\r\n    pom.href = url;\r\n    pom.setAttribute('download', filename);\r\n    pom.click();\r\n  }\r\n\r\n  /** Convert a 2D array into a CSV string\r\n   * elective\r\n */\r\n   function arrayToCsvElective(data){\r\n    //console.log(data)\r\n    return data.map(row =>\r\n      row\r\n      .map(String)  // convert every value to String\r\n      .map(v => v.replaceAll('\"', '\"\"'))  // escape double colons\r\n      .map(v => `\"${v}\"`)  // quote it\r\n      .join(',')  // comma-separated\r\n    ).join('\\r\\n');  // rows starting on new lines\r\n  }\r\n\r\nlet csvElective = arrayToCsvElective(\r\n    datasetElective\r\n);\r\n\r\nfunction downloadBlobElective(content, filename, contentType) {\r\n    // Create a blob\r\n    var blob = new Blob([content], { type: contentType });\r\n    var url = URL.createObjectURL(blob);\r\n  \r\n    // Create a link to download it\r\n    var pom = document.createElement('a');\r\n    pom.href = url;\r\n    pom.setAttribute('download', filename);\r\n    pom.click();\r\n  }\r\n\r\n  downloadBlob(csv, 'ModifiedAntSystem_GeneratedSchedule.csv', 'text/csv;charset=utf-8;')\r\n  downloadBlobElective(csvElective, 'ModifiedAntSystemElective_GeneratedSchedule.csv', 'text/csv;charset=utf-8;')\r\n}else{\r\n    alert(\"no workable solution found, please refersh until get workable solution\")\r\n}\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n        }\r\n    return(\r\n        <React.Fragment>\r\n            <h1>\r\n                Generate Schedule Page\r\n            </h1>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default ArraySchedule;\r\n\r\n\r\n//result[i][j]=Course.splice(Math.floor(Math.random()* Course.length),1)[0] // create random placement of Course Value\r\n//const Schedule = new Array(10).fill(Array(5).fill(null));\r\n//console.log(Schedule);\r\n// const Course = [['TE1',4],['TE1',4],['TE1',4],['TE1',3],['TE1',4],['TE1',2],['TE1',4],['TE1',4],['TE1',4],['TE1',3]];\r\n//const Course = [['TE1',2],['TE2',2],['TE3',3],['TE4',4],['TE5',3],['TE6',4],['TE7',4],['TE8',2],['TE9',4]];\r\n//const Course = ['TE1','TE2','TE3','TE4','TE5','TE6','TE7','TE8','TE9'];"]},"metadata":{},"sourceType":"module"}