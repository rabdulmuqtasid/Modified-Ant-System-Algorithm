{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acit\\\\Desktop\\\\FYP Code\\\\FYP Code\\\\frontend\\\\src\\\\components\\\\GenerateSchedulePage\\\\electivefullcode.js\";\nimport { concat, create, find, forEach, indexOf } from \"lodash\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport _ from 'lodash';\nimport { CSVLink } from \"react-csv\";\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\nlet finalDataAll = [];\nlet finalDataAllElective = [];\nlet checkHardConstraintOutsite = 0;\nlet checkSoftConstraintOutsite = 0;\nvar t0 = performance.now();\n\nconst ArrayScheduleElective = props => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedFile, setLoaadedFile] = useState(false);\n  const [roomData, setroomData] = useState();\n  const [courseData, setcourseData] = useState();\n  const [CsvData, setCsvData] = useState(); // const [Keys, setKeys] = useState();\n  //const [uploadedData, setUploadedData] = useState([]);\n  //console.log(\"props dataset:\"+ props.test)\n\n  const userId = useParams().userId;\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875'); //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\n        //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\n\n        const responsedata = await response.json();\n        let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset); // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\n\n        const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Room'], Dataset['Size']]); //Extract Room\n\n        setroomData([ertRoom]);\n        const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'], Dataset['Course Code'], Dataset['Course Name'], Dataset['Year'], Dataset['Semester'], Dataset['Lecturer'], Dataset['Group'], Dataset['HMS'], Dataset['Programme Code'], Dataset['Slot1'], Dataset['Slot2']]); //Extract Enrollment Quota\n\n        setcourseData([ertCourse]);\n\n        if (!response.ok) {\n          throw new Error(responsedata.message);\n        }\n\n        setLoaadedFile(stringifyData);\n        setIsLoading(true);\n      } catch (err) {\n        console.log(err.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, [userId]);\n\n  if (!isLoading && loadedFile) {\n    const testData = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const EnrollmentQuota = [];\n    const CourseCode = [];\n    const HMS = [];\n    const lecturerData = [];\n    const roomName = [];\n    const roomSize = [];\n    const filterData50 = [];\n    const filterData100 = [];\n    const filterData200 = [];\n    const filterData500 = [];\n    const filterDataElective50 = [];\n    const filterDataElective100 = [];\n    const filterDataElective200 = [];\n    const filterDataElective500 = [];\n    const room = [];\n    const totalAmountofData = [];\n    var totalAmountofDataSlottedIn = 0;\n    room.push(roomData[0]);\n    let hardConstraintViolated = 0;\n    let softConstraintViolated = 0; //console.log(courseData[0][0][1]);\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      let enrollment = [courseData[0][i][0]];\n      let code = [courseData[0][i][1]];\n      let hms = [courseData[0][i][7]];\n      let lecturer = [courseData[0][i][5]];\n      enrollment.reduce(function (results, item, index, array) {\n        results[index] = item;\n        EnrollmentQuota.push(item); //console.log(results)\n      }, {});\n      code.reduce(function (results, item, index, array) {\n        results[index] = item;\n        CourseCode.push(item); //console.log(results)\n      }, {});\n      hms.reduce(function (results, item, index, array) {\n        results[index] = item;\n        HMS.push(item); //console.log(results)\n      }, {});\n      lecturer.reduce(function (results, item, index, array) {\n        results[index] = item;\n        lecturerData.push(item); //console.log(results)\n      }, {});\n    }\n\n    for (let i = 0; i < roomData[0].length; i++) {\n      let name = [roomData[0][i][0]];\n      let size = [roomData[0][i][1]];\n      name.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomName.push(item); //console.log(results)\n      }, {});\n      size.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomSize.push(item); //console.log(results)\n      }, {});\n    }\n\n    const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\n    const notDuplicatesLecturer = lecturerData.filter((item, index) => index == lecturerData.indexOf(item));\n    notDuplicatesLecturer.pop(); //console.log(notDuplicatesLecturer)\n\n    let courseDataXElective = [];\n    let courseDataWithElective = [];\n    courseData[0].pop(); //saparate elective course with the faculty course\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      //console.log(courseData[0][i][8])\n      //if(courseData[0][i][1].slice(0,3) == 'TMU' ||  courseData[0][i][1].slice(0,3) == 'TMX'){\n      if (courseData[0][i][8] == 'ELECTIVE') {\n        courseDataWithElective.push(courseData[0][i]);\n      }\n    } //insert data without faculty courses into correct room capacity\n\n\n    for (let i = 0; i < courseDataWithElective.length; i++) {\n      if (courseDataWithElective[i][0] < 50) {\n        filterDataElective50.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 50 && courseDataWithElective[i][0] < 100) {\n        filterDataElective100.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 100 && courseDataWithElective[i][0] < 200) {\n        filterDataElective200.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 200 && courseDataWithElective[i][0] < 500) {\n        filterDataElective500.push(courseDataWithElective[i]);\n      }\n    } // console.log(filterDataElective50);\n    // console.log(filterDataElective100);\n    // console.log(filterDataElective200);\n    // console.log(filterDataElective500);\n\n\n    let roomUnder50 = [];\n    let roomUnder100 = [];\n    let roomUnder200 = [];\n    let roomUnder500 = [];\n\n    const checkNumberofRoom = () => {\n      for (let i = 0; i < roomData[0].length; i++) {\n        let room = roomData[0][i][1]; //console.log(roomData[0][i][1]);\n\n        if (room < 50) {\n          roomUnder50.push(room);\n        } else if (room > 50 && room < 100) {\n          roomUnder100.push(room);\n        } else if (room > 100 && room < 200) {\n          roomUnder200.push(room);\n        } else if (room > 200) {\n          roomUnder500.push(room);\n        }\n      }\n    };\n\n    checkNumberofRoom();\n\n    const createArray = data => {\n      var result = [];\n\n      for (let i = 0; i < data; i++) {\n        result[i] = [];\n      }\n\n      return result;\n    };\n\n    const totalAmountDataElective = () => {\n      for (let i = 0; i < courseDataWithElective.length; i++) {\n        for (let j = 0; j < courseDataWithElective[i][7]; j++) {\n          totalAmountofData.push(courseDataWithElective[i]);\n        }\n      }\n    };\n\n    totalAmountDataElective();\n    let DataArrayElective50 = roomUnder50.length * 10;\n    let DataArrayElective100 = roomUnder100.length * 10;\n    let DataArrayElective200 = roomUnder200.length * 10;\n    let DataArrayElective500 = roomUnder500.length * 10;\n    let combineArrayElective = DataArrayElective50 + DataArrayElective100 + DataArrayElective200 + DataArrayElective500;\n    let startIndexElective100 = DataArrayElective50 - 1;\n    let startIndexElective200 = DataArrayElective50 + DataArrayElective100 - 1;\n    let startIndexElective500 = DataArrayElective50 + DataArrayElective100 + DataArrayElective200 - 1;\n    let LastIndexElective50 = DataArrayElective50;\n    let LastIndexElective100 = DataArrayElective50 + DataArrayElective100;\n    let LastIndexElective200 = DataArrayElective50 + DataArrayElective100 + DataArrayElective200;\n    let LastIndexElective500 = DataArrayElective50 + DataArrayElective100 + DataArrayElective200 + DataArrayElective500; //----------------------------------------------------------------------------------------------------------------------------------------\n\n    var checkTotalHardContraintsAll = 0;\n    var checkTotalSoftContraintsAll = 0;\n\n    const antSystem = () => {\n      const changeToZero = array => {\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            array[i] = 100;\n          }\n        }\n\n        return array;\n      };\n\n      const checking_1_Elective = (array, array2, data) => {\n        let totalRoom = array.length / 10;\n        console.log(totalRoom); //let totalRoom2 = array2.length / 10\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\n            //if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]){\n            if (array[u] != 100) {\n              if (data[5] == array[u][5] || data[6] == array[u][6]) {\n                for (let b = 0; b < totalRoom; b++) {\n                  let indexArray = b * 10;\n\n                  if (array[u + indexArray] == 100) {\n                    array[u + indexArray] = 0; //array2[u+indexArray] = 0\n                  }\n\n                  if (array[u - indexArray] == 100) {\n                    array[u - indexArray] = 0; //array2[u-indexArray] = 0\n                  }\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      }; //___________________________________________________________________________________________________________________________________\n\n\n      const array1DElectiveCombine = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrCombineElective = array1DElectiveCombine(combineArrayElective);\n\n      const array1DElective50 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective50 = array1DElective50(DataArrayElective50);\n\n      const AntAlgoInsertElective50 = (array, combine) => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let hms2 = [];\n        let hms3 = [];\n        let hms4 = [];\n\n        for (let x = 0; x < filterDataElective50.length; x++) {\n          if (filterDataElective50[x][7] == 2) {\n            hms2.push(filterDataElective50[x]);\n          }\n\n          if (filterDataElective50[x][7] == 4) {\n            hms4.push(filterDataElective50[x]);\n          }\n\n          if (filterDataElective50[x][7] == 3) {\n            hms3.push(filterDataElective50[x]);\n          }\n\n          test.push(filterDataElective50[x]);\n        } //slot in  2 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < hms2.length) {\n            checking_1_Elective(combine, array, hms2[k]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j] == 100 && combine[j - 1] == 100 && j - 1 != -1) {\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j] = hms2[k];\n                combine[j - 1] = hms2[k];\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j] == 100 && combine[j + 1] == 100 && j + 1 != startIndexElective100) {\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j] = hms2[k];\n                combine[j + 1] = hms2[k];\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k++;\n        } // console.log(hms2.length)\n        // console.log(hms4.length)\n        //console.log(hms3.length)\n        //slot in  4 hours of meeting student course \n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k2 < hms4.length) {\n            //if(k2 < 1){\n            checking_1_Elective(combine, array, hms4[k2]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j] == 100 && combine[j - 1] == 100 && j - 1 != -1) {\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j] = hms4[k2];\n                combine[j - 1] = hms4[k2];\n                let b = 0;\n\n                while (b != 1) {\n                  const v = Math.floor(Math.random() * (i + 1)); //if(array[v] == 100 && array[v-1] == 100){\n\n                  if (combine[v] == 100 && combine[v - 1] == 100 && v - 1 != -1) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v - 1] = -1;\n                    combine[v] = hms4[k2];\n                    combine[v - 1] = hms4[k2];\n                    b = 1;\n                  } //else if(array[v] == 100 && array[v+1] == 100){\n                  else if (combine[v] == 100 && combine[v + 1] == 100 && v + 1 != startIndexElective100) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v + 1] = -1;\n                    combine[v] = hms4[k2];\n                    combine[v + 1] = hms4[k2];\n                    b = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j] == 100 && combine[j + 1] == 100 && j + 1 != startIndexElective100) {\n                //console.log(j)\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j] = hms4[k2];\n                combine[j + 1] = hms4[k2];\n                let z = 0;\n\n                while (z != 1) {\n                  const p = Math.floor(Math.random() * (i + 1)); //if(array[p] == 100 && array[p-1] == 100){\n\n                  if (combine[p] == 100 && combine[p - 1] == 100 && p - 1 != -1) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p - 1] = -1;\n                    combine[p] = hms4[k2];\n                    combine[p - 1] = hms4[k2];\n                    z = 1;\n                  } //else if(array[p] == 100 && array[p+1] == 100){\n                  else if (combine[p] == 100 && combine[p + 1] == 100 && p + 1 != startIndexElective100) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p + 1] = -1;\n                    combine[p] = hms4[k2];\n                    combine[p + 1] = hms4[k2];\n                    z = 1;\n                  }\n                }\n\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k2++;\n        } //slot in  3 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k3 < hms3.length) {\n            //if(k3 < 1){\n            checking_1_Elective(combine, array, hms3[k3]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\n\n              if (combine[j] == 100 && combine[j - 1] == 100 && combine[j + 1] == 100 && j - 1 != -1 && j + 1 != startIndexElective100) {\n                // slot in 3 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                array[j + 1] = -1;\n                combine[j] = hms3[k3];\n                combine[j - 1] = hms3[k3];\n                combine[j + 1] = hms3[k3];\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k3++;\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n        return array;\n      };\n\n      var AntArrInsElective50 = AntAlgoInsertElective50(AntArrElective50, AntArrCombineElective);\n\n      const checkAmountDataElective50_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined && array[i] != 1) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_2 = checkAmountDataElective50_2(AntArrInsElective50); // console.log(AntArrInsElective50);\n      // console.log(checkAmount_2)\n\n      const checkAmountDataElective50_0 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_0 = checkAmountDataElective50_0(AntArrElective50); //console.log(checkAmount_0)\n      //___________________________________________________________________________________________________________________________________\n      //___________________________________________________________________________________________________________________________________\n\n      const array1DElective100 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective100 = array1DElective100(DataArrayElective100);\n\n      const AntAlgoInsertElective100 = (array, combine) => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let hms2 = [];\n        let hms3 = [];\n        let hms4 = [];\n\n        for (let x = 0; x < filterDataElective100.length; x++) {\n          if (filterDataElective100[x][7] == 2) {\n            hms2.push(filterDataElective100[x]);\n          }\n\n          if (filterDataElective100[x][7] == 4) {\n            hms4.push(filterDataElective100[x]);\n          }\n\n          if (filterDataElective100[x][7] == 3) {\n            hms3.push(filterDataElective100[x]);\n          }\n\n          test.push(filterDataElective100[x]);\n        } //slot in  2 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < hms2.length) {\n            checking_1_Elective(combine, array, hms2[k]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j + startIndexElective100] == 100 && combine[j - 1 + startIndexElective100] == 100 && j - 1 != LastIndexElective50) {\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndexElective100] = hms2[k];\n                combine[j - 1 + startIndexElective100] = hms2[k];\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j + startIndexElective100] == 100 && combine[j + 1 + startIndexElective100] == 100 && j + 1 != startIndexElective200) {\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndexElective100] = hms2[k];\n                combine[j + 1 + startIndexElective100] = hms2[k];\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k++;\n        } // console.log(hms2.length)\n        // console.log(hms4.length)\n        //console.log(hms3.length)\n        //slot in  4 hours of meeting student course \n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k2 < hms4.length) {\n            //if(k2 < 1){\n            checking_1_Elective(combine, array, hms4[k2]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j + startIndexElective100] == 100 && combine[j - 1 + startIndexElective100] == 100 && j - 1 != LastIndexElective50) {\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndexElective100] = hms4[k2];\n                combine[j - 1 + startIndexElective100] = hms4[k2];\n                let b = 0;\n\n                while (b != 1) {\n                  const v = Math.floor(Math.random() * (i + 1)); //if(array[v] == 100 && array[v-1] == 100){\n\n                  if (combine[v + startIndexElective100] == 100 && combine[v - 1 + startIndexElective100] == 100 && v - 1 != LastIndexElective50) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v - 1] = -1;\n                    combine[v + startIndexElective100] = hms4[k2];\n                    combine[v - 1 + startIndexElective100] = hms4[k2];\n                    b = 1;\n                  } //else if(array[v] == 100 && array[v+1] == 100){\n                  else if (combine[v + startIndexElective100] == 100 && combine[v + 1 + startIndexElective100] == 100 && v + 1 != startIndexElective200) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v + 1] = -1;\n                    combine[v + startIndexElective100] = hms4[k2];\n                    combine[v + 1 + startIndexElective100] = hms4[k2];\n                    b = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j + startIndexElective100] == 100 && combine[j + 1 + startIndexElective100] == 100 && j + 1 != startIndexElective200) {\n                //console.log(j)\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndexElective100] = hms4[k2];\n                combine[j + 1 + startIndexElective100] = hms4[k2];\n                let z = 0;\n\n                while (z != 1) {\n                  const p = Math.floor(Math.random() * (i + 1)); //if(array[p] == 100 && array[p-1] == 100){\n\n                  if (combine[p + startIndexElective100] == 100 && combine[p - 1 + startIndexElective100] == 100 && p - 1 != LastIndexElective50) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p - 1] = -1;\n                    combine[p + startIndexElective100] = hms4[k2];\n                    combine[p - 1 + startIndexElective100] = hms4[k2];\n                    z = 1;\n                  } //else if(array[p] == 100 && array[p+1] == 100){\n                  else if (combine[p + startIndexElective100] == 100 && combine[p + 1 + startIndexElective100] == 100 && p + 1 != startIndexElective200) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p + 1] = -1;\n                    combine[p + startIndexElective100] = hms4[k2];\n                    combine[p + 1 + startIndexElective100] = hms4[k2];\n                    z = 1;\n                  }\n                }\n\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k2++;\n        } //slot in  3 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k3 < hms3.length) {\n            //if(k3 < 1){\n            checking_1_Elective(combine, array, hms3[k3]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\n\n              if (combine[j + startIndexElective100] == 100 && combine[j - 1 + startIndexElective100] == 100 && combine[j + 1 + startIndexElective100] == 100 && j - 1 != LastIndexElective50 && j + 1 != startIndexElective200) {\n                // slot in 3 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndexElective100] = hms3[k3];\n                combine[j - 1 + startIndexElective100] = hms3[k3];\n                combine[j + 1 + startIndexElective100] = hms3[k3];\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k3++;\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n        return array;\n      };\n\n      var AntArrInsElective100 = AntAlgoInsertElective100(AntArrElective100, AntArrCombineElective);\n\n      const checkAmountDataElective100_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 100 && array[i] != 0 && array[i] != undefined && array[i] != 1) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_2 = checkAmountDataElective100_2(AntArrInsElective100); // console.log(AntArrInsElective100);\n      // console.log(checkAmount_2)\n\n      const checkAmountDataElective100_0 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_0 = checkAmountDataElective100_0(AntArrElective100); //console.log(checkAmount_0)\n      //___________________________________________________________________________________________________________________________________\n      //___________________________________________________________________________________________________________________________________\n\n      const array1DElective200 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective200 = array1DElective200(DataArrayElective200);\n\n      const AntAlgoInsertElective200 = (array, combine) => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let hms2 = [];\n        let hms3 = [];\n        let hms4 = [];\n\n        for (let x = 0; x < filterDataElective200.length; x++) {\n          if (filterDataElective200[x][7] == 2) {\n            hms2.push(filterDataElective200[x]);\n          }\n\n          if (filterDataElective200[x][7] == 4) {\n            hms4.push(filterDataElective200[x]);\n          }\n\n          if (filterDataElective200[x][7] == 3) {\n            hms3.push(filterDataElective200[x]);\n          }\n\n          test.push(filterDataElective200[x]);\n        } //slot in  2 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < hms2.length) {\n            checking_1_Elective(combine, array, hms2[k]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j + startIndexElective200] == 100 && combine[j - 1 + startIndexElective200] == 100 && j - 1 != LastIndexElective100) {\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndexElective200] = hms2[k];\n                combine[j - 1 + startIndexElective200] = hms2[k];\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j + startIndexElective200] == 100 && combine[j + 1 + startIndexElective200] == 100 && j + 1 != startIndexElective500) {\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndexElective200] = hms2[k];\n                combine[j + 1 + startIndexElective200] = hms2[k];\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k++;\n        } // console.log(hms2.length)\n        // console.log(hms4.length)\n        //console.log(hms3.length)\n        //slot in  4 hours of meeting student course \n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k2 < hms4.length) {\n            //if(k2 < 1){\n            checking_1_Elective(combine, array, hms4[k2]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j + startIndexElective200] == 100 && combine[j - 1 + startIndexElective200] == 100 && j - 1 != LastIndexElective100) {\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndexElective200] = hms4[k2];\n                combine[j - 1 + startIndexElective200] = hms4[k2];\n                let b = 0;\n\n                while (b != 1) {\n                  const v = Math.floor(Math.random() * (i + 1)); //if(array[v] == 100 && array[v-1] == 100){\n\n                  if (combine[v + startIndexElective200] == 100 && combine[v - 1 + startIndexElective200] == 100 && v - 1 != LastIndexElective100) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v - 1] = -1;\n                    combine[v + startIndexElective200] = hms4[k2];\n                    combine[v - 1 + startIndexElective200] = hms4[k2];\n                    b = 1;\n                  } //else if(array[v] == 100 && array[v+1] == 100){\n                  else if (combine[v + startIndexElective200] == 100 && combine[v + 1 + startIndexElective200] == 100 && v + 1 != startIndexElective500) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v + 1] = -1;\n                    combine[v + startIndexElective200] = hms4[k2];\n                    combine[v + 1 + startIndexElective200] = hms4[k2];\n                    b = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j + startIndexElective200] == 100 && combine[j + 1 + startIndexElective200] == 100 && j + 1 != startIndexElective500) {\n                //console.log(j)\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndexElective200] = hms4[k2];\n                combine[j + 1 + startIndexElective200] = hms4[k2];\n                let z = 0;\n\n                while (z != 1) {\n                  const p = Math.floor(Math.random() * (i + 1)); //if(array[p] == 100 && array[p-1] == 100){\n\n                  if (combine[p + startIndexElective200] == 100 && combine[p - 1 + startIndexElective200] == 100 && p - 1 != LastIndexElective100) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p - 1] = -1;\n                    combine[p + startIndexElective200] = hms4[k2];\n                    combine[p - 1 + startIndexElective200] = hms4[k2];\n                    z = 1;\n                  } //else if(array[p] == 100 && array[p+1] == 100){\n                  else if (combine[p + startIndexElective200] == 100 && combine[p + 1 + startIndexElective200] == 100 && p + 1 != startIndexElective500) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p + 1] = -1;\n                    combine[p + startIndexElective200] = hms4[k2];\n                    combine[p + 1 + startIndexElective200] = hms4[k2];\n                    z = 1;\n                  }\n                }\n\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k2++;\n        } //slot in  3 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k3 < hms3.length) {\n            //if(k3 < 1){\n            checking_1_Elective(combine, array, hms3[k3]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\n\n              if (combine[j + startIndexElective200] == 100 && combine[j - 1 + startIndexElective200] == 100 && combine[j + 1 + startIndexElective200] == 100 && j - 1 != LastIndexElective100 && j + 1 != startIndexElective500) {\n                // slot in 3 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndexElective200] = hms3[k3];\n                combine[j - 1 + startIndexElective200] = hms3[k3];\n                combine[j + 1 + startIndexElective200] = hms3[k3];\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k3++;\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n        return array;\n      };\n\n      var AntArrInsElective200 = AntAlgoInsertElective200(AntArrElective200, AntArrCombineElective);\n\n      const checkAmountDataElective200_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 200 && array[i] != 0 && array[i] != undefined && array[i] != 1) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_2 = checkAmountDataElective200_2(AntArrInsElective200); // console.log(AntArrInsElective200);\n      // console.log(checkAmount_2)\n\n      const checkAmountDataElective200_0 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_0 = checkAmountDataElective200_0(AntArrElective200); //console.log(checkAmount_0)\n      //___________________________________________________________________________________________________________________________________\n      //___________________________________________________________________________________________________________________________________\n\n      const array1DElective500 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective500 = array1DElective500(DataArrayElective500);\n\n      const AntAlgoInsertElective500 = (array, combine) => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let hms2 = [];\n        let hms3 = [];\n        let hms4 = [];\n\n        for (let x = 0; x < filterDataElective500.length; x++) {\n          if (filterDataElective500[x][7] == 2) {\n            hms2.push(filterDataElective500[x]);\n          }\n\n          if (filterDataElective500[x][7] == 4) {\n            hms4.push(filterDataElective500[x]);\n          }\n\n          if (filterDataElective500[x][7] == 3) {\n            hms3.push(filterDataElective500[x]);\n          }\n\n          test.push(filterDataElective500[x]);\n        } //slot in  2 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < hms2.length) {\n            checking_1_Elective(combine, array, hms2[k]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j + startIndexElective500] == 100 && combine[j - 1 + startIndexElective500] == 100 && j - 1 != LastIndexElective200) {\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndexElective500] = hms2[k];\n                combine[j - 1 + startIndexElective500] = hms2[k];\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j + startIndexElective500] == 100 && combine[j + 1 + startIndexElective500] == 100) {\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndexElective500] = hms2[k];\n                combine[j + 1 + startIndexElective500] = hms2[k];\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k++;\n        } // console.log(hms2.length)\n        // console.log(hms4.length)\n        //console.log(hms3.length)\n        //slot in  4 hours of meeting student course \n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k2 < hms4.length) {\n            //if(k2 < 1){\n            checking_1_Elective(combine, array, hms4[k2]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j + startIndexElective500] == 100 && combine[j - 1 + startIndexElective500] == 100 && j - 1 != LastIndexElective200) {\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndexElective500] = hms4[k2];\n                combine[j - 1 + startIndexElective500] = hms4[k2];\n                let b = 0;\n\n                while (b != 1) {\n                  const v = Math.floor(Math.random() * (i + 1)); //if(array[v] == 100 && array[v-1] == 100){\n\n                  if (combine[v + startIndexElective500] == 100 && combine[v - 1 + startIndexElective500] == 100 && v - 1 != LastIndexElective200) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v - 1] = -1;\n                    combine[v + startIndexElective500] = hms4[k2];\n                    combine[v - 1 + startIndexElective500] = hms4[k2];\n                    b = 1;\n                  } //else if(array[v] == 100 && array[v+1] == 100){\n                  else if (combine[v + startIndexElective500] == 100 && combine[v + 1 + startIndexElective500] == 100) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v + 1] = -1;\n                    combine[v + startIndexElective500] = hms4[k2];\n                    combine[v + 1 + startIndexElective500] = hms4[k2];\n                    b = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j + startIndexElective500] == 100 && combine[j + 1 + startIndexElective500] == 100) {\n                //console.log(j)\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndexElective500] = hms4[k2];\n                combine[j + 1 + startIndexElective500] = hms4[k2];\n                let z = 0;\n\n                while (z != 1) {\n                  const p = Math.floor(Math.random() * (i + 1)); //if(array[p] == 100 && array[p-1] == 100){\n\n                  if (combine[p + startIndexElective500] == 100 && combine[p - 1 + startIndexElective500] == 100 && p - 1 != LastIndexElective200) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p - 1] = -1;\n                    combine[p + startIndexElective500] = hms4[k2];\n                    combine[p - 1 + startIndexElective500] = hms4[k2];\n                    z = 1;\n                  } //else if(array[p] == 100 && array[p+1] == 100){\n                  else if (combine[p + startIndexElective500] == 100 && combine[p + 1 + startIndexElective500] == 100) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p + 1] = -1;\n                    combine[p + startIndexElective500] = hms4[k2];\n                    combine[p + 1 + startIndexElective500] = hms4[k2];\n                    z = 1;\n                  }\n                }\n\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k2++;\n        } //slot in  3 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k3 < hms3.length) {\n            //if(k3 < 1){\n            checking_1_Elective(combine, array, hms3[k3]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\n\n              if (combine[j + startIndexElective500] == 100 && combine[j - 1 + startIndexElective500] == 100 && combine[j + 1 + startIndexElective500] == 100 && j - 1 != LastIndexElective200) {\n                // slot in 3 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndexElective500] = hms3[k3];\n                combine[j - 1 + startIndexElective500] = hms3[k3];\n                combine[j + 1 + startIndexElective500] = hms3[k3];\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k3++;\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n        return array;\n      };\n\n      var AntArrInsElective500 = AntAlgoInsertElective500(AntArrElective500, AntArrCombineElective);\n\n      const checkAmountDataElective500_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 500 && array[i] != 0 && array[i] != undefined && array[i] != 1) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_2 = checkAmountDataElective500_2(AntArrInsElective500);\n      console.log(AntArrInsElective500); // console.log(checkAmount_2)\n\n      const checkAmountDataElective500_0 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_0 = checkAmountDataElective500_0(AntArrElective500); //console.log(checkAmount_0)\n      //______________________________________________________________________________________________________________________________________________\n\n      const checkAmountDataCombineElective_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 100 && array[i] != 0 && array[i] != undefined && array[i] != 1) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_combine = checkAmountDataCombineElective_2(AntArrCombineElective);\n      console.log(AntArrCombineElective);\n      console.log(\"Amount of data: \" + checkAmount_combine); //  var phecheckAmount_combine = checkAmountDataCombineElective_2(pheAntArrCombineElective)\n      //  console.log(pheAntArrCombineElective)\n      //  console.log(\"Amount of data: \" + phecheckAmount_combine);\n\n      const checkAmountDataCombineElective = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      }; //var checkAmount_0 = checkAmountData100_0(AntArr100)\n\n\n      var checkAmount_combineData = checkAmountDataCombineElective(AntArrCombineElective); //console.log(\"zero counter: \"+checkAmount_combineData);\n      //---------------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------------\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n      // Hard Constraint \n      // H1: No student attend more than one class/ event at the same time\n      // H2: The room is large enough to accomodate all of the student in attendace while also meeting the requirement \n      // H3: At any given time, each room can onle have one course booked\n      // H4: No student attend class during 12:00 pm -2:00 due to solat jumaat\n      // H5: One teacher can only teach one class at one time.\n      //Check for the H1 violation: same group attend more than 1 class at 1 time\n\n      const check1GroupElective = array => {\n        let count = 0;\n        let indexArray = 0; //let totalRoom = array.length / 38\n\n        let totalRoom = array.length / 10;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          //indexArray = (x * 38)\n          indexArray = x * 10;\n        }\n\n        for (let x = 1; x <= totalRoom; x++) {\n          try {\n            for (let i = 0; i < array.length; i++) {\n              //indexArray = (x * 38)\n              indexArray = x * 10;\n\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined && array[i + indexArray] != 1 && array[i + indexArray] != 0) {\n                try {\n                  if (array[i][6] == array[i + indexArray][6]) {\n                    try {\n                      count += 1;\n                    } catch {}\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH1_ALL_Elective = check1GroupElective(AntArrCombineElective); //Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\n\n      const checkRoomQuotaElective = array => {\n        let count = 0;\n        return count;\n      };\n\n      var checkH2_ALL_Elective = checkRoomQuotaElective(AntArrCombineElective); //Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\n\n      const checkSolatJummatElective = array => {\n        let count = 0;\n        return count;\n      };\n\n      var checkH4_ALL_Elective = checkSolatJummatElective(AntArrCombineElective); //Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\n\n      const check1TeacherElective = array => {\n        let count = 0;\n        let indexArray = 0; //let totalRoom = array.length / 38\n\n        let totalRoom = array.length / 10;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          //indexArray = (x * 38)\n          indexArray = x * 10;\n\n          try {\n            for (let i = 1; i < array.length; i++) {\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined && array[i + indexArray] != 1 && array[i + indexArray] != 0) {\n                try {\n                  if (array[i][5] == array[i + indexArray][5]) {\n                    count += 1;\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH5_ALL_ELective = check1TeacherElective(AntArrCombineElective);\n\n      const checkHC = (data1, data2) => {\n        let count = 0;\n\n        if (data1 != 0) {\n          count += 1;\n        }\n\n        if (data2 != 0) {\n          count += 1;\n        }\n\n        return count;\n      };\n\n      let checkTotalHardContraints = checkHC(checkH5_ALL_ELective, checkH1_ALL_Elective);\n      console.log(\"Total Hard Constraint: \" + checkTotalHardContraints); //----------------------------------------------------------------------------------------------------------------------------------------\n      // Soft Constraint \n      // S1: A student has a class schedule toward the end of the day\n      // S2: A student have more than two class in a row\n      //Check for the S1 violation: student have class at the end of the day\n\n      const checkEndOfClassElective = array => {\n        let count = 0; //let totalRoom = array.length / 38\n\n        let totalRoom = array.length / 10;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          //let indexArray = (x * 37)\n          let indexArray = x * 9;\n\n          if (array[indexArray] != 100) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkSC1_ALL_Elective = checkEndOfClassElective(AntArrCombineElective); //Check for the S2 violation: teacher have 2 class in a row\n\n      const check2ClassInARowElective = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          try {\n            if (array[i] != 100 && array[i + 3] != 100) {\n              if (array[i][6] == array[i + 3][6]) {\n                count += 1;\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkSC2_ALL_Elective = check2ClassInARowElective(AntArrCombineElective); //----------------------------------------------------------------------------------------------------------------------------------------------\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n\n      const checkTotalSoftContraint = () => {\n        let count = checkSC1_ALL_Elective + checkSC2_ALL_Elective;\n        return count;\n      };\n\n      var checkTotalSoftContraints = checkTotalSoftContraint();\n      console.log(\"Total Soft Constraint: \" + checkTotalSoftContraints); //----------------------------------------------------------------------------------------------------------------------------------------------\n\n      const change100ToEmptyElective = data => {\n        for (let i = 0; i < data.length; i++) {\n          if (data[i] == 100) {\n            data[i] = [];\n          }\n        }\n\n        return data;\n      };\n\n      let finalDataElective = change100ToEmptyElective(AntArrCombineElective);\n      checkTotalHardContraintsAll = checkTotalHardContraints;\n      checkTotalSoftContraintsAll = checkTotalSoftContraints;\n      totalAmountofDataSlottedIn = checkAmount_combine;\n      finalDataAllElective.push(finalDataElective);\n      return {\n        checkTotalHardContraints,\n        checkTotalSoftContraints,\n        finalDataAllElective,\n        checkAmount_combine\n      }; //___________________________________________________________________________________________________________________________________\n    };\n\n    let trigger = 0;\n    var t0 = performance.now();\n\n    const iteration = () => {\n      //antSystem()\n      let globalBestHS = checkTotalHardContraintsAll;\n      let globalBestSS = checkTotalSoftContraintsAll;\n      let globalBestScehdule = finalDataAllElective[0];\n      let checkTotalAmountDataset = totalAmountofData.length;\n\n      for (let i = 1; i <= 1; i++) {\n        antSystem();\n        let localBestHS = checkTotalHardContraintsAll;\n        let localBestSS = checkTotalSoftContraintsAll;\n        let localBestScehdule = finalDataAllElective[0];\n        console.log(\"iteraion: \" + i);\n\n        if (globalBestHS > localBestHS) {\n          globalBestHS = localBestHS;\n          globalBestSS = localBestSS;\n          globalBestScehdule = localBestScehdule;\n        }\n\n        if (localBestHS == 0 && checkTotalAmountDataset == totalAmountofDataSlottedIn) {\n          console.log(\"iteraion: \" + i);\n          console.log(\"workable solution is found\");\n          globalBestHS = localBestHS;\n          globalBestSS = localBestSS;\n          globalBestScehdule = localBestScehdule;\n          console.log(\"Workable Gloabal best HS: \" + globalBestHS);\n          console.log(\"Workable Gloabal best SS: \" + globalBestSS); //console.log(finalDataAll[0])\n\n          trigger = 1; //return [finalDataAllElective[0]]\n        } else if (localBestHS == 0 && localBestSS == 0 && checkTotalAmountDataset == totalAmountofDataSlottedIn) {\n          console.log(\"iteraion: \" + i);\n          console.log(\"perfect solution is found\");\n          globalBestHS = localBestHS;\n          globalBestSS = localBestSS;\n          globalBestScehdule = localBestScehdule;\n          console.log(\"Perfect Gloabal best HS: \" + globalBestHS);\n          console.log(\"Perfect Gloabal best SS: \" + globalBestSS);\n          console.log(finalDataAll[0]);\n          trigger = 1; //return [finalDataAllElective[0]]\n        }\n      }\n\n      return [finalDataAllElective[0]];\n    };\n\n    let interations = iteration();\n    let presentableDataElective = [];\n\n    if (trigger == 1) {\n      //shot course code, course name and lecturer\n      console.log(interations);\n\n      const changeToPresentationData = data => {\n        console.log(data);\n\n        for (let i = 0; i <= data[0].length; i++) {\n          try {\n            presentableDataElective.push([data[0][i][1], data[0][i][2], data[0][i][5]]);\n          } catch (error) {}\n        }\n      };\n\n      changeToPresentationData(interations);\n      let allRoomName = [];\n\n      for (let i = 0; i < roomData[0].length; i++) {\n        allRoomName.push(roomData[0][i][0]);\n      }\n\n      allRoomName.unshift(\"Room\");\n\n      if (allRoomName.pop() == undefined) {}\n\n      let wed = ['Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday'];\n\n      const create2dArrayElective = (weekdayArray, partDay, arrayAll, partAll) => {\n        var tmp = [];\n\n        for (var i = 0; i < weekdayArray.length; i += partDay) {\n          tmp.push(weekdayArray.slice(i, i + partDay));\n        }\n\n        for (var i = 0; i < arrayAll.length; i += partAll) {\n          tmp.push(arrayAll.slice(i, i + partAll));\n        }\n\n        return tmp;\n      };\n\n      let datasetElective = create2dArrayElective(wed, 10, presentableDataElective, 10);\n      console.log(datasetElective); //console.log(dataset)\n\n      const insertRoomNameElective = (roomData, array) => {\n        for (let i = 0; i < array.length; i++) {\n          array[i].unshift(roomData[i]);\n        }\n\n        return array;\n      };\n\n      insertRoomNameElective(allRoomName, datasetElective);\n      /** Convert a 2D array into a CSV string\r\n       * elective\r\n      */\n\n      function arrayToCsvElective(data) {\n        //console.log(data)\n        return data.map(row => row.map(String) // convert every value to String\n        .map(v => v.replaceAll('\"', '\"\"')) // escape double colons\n        .map(v => `\"${v}\"`) // quote it\n        .join(',') // comma-separated\n        ).join('\\r\\n'); // rows starting on new lines\n      }\n\n      let csvElective = arrayToCsvElective(datasetElective);\n\n      function downloadBlobElective(content, filename, contentType) {\n        // Create a blob\n        var blob = new Blob([content], {\n          type: contentType\n        });\n        var url = URL.createObjectURL(blob); // Create a link to download it\n\n        var pom = document.createElement('a');\n        pom.href = url;\n        pom.setAttribute('download', filename);\n        pom.click();\n      }\n\n      var t1 = performance.now();\n      console.log(\"Duration: \" + (t1 - t0)); //downloadBlobElective(csvElective, 'ModifiedAntSystemElective_GeneratedSchedule.csv', 'text/csv;charset=utf-8;')\n    } else {\n      var t1 = performance.now();\n      console.log(\"Duration: \" + (t1 - t0) + \" milliseconds\");\n      alert(\"no workable solution found, please refersh until get workable solution\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1499,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1500,\n      columnNumber: 17\n    }\n  }, \"Please wait while generating elective schedule\"));\n};\n\nexport default ArrayScheduleElective;","map":{"version":3,"sources":["C:/Users/acit/Desktop/FYP Code/FYP Code/frontend/src/components/GenerateSchedulePage/electivefullcode.js"],"names":["concat","create","find","forEach","indexOf","React","useEffect","useState","useContext","useParams","_","CSVLink","LoadingSpinner","finalDataAll","finalDataAllElective","checkHardConstraintOutsite","checkSoftConstraintOutsite","t0","performance","now","ArrayScheduleElective","props","isLoading","setIsLoading","loadedFile","setLoaadedFile","roomData","setroomData","courseData","setcourseData","CsvData","setCsvData","userId","sendRequest","response","fetch","responsedata","json","stringifyData","JSON","stringify","userWithFiles","Dataset","ertRoom","map","ertCourse","ok","Error","message","err","console","log","testData","EnrollmentQuota","CourseCode","HMS","lecturerData","roomName","roomSize","filterData50","filterData100","filterData200","filterData500","filterDataElective50","filterDataElective100","filterDataElective200","filterDataElective500","room","totalAmountofData","totalAmountofDataSlottedIn","push","hardConstraintViolated","softConstraintViolated","i","length","enrollment","code","hms","lecturer","reduce","results","item","index","array","name","size","notDuplicatesRoom","filter","notDuplicatesLecturer","pop","courseDataXElective","courseDataWithElective","roomUnder50","roomUnder100","roomUnder200","roomUnder500","checkNumberofRoom","createArray","data","result","totalAmountDataElective","j","DataArrayElective50","DataArrayElective100","DataArrayElective200","DataArrayElective500","combineArrayElective","startIndexElective100","startIndexElective200","startIndexElective500","LastIndexElective50","LastIndexElective100","LastIndexElective200","LastIndexElective500","checkTotalHardContraintsAll","checkTotalSoftContraintsAll","antSystem","changeToZero","checking_1_Elective","array2","totalRoom","u","b","indexArray","array1DElectiveCombine","AntArrCombineElective","array1DElective50","AntArrElective50","AntAlgoInsertElective50","combine","test","k","k2","k3","hms2","hms3","hms4","x","c","Math","floor","random","v","z","p","AntArrInsElective50","checkAmountDataElective50_2","count","undefined","checkAmount_2","checkAmountDataElective50_0","checkAmount_0","array1DElective100","AntArrElective100","AntAlgoInsertElective100","AntArrInsElective100","checkAmountDataElective100_2","checkAmountDataElective100_0","array1DElective200","AntArrElective200","AntAlgoInsertElective200","AntArrInsElective200","checkAmountDataElective200_2","checkAmountDataElective200_0","array1DElective500","AntArrElective500","AntAlgoInsertElective500","AntArrInsElective500","checkAmountDataElective500_2","checkAmountDataElective500_0","checkAmountDataCombineElective_2","checkAmount_combine","checkAmountDataCombineElective","checkAmount_combineData","check1GroupElective","checkH1_ALL_Elective","checkRoomQuotaElective","checkH2_ALL_Elective","checkSolatJummatElective","checkH4_ALL_Elective","check1TeacherElective","checkH5_ALL_ELective","checkHC","data1","data2","checkTotalHardContraints","checkEndOfClassElective","checkSC1_ALL_Elective","check2ClassInARowElective","checkSC2_ALL_Elective","checkTotalSoftContraint","checkTotalSoftContraints","change100ToEmptyElective","finalDataElective","trigger","iteration","globalBestHS","globalBestSS","globalBestScehdule","checkTotalAmountDataset","localBestHS","localBestSS","localBestScehdule","interations","presentableDataElective","changeToPresentationData","error","allRoomName","unshift","wed","create2dArrayElective","weekdayArray","partDay","arrayAll","partAll","tmp","slice","datasetElective","insertRoomNameElective","arrayToCsvElective","row","String","replaceAll","join","csvElective","downloadBlobElective","content","filename","contentType","blob","Blob","type","url","URL","createObjectURL","pom","document","createElement","href","setAttribute","click","t1","alert"],"mappings":"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","sourcesContent":["import { concat, create, find, forEach, indexOf } from \"lodash\";\r\nimport React,{ useEffect,useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport _ from 'lodash';\r\nimport { CSVLink } from \"react-csv\";\r\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\r\n\r\n\r\nlet finalDataAll = [];\r\nlet finalDataAllElective = [];\r\nlet checkHardConstraintOutsite = 0;\r\nlet checkSoftConstraintOutsite = 0;\r\n\r\nvar t0 = performance.now()\r\nconst ArrayScheduleElective = (props) => {\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [loadedFile, setLoaadedFile] = useState(false);\r\n    const [roomData, setroomData] = useState();\r\n    const [courseData, setcourseData] = useState();\r\n    const [CsvData, setCsvData] = useState();\r\n    // const [Keys, setKeys] = useState();\r\n    //const [uploadedData, setUploadedData] = useState([]);\r\n    //console.log(\"props dataset:\"+ props.test)\r\n\r\n    const userId = useParams().userId;\r\n    useEffect(()=>{\r\n        const sendRequest = async () =>{\r\n            setIsLoading(true);\r\n            try{\r\n            const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875');\r\n            //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\r\n            //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\r\n            const responsedata = await response.json();\r\n            let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset);\r\n\r\n            // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\r\n            const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset =>[Dataset['Room'],Dataset['Size']]); //Extract Room\r\n            setroomData([ertRoom]);\r\n\r\n            const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'],Dataset['Course Code'],Dataset['Course Name'],Dataset['Year'],Dataset['Semester'],Dataset['Lecturer'],Dataset['Group'],Dataset['HMS'],Dataset['Programme Code'],Dataset['Slot1'],Dataset['Slot2']]); //Extract Enrollment Quota\r\n            setcourseData([ertCourse]);\r\n\r\n            if (!response.ok){\r\n                throw new Error(responsedata.message);\r\n            }\r\n            setLoaadedFile(stringifyData);\r\n            setIsLoading(true);\r\n            }catch(err){\r\n                console.log(err.message);\r\n            }\r\n            setIsLoading(false);\r\n            \r\n        };\r\n        sendRequest();\r\n    },[userId]);\r\n\r\n        if(!isLoading && loadedFile){\r\n            const testData = [1,2,3,4,5,6,7,8,9];\r\n            const EnrollmentQuota = [];\r\n            const CourseCode = [];\r\n            const HMS = [];\r\n            const lecturerData = []\r\n            const roomName = [];\r\n            const roomSize = [];\r\n            const filterData50  = [];\r\n            const filterData100  = [];\r\n            const filterData200  = [];\r\n            const filterData500  = [];\r\n            const filterDataElective50  = [];\r\n            const filterDataElective100  = [];\r\n            const filterDataElective200  = [];\r\n            const filterDataElective500  = [];\r\n            const room = []\r\n            const totalAmountofData  = [];\r\n            var totalAmountofDataSlottedIn = 0;\r\n            room.push(roomData[0])\r\n            \r\n            let hardConstraintViolated = 0;\r\n            let softConstraintViolated = 0;\r\n            //console.log(courseData[0][0][1]);\r\n            for(let i = 0; i <courseData[0].length; i++){\r\n                let enrollment = [courseData[0][i][0]];\r\n                let code = [courseData[0][i][1]];\r\n                let hms = [courseData[0][i][7]];\r\n                let lecturer = [courseData[0][i][5]];\r\n                enrollment.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    EnrollmentQuota.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                code.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    CourseCode.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                hms.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    HMS.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                lecturer.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    lecturerData.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n            }\r\n\r\n            for(let i = 0; i <roomData[0].length; i++){\r\n                let name = [roomData[0][i][0]];\r\n                let size = [roomData[0][i][1]];\r\n                name.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomName.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                size.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomSize.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n            }\r\n \r\n            \r\n            const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\r\n\r\n            const notDuplicatesLecturer = lecturerData.filter((item, index) => index == lecturerData.indexOf(item));\r\n            notDuplicatesLecturer.pop();\r\n            //console.log(notDuplicatesLecturer)\r\n\r\n\r\n            let courseDataXElective = []\r\n            let courseDataWithElective = []\r\n            courseData[0].pop()\r\n\r\n\r\n            //saparate elective course with the faculty course\r\n            for(let i=0; i< courseData[0].length; i++){\r\n                //console.log(courseData[0][i][8])\r\n                //if(courseData[0][i][1].slice(0,3) == 'TMU' ||  courseData[0][i][1].slice(0,3) == 'TMX'){\r\n                if(courseData[0][i][8] == 'ELECTIVE'){\r\n                    courseDataWithElective.push(courseData[0][i])\r\n                }\r\n            }\r\n\r\n\r\n                //insert data without faculty courses into correct room capacity\r\n                for(let i = 0; i< courseDataWithElective.length;i++){\r\n                    if (courseDataWithElective[i][0] < 50) {\r\n                        filterDataElective50.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 50 && courseDataWithElective[i][0] < 100) {\r\n                        \r\n                        filterDataElective100.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 100 && courseDataWithElective[i][0] < 200 ) {\r\n                        filterDataElective200.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 200 && courseDataWithElective[i][0] < 500) {\r\n                        filterDataElective500.push(courseDataWithElective[i]);\r\n                    }\r\n                }\r\n                // console.log(filterDataElective50);\r\n                // console.log(filterDataElective100);\r\n                // console.log(filterDataElective200);\r\n                // console.log(filterDataElective500);\r\n\r\n\r\n            let roomUnder50 = []\r\n            let roomUnder100 = []\r\n            let roomUnder200 = []\r\n            let roomUnder500 = []\r\n            const checkNumberofRoom = () => {\r\n                for(let i = 0; i < roomData[0].length; i++){\r\n                    let room = roomData[0][i][1]\r\n                    //console.log(roomData[0][i][1]);\r\n                    if(room < 50){\r\n                        roomUnder50.push(room)\r\n                    }else if(room > 50 && room < 100){\r\n                        roomUnder100.push(room)\r\n\r\n                    }else if(room > 100 && room < 200){\r\n                        roomUnder200.push(room)\r\n\r\n                    }else if(room > 200){\r\n                        roomUnder500.push(room)\r\n                    }\r\n                }\r\n            }\r\n            checkNumberofRoom();\r\n\r\n\r\n            const createArray = (data) => {\r\n                var result = []\r\n\r\n                    for(let i = 0; i<data; i++){\r\n                        result[i] = []\r\n                    }\r\n                return result;\r\n            }\r\n\r\n            const totalAmountDataElective = () => {\r\n                for(let i = 0; i< courseDataWithElective.length;i++){\r\n                    for(let j = 0; j <courseDataWithElective[i][7]; j++){\r\n                        totalAmountofData.push(courseDataWithElective[i]);\r\n                    }\r\n                }\r\n            }\r\n            totalAmountDataElective()\r\n\r\n            let DataArrayElective50 = roomUnder50.length * 10;\r\n            let DataArrayElective100 = roomUnder100.length * 10;\r\n            let DataArrayElective200 = roomUnder200.length * 10;\r\n            let DataArrayElective500 = roomUnder500.length * 10;\r\n            let combineArrayElective = DataArrayElective50 + DataArrayElective100 + DataArrayElective200 + DataArrayElective500\r\n\r\n            let startIndexElective100 = DataArrayElective50-1\r\n            let startIndexElective200 = DataArrayElective50+ DataArrayElective100-1\r\n            let startIndexElective500 = DataArrayElective50 +DataArrayElective100+DataArrayElective200-1\r\n\r\n            let LastIndexElective50 = DataArrayElective50\r\n            let LastIndexElective100 = DataArrayElective50 + DataArrayElective100 \r\n            let LastIndexElective200 = DataArrayElective50 + DataArrayElective100 + DataArrayElective200\r\n            let LastIndexElective500 = DataArrayElective50 + DataArrayElective100 + DataArrayElective200 + DataArrayElective500\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nvar checkTotalHardContraintsAll = 0\r\nvar checkTotalSoftContraintsAll = 0\r\n\r\nconst antSystem = () => {\r\n    \r\n    const changeToZero = (array) => {\r\n        for(let i = 0; i < array.length; i++){\r\n            if(array[i] == 0){\r\n                array[i] = 100\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n    \r\n    const checking_1_Elective = (array,array2,data) => {\r\n\r\n        let totalRoom = array.length / 10\r\n        console.log(totalRoom)\r\n        //let totalRoom2 = array2.length / 10\r\n    \r\n        for(let u = 0; u < array.length; u++){\r\n            try{\r\n                //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\r\n                //if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]){\r\n                if( array[u] != 100 ){\r\n                    if(data[5] == array[u][5] || data[6] == array[u][6]){\r\n                        for(let b =0; b < totalRoom; b++){\r\n                            let indexArray = b * 10\r\n                            if( array[u+indexArray] ==100){\r\n                                array[u+indexArray] = 0\r\n                                //array2[u+indexArray] = 0\r\n                            }\r\n                            if( array[u-indexArray] ==100){\r\n                                array[u-indexArray] = 0\r\n                                //array2[u-indexArray] = 0\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n        return array\r\n    }\r\n    \r\n\r\n    \r\n    //___________________________________________________________________________________________________________________________________\r\nconst array1DElectiveCombine = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrCombineElective = array1DElectiveCombine(combineArrayElective);\r\n\r\n\r\nconst array1DElective50 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrElective50 = array1DElective50(DataArrayElective50);\r\n\r\nconst AntAlgoInsertElective50 = (array,combine) => {\r\n\r\n\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    let hms2 = []\r\n    let hms3 = []\r\n    let hms4 = []\r\n\r\n\r\n        for(let x=0; x<filterDataElective50.length;x++){\r\n            if(filterDataElective50[x][7] == 2){\r\n                hms2.push(filterDataElective50[x])\r\n            }\r\n            if(filterDataElective50[x][7] == 4){\r\n                hms4.push(filterDataElective50[x])\r\n            }\r\n            if(filterDataElective50[x][7] == 3){\r\n                hms3.push(filterDataElective50[x])\r\n            }\r\n            test.push(filterDataElective50[x]);\r\n        }\r\n\r\n        //slot in  2 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k < hms2.length){\r\n                checking_1_Elective(combine,array,hms2[k])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j] == 100 && combine[j-1] == 100 && j-1 != -1){\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j] = hms2[k];\r\n                            combine[j-1] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j] == 100 && combine[j+1] == 100 && j+1 != startIndexElective100){\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j] = hms2[k];\r\n                            combine[j+1] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k++  \r\n        }\r\n\r\n        // console.log(hms2.length)\r\n        // console.log(hms4.length)\r\n         //console.log(hms3.length)\r\n\r\n        //slot in  4 hours of meeting student course \r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k2 < hms4.length){\r\n            //if(k2 < 1){\r\n                checking_1_Elective(combine,array,hms4[k2])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j] == 100 && combine[j-1] == 100 && j-1 != -1){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j] = hms4[k2];\r\n                            combine[j-1] = hms4[k2];\r\n                            let b = 0 \r\n                            while(b != 1){\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                //if(array[v] == 100 && array[v-1] == 100){\r\n                                if(combine[v] == 100 && combine[v-1] == 100 && v-1 != -1){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v-1] = -1;\r\n                                    combine[v] = hms4[k2];\r\n                                    combine[v-1] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                                //else if(array[v] == 100 && array[v+1] == 100){\r\n                                else if(combine[v] == 100 && combine[v+1] == 100 && v+1 != startIndexElective100){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v+1] = -1;\r\n                                    combine[v] = hms4[k2];\r\n                                    combine[v+1] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j] == 100 && combine[j+1] == 100 && j+1 != startIndexElective100){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j] = hms4[k2];\r\n                            combine[j+1] = hms4[k2];\r\n                            let z = 0 \r\n                            while(z != 1){\r\n                                const p = Math.floor(Math.random()*(i+1));\r\n                                //if(array[p] == 100 && array[p-1] == 100){\r\n                                if(combine[p] == 100 && combine[p-1] == 100 && p-1 != -1){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p-1] = -1;\r\n                                    combine[p] = hms4[k2];\r\n                                    combine[p-1] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                                //else if(array[p] == 100 && array[p+1] == 100){\r\n                                else if(combine[p] == 100 && combine[p+1] == 100 && p+1 != startIndexElective100){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p+1] = -1;\r\n                                    combine[p] = hms4[k2];\r\n                                    combine[p+1] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k2++  \r\n        }\r\n\r\n        //slot in  3 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k3 < hms3.length){\r\n            //if(k3 < 1){\r\n                checking_1_Elective(combine,array,hms3[k3])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));\r\n                    \r\n                    //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\r\n                    if(combine[j] == 100 && combine[j-1] == 100 && combine[j+1] == 100 && j-1 != -1 && j+1 != startIndexElective100 ){ // slot in 3 course at one time\r\n                        //console.log(j)\r\n                        array[j] = -1;\r\n                        array[j-1] = -1;\r\n                        array[j+1] = -1;\r\n                        combine[j] = hms3[k3];\r\n                        combine[j-1] = hms3[k3];\r\n                        combine[j+1] = hms3[k3];\r\n                        c = 1\r\n                    }    \r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k3++  \r\n        }\r\n\r\n        changeToZero(array)\r\n        changeToZero(combine)\r\n\r\n    return array;\r\n    \r\n}\r\nvar AntArrInsElective50 = AntAlgoInsertElective50(AntArrElective50,AntArrCombineElective);\r\n\r\nconst checkAmountDataElective50_2 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_2 = checkAmountDataElective50_2(AntArrInsElective50)\r\n// console.log(AntArrInsElective50);\r\n// console.log(checkAmount_2)\r\n\r\nconst checkAmountDataElective50_0 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if( array[i] == 0 ){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_0 = checkAmountDataElective50_0(AntArrElective50)\r\n//console.log(checkAmount_0)\r\n\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\nconst array1DElective100 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrElective100 = array1DElective100(DataArrayElective100);\r\n\r\n\r\nconst AntAlgoInsertElective100 = (array,combine) => {\r\n\r\n\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    let hms2 = []\r\n    let hms3 = []\r\n    let hms4 = []\r\n\r\n\r\n        for(let x=0; x<filterDataElective100.length;x++){\r\n            if(filterDataElective100[x][7] == 2){\r\n                hms2.push(filterDataElective100[x])\r\n            }\r\n            if(filterDataElective100[x][7] == 4){\r\n                hms4.push(filterDataElective100[x])\r\n            }\r\n            if(filterDataElective100[x][7] == 3){\r\n                hms3.push(filterDataElective100[x])\r\n            }\r\n            test.push(filterDataElective100[x]);\r\n        }\r\n\r\n        //slot in  2 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k < hms2.length){\r\n                checking_1_Elective(combine,array,hms2[k])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j+startIndexElective100] == 100 && combine[j-1+startIndexElective100] == 100 && j-1 != LastIndexElective50){\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndexElective100] = hms2[k];\r\n                            combine[j-1+startIndexElective100] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j+startIndexElective100] == 100 && combine[j+1+startIndexElective100] == 100 && j+1 != startIndexElective200){\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndexElective100] = hms2[k];\r\n                            combine[j+1+startIndexElective100] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k++  \r\n        }\r\n\r\n        // console.log(hms2.length)\r\n        // console.log(hms4.length)\r\n         //console.log(hms3.length)\r\n\r\n        //slot in  4 hours of meeting student course \r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k2 < hms4.length){\r\n            //if(k2 < 1){\r\n                checking_1_Elective(combine,array,hms4[k2])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j+startIndexElective100] == 100 && combine[j-1+startIndexElective100] == 100 && j-1 != LastIndexElective50){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndexElective100] = hms4[k2];\r\n                            combine[j-1+startIndexElective100] = hms4[k2];\r\n                            let b = 0 \r\n                            while(b != 1){\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                //if(array[v] == 100 && array[v-1] == 100){\r\n                                if(combine[v+startIndexElective100] == 100 && combine[v-1+startIndexElective100] == 100 && v-1 != LastIndexElective50){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v-1] = -1;\r\n                                    combine[v+startIndexElective100] = hms4[k2];\r\n                                    combine[v-1+startIndexElective100] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                                //else if(array[v] == 100 && array[v+1] == 100){\r\n                                else if(combine[v+startIndexElective100] == 100 && combine[v+1+startIndexElective100] == 100 && v+1 != startIndexElective200){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v+1] = -1;\r\n                                    combine[v+startIndexElective100] = hms4[k2];\r\n                                    combine[v+1+startIndexElective100] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j+startIndexElective100] == 100 && combine[j+1+startIndexElective100] == 100 && j+1 != startIndexElective200){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndexElective100] = hms4[k2];\r\n                            combine[j+1+startIndexElective100] = hms4[k2];\r\n                            let z = 0 \r\n                            while(z != 1){\r\n                                const p = Math.floor(Math.random()*(i+1));\r\n                                //if(array[p] == 100 && array[p-1] == 100){\r\n                                if(combine[p+startIndexElective100] == 100 && combine[p-1+startIndexElective100] == 100 && p-1 != LastIndexElective50){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p-1] = -1;\r\n                                    combine[p+startIndexElective100] = hms4[k2];\r\n                                    combine[p-1+startIndexElective100] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                                //else if(array[p] == 100 && array[p+1] == 100){\r\n                                else if(combine[p+startIndexElective100] == 100 && combine[p+1+startIndexElective100] == 100 && p+1 != startIndexElective200){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p+1] = -1;\r\n                                    combine[p+startIndexElective100] = hms4[k2];\r\n                                    combine[p+1+startIndexElective100] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k2++  \r\n        }\r\n\r\n        //slot in  3 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k3 < hms3.length){\r\n            //if(k3 < 1){\r\n                checking_1_Elective(combine,array,hms3[k3])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));\r\n                    \r\n                    //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\r\n                    if(combine[j+startIndexElective100] == 100 && combine[j-1+startIndexElective100] == 100 && combine[j+1+startIndexElective100] == 100 && j-1 != LastIndexElective50 && j+1 != startIndexElective200 ){ // slot in 3 course at one time\r\n                        //console.log(j)\r\n                        array[j] = -1;\r\n                        array[j-1] = -1;\r\n                        array[j+1] = -1;\r\n                        combine[j+startIndexElective100] = hms3[k3];\r\n                        combine[j-1+startIndexElective100] = hms3[k3];\r\n                        combine[j+1+startIndexElective100] = hms3[k3];\r\n                        c = 1\r\n                    }    \r\n\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k3++  \r\n        }\r\n\r\n        changeToZero(array)\r\n        changeToZero(combine)\r\n\r\n    return array;\r\n    \r\n}\r\nvar AntArrInsElective100 = AntAlgoInsertElective100(AntArrElective100,AntArrCombineElective);\r\n\r\nconst checkAmountDataElective100_2 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=100 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_2 = checkAmountDataElective100_2(AntArrInsElective100)\r\n// console.log(AntArrInsElective100);\r\n// console.log(checkAmount_2)\r\n\r\nconst checkAmountDataElective100_0 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if( array[i] == 0 ){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_0 = checkAmountDataElective100_0(AntArrElective100)\r\n//console.log(checkAmount_0)\r\n\r\n\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\nconst array1DElective200 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrElective200 = array1DElective200(DataArrayElective200);\r\n\r\n\r\nconst AntAlgoInsertElective200 = (array,combine) => {\r\n\r\n\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    let hms2 = []\r\n    let hms3 = []\r\n    let hms4 = []\r\n\r\n\r\n        for(let x=0; x<filterDataElective200.length;x++){\r\n            if(filterDataElective200[x][7] == 2){\r\n                hms2.push(filterDataElective200[x])\r\n            }\r\n            if(filterDataElective200[x][7] == 4){\r\n                hms4.push(filterDataElective200[x])\r\n            }\r\n            if(filterDataElective200[x][7] == 3){\r\n                hms3.push(filterDataElective200[x])\r\n            }\r\n            test.push(filterDataElective200[x]);\r\n        }\r\n\r\n        //slot in  2 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k < hms2.length){\r\n                checking_1_Elective(combine,array,hms2[k])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j+startIndexElective200] == 100 && combine[j-1+startIndexElective200] == 100 && j-1 != LastIndexElective100){\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndexElective200] = hms2[k];\r\n                            combine[j-1+startIndexElective200] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j+startIndexElective200] == 100 && combine[j+1+startIndexElective200] == 100 && j+1 != startIndexElective500){\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndexElective200] = hms2[k];\r\n                            combine[j+1+startIndexElective200] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k++  \r\n        }\r\n\r\n        // console.log(hms2.length)\r\n        // console.log(hms4.length)\r\n         //console.log(hms3.length)\r\n\r\n        //slot in  4 hours of meeting student course \r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k2 < hms4.length){\r\n            //if(k2 < 1){\r\n                checking_1_Elective(combine,array,hms4[k2])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j+startIndexElective200] == 100 && combine[j-1+startIndexElective200] == 100 && j-1 != LastIndexElective100){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndexElective200] = hms4[k2];\r\n                            combine[j-1+startIndexElective200] = hms4[k2];\r\n                            let b = 0 \r\n                            while(b != 1){\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                //if(array[v] == 100 && array[v-1] == 100){\r\n                                if(combine[v+startIndexElective200] == 100 && combine[v-1+startIndexElective200] == 100 && v-1 != LastIndexElective100){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v-1] = -1;\r\n                                    combine[v+startIndexElective200] = hms4[k2];\r\n                                    combine[v-1+startIndexElective200] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                                //else if(array[v] == 100 && array[v+1] == 100){\r\n                                else if(combine[v+startIndexElective200] == 100 && combine[v+1+startIndexElective200] == 100 && v+1 != startIndexElective500){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v+1] = -1;\r\n                                    combine[v+startIndexElective200] = hms4[k2];\r\n                                    combine[v+1+startIndexElective200] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j+startIndexElective200] == 100 && combine[j+1+startIndexElective200] == 100 && j+1 != startIndexElective500){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndexElective200] = hms4[k2];\r\n                            combine[j+1+startIndexElective200] = hms4[k2];\r\n                            let z = 0 \r\n                            while(z != 1){\r\n                                const p = Math.floor(Math.random()*(i+1));\r\n                                //if(array[p] == 100 && array[p-1] == 100){\r\n                                if(combine[p+startIndexElective200] == 100 && combine[p-1+startIndexElective200] == 100 && p-1 != LastIndexElective100){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p-1] = -1;\r\n                                    combine[p+startIndexElective200] = hms4[k2];\r\n                                    combine[p-1+startIndexElective200] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                                //else if(array[p] == 100 && array[p+1] == 100){\r\n                                else if(combine[p+startIndexElective200] == 100 && combine[p+1+startIndexElective200] == 100 && p+1 != startIndexElective500){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p+1] = -1;\r\n                                    combine[p+startIndexElective200] = hms4[k2];\r\n                                    combine[p+1+startIndexElective200] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k2++  \r\n        }\r\n\r\n        //slot in  3 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k3 < hms3.length){\r\n            //if(k3 < 1){\r\n                checking_1_Elective(combine,array,hms3[k3])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));\r\n                    \r\n                    //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\r\n                    if(combine[j+startIndexElective200] == 100 && combine[j-1+startIndexElective200] == 100 && combine[j+1+startIndexElective200] == 100 && j-1 != LastIndexElective100 && j+1 != startIndexElective500 ){ // slot in 3 course at one time\r\n                        //console.log(j)\r\n                        array[j] = -1;\r\n                        array[j-1] = -1;\r\n                        array[j+1] = -1;\r\n                        combine[j+startIndexElective200] = hms3[k3];\r\n                        combine[j-1+startIndexElective200] = hms3[k3];\r\n                        combine[j+1+startIndexElective200] = hms3[k3];\r\n                        c = 1\r\n                    }    \r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k3++  \r\n        }\r\n\r\n        changeToZero(array)\r\n        changeToZero(combine)\r\n\r\n    return array;\r\n    \r\n}\r\nvar AntArrInsElective200 = AntAlgoInsertElective200(AntArrElective200,AntArrCombineElective);\r\n\r\nconst checkAmountDataElective200_2 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=200 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_2 = checkAmountDataElective200_2(AntArrInsElective200)\r\n// console.log(AntArrInsElective200);\r\n// console.log(checkAmount_2)\r\n\r\nconst checkAmountDataElective200_0 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if( array[i] == 0 ){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_0 = checkAmountDataElective200_0(AntArrElective200)\r\n//console.log(checkAmount_0)\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\nconst array1DElective500 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrElective500 = array1DElective500(DataArrayElective500);\r\n\r\n\r\nconst AntAlgoInsertElective500 = (array,combine) => {\r\n\r\n\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    let hms2 = []\r\n    let hms3 = []\r\n    let hms4 = []\r\n\r\n\r\n        for(let x=0; x<filterDataElective500.length;x++){\r\n            if(filterDataElective500[x][7] == 2){\r\n                hms2.push(filterDataElective500[x])\r\n            }\r\n            if(filterDataElective500[x][7] == 4){\r\n                hms4.push(filterDataElective500[x])\r\n            }\r\n            if(filterDataElective500[x][7] == 3){\r\n                hms3.push(filterDataElective500[x])\r\n            }\r\n            test.push(filterDataElective500[x]);\r\n        }\r\n\r\n        //slot in  2 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k < hms2.length){\r\n                checking_1_Elective(combine,array,hms2[k])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j+startIndexElective500] == 100 && combine[j-1+startIndexElective500] == 100 && j-1 != LastIndexElective200){\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndexElective500] = hms2[k];\r\n                            combine[j-1+startIndexElective500] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j+startIndexElective500] == 100 && combine[j+1+startIndexElective500] == 100){\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndexElective500] = hms2[k];\r\n                            combine[j+1+startIndexElective500] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k++  \r\n        }\r\n\r\n        // console.log(hms2.length)\r\n        // console.log(hms4.length)\r\n         //console.log(hms3.length)\r\n\r\n        //slot in  4 hours of meeting student course \r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k2 < hms4.length){\r\n            //if(k2 < 1){\r\n                checking_1_Elective(combine,array,hms4[k2])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j+startIndexElective500] == 100 && combine[j-1+startIndexElective500] == 100 && j-1 != LastIndexElective200){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndexElective500] = hms4[k2];\r\n                            combine[j-1+startIndexElective500] = hms4[k2];\r\n                            let b = 0 \r\n                            while(b != 1){\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                //if(array[v] == 100 && array[v-1] == 100){\r\n                                if(combine[v+startIndexElective500] == 100 && combine[v-1+startIndexElective500] == 100 && v-1 != LastIndexElective200){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v-1] = -1;\r\n                                    combine[v+startIndexElective500] = hms4[k2];\r\n                                    combine[v-1+startIndexElective500] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                                //else if(array[v] == 100 && array[v+1] == 100){\r\n                                else if(combine[v+startIndexElective500] == 100 && combine[v+1+startIndexElective500] == 100){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v+1] = -1;\r\n                                    combine[v+startIndexElective500] = hms4[k2];\r\n                                    combine[v+1+startIndexElective500] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j+startIndexElective500] == 100 && combine[j+1+startIndexElective500] == 100){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndexElective500] = hms4[k2];\r\n                            combine[j+1+startIndexElective500] = hms4[k2];\r\n                            let z = 0 \r\n                            while(z != 1){\r\n                                const p = Math.floor(Math.random()*(i+1));\r\n                                //if(array[p] == 100 && array[p-1] == 100){\r\n                                if(combine[p+startIndexElective500] == 100 && combine[p-1+startIndexElective500] == 100 && p-1 != LastIndexElective200){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p-1] = -1;\r\n                                    combine[p+startIndexElective500] = hms4[k2];\r\n                                    combine[p-1+startIndexElective500] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                                //else if(array[p] == 100 && array[p+1] == 100){\r\n                                else if(combine[p+startIndexElective500] == 100 && combine[p+1+startIndexElective500] == 100 ){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p+1] = -1;\r\n                                    combine[p+startIndexElective500] = hms4[k2];\r\n                                    combine[p+1+startIndexElective500] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k2++  \r\n        }\r\n\r\n        //slot in  3 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k3 < hms3.length){\r\n            //if(k3 < 1){\r\n                checking_1_Elective(combine,array,hms3[k3])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));\r\n                    \r\n                    //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\r\n                    if(combine[j+startIndexElective500] == 100 && combine[j-1+startIndexElective500] == 100 && combine[j+1+startIndexElective500] == 100 && j-1 != LastIndexElective200 ){ // slot in 3 course at one time\r\n                        //console.log(j)\r\n                        array[j] = -1;\r\n                        array[j-1] = -1;\r\n                        array[j+1] = -1;\r\n                        combine[j+startIndexElective500] = hms3[k3];\r\n                        combine[j-1+startIndexElective500] = hms3[k3];\r\n                        combine[j+1+startIndexElective500] = hms3[k3];\r\n                        c = 1\r\n                    }    \r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k3++  \r\n        }\r\n\r\n        changeToZero(array)\r\n        changeToZero(combine)\r\n\r\n    return array;\r\n    \r\n}\r\n\r\nvar AntArrInsElective500 = AntAlgoInsertElective500(AntArrElective500,AntArrCombineElective);\r\n\r\nconst checkAmountDataElective500_2 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=500 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_2 = checkAmountDataElective500_2(AntArrInsElective500)\r\n console.log(AntArrInsElective500);\r\n// console.log(checkAmount_2)\r\n\r\nconst checkAmountDataElective500_0 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if( array[i] == 0 ){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_0 = checkAmountDataElective500_0(AntArrElective500)\r\n//console.log(checkAmount_0)\r\n\r\n//______________________________________________________________________________________________________________________________________________\r\n\r\n\r\nconst checkAmountDataCombineElective_2 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=100 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_combine = checkAmountDataCombineElective_2(AntArrCombineElective)\r\n console.log(AntArrCombineElective)\r\n console.log(\"Amount of data: \" +checkAmount_combine);\r\n\r\n//  var phecheckAmount_combine = checkAmountDataCombineElective_2(pheAntArrCombineElective)\r\n//  console.log(pheAntArrCombineElective)\r\n//  console.log(\"Amount of data: \" + phecheckAmount_combine);\r\n\r\nconst checkAmountDataCombineElective = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if( array[i] == 0 ){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\n //var checkAmount_0 = checkAmountData100_0(AntArr100)\r\n var checkAmount_combineData = checkAmountDataCombineElective(AntArrCombineElective)\r\n//console.log(\"zero counter: \"+checkAmount_combineData);\r\n\r\n\r\n\r\n//---------------------------------------------------------------------------------------------------------------------------------------------\r\n//----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n// Hard Constraint \r\n// H1: No student attend more than one class/ event at the same time\r\n// H2: The room is large enough to accomodate all of the student in attendace while also meeting the requirement \r\n// H3: At any given time, each room can onle have one course booked\r\n// H4: No student attend class during 12:00 pm -2:00 due to solat jumaat\r\n// H5: One teacher can only teach one class at one time.\r\n\r\n//Check for the H1 violation: same group attend more than 1 class at 1 time\r\nconst check1GroupElective = (array) => {\r\n    let count =0\r\n    let indexArray = 0\r\n    //let totalRoom = array.length / 38\r\n    let totalRoom = array.length / 10\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n        //indexArray = (x * 38)\r\n        indexArray = (x * 10)\r\n    }\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n        try{\r\n             for(let i = 0; i<array.length ; i++){\r\n                //indexArray = (x * 38)\r\n                indexArray = (x * 10)\r\n                if(array[i+indexArray] != 100 && array[i+indexArray] != undefined  && array[i+indexArray] != 1 && array[i+indexArray] != 0 ){\r\n                    try{\r\n                        if(array[i][6] == array[i+indexArray][6]){\r\n                             try{\r\n       \r\n                                 count +=1\r\n                             }catch{}\r\n                        }\r\n                    }catch{}\r\n                }   \r\n            }\r\n        }catch{}\r\n    }\r\n    return count\r\n \r\n }\r\n \r\n var checkH1_ALL_Elective = check1GroupElective(AntArrCombineElective)\r\n \r\n //Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\r\n const checkRoomQuotaElective = (array) => {\r\n    let count = 0\r\n    return count \r\n }\r\n var checkH2_ALL_Elective = checkRoomQuotaElective(AntArrCombineElective)\r\n \r\n \r\n //Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\r\n const checkSolatJummatElective = (array) => {\r\n    let count = 0\r\n    return count \r\n }\r\n var checkH4_ALL_Elective = checkSolatJummatElective(AntArrCombineElective)\r\n \r\n //Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\r\n const check1TeacherElective = (array) => {\r\n    let count =0\r\n    let indexArray = 0\r\n    //let totalRoom = array.length / 38\r\n    let totalRoom = array.length / 10\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n     //indexArray = (x * 38)\r\n     indexArray = (x * 10)\r\n        try{\r\n         for(let i = 1; i<array.length ; i++){\r\n                if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 1 && array[i+indexArray] != 0 ){\r\n                    try{\r\n                        if(array[i][5] == array[i+indexArray][5]){\r\n                            count +=1\r\n                         }\r\n                    }catch{}\r\n                }    \r\n            }\r\n        }catch{}\r\n    }\r\n    return count\r\n \r\n \r\n }\r\n var checkH5_ALL_ELective = check1TeacherElective(AntArrCombineElective)\r\n\r\n const checkHC = (data1,data2) => {\r\n     let count =0;\r\n     if(data1 != 0){\r\n         count +=1\r\n     }\r\n     if(data2 != 0){\r\n         count +=1\r\n     }\r\n \r\n     return count;\r\n }\r\n let checkTotalHardContraints = checkHC(checkH5_ALL_ELective,checkH1_ALL_Elective)\r\n console.log(\"Total Hard Constraint: \"+checkTotalHardContraints)\r\n \r\n \r\n //----------------------------------------------------------------------------------------------------------------------------------------\r\n \r\n \r\n // Soft Constraint \r\n // S1: A student has a class schedule toward the end of the day\r\n // S2: A student have more than two class in a row\r\n \r\n \r\n //Check for the S1 violation: student have class at the end of the day\r\n const checkEndOfClassElective = (array) => {\r\n    let count =0\r\n    //let totalRoom = array.length / 38\r\n    let totalRoom = array.length / 10\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n        //let indexArray = (x * 37)\r\n        let indexArray = (x * 9)\r\n        if(array[indexArray] != 100 ){\r\n            count += 1\r\n        }\r\n    }\r\n    return count\r\n \r\n }\r\n \r\n  var checkSC1_ALL_Elective = checkEndOfClassElective(AntArrCombineElective)\r\n \r\n //Check for the S2 violation: teacher have 2 class in a row\r\n const check2ClassInARowElective = (array) => {\r\n    let count =0\r\n    for(let i = 0; i < array.length; i++){\r\n        try{\r\n         if(array[i] != 100 && array[i+3] != 100){\r\n             if(array[i][6] == array[i+3][6]){\r\n                 count += 1\r\n             }\r\n        }\r\n        }catch{}\r\n    }\r\n    return count\r\n \r\n }\r\n \r\n var checkSC2_ALL_Elective = check2ClassInARowElective(AntArrCombineElective)\r\n \r\n \r\n //----------------------------------------------------------------------------------------------------------------------------------------------\r\n \r\n //-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n \r\n \r\n \r\n //----------------------------------------------------------------------------------------------------------------------------------------\r\n \r\n \r\n \r\n \r\n //-----------------------------------------------------------------------------------------------------------------------------------------------\r\n \r\n const checkTotalSoftContraint = () => {\r\n    let count = checkSC1_ALL_Elective + checkSC2_ALL_Elective\r\n     return count\r\n }\r\n var checkTotalSoftContraints = checkTotalSoftContraint()\r\n console.log(\"Total Soft Constraint: \"+checkTotalSoftContraints)\r\n //----------------------------------------------------------------------------------------------------------------------------------------------\r\n \r\n const change100ToEmptyElective = (data) => {\r\n     for(let i = 0; i< data.length; i++){\r\n         if(data[i] == 100){\r\n             data[i] = [];\r\n         }\r\n     }\r\n     return data;\r\n }\r\n let finalDataElective = change100ToEmptyElective(AntArrCombineElective)\r\n \r\n \r\n checkTotalHardContraintsAll = checkTotalHardContraints\r\n checkTotalSoftContraintsAll = checkTotalSoftContraints\r\n totalAmountofDataSlottedIn = checkAmount_combine\r\n finalDataAllElective.push(finalDataElective)\r\n return {checkTotalHardContraints,checkTotalSoftContraints,finalDataAllElective,checkAmount_combine}\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n}\r\n\r\nlet trigger = 0\r\nvar t0 = performance.now()\r\nconst iteration = () => {\r\n        //antSystem()\r\n        let globalBestHS = checkTotalHardContraintsAll \r\n        let globalBestSS = checkTotalSoftContraintsAll\r\n        let globalBestScehdule = finalDataAllElective[0]\r\n        let checkTotalAmountDataset = totalAmountofData.length\r\n    for(let i= 1; i <=1; i++){\r\n        antSystem()\r\n        let localBestHS = checkTotalHardContraintsAll \r\n        let localBestSS = checkTotalSoftContraintsAll\r\n        let localBestScehdule = finalDataAllElective[0]\r\n            console.log(\"iteraion: \" + i)\r\n            if(globalBestHS > localBestHS ){\r\n                globalBestHS = localBestHS\r\n                globalBestSS = localBestSS\r\n                globalBestScehdule = localBestScehdule\r\n            }\r\n            if(localBestHS == 0 && checkTotalAmountDataset == totalAmountofDataSlottedIn){\r\n                console.log(\"iteraion: \" + i)\r\n                console.log(\"workable solution is found\")\r\n                globalBestHS = localBestHS\r\n                globalBestSS = localBestSS\r\n                globalBestScehdule = localBestScehdule\r\n                console.log(\"Workable Gloabal best HS: \"+globalBestHS)\r\n                console.log(\"Workable Gloabal best SS: \" +globalBestSS)\r\n                //console.log(finalDataAll[0])\r\n                trigger = 1\r\n                //return [finalDataAllElective[0]]\r\n            }\r\n            else if(localBestHS == 0 && localBestSS == 0 && checkTotalAmountDataset == totalAmountofDataSlottedIn){\r\n                console.log(\"iteraion: \" + i)\r\n                console.log(\"perfect solution is found\")\r\n                globalBestHS = localBestHS\r\n                globalBestSS = localBestSS\r\n                globalBestScehdule = localBestScehdule\r\n                console.log(\"Perfect Gloabal best HS: \"+globalBestHS)\r\n                console.log(\"Perfect Gloabal best SS: \" +globalBestSS)\r\n                console.log(finalDataAll[0])\r\n                trigger = 1\r\n                //return [finalDataAllElective[0]]\r\n            }\r\n    }\r\n    return [finalDataAllElective[0]]\r\n}\r\nlet interations = iteration()\r\n\r\nlet presentableDataElective = []\r\n\r\nif(trigger == 1){\r\n//shot course code, course name and lecturer\r\nconsole.log(interations);    \r\nconst changeToPresentationData = (data) => {\r\n    console.log(data)\r\n    for(let i= 0; i <= data[0].length; i++){\r\n        try {\r\n            presentableDataElective.push([data[0][i][1],data[0][i][2],data[0][i][5]])\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n}\r\nchangeToPresentationData(interations)\r\n\r\n\r\nlet allRoomName = []\r\nfor(let i = 0; i < roomData[0].length; i++){\r\n    allRoomName.push(roomData[0][i][0])\r\n}\r\nallRoomName.unshift(\"Room\");\r\nif(allRoomName.pop() == undefined){\r\n}\r\n\r\n\r\nlet wed = ['Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday']\r\n\r\nconst create2dArrayElective = (weekdayArray,partDay,arrayAll, partAll) => {\r\n    var tmp = [];\r\n\r\n    for(var i = 0; i < weekdayArray.length; i += partDay) {\r\n        tmp.push(weekdayArray.slice(i, i + partDay));\r\n    }\r\n    for(var i = 0; i < arrayAll.length; i += partAll) {\r\n        tmp.push(arrayAll.slice(i, i + partAll));\r\n    }\r\n    return tmp;\r\n}\r\nlet datasetElective = create2dArrayElective(wed,10,presentableDataElective,10);\r\nconsole.log(datasetElective)\r\n//console.log(dataset)\r\n\r\nconst insertRoomNameElective = (roomData,array) => {\r\n    for(let i= 0; i<array.length; i++){\r\n        array[i].unshift(roomData[i]);\r\n    }\r\n    return array;\r\n}\r\n\r\ninsertRoomNameElective(allRoomName,datasetElective)\r\n\r\n\r\n  /** Convert a 2D array into a CSV string\r\n   * elective\r\n */\r\n   function arrayToCsvElective(data){\r\n    //console.log(data)\r\n    return data.map(row =>\r\n      row\r\n      .map(String)  // convert every value to String\r\n      .map(v => v.replaceAll('\"', '\"\"'))  // escape double colons\r\n      .map(v => `\"${v}\"`)  // quote it\r\n      .join(',')  // comma-separated\r\n    ).join('\\r\\n');  // rows starting on new lines\r\n  }\r\n\r\nlet csvElective = arrayToCsvElective(\r\n    datasetElective\r\n);\r\n\r\nfunction downloadBlobElective(content, filename, contentType) {\r\n    // Create a blob\r\n    var blob = new Blob([content], { type: contentType });\r\n    var url = URL.createObjectURL(blob);\r\n  \r\n    // Create a link to download it\r\n    var pom = document.createElement('a');\r\n    pom.href = url;\r\n    pom.setAttribute('download', filename);\r\n    pom.click();\r\n  }\r\n\r\n    var t1 = performance.now()\r\n    console.log(\"Duration: \" + (t1-t0))\r\n  //downloadBlobElective(csvElective, 'ModifiedAntSystemElective_GeneratedSchedule.csv', 'text/csv;charset=utf-8;')\r\n}else{\r\n    var t1 = performance.now()\r\n    console.log(\"Duration: \" + (t1-t0) + \" milliseconds\" )\r\n    alert(\"no workable solution found, please refersh until get workable solution\")\r\n}\r\n        }\r\n        return(\r\n            <React.Fragment>\r\n                <h1>\r\n                Please wait while generating elective schedule\r\n                </h1>\r\n        \r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    export default ArrayScheduleElective;"]},"metadata":{},"sourceType":"module"}