{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acit\\\\Desktop\\\\FYP Code\\\\FYP Code\\\\frontend\\\\src\\\\components\\\\WelcomePage\\\\StartBtn.js\";\nimport React, { useCallback, useState, useContext } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from \"../contexts/auth-context\";\nimport { useHttpClient } from \"../hooks/http-hook\"; //import { uuid } from 'uuidv4';\n\nimport './StartBtn.css';\n\nconst {\n  v4: uuidv4\n} = require('uuid');\n\nlet uuId = uuidv4();\nconsole.log(uuId);\n\nconst Button = () => {\n  //const history = useNavigate();\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient(); // console.log(ipv4Id)\n  //let uuid = uuidv4()\n\n  const signUp = async event => {\n    //const [userId, setUserId] = useState(false)\n    event.preventDefault();\n\n    try {\n      //const response = await fetch('http://localhost:5000/api/uploadFile/', {\n      const responseData = await sendRequest('http://localhost:5000/api/users/signup', 'POST', JSON.stringify({\n        userId: uuId\n      }), {\n        'Content-Type': 'application/json'\n      });\n      auth.login(responseData.user.id); //auth.isLoggedIn\n      //history('/UploadPage')//navigate the user to the next page\n    } catch (err) {} // {auth.isLoggedIn && (history('/UploadPage'))}//navigate the user to the next page  )\n    //history('/UploadPage')//navigate the user to the next page  \n\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: signUp,\n    className: \"start-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"START\"));\n};\n\nexport default Button;","map":{"version":3,"sources":["C:/Users/acit/Desktop/FYP Code/FYP Code/frontend/src/components/WelcomePage/StartBtn.js"],"names":["React","useCallback","useState","useContext","useNavigate","AuthContext","useHttpClient","v4","uuidv4","require","uuId","console","log","Button","auth","isLoginMode","setIsLoginMode","isLoading","error","sendRequest","clearError","signUp","event","preventDefault","responseData","JSON","stringify","userId","login","user","id","err"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAsCC,UAAtC,QAAwD,OAAxD;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,aAAT,QAA8B,oBAA9B,C,CACA;;AACA,OAAO,gBAAP;;AAGA,MAAM;AAACC,EAAAA,EAAE,EAAEC;AAAL,IAAeC,OAAO,CAAC,MAAD,CAA5B;;AACA,IAAIC,IAAI,GAAGF,MAAM,EAAjB;AACAG,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAEA,MAAMG,MAAM,GAAG,MAAM;AACjB;AACA,QAAMC,IAAI,GAAGX,UAAU,CAACE,WAAD,CAAvB;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM;AAAEe,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAApB;AAAiCC,IAAAA;AAAjC,MAAgDd,aAAa,EAAnE,CAJiB,CAKjB;AACA;;AAIA,QAAMe,MAAM,GAAG,MAAMC,KAAN,IAAe;AAC5B;AACEA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI;AACA;AACA,YAAMC,YAAY,GAAG,MAAML,WAAW,CAAC,wCAAD,EACpC,MADoC,EAEpCM,IAAI,CAACC,SAAL,CAAe;AACbC,QAAAA,MAAM,EAACjB;AADM,OAAf,CAFoC,EAKpC;AACE,wBAAgB;AADlB,OALoC,CAAtC;AASAI,MAAAA,IAAI,CAACc,KAAL,CAAWJ,YAAY,CAACK,IAAb,CAAkBC,EAA7B,EAXA,CAYA;AACA;AACD,KAdH,CAcG,OAAMC,GAAN,EAAU,CAAE,CAjBW,CAkBxB;AACA;;AACL,GApBD;;AAuBA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAEV,MAAjB;AAA0B,IAAA,SAAS,EAAC,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CADJ;AAKH,CAtCD;;AAwCA,eAAeR,MAAf","sourcesContent":["import React, { useCallback, useState,useContext } from \"react\";\r\nimport {useNavigate} from 'react-router-dom';\r\nimport { AuthContext } from \"../contexts/auth-context\";\r\nimport { useHttpClient } from \"../hooks/http-hook\";\r\n//import { uuid } from 'uuidv4';\r\nimport './StartBtn.css';\r\n\r\n\r\nconst {v4: uuidv4} = require('uuid')\r\nlet uuId = uuidv4();\r\nconsole.log(uuId);\r\n\r\nconst Button = () => {\r\n    //const history = useNavigate();\r\n    const auth = useContext(AuthContext);\r\n    const [isLoginMode, setIsLoginMode] = useState(true);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    // console.log(ipv4Id)\r\n    //let uuid = uuidv4()\r\n\r\n\r\n\r\n    const signUp = async event => {\r\n      //const [userId, setUserId] = useState(false)\r\n        event.preventDefault();\r\n        try {\r\n            //const response = await fetch('http://localhost:5000/api/uploadFile/', {\r\n            const responseData = await sendRequest('http://localhost:5000/api/users/signup',\r\n              'POST',\r\n              JSON.stringify({\r\n                userId:uuId\r\n              }),\r\n              {\r\n                'Content-Type': 'application/json'\r\n              }\r\n            );\r\n            auth.login(responseData.user.id);\r\n            //auth.isLoggedIn\r\n            //history('/UploadPage')//navigate the user to the next page\r\n          }catch(err){}\r\n          // {auth.isLoggedIn && (history('/UploadPage'))}//navigate the user to the next page  )\r\n          //history('/UploadPage')//navigate the user to the next page  \r\n    };\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <button onClick={signUp}  className=\"start-button\">START</button>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Button;"]},"metadata":{},"sourceType":"module"}