{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acit\\\\Desktop\\\\FYP Code\\\\FYP Code\\\\frontend\\\\src\\\\components\\\\RandomSchedule\\\\arraySchedule.js\";\nimport { find, forEach, indexOf } from \"lodash\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport _ from 'lodash';\n\nconst ArraySchedule = props => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedFile, setLoaadedFile] = useState(false);\n  const [roomData, setroomData] = useState();\n  const [courseData, setcourseData] = useState(); // const [Keys, setKeys] = useState();\n  //const [uploadedData, setUploadedData] = useState([]);\n  //console.log(\"props dataset:\"+ props.test)\n\n  const userId = useParams().userId;\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        // const response = await fetch('http://localhost:5000/api/user/');\n        //const response = await fetch('http://localhost:5000/api/files/users/624278b29a90a9077e2f65e4');\n        const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875'); //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\n        //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\n\n        const responsedata = await response.json();\n        let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset); // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\n\n        const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Room'], Dataset['Size']]); //Extract Room\n\n        setroomData([ertRoom]);\n        const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'], Dataset['Course Code'], Dataset['Course Name'], Dataset['Year'], Dataset['Semester'], Dataset['Lecturer'], Dataset['Group'], Dataset['HMS'], Dataset['Programme Code'], Dataset['Slot1'], Dataset['Slot2']]); //Extract Enrollment Quota\n\n        setcourseData([ertCourse]);\n\n        if (!response.ok) {\n          throw new Error(responsedata.message);\n        }\n\n        setLoaadedFile(stringifyData);\n        setIsLoading(true);\n      } catch (err) {\n        console.log(err.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, [userId]);\n\n  if (!isLoading && loadedFile) {\n    const testData = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const EnrollmentQuota = [];\n    const CourseCode = [];\n    const HMS = [];\n    const roomName = [];\n    const roomSize = [];\n    const filterData50 = [];\n    const filterData100 = [];\n    const filterData200 = [];\n    const filterData500 = [];\n    const dupeData = [];\n    const room = [];\n    room.push(roomData[0]);\n    let hardConstraintViolated = 0;\n    let softConstraintViolated = 0; //console.log(courseData[0][0][1]);\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      let enrollment = [courseData[0][i][0]];\n      let code = [courseData[0][i][1]];\n      let hms = [courseData[0][i][7]];\n      enrollment.reduce(function (results, item, index, array) {\n        results[index] = item;\n        EnrollmentQuota.push(item); //console.log(results)\n      }, {});\n      code.reduce(function (results, item, index, array) {\n        results[index] = item;\n        CourseCode.push(item); //console.log(results)\n      }, {});\n      hms.reduce(function (results, item, index, array) {\n        results[index] = item;\n        HMS.push(item); //console.log(results)\n      }, {});\n    }\n\n    for (let i = 0; i < roomData[0].length; i++) {\n      let name = [roomData[0][i][0]];\n      let size = [roomData[0][i][1]];\n      name.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomName.push(item); //console.log(results)\n      }, {});\n      size.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomSize.push(item); //console.log(results)\n      }, {});\n    }\n\n    const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      if (courseData[0][i][0] < 50) {\n        //for(let j = 0; j <courseData[0][i][7]; j++){\n        filterData50.push(courseData[0][i]); //}\n      }\n\n      if (courseData[0][i][0] >= 50 && courseData[0][i][0] < 100) {\n        //for(let j = 0; j <courseData[0][i][7]; j++){\n        filterData100.push(courseData[0][i]); //}\n      }\n\n      if (courseData[0][i][0] >= 100 && courseData[0][i][0] < 200) {\n        //for(let j = 0; j <courseData[0][i][7]; j++){\n        filterData200.push(courseData[0][i]); //}\n      }\n\n      if (courseData[0][i][0] >= 200 && courseData[0][i][0] < 500) {\n        //for(let j = 0; j <courseData[0][i][7]; j++){\n        filterData500.push(courseData[0][i]); //}\n      } //filterData.push(courseData[0][i]);\n\n    }\n\n    let roomUnder50 = [];\n    let roomUnder100 = [];\n    let roomUnder200 = [];\n    let roomUnder500 = [];\n\n    const checkNumberofRoom = () => {\n      for (let i = 0; i < roomData[0].length; i++) {\n        let room = roomData[0][i][1]; //console.log(roomData[0][i][1]);\n\n        if (room < 50) {\n          roomUnder50.push(room);\n        } else if (room > 50 && room < 100) {\n          roomUnder100.push(room);\n        } else if (room > 100 && room < 200) {\n          roomUnder200.push(room);\n        } else if (room > 200) {\n          roomUnder500.push(room);\n        }\n      }\n    };\n\n    checkNumberofRoom();\n\n    const createArray = data => {\n      var result = [];\n\n      for (let i = 0; i < data; i++) {\n        result[i] = [];\n      }\n\n      return result;\n    };\n\n    let DataArray50 = roomUnder50.length * 38;\n    let DataArray100 = roomUnder100.length * 38;\n    let DataArray200 = roomUnder200.length * 38;\n    let DataArray500 = roomUnder500.length * 38;\n    var ground50Array = createArray(DataArray50);\n    var ground100Array = createArray(DataArray100);\n    var ground200Array = createArray(DataArray200);\n    var ground500Array = createArray(DataArray500);\n    let Column50 = roomUnder50.length;\n    let Column100 = roomUnder100.length;\n    let Column200 = roomUnder200.length;\n    let Column500 = roomUnder500.length;\n    let Row = 38; //----------------------------------------------------------------------------------------------------------------------------------------\n    // Data is more less than 50\n\n    const antSystem = () => {\n      //create 1d array for dataset 50\n      const array1D50 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr50 = array1D50(DataArray50);\n      let extraData50 = [];\n      let insertedData50 = [];\n\n      const AntAlgoInsert50 = array => {\n        let test = [];\n        let k = 0;\n\n        for (let x = 0; x < filterData50.length; x++) {\n          test.push(filterData50[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let slot1 = test[k][9];\n\n            if (slot1 == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i + 1] = array[j + 1];\n                array[j] = test[k];\n                array[j + 1] = test[k];\n                insertedData50.push(test[k]);\n              } else if (array[i] != 100 || array[i + 1] != 100) {\n                //test.push(test[k]);\n                extraData50.push(test[k]); // push data to another room\n              }\n            }\n          } //console.log(AntArr50.length/2)\n\n\n          k++;\n        } //console.log(tempData)\n\n\n        return array;\n      };\n\n      var AntArrIns50 = AntAlgoInsert50(AntArr50);\n\n      const slot2Equal2for50 = array => {\n        let test = [];\n        let k = 0; //console.log(insertedData50);\n        // for(let x=0; x<filterData50.length;x++){\n        //     test.push(filterData50[x]);\n        // }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < insertedData50.length) {\n            let slot2 = insertedData50[k][10];\n\n            if (slot2 == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i - 1] == 100 && array[i + 2] == 100) {\n                array[i - 1] = 50;\n                array[i + 2] = 50;\n              }\n\n              let indexArray = 0;\n              let totalRoom = array.length / 38;\n\n              for (let x = 1; x <= totalRoom; x++) {\n                indexArray = x * 38;\n              }\n\n              for (let i = 0; i < array.length; i++) {\n                try {\n                  for (let x = 1; x <= totalRoom; x++) {\n                    indexArray = x * 38;\n\n                    if (array[i + indexArray] == 100 && array[i + indexArray] == 100) {\n                      try {\n                        array[i + indexArray] = 0;\n                        array[i + indexArray] = 0;\n                      } catch {}\n                    }\n\n                    if (array[i - indexArray] == 100 && array[i - indexArray - 1] == 100) {\n                      try {\n                        array[i - indexArray] = 0;\n                        array[i - indexArray - 1] = 0;\n                      } catch {}\n                    }\n                  }\n                } catch {}\n              }\n\n              if (array[i] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i + 1] = array[j + 1];\n                array[j] = insertedData50[k];\n                array[j + 1] = insertedData50[k];\n              } else if (array[i] != 100 || array[i + 1] != 100) {\n                insertedData50.push(insertedData50[k]);\n              }\n\n              if (array[i - 1] == 50 && array[i + 2] == 50) {\n                array[i - 1] = 100;\n                array[i + 2] = 100;\n              }\n\n              for (let i = 0; i < array.length; i++) {\n                try {\n                  for (let x = 1; x <= totalRoom; x++) {\n                    indexArray = x * 38;\n\n                    if (array[i + indexArray] == 0 && array[i + indexArray] == 0) {\n                      try {\n                        array[i + indexArray] = 100;\n                        array[i + indexArray] = 100;\n                      } catch {}\n                    }\n\n                    if (array[i - indexArray] == 0 && array[i - indexArray - 1] == 0) {\n                      try {\n                        array[i - indexArray] = 100;\n                        array[i - indexArray - 1] = 100;\n                      } catch {}\n                    }\n                  }\n                } catch {}\n              }\n            }\n          }\n\n          k++;\n        }\n\n        return array;\n      };\n\n      slot2Equal2for50(AntArr50);\n\n      const slot2Equal1for50 = array => {\n        let test = [];\n        let k = 0; // for(let x=0; x<filterData50.length;x++){\n        //     test.push(filterData50[x]);\n        // }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < insertedData50.length) {\n            let slot2 = insertedData50[k][10];\n\n            if (slot2 == 1) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i - 1] == 100 && array[i + 2] == 100) {\n                array[i - 1] = 50;\n                array[i + 2] = 50;\n              }\n\n              let indexArray = 0;\n              let totalRoom = array.length / 38;\n\n              for (let x = 1; x <= totalRoom; x++) {\n                indexArray = x * 38;\n              }\n\n              for (let i = 0; i < array.length; i++) {\n                try {\n                  for (let x = 1; x <= totalRoom; x++) {\n                    indexArray = x * 38;\n\n                    if (array[i + indexArray] == 100 && array[i + indexArray] == 100) {\n                      try {\n                        array[i + indexArray] = 0;\n                        array[i + indexArray] = 0;\n                      } catch {}\n                    }\n\n                    if (array[i - indexArray] == 100 && array[i - indexArray - 1] == 100) {\n                      try {\n                        array[i - indexArray] = 0;\n                        array[i - indexArray - 1] = 0;\n                      } catch {}\n                    }\n                  }\n                } catch {}\n              }\n\n              if (array[i] == 100 || array[i] == 50) {\n                array[i] = array[j];\n                array[j] = insertedData50[k];\n              } else if (array[i] != 100 || array[i] != 50) {\n                insertedData50.push(insertedData50[k]);\n              }\n\n              if (array[i - 1] == 50 && array[i + 2] == 50) {\n                array[i - 1] = 100;\n                array[i + 2] = 100;\n              }\n\n              for (let i = 0; i < array.length; i++) {\n                try {\n                  for (let x = 1; x <= totalRoom; x++) {\n                    indexArray = x * 38;\n\n                    if (array[i + indexArray] == 0 && array[i + indexArray] == 0) {\n                      try {\n                        array[i + indexArray] = 100;\n                        array[i + indexArray] = 100;\n                      } catch {}\n                    }\n\n                    if (array[i - indexArray] == 0 && array[i - indexArray - 1] == 0) {\n                      try {\n                        array[i - indexArray] = 100;\n                        array[i - indexArray - 1] = 100;\n                      } catch {}\n                    }\n                  }\n                } catch {}\n              }\n            }\n          }\n\n          k++;\n        }\n\n        return array;\n      };\n\n      var Slot2_1_50 = slot2Equal1for50(AntArr50);\n      console.log(Slot2_1_50);\n\n      const checkAmountData50 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount = checkAmountData50(AntArrIns50);\n      console.log(checkAmount); //----------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Data is more than or equal to 50 but less than 100\n      //create 1d array for dataset 100\n\n      const array1D100 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr100 = array1D100(DataArray100); //console.log(AntArr200);\n\n      let extraData100 = [];\n      let insertedData100 = [];\n\n      const AntAlgoInsert100 = array => {\n        let test = [];\n        let k = 0;\n\n        for (let x = 0; x < extraData50.length; x++) {\n          test.push(extraData50[x]);\n        }\n\n        for (let x = 0; x < filterData100.length; x++) {\n          test.push(filterData100[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let slot1 = test[k][9];\n\n            if (slot1 == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i + 1] = array[j + 1];\n                array[j] = test[k];\n                array[j + 1] = test[k];\n                insertedData100.push(test[k]);\n              } else if (array[i] != 100 || array[i + 1] != 100) {\n                //test.push(test[k]);\n                extraData100.push(test[k]); // push data to another room\n              }\n            }\n          }\n\n          k++;\n        }\n\n        return array;\n      };\n\n      var AntArrIns100 = AntAlgoInsert100(AntArr100);\n\n      const slot2Equal2for100 = array => {\n        let test = [];\n        let k = 0; //console.log(insertedData100)\n        // console.log(testing.length)\n        // for(let x=0; x<filterData100.length;x++){\n        //     test.push(filterData100[x]);\n        // }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < insertedData100.length) {\n            let slot2 = insertedData100[k][10];\n\n            if (slot2 == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i - 1] == 100 && array[i + 2] == 100) {\n                array[i - 1] = 50;\n                array[i + 2] = 50;\n              }\n\n              let indexArray = 0;\n              let totalRoom = array.length / 38;\n\n              for (let x = 1; x <= totalRoom; x++) {\n                indexArray = x * 38;\n              }\n\n              for (let i = 0; i < array.length; i++) {\n                try {\n                  for (let x = 1; x <= totalRoom; x++) {\n                    indexArray = x * 38;\n\n                    if (array[i + indexArray] == 100 && array[i + indexArray] == 100) {\n                      try {\n                        array[i + indexArray] = 0;\n                        array[i + indexArray] = 0;\n                      } catch {}\n                    }\n\n                    if (array[i - indexArray] == 100 && array[i - indexArray - 1] == 100) {\n                      try {\n                        array[i - indexArray] = 0;\n                        array[i - indexArray - 1] = 0;\n                      } catch {}\n                    }\n                  }\n                } catch {}\n              }\n\n              if (array[i] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i + 1] = array[j + 1];\n                array[j] = insertedData100[k];\n                array[j + 1] = insertedData100[k];\n              } else if (array[i] != 100 || array[i + 1] != 100) {\n                insertedData100.push(insertedData100[k]);\n              }\n\n              if (array[i - 1] == 50 && array[i + 2] == 50) {\n                array[i - 1] = 100;\n                array[i + 2] = 100;\n              }\n\n              for (let i = 0; i < array.length; i++) {\n                try {\n                  for (let x = 1; x <= totalRoom; x++) {\n                    indexArray = x * 38;\n\n                    if (array[i + indexArray] == 0 && array[i + indexArray] == 0) {\n                      try {\n                        array[i + indexArray] = 100;\n                        array[i + indexArray] = 100;\n                      } catch {}\n                    }\n\n                    if (array[i - indexArray] == 0 && array[i - indexArray - 1] == 0) {\n                      try {\n                        array[i - indexArray] = 100;\n                        array[i - indexArray - 1] = 100;\n                      } catch {}\n                    }\n                  }\n                } catch {}\n              }\n            }\n          }\n\n          k++;\n        }\n\n        return array;\n      };\n\n      slot2Equal2for100(AntArr100);\n\n      const Slot2Equal1for100 = array => {\n        let test = [];\n        let k = 0; // for(let x=0; x<filterData100.length;x++){\n        //     test.push(filterData100[x]);\n        // }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < insertedData100.length) {\n            let slot2 = insertedData100[k][10];\n\n            if (slot2 == 1) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i - 1] == 100 && array[i + 2] == 100) {\n                array[i - 1] = 50;\n                array[i + 2] = 50;\n              }\n\n              let indexArray = 0;\n              let totalRoom = array.length / 38;\n\n              for (let x = 1; x <= totalRoom; x++) {\n                indexArray = x * 38;\n              }\n\n              for (let i = 0; i < array.length; i++) {\n                try {\n                  for (let x = 1; x <= totalRoom; x++) {\n                    indexArray = x * 38;\n\n                    if (array[i + indexArray] == 100 && array[i + indexArray] == 100) {\n                      try {\n                        array[i + indexArray] = 0;\n                        array[i + indexArray] = 0;\n                      } catch {}\n                    }\n\n                    if (array[i - indexArray] == 100 && array[i - indexArray - 1] == 100) {\n                      try {\n                        array[i - indexArray] = 0;\n                        array[i - indexArray - 1] = 0;\n                      } catch {}\n                    }\n                  }\n                } catch {}\n              }\n\n              if (array[i] == 100 || array[i] == 50) {\n                array[i] = array[j];\n                array[j] = insertedData100[k];\n              } else if (array[i] != 100 || array[i] != 50) {\n                insertedData100.push(insertedData100[k]);\n              }\n\n              if (array[i - 1] == 50 && array[i + 2] == 50) {\n                array[i - 1] = 100;\n                array[i + 2] = 100;\n              }\n\n              for (let i = 0; i < array.length; i++) {\n                try {\n                  for (let x = 1; x <= totalRoom; x++) {\n                    indexArray = x * 38;\n\n                    if (array[i + indexArray] == 0 && array[i + indexArray] == 0) {\n                      try {\n                        array[i + indexArray] = 100;\n                        array[i + indexArray] = 100;\n                      } catch {}\n                    }\n\n                    if (array[i - indexArray] == 0 && array[i - indexArray - 1] == 0) {\n                      try {\n                        array[i - indexArray] = 100;\n                        array[i - indexArray - 1] = 100;\n                      } catch {}\n                    }\n                  }\n                } catch {}\n              }\n            }\n          }\n\n          k++;\n        }\n\n        return array;\n      };\n\n      var Slot2_1_100 = Slot2Equal1for100(AntArr100);\n      console.log(Slot2_1_100);\n\n      const checkAmountData100 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount = checkAmountData100(AntArrIns100);\n      console.log(checkAmount); //----------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Data is more than or equal to 100 but less than 200\n      //create 1d array for dataset 200\n\n      const array1D200 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr200 = array1D200(DataArray200); //console.log(AntArr200);\n\n      let extraData200 = [];\n      let insertedData200 = [];\n\n      const AntAlgoInsert200 = array => {\n        let test = [];\n        let k = 0;\n\n        for (let x = 0; x < extraData100.length; x++) {\n          test.push(extraData100[x]);\n        }\n\n        for (let x = 0; x < filterData200.length; x++) {\n          test.push(filterData200[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let slot1 = test[k][9];\n\n            if (slot1 == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i + 1] = array[j + 1];\n                array[j] = test[k];\n                array[j + 1] = test[k];\n                insertedData200.push(test[k]);\n              } else if (array[i] != 100 || array[i + 1] != 100) {\n                test.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        }\n\n        return array;\n      };\n\n      var AntArrIns200 = AntAlgoInsert200(AntArr200);\n\n      const slot2Equal2for200 = array => {\n        let test = [];\n        let k = 0; // for(let x=0; x<filterData200.length;x++){\n        //     test.push(filterData200[x]);\n        // }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < insertedData200.length) {\n            let slot2 = insertedData200[k][10];\n\n            if (slot2 == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i - 1] == 100 && array[i + 2] == 100) {\n                array[i - 1] = 50;\n                array[i + 2] = 50;\n              }\n\n              let indexArray = 0;\n              let totalRoom = array.length / 38;\n\n              for (let x = 1; x <= totalRoom; x++) {\n                indexArray = x * 38;\n              }\n\n              for (let i = 0; i < array.length; i++) {\n                try {\n                  for (let x = 1; x <= totalRoom; x++) {\n                    indexArray = x * 38;\n\n                    if (array[i + indexArray] == 100 && array[i + indexArray] == 100) {\n                      try {\n                        array[i + indexArray] = 0;\n                        array[i + indexArray] = 0;\n                      } catch {}\n                    }\n\n                    if (array[i - indexArray] == 100 && array[i - indexArray - 1] == 100) {\n                      try {\n                        array[i - indexArray] = 0;\n                        array[i - indexArray - 1] = 0;\n                      } catch {}\n                    }\n                  }\n                } catch {}\n              }\n\n              if (array[i] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i + 1] = array[j + 1];\n                array[j] = insertedData200[k];\n                array[j + 1] = insertedData200[k];\n              } else if (array[i] != 100 || array[i + 1] != 100) {\n                insertedData200.push(insertedData200[k]);\n              }\n\n              if (array[i - 1] == 50 && array[i + 2] == 50) {\n                array[i - 1] = 100;\n                array[i + 2] = 100;\n              }\n\n              for (let i = 0; i < array.length; i++) {\n                try {\n                  for (let x = 1; x <= totalRoom; x++) {\n                    indexArray = x * 38;\n\n                    if (array[i + indexArray] == 0 && array[i + indexArray] == 0) {\n                      try {\n                        array[i + indexArray] = 100;\n                        array[i + indexArray] = 100;\n                      } catch {}\n                    }\n\n                    if (array[i - indexArray] == 0 && array[i - indexArray - 1] == 0) {\n                      try {\n                        array[i - indexArray] = 100;\n                        array[i - indexArray - 1] = 100;\n                      } catch {}\n                    }\n                  }\n                } catch {}\n              }\n            }\n          }\n\n          k++;\n        }\n\n        return array;\n      };\n\n      slot2Equal2for200(AntArr200);\n\n      const Slot2Equal1for200 = array => {\n        let test = [];\n        let k = 0; // for(let x=0; x<filterData200.length;x++){\n        //     test.push(filterData200[x]);\n        // }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < insertedData200.length) {\n            let slot2 = insertedData200[k][10];\n\n            if (slot2 == 1) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i - 1] == 100 && array[i + 2] == 100) {\n                array[i - 1] = 50;\n                array[i + 2] = 50;\n              }\n\n              let indexArray = 0;\n              let totalRoom = array.length / 38;\n\n              for (let x = 1; x <= totalRoom; x++) {\n                indexArray = x * 38;\n              }\n\n              for (let i = 0; i < array.length; i++) {\n                try {\n                  for (let x = 1; x <= totalRoom; x++) {\n                    indexArray = x * 38;\n\n                    if (array[i + indexArray] == 100 && array[i + indexArray] == 100) {\n                      try {\n                        array[i + indexArray] = 0;\n                        array[i + indexArray] = 0;\n                      } catch {}\n                    }\n\n                    if (array[i - indexArray] == 100 && array[i - indexArray - 1] == 100) {\n                      try {\n                        array[i - indexArray] = 0;\n                        array[i - indexArray - 1] = 0;\n                      } catch {}\n                    }\n                  }\n                } catch {}\n              }\n\n              if (array[i] == 100 || array[i] == 50) {\n                array[i] = array[j];\n                array[j] = insertedData200[k];\n              } else if (array[i] != 100 || array[i] != 50) {\n                insertedData200.push(insertedData200[k]);\n              }\n\n              if (array[i - 1] == 50 && array[i + 2] == 50) {\n                array[i - 1] = 100;\n                array[i + 2] = 100;\n              }\n\n              for (let i = 0; i < array.length; i++) {\n                try {\n                  for (let x = 1; x <= totalRoom; x++) {\n                    indexArray = x * 38;\n\n                    if (array[i + indexArray] == 0 && array[i + indexArray] == 0) {\n                      try {\n                        array[i + indexArray] = 100;\n                        array[i + indexArray] = 100;\n                      } catch {}\n                    }\n\n                    if (array[i - indexArray] == 0 && array[i - indexArray - 1] == 0) {\n                      try {\n                        array[i - indexArray] = 100;\n                        array[i - indexArray - 1] = 100;\n                      } catch {}\n                    }\n                  }\n                } catch {}\n              }\n            }\n          }\n\n          k++;\n        }\n\n        return array;\n      };\n\n      var Slot2_1_200 = Slot2Equal1for200(AntArr200);\n      console.log(Slot2_1_200);\n\n      const checkAmountData200 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount = checkAmountData200(AntArrIns200);\n      console.log(checkAmount); //----------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Data is more than or equal to 200 \n      //create 1d array for dataset 500\n\n      const array1D500 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr500 = array1D500(DataArray500); //console.log(AntArr500);\n\n      let insertedData500 = [];\n\n      const AntAlgoInsert500 = array => {\n        let test = [];\n        let k = 0;\n\n        for (let x = 0; x < filterData500.length; x++) {\n          test.push(filterData500[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let slot1 = test[k][9];\n\n            if (slot1 == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i + 1] = array[j + 1];\n                array[j] = test[k];\n                array[j + 1] = test[k];\n                insertedData500.push(test[k]);\n              } else if (array[i] != 100 || array[i + 1] != 100) {\n                test.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        }\n\n        return array;\n      };\n\n      var AntArrIns500 = AntAlgoInsert500(AntArr500);\n\n      const slot2Equal2for500 = array => {\n        let test = [];\n        let k = 0; // for(let x=0; x<filterData500.length;x++){\n        //     test.push(filterData500[x]);\n        // }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < insertedData500.length) {\n            let slot2 = insertedData500[k][10];\n\n            if (slot2 == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i - 1] == 100 && array[i + 2] == 100) {\n                array[i - 1] = 50;\n                array[i + 2] = 50;\n              }\n\n              let indexArray = 0;\n              let totalRoom = array.length / 38;\n\n              for (let x = 1; x <= totalRoom; x++) {\n                indexArray = x * 38;\n              }\n\n              for (let i = 0; i < array.length; i++) {\n                try {\n                  for (let x = 1; x <= totalRoom; x++) {\n                    indexArray = x * 38;\n\n                    if (array[i + indexArray] == 100 && array[i + indexArray] == 100) {\n                      try {\n                        array[i + indexArray] = 0;\n                        array[i + indexArray] = 0;\n                      } catch {}\n                    }\n\n                    if (array[i - indexArray] == 100 && array[i - indexArray - 1] == 100) {\n                      try {\n                        array[i - indexArray] = 0;\n                        array[i - indexArray - 1] = 0;\n                      } catch {}\n                    }\n                  }\n                } catch {}\n              }\n\n              if (array[i] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i + 1] = array[j + 1];\n                array[j] = insertedData500[k];\n                array[j + 1] = insertedData500[k];\n              } else if (array[i] != 100 || array[i + 1] != 100) {\n                insertedData500.push(insertedData500[k]);\n              }\n\n              if (array[i - 1] == 50 && array[i + 2] == 50) {\n                array[i - 1] = 100;\n                array[i + 2] = 100;\n              }\n\n              for (let i = 0; i < array.length; i++) {\n                try {\n                  for (let x = 1; x <= totalRoom; x++) {\n                    indexArray = x * 38;\n\n                    if (array[i + indexArray] == 0 && array[i + indexArray] == 0) {\n                      try {\n                        array[i + indexArray] = 100;\n                        array[i + indexArray] = 100;\n                      } catch {}\n                    }\n\n                    if (array[i - indexArray] == 0 && array[i - indexArray - 1] == 0) {\n                      try {\n                        array[i - indexArray] = 100;\n                        array[i - indexArray - 1] = 100;\n                      } catch {}\n                    }\n                  }\n                } catch {}\n              }\n            }\n          }\n\n          k++;\n        }\n\n        return array;\n      };\n\n      slot2Equal2for500(AntArr500);\n\n      const slot2Equal1for500 = array => {\n        let test = [];\n        let k = 0; // for(let x=0; x<filterData500.length;x++){\n        //     test.push(filterData500[x]);\n        // }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < insertedData500.length) {\n            let slot2 = insertedData500[k][10];\n\n            if (slot2 == 1) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i - 1] == 100 && array[i + 2] == 100) {\n                array[i - 1] = 50;\n                array[i + 2] = 50;\n              }\n\n              let indexArray = 0;\n              let totalRoom = array.length / 38;\n\n              for (let x = 1; x <= totalRoom; x++) {\n                indexArray = x * 38;\n              }\n\n              for (let i = 0; i < array.length; i++) {\n                try {\n                  for (let x = 1; x <= totalRoom; x++) {\n                    indexArray = x * 38;\n\n                    if (array[i + indexArray] == 100 && array[i + indexArray] == 100) {\n                      try {\n                        array[i + indexArray] = 0;\n                        array[i + indexArray] = 0;\n                      } catch {}\n                    }\n\n                    if (array[i - indexArray] == 100 && array[i - indexArray - 1] == 100) {\n                      try {\n                        array[i - indexArray] = 0;\n                        array[i - indexArray - 1] = 0;\n                      } catch {}\n                    }\n                  }\n                } catch {}\n              }\n\n              if (array[i] == 100 || array[i] == 50) {\n                array[i] = array[j];\n                array[j] = insertedData500[k];\n              } else if (array[i] != 100 || array[i] != 50) {\n                insertedData500.push(insertedData500[k]);\n              }\n\n              if (array[i - 1] == 50 && array[i + 2] == 50) {\n                array[i - 1] = 100;\n                array[i + 2] = 100;\n              }\n\n              for (let i = 0; i < array.length; i++) {\n                try {\n                  for (let x = 1; x <= totalRoom; x++) {\n                    indexArray = x * 38;\n\n                    if (array[i + indexArray] == 0 && array[i + indexArray] == 0) {\n                      try {\n                        array[i + indexArray] = 100;\n                        array[i + indexArray] = 100;\n                      } catch {}\n                    }\n\n                    if (array[i - indexArray] == 0 && array[i - indexArray - 1] == 0) {\n                      try {\n                        array[i - indexArray] = 100;\n                        array[i - indexArray - 1] = 100;\n                      } catch {}\n                    }\n                  }\n                } catch {}\n              }\n            }\n          }\n\n          k++;\n        }\n\n        return array;\n      };\n\n      var Slot2_1_500 = slot2Equal1for500(AntArr500);\n      console.log(Slot2_1_500);\n\n      const checkAmountData500 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount = checkAmountData500(AntArrIns500);\n      console.log(checkAmount); //----------------------------------------------------------------------------------------------------------------------------------------\n      // Hard Constraint \n      // H1: No student attend more than one class/ event at the same time\n      // H2: The room is large enough to accomodate all of the student in attendace while also meeting the requirement \n      // H3: At any given time, each room can onle have one course booked\n      // H4: No student attend class during 12:00 pm -2:00 due to solat jumaat\n      // H5: One teacher can only teach one class at one time.\n      //Check for the H1 violation: same group attend more than 1 class at 1 time\n\n      const check1Group = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n        }\n\n        for (let i = 0; i < array.length; i++) {\n          try {\n            for (let x = 1; x <= totalRoom; x++) {\n              indexArray = x * 38;\n\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined) {\n                try {\n                  if (array[i][6] == array[i + indexArray][6] && array[i + 1][6] == array[i + indexArray + 1][6]) {\n                    // console.log(array[i][6])\n                    // console.log(array[i+indexArray][6])\n                    // console.log(array[i+1][6])\n                    // console.log(array[i+indexArray+1][6])\n                    count += 1;\n                  }\n                } catch {}\n              }\n\n              if (array[i - indexArray] != 100 && array[i - indexArray] != undefined) {\n                try {\n                  if (array[i][6] == array[i - indexArray][6] && array[i - 1][6] == array[i - indexArray - 1][6]) {\n                    // console.log(array[i][6])\n                    // console.log(array[i-indexArray][6])\n                    // console.log(array[i-1][6])\n                    // console.log(array[i-indexArray-1][6])\n                    count += 1;\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      }; // var checkH1_50 = check1Group(AntArr50)\n      // var checkH1_100 = check1Group(AntArr100)\n      // var checkH1_200 = check1Group(AntArr200)\n      // var checkH1_500 = check1Group(AntArr500)\n      // console.log(\"Hard Constraint 1 violation: \"+ checkH1_50);\n      // console.log(\"Hard Constraint 1 violation: \"+ checkH1_100);\n      // console.log(\"Hard Constraint 1 violation: \"+ checkH1_200);\n      // console.log(\"Hard Constraint 1 violation: \"+ checkH1_500);\n      //Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\n\n\n      const checkRoomQuota = array => {\n        let count = 0;\n        return count;\n      };\n\n      var checkH5_50 = checkRoomQuota(AntArr50);\n      var checkH5_100 = checkRoomQuota(AntArr100);\n      var checkH5_200 = checkRoomQuota(AntArr200);\n      var checkH5_500 = checkRoomQuota(AntArr500); //Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\n\n      const checkSolatJummat = array => {\n        let count = 0;\n        return count;\n      };\n\n      var checkH5_50 = checkSolatJummat(AntArr50);\n      var checkH5_100 = checkSolatJummat(AntArr100);\n      var checkH5_200 = checkSolatJummat(AntArr200);\n      var checkH5_500 = checkSolatJummat(AntArr500); //Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\n\n      const check1Teacher = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n        }\n\n        for (let i = 0; i < array.length; i++) {\n          try {\n            for (let x = 1; x <= totalRoom; x++) {\n              indexArray = x * 38;\n\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined) {\n                try {\n                  if (array[i][5] == array[i + indexArray][5] && array[i + 1][5] == array[i + indexArray + 1][5]) {\n                    // console.log(array[i][5])\n                    // console.log(array[i+indexArray][5])\n                    // console.log(array[i+1][5])\n                    // console.log(array[i+indexArray+1][5])\n                    count += 1;\n                  }\n                } catch {}\n              }\n\n              if (array[i - indexArray] != 100 && array[i - indexArray] != undefined) {\n                try {\n                  if (array[i][5] == array[i - indexArray][5] && array[i - 1][5] == array[i - indexArray - 1][5]) {\n                    // console.log(array[i][5])\n                    // console.log(array[i-indexArray][5])\n                    // console.log(array[i-1][5])\n                    // console.log(array[i-indexArray-1][5])\n                    count += 1;\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH5_50 = check1Teacher(AntArr50);\n      var checkH5_100 = check1Teacher(AntArr100);\n      var checkH5_200 = check1Teacher(AntArr200);\n      var checkH5_500 = check1Teacher(AntArr500); // console.log(\"Hard Constraint 5 violation: \"+ checkH5_50);\n      // console.log(\"Hard Constraint 5 violation: \"+ checkH5_100);\n      // console.log(\"Hard Constraint 5 violation: \"+ checkH5_200);\n      // console.log(\"Hard Constraint 5 violation: \"+ checkH5_500);\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Soft Constraint \n      // S1: A student has a class schedule toward the end of the day\n      // S2: A student have more than two class in a row\n      //Check for the S1 violation: student have class at the end of the day\n\n      const checkEndOfClass = array => {\n        let count = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          let indexArray = x * 38 - 1;\n\n          if (array[indexArray] != 100) {\n            count = 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkS1_50 = checkEndOfClass(AntArr50);\n      var checkS1_100 = checkEndOfClass(AntArr100);\n      var checkS1_200 = checkEndOfClass(AntArr200);\n      var checkS1_500 = checkEndOfClass(AntArr500); // console.log(\"Soft Constraint 1 violation: \"+ checkS1_50);\n      // console.log(\"Soft Constraint 1 violation: \"+ checkS1_100);\n      // console.log(\"Soft Constraint 1 violation: \"+ checkS1_200);\n      // console.log(\"Soft Constraint 1 violation: \"+ checkS1_500);\n      //Check for the S2 violation: student have 2 class in a row\n\n      const check2ClassInARow = array => {\n        let count = 0;\n\n        for (let i = 0; i < array[i].length; i++) {\n          if (array[i + 2] != 100) {\n            count = 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkS2_50 = check2ClassInARow(AntArr50);\n      var checkS2_100 = check2ClassInARow(AntArr100);\n      var checkS2_200 = check2ClassInARow(AntArr200);\n      var checkS2_500 = check2ClassInARow(AntArr500);\n      console.log(\"Soft Constraint 2 violation: \" + checkS2_50);\n      console.log(\"Soft Constraint 2 violation: \" + checkS2_100);\n      console.log(\"Soft Constraint 2 violation: \" + checkS2_200);\n      console.log(\"Soft Constraint 2 violation: \" + checkS2_500); //-----------------------------------------------------------------------------------------------------------------------------------------------\n      //Check total Hard Constraint\n\n      const checkTotalHardContraint = () => {\n        let count = 0; //let totalS1 = checkH1_50 + checkH1_100 + checkH1_200 + checkH1_500\n\n        let totalS2 = checkH5_50 + checkH5_100 + checkH5_200 + checkH5_500; // if(totalS1 != 0){\n        //     count +=1\n        // }\n\n        if (totalS2 != 0) {\n          count += 1;\n        }\n\n        return count;\n      };\n\n      var checkTotalHardContraints = checkTotalHardContraint();\n      console.log(\"Total Hard Constraint: \" + checkTotalHardContraints); //----------------------------------------------------------------------------------------------------------------------------------------\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n\n      const checkTotalSoftContraint = () => {\n        let count = 0;\n        let totalS1 = checkS1_50 + checkS1_100 + checkS1_200 + checkS1_500;\n        let totalS2 = checkS2_50 + checkS2_100 + checkS2_200 + checkS2_500;\n\n        if (totalS1 != 0) {\n          count += 1;\n        }\n\n        if (totalS2 != 0) {\n          count += 1;\n        }\n\n        return count;\n      };\n\n      var checkTotalSoftContraints = checkTotalSoftContraint();\n      console.log(\"Total Soft Constraint: \" + checkTotalSoftContraints);\n    }; // for(let i= 1; i <= 500; i++){\n    //     antSystem();\n    //     console.log(\"iterantion: \" + i)\n    // }\n\n\n    antSystem(); //----------------------------------------------------------------------------------------------------------------------------------------\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1341,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default ArraySchedule; //result[i][j]=Course.splice(Math.floor(Math.random()* Course.length),1)[0] // create random placement of Course Value\n//const Schedule = new Array(10).fill(Array(5).fill(null));\n//console.log(Schedule);\n// const Course = [['TE1',4],['TE1',4],['TE1',4],['TE1',3],['TE1',4],['TE1',2],['TE1',4],['TE1',4],['TE1',4],['TE1',3]];\n//const Course = [['TE1',2],['TE2',2],['TE3',3],['TE4',4],['TE5',3],['TE6',4],['TE7',4],['TE8',2],['TE9',4]];\n//const Course = ['TE1','TE2','TE3','TE4','TE5','TE6','TE7','TE8','TE9'];","map":{"version":3,"sources":["C:/Users/acit/Desktop/FYP Code/FYP Code/frontend/src/components/RandomSchedule/arraySchedule.js"],"names":["find","forEach","indexOf","React","useEffect","useState","useContext","useParams","_","ArraySchedule","props","isLoading","setIsLoading","loadedFile","setLoaadedFile","roomData","setroomData","courseData","setcourseData","userId","sendRequest","response","fetch","responsedata","json","stringifyData","JSON","stringify","userWithFiles","Dataset","ertRoom","map","ertCourse","ok","Error","message","err","console","log","testData","EnrollmentQuota","CourseCode","HMS","roomName","roomSize","filterData50","filterData100","filterData200","filterData500","dupeData","room","push","hardConstraintViolated","softConstraintViolated","i","length","enrollment","code","hms","reduce","results","item","index","array","name","size","notDuplicatesRoom","filter","roomUnder50","roomUnder100","roomUnder200","roomUnder500","checkNumberofRoom","createArray","data","result","DataArray50","DataArray100","DataArray200","DataArray500","ground50Array","ground100Array","ground200Array","ground500Array","Column50","Column100","Column200","Column500","Row","antSystem","array1D50","AntArr50","extraData50","insertedData50","AntAlgoInsert50","test","k","x","slot1","j","Math","floor","random","AntArrIns50","slot2Equal2for50","slot2","indexArray","totalRoom","slot2Equal1for50","Slot2_1_50","checkAmountData50","count","undefined","checkAmount","array1D100","AntArr100","extraData100","insertedData100","AntAlgoInsert100","AntArrIns100","slot2Equal2for100","Slot2Equal1for100","Slot2_1_100","checkAmountData100","array1D200","AntArr200","extraData200","insertedData200","AntAlgoInsert200","AntArrIns200","slot2Equal2for200","Slot2Equal1for200","Slot2_1_200","checkAmountData200","array1D500","AntArr500","insertedData500","AntAlgoInsert500","AntArrIns500","slot2Equal2for500","slot2Equal1for500","Slot2_1_500","checkAmountData500","check1Group","checkRoomQuota","checkH5_50","checkH5_100","checkH5_200","checkH5_500","checkSolatJummat","check1Teacher","checkEndOfClass","checkS1_50","checkS1_100","checkS1_200","checkS1_500","check2ClassInARow","checkS2_50","checkS2_100","checkS2_200","checkS2_500","checkTotalHardContraint","totalS2","checkTotalHardContraints","checkTotalSoftContraint","totalS1","checkTotalSoftContraints"],"mappings":"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","sourcesContent":["import { find, forEach, indexOf } from \"lodash\";\r\nimport React,{ useEffect,useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport _ from 'lodash';\r\n\r\n\r\nconst ArraySchedule = (props) => {\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [loadedFile, setLoaadedFile] = useState(false);\r\n    const [roomData, setroomData] = useState();\r\n    const [courseData, setcourseData] = useState();\r\n    // const [Keys, setKeys] = useState();\r\n    //const [uploadedData, setUploadedData] = useState([]);\r\n    //console.log(\"props dataset:\"+ props.test)\r\n\r\n    const userId = useParams().userId;\r\n    useEffect(()=>{\r\n        const sendRequest = async () =>{\r\n            setIsLoading(true);\r\n            try{\r\n            // const response = await fetch('http://localhost:5000/api/user/');\r\n            //const response = await fetch('http://localhost:5000/api/files/users/624278b29a90a9077e2f65e4');\r\n            const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875');\r\n            //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\r\n            //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\r\n            const responsedata = await response.json();\r\n            let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset);\r\n\r\n            // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\r\n            const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset =>[Dataset['Room'],Dataset['Size']]); //Extract Room\r\n            setroomData([ertRoom]);\r\n\r\n            const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'],Dataset['Course Code'],Dataset['Course Name'],Dataset['Year'],Dataset['Semester'],Dataset['Lecturer'],Dataset['Group'],Dataset['HMS'],Dataset['Programme Code'],Dataset['Slot1'],Dataset['Slot2']]); //Extract Enrollment Quota\r\n            setcourseData([ertCourse]);\r\n\r\n            if (!response.ok){\r\n                throw new Error(responsedata.message);\r\n            }\r\n            setLoaadedFile(stringifyData);\r\n            setIsLoading(true);\r\n            }catch(err){\r\n                console.log(err.message);\r\n            }\r\n            setIsLoading(false);\r\n            \r\n        };\r\n        sendRequest();\r\n    },[userId]);\r\n\r\n        if(!isLoading && loadedFile){\r\n            const testData = [1,2,3,4,5,6,7,8,9];\r\n            const EnrollmentQuota = [];\r\n            const CourseCode = [];\r\n            const HMS = [];\r\n            const roomName = [];\r\n            const roomSize = [];\r\n            const filterData50  = [];\r\n            const filterData100  = [];\r\n            const filterData200  = [];\r\n            const filterData500  = [];\r\n            const dupeData  = [];\r\n            const room = []\r\n            room.push(roomData[0])\r\n            \r\n            let hardConstraintViolated = 0;\r\n            let softConstraintViolated = 0;\r\n            //console.log(courseData[0][0][1]);\r\n            for(let i = 0; i <courseData[0].length; i++){\r\n                let enrollment = [courseData[0][i][0]];\r\n                let code = [courseData[0][i][1]];\r\n                let hms = [courseData[0][i][7]];\r\n                enrollment.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    EnrollmentQuota.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                code.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    CourseCode.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                hms.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    HMS.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n            }\r\n\r\n            for(let i = 0; i <roomData[0].length; i++){\r\n                let name = [roomData[0][i][0]];\r\n                let size = [roomData[0][i][1]];\r\n                name.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomName.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                size.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomSize.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n            }\r\n \r\n            \r\n            const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\r\n\r\n\r\n                for(let i = 0; i< courseData[0].length;i++){\r\n                    if (courseData[0][i][0] < 50) {\r\n                        //for(let j = 0; j <courseData[0][i][7]; j++){\r\n                            filterData50.push(courseData[0][i]);\r\n                        //}\r\n                    }\r\n                    if (courseData[0][i][0] >= 50 && courseData[0][i][0] < 100) {\r\n                        //for(let j = 0; j <courseData[0][i][7]; j++){\r\n                            filterData100.push(courseData[0][i]);\r\n                        //}\r\n                    }\r\n                    if (courseData[0][i][0] >= 100 && courseData[0][i][0] < 200) {\r\n                        //for(let j = 0; j <courseData[0][i][7]; j++){\r\n                            filterData200.push(courseData[0][i]);\r\n                        //}\r\n                    }\r\n                    if (courseData[0][i][0] >= 200 && courseData[0][i][0] < 500) {\r\n                        //for(let j = 0; j <courseData[0][i][7]; j++){\r\n                            filterData500.push(courseData[0][i]);\r\n                        //}\r\n                    }\r\n                    //filterData.push(courseData[0][i]);\r\n                }\r\n\r\n\r\n            let roomUnder50 = []\r\n            let roomUnder100 = []\r\n            let roomUnder200 = []\r\n            let roomUnder500 = []\r\n            const checkNumberofRoom = () => {\r\n                for(let i = 0; i < roomData[0].length; i++){\r\n                    let room = roomData[0][i][1]\r\n                    //console.log(roomData[0][i][1]);\r\n                    if(room < 50){\r\n                        roomUnder50.push(room)\r\n                    }else if(room > 50 && room < 100){\r\n                        roomUnder100.push(room)\r\n\r\n                    }else if(room > 100 && room < 200){\r\n                        roomUnder200.push(room)\r\n\r\n                    }else if(room > 200){\r\n                        roomUnder500.push(room)\r\n                    }\r\n                }\r\n            }\r\n            checkNumberofRoom();\r\n\r\n\r\n            const createArray = (data) => {\r\n                var result = []\r\n\r\n                    for(let i = 0; i<data; i++){\r\n                        result[i] = []\r\n                    }\r\n                return result;\r\n            }\r\n\r\n            let DataArray50 = roomUnder50.length * 38;\r\n            let DataArray100 = roomUnder100.length * 38;\r\n            let DataArray200 = roomUnder200.length * 38;\r\n            let DataArray500 = roomUnder500.length * 38;\r\n\r\n            var ground50Array = createArray(DataArray50);\r\n            var ground100Array = createArray(DataArray100);\r\n            var ground200Array = createArray(DataArray200);\r\n            var ground500Array = createArray(DataArray500);\r\n\r\n\r\n            let Column50 = roomUnder50.length\r\n            let Column100 = roomUnder100.length\r\n            let Column200 = roomUnder200.length\r\n            let Column500 = roomUnder500.length\r\n            let Row = 38\r\n\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more less than 50\r\nconst antSystem = () => {\r\n            //create 1d array for dataset 50\r\n            const array1D50 = (data) => {\r\n                var result = []\r\n\r\n                for(let i = 0; i< data; i++){\r\n                    result[i]= 100;\r\n                }\r\n                return result;\r\n            }\r\n            var AntArr50 = array1D50(DataArray50);\r\n\r\n            let extraData50 = []\r\n            let insertedData50 = []\r\n            const AntAlgoInsert50 = (array) => {\r\n                let test = []\r\n                let k = 0;\r\n                for(let x=0; x<filterData50.length;x++){\r\n                    test.push(filterData50[x]);\r\n                }\r\n                \r\n                for(let i = array.length-1;i>0;i--){\r\n                        if(k < test.length){\r\n                            let slot1 = test[k][9]\r\n                            if(slot1 == 2){\r\n                                    const j = Math.floor(Math.random()*(i+1));\r\n                                    if(array[i] == 100 && array[i+1] == 100){\r\n                                        array[i] = array[j];\r\n                                        array[i+1] = array[j+1];\r\n                                        array[j] = test[k];\r\n                                        array[j+1] = test[k];\r\n                                        insertedData50.push(test[k])\r\n                                    }   \r\n                                    else if(array[i]!=100 || array[i+1] != 100){\r\n                                        //test.push(test[k]);\r\n                                        extraData50.push(test[k]) // push data to another room\r\n                                    }                 \r\n                            }\r\n                            \r\n                        }\r\n                        //console.log(AntArr50.length/2)\r\n                        k++                        \r\n                }\r\n\r\n                //console.log(tempData)\r\n                return array;\r\n            }\r\n            var AntArrIns50 = AntAlgoInsert50(AntArr50);\r\n\r\n            const slot2Equal2for50 = (array) => {\r\n                let test = []\r\n                let k = 0;\r\n                //console.log(insertedData50);\r\n                // for(let x=0; x<filterData50.length;x++){\r\n                //     test.push(filterData50[x]);\r\n                // }\r\n                for(let i = array.length-1;i>0;i--){\r\n                        if(k < insertedData50.length){\r\n                            let slot2 = insertedData50[k][10]\r\n                            if(slot2 == 2){\r\n                                    const j = Math.floor(Math.random()*(i+1));\r\n                                    if(array[i-1] == 100 && array[i+2] == 100 ){\r\n                                        array[i-1] = 50;\r\n                                        array[i+2] = 50;\r\n                                    }\r\n\r\n                                    let indexArray = 0\r\n                                    let totalRoom = array.length / 38\r\n                                    for(let x= 1 ; x <= totalRoom ; x++){\r\n                                        indexArray = (x * 38)\r\n                                    }\r\n                                    for(let i = 0; i<array.length ; i++){\r\n                                        try{\r\n                                            for(let x= 1 ; x <= totalRoom ; x++){\r\n                                                indexArray = (x * 38)\r\n                                                if(array[i+indexArray] == 100 && array[i+indexArray] == 100 ){\r\n                                                    try{\r\n                                                        array[i+indexArray] = 0\r\n                                                        array[i+indexArray] = 0\r\n                                                    }catch{}\r\n                                                }\r\n                                                if(array[i-indexArray] == 100 && array[i-indexArray-1] == 100 ){\r\n                                                    try{\r\n                                                        array[i-indexArray] = 0\r\n                                                        array[i-indexArray-1] = 0\r\n                                                    }catch{}\r\n                                                }       \r\n                                            }\r\n                                        }catch{}\r\n                                    }\r\n                                    if(array[i] == 100 && array[i+1] == 100){\r\n                                        array[i] = array[j];\r\n                                        array[i+1] = array[j+1];\r\n                                        array[j] = insertedData50[k];\r\n                                        array[j+1] = insertedData50[k];\r\n                                    }   \r\n                                    else if(array[i]!=100 || array[i+1] != 100){\r\n                                        insertedData50.push(insertedData50[k]);\r\n                                    }\r\n                                    \r\n                                    if(array[i-1] == 50 && array[i+2] == 50 ){\r\n                                        array[i-1] = 100;\r\n                                        array[i+2] = 100;\r\n                                    }         \r\n                                    for(let i = 0; i<array.length ; i++){\r\n                                        try{\r\n                                            for(let x= 1 ; x <= totalRoom ; x++){\r\n                                                indexArray = (x * 38)\r\n                                                if(array[i+indexArray] == 0 && array[i+indexArray] == 0 ){\r\n                                                    try{\r\n                                                        array[i+indexArray] = 100\r\n                                                        array[i+indexArray] = 100\r\n                                                    }catch{}\r\n                                                }\r\n                                                if(array[i-indexArray] == 0 && array[i-indexArray-1] == 0 ){\r\n                                                    try{\r\n                                                        array[i-indexArray] = 100\r\n                                                        array[i-indexArray-1] = 100\r\n                                                    }catch{}\r\n                                                }       \r\n                                            }\r\n                                        }catch{}\r\n                                    } \r\n                            }\r\n                            \r\n                        }\r\n                        k++                        \r\n                }\r\n                return array;\r\n            }\r\n            slot2Equal2for50(AntArr50);\r\n\r\n            const slot2Equal1for50= (array) => {\r\n                let test = []\r\n                let k = 0;\r\n                // for(let x=0; x<filterData50.length;x++){\r\n                //     test.push(filterData50[x]);\r\n                // }\r\n                for(let i = array.length-1;i>0;i--){\r\n                        if(k < insertedData50.length){\r\n                            let slot2 = insertedData50[k][10]\r\n                            if(slot2 == 1){\r\n                                    const j = Math.floor(Math.random()*(i+1));\r\n                                    if(array[i-1] == 100 && array[i+2] == 100 ){\r\n                                        array[i-1] = 50;\r\n                                        array[i+2] = 50;\r\n                                    }\r\n\r\n                                    let indexArray = 0\r\n                                    let totalRoom = array.length / 38\r\n                                    for(let x= 1 ; x <= totalRoom ; x++){\r\n                                        indexArray = (x * 38)\r\n                                    }\r\n                                    for(let i = 0; i<array.length ; i++){\r\n                                        try{\r\n                                            for(let x= 1 ; x <= totalRoom ; x++){\r\n                                                indexArray = (x * 38)\r\n                                                if(array[i+indexArray] == 100 && array[i+indexArray] == 100 ){\r\n                                                    try{\r\n                                                        array[i+indexArray] = 0\r\n                                                        array[i+indexArray] = 0\r\n                                                    }catch{}\r\n                                                }\r\n                                                if(array[i-indexArray] == 100 && array[i-indexArray-1] == 100 ){\r\n                                                    try{\r\n                                                        array[i-indexArray] = 0\r\n                                                        array[i-indexArray-1] = 0\r\n                                                    }catch{}\r\n                                                }       \r\n                                            }\r\n                                        }catch{}\r\n                                    }\r\n                                    if(array[i] == 100 || array[i] == 50){\r\n                                        array[i] = array[j];\r\n                                        array[j] = insertedData50[k];\r\n                                    }   \r\n                                    else if(array[i]!=100 || array[i] != 50){\r\n                                        insertedData50.push(insertedData50[k]);\r\n                                    }\r\n                                    if(array[i-1] == 50 && array[i+2] == 50 ){\r\n                                        array[i-1] = 100;\r\n                                        array[i+2] = 100;\r\n                                    }                  \r\n                                    for(let i = 0; i<array.length ; i++){\r\n                                        try{\r\n                                            for(let x= 1 ; x <= totalRoom ; x++){\r\n                                                indexArray = (x * 38)\r\n                                                if(array[i+indexArray] == 0 && array[i+indexArray] == 0 ){\r\n                                                    try{\r\n                                                        array[i+indexArray] = 100\r\n                                                        array[i+indexArray] = 100\r\n                                                    }catch{}\r\n                                                }\r\n                                                if(array[i-indexArray] == 0 && array[i-indexArray-1] == 0 ){\r\n                                                    try{\r\n                                                        array[i-indexArray] = 100\r\n                                                        array[i-indexArray-1] = 100\r\n                                                    }catch{}\r\n                                                }       \r\n                                            }\r\n                                        }catch{}\r\n                                    }  \r\n                            }\r\n                            \r\n                        }\r\n                        k++                        \r\n                }\r\n                return array;\r\n            }\r\n\r\n            var Slot2_1_50 = slot2Equal1for50(AntArr50);\r\n            console.log(Slot2_1_50);\r\n\r\n            const checkAmountData50 = (array) => {\r\n                let count = 0\r\n                for(let i = 0; i < array.length; i++){\r\n                        if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined){\r\n                            count += 1\r\n                        }\r\n                }\r\n                return count\r\n            }\r\n            var checkAmount = checkAmountData50(AntArrIns50)\r\n            console.log(checkAmount);\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 50 but less than 100\r\n\r\n             //create 1d array for dataset 100\r\n             const array1D100 = (data) => {\r\n                var result = []\r\n\r\n                for(let i = 0; i< data; i++){\r\n                    result[i]= 100;\r\n                }\r\n                return result;\r\n            }\r\n            var AntArr100 = array1D100(DataArray100);\r\n            //console.log(AntArr200);\r\n\r\n            let extraData100 = []\r\n            let insertedData100 = []\r\n            const AntAlgoInsert100 = (array) => {\r\n                let test = []\r\n                let k = 0;\r\n                for(let x = 0 ; x < extraData50.length; x++){\r\n                    test.push(extraData50[x]);\r\n                }\r\n                \r\n                for(let x=0; x<filterData100.length;x++){\r\n                    test.push(filterData100[x]);\r\n                }\r\n                for(let i = array.length-1;i>0;i--){\r\n                        if(k < test.length){\r\n                            let slot1 = test[k][9]\r\n                            if(slot1 == 2){\r\n                                    const j = Math.floor(Math.random()*(i+1));\r\n                                    if(array[i] == 100 && array[i+1] == 100){\r\n                                        array[i] = array[j];\r\n                                        array[i+1] = array[j+1];\r\n                                        array[j] = test[k];\r\n                                        array[j+1] = test[k];\r\n                                        insertedData100.push(test[k]);\r\n                                    }   \r\n                                    else if(array[i]!=100 || array[i+1] != 100){\r\n                                        //test.push(test[k]);\r\n                                        extraData100.push(test[k]) // push data to another room\r\n                                    }                      \r\n                            }\r\n                            \r\n                        }\r\n                        k++                        \r\n                }\r\n\r\n                return array;\r\n            }\r\n            var AntArrIns100 = AntAlgoInsert100(AntArr100);\r\n\r\n            const slot2Equal2for100 = (array) => {\r\n                let test = []\r\n                let k = 0;\r\n                //console.log(insertedData100)\r\n                // console.log(testing.length)\r\n\r\n                // for(let x=0; x<filterData100.length;x++){\r\n                //     test.push(filterData100[x]);\r\n                // }\r\n\r\n                for(let i = array.length-1;i>0;i--){\r\n                        if(k < insertedData100.length){\r\n                            let slot2 = insertedData100[k][10]\r\n                            if(slot2 == 2){\r\n                                    const j = Math.floor(Math.random()*(i+1));\r\n                                    if(array[i-1] == 100 && array[i+2] == 100 ){\r\n                                        array[i-1] = 50;\r\n                                        array[i+2] = 50;\r\n                                    }\r\n\r\n                                    let indexArray = 0\r\n                                    let totalRoom = array.length / 38\r\n                                    for(let x= 1 ; x <= totalRoom ; x++){\r\n                                        indexArray = (x * 38)\r\n                                    }\r\n                                    for(let i = 0; i<array.length ; i++){\r\n                                        try{\r\n                                            for(let x= 1 ; x <= totalRoom ; x++){\r\n                                                indexArray = (x * 38)\r\n                                                if(array[i+indexArray] == 100 && array[i+indexArray] == 100 ){\r\n                                                    try{\r\n                                                        array[i+indexArray] = 0\r\n                                                        array[i+indexArray] = 0\r\n                                                    }catch{}\r\n                                                }\r\n                                                if(array[i-indexArray] == 100 && array[i-indexArray-1] == 100 ){\r\n                                                    try{\r\n                                                        array[i-indexArray] = 0\r\n                                                        array[i-indexArray-1] = 0\r\n                                                    }catch{}\r\n                                                }       \r\n                                            }\r\n                                        }catch{}\r\n                                    }\r\n                                    if(array[i] == 100 && array[i+1] == 100){\r\n                                        array[i] = array[j];\r\n                                        array[i+1] = array[j+1];\r\n                                        array[j] = insertedData100[k];\r\n                                        array[j+1] = insertedData100[k];\r\n                                    }   \r\n                                    else if(array[i]!=100 || array[i+1] != 100){\r\n                                        insertedData100.push(insertedData100[k]);\r\n                                    }\r\n                                    \r\n                                    if(array[i-1] == 50 && array[i+2] == 50 ){\r\n                                        array[i-1] = 100;\r\n                                        array[i+2] = 100;\r\n                                    }         \r\n                                    for(let i = 0; i<array.length ; i++){\r\n                                        try{\r\n                                            for(let x= 1 ; x <= totalRoom ; x++){\r\n                                                indexArray = (x * 38)\r\n                                                if(array[i+indexArray] == 0 && array[i+indexArray] == 0 ){\r\n                                                    try{\r\n                                                        array[i+indexArray] = 100\r\n                                                        array[i+indexArray] = 100\r\n                                                    }catch{}\r\n                                                }\r\n                                                if(array[i-indexArray] == 0 && array[i-indexArray-1] == 0 ){\r\n                                                    try{\r\n                                                        array[i-indexArray] = 100\r\n                                                        array[i-indexArray-1] = 100\r\n                                                    }catch{}\r\n                                                }       \r\n                                            }\r\n                                        }catch{}\r\n                                    }  \r\n                            }\r\n                            \r\n                        }\r\n                        k++                        \r\n                }\r\n                return array;\r\n            }\r\n            slot2Equal2for100(AntArr100);\r\n\r\n            const Slot2Equal1for100 = (array) => {\r\n                let test = []\r\n                let k = 0;\r\n                // for(let x=0; x<filterData100.length;x++){\r\n                //     test.push(filterData100[x]);\r\n                // }\r\n                for(let i = array.length-1;i>0;i--){\r\n                        if(k < insertedData100.length){\r\n                            let slot2 = insertedData100[k][10]\r\n                            if(slot2 == 1){\r\n                                    const j = Math.floor(Math.random()*(i+1));\r\n                                    if(array[i-1] == 100 && array[i+2] == 100 ){\r\n                                        array[i-1] = 50;\r\n                                        array[i+2] = 50;\r\n                                    }\r\n\r\n                                    let indexArray = 0\r\n                                    let totalRoom = array.length / 38\r\n                                    for(let x= 1 ; x <= totalRoom ; x++){\r\n                                        indexArray = (x * 38)\r\n                                    }\r\n                                    for(let i = 0; i<array.length ; i++){\r\n                                        try{\r\n                                            for(let x= 1 ; x <= totalRoom ; x++){\r\n                                                indexArray = (x * 38)\r\n                                                if(array[i+indexArray] == 100 && array[i+indexArray] == 100 ){\r\n                                                    try{\r\n                                                        array[i+indexArray] = 0\r\n                                                        array[i+indexArray] = 0\r\n                                                    }catch{}\r\n                                                }\r\n                                                if(array[i-indexArray] == 100 && array[i-indexArray-1] == 100 ){\r\n                                                    try{\r\n                                                        array[i-indexArray] = 0\r\n                                                        array[i-indexArray-1] = 0\r\n                                                    }catch{}\r\n                                                }       \r\n                                            }\r\n                                        }catch{}\r\n                                    }\r\n                                    if(array[i] == 100 || array[i] == 50){\r\n                                        array[i] = array[j];\r\n                                        array[j] = insertedData100[k];\r\n                                    }   \r\n                                    else if(array[i]!=100 || array[i] != 50){\r\n                                        insertedData100.push(insertedData100[k]);\r\n                                    }\r\n                                    if(array[i-1] == 50 && array[i+2] == 50 ){\r\n                                        array[i-1] = 100;\r\n                                        array[i+2] = 100;\r\n                                    }              \r\n                                    for(let i = 0; i<array.length ; i++){\r\n                                        try{\r\n                                            for(let x= 1 ; x <= totalRoom ; x++){\r\n                                                indexArray = (x * 38)\r\n                                                if(array[i+indexArray] == 0 && array[i+indexArray] == 0 ){\r\n                                                    try{\r\n                                                        array[i+indexArray] = 100\r\n                                                        array[i+indexArray] = 100\r\n                                                    }catch{}\r\n                                                }\r\n                                                if(array[i-indexArray] == 0 && array[i-indexArray-1] == 0 ){\r\n                                                    try{\r\n                                                        array[i-indexArray] = 100\r\n                                                        array[i-indexArray-1] = 100\r\n                                                    }catch{}\r\n                                                }       \r\n                                            }\r\n                                        }catch{}\r\n                                    }  \r\n                            }\r\n                            \r\n                        }\r\n                        k++                        \r\n                }\r\n                return array;\r\n            }\r\n\r\n            var Slot2_1_100 = Slot2Equal1for100(AntArr100);\r\n            console.log(Slot2_1_100);\r\n\r\n            const checkAmountData100 = (array) => {\r\n                let count = 0\r\n                for(let i = 0; i < array.length; i++){\r\n                        if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined){\r\n                            count += 1\r\n                        }\r\n                }\r\n                return count\r\n            }\r\n            var checkAmount = checkAmountData100(AntArrIns100)\r\n            console.log(checkAmount);\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 100 but less than 200\r\n\r\n             //create 1d array for dataset 200\r\n             const array1D200 = (data) => {\r\n                var result = []\r\n\r\n                for(let i = 0; i< data; i++){\r\n                    result[i]= 100;\r\n                }\r\n                return result;\r\n            }\r\n            var AntArr200 = array1D200(DataArray200);\r\n            //console.log(AntArr200);\r\n\r\n            let extraData200 = []\r\n            let insertedData200 = []\r\n            const AntAlgoInsert200 = (array) => {\r\n                let test = []\r\n                let k = 0;\r\n                for(let x = 0 ; x < extraData100.length; x++){\r\n                    test.push(extraData100[x]);\r\n                }\r\n                for(let x=0; x<filterData200.length;x++){\r\n                    test.push(filterData200[x]);\r\n                }\r\n                for(let i = array.length-1;i>0;i--){\r\n                        if(k < test.length){\r\n                            let slot1 = test[k][9]\r\n                            if(slot1 == 2){\r\n                                    const j = Math.floor(Math.random()*(i+1));\r\n                                    if(array[i] == 100 && array[i+1] == 100){\r\n                                        array[i] = array[j];\r\n                                        array[i+1] = array[j+1];\r\n                                        array[j] = test[k];\r\n                                        array[j+1] = test[k];\r\n                                        insertedData200.push(test[k]);\r\n                                    }   \r\n                                    else if(array[i]!=100 || array[i+1] != 100){\r\n                                        test.push(test[k]);\r\n                                    }                      \r\n                            }\r\n                            \r\n                        }\r\n                        k++                        \r\n                }\r\n\r\n                return array;\r\n            }\r\n            var AntArrIns200 = AntAlgoInsert200(AntArr200);\r\n\r\n            const slot2Equal2for200 = (array) => {\r\n                let test = []\r\n                let k = 0;\r\n                // for(let x=0; x<filterData200.length;x++){\r\n                //     test.push(filterData200[x]);\r\n                // }\r\n                for(let i = array.length-1;i>0;i--){\r\n                        if(k < insertedData200.length){\r\n                            let slot2 = insertedData200[k][10]\r\n                            if(slot2 == 2){\r\n                                    const j = Math.floor(Math.random()*(i+1));\r\n                                    if(array[i-1] == 100 && array[i+2] == 100 ){\r\n                                        array[i-1] = 50;\r\n                                        array[i+2] = 50;\r\n                                    }\r\n\r\n                                    let indexArray = 0\r\n                                    let totalRoom = array.length / 38\r\n                                    for(let x= 1 ; x <= totalRoom ; x++){\r\n                                        indexArray = (x * 38)\r\n                                    }\r\n                                    for(let i = 0; i<array.length ; i++){\r\n                                        try{\r\n                                            for(let x= 1 ; x <= totalRoom ; x++){\r\n                                                indexArray = (x * 38)\r\n                                                if(array[i+indexArray] == 100 && array[i+indexArray] == 100 ){\r\n                                                    try{\r\n                                                        array[i+indexArray] = 0\r\n                                                        array[i+indexArray] = 0\r\n                                                    }catch{}\r\n                                                }\r\n                                                if(array[i-indexArray] == 100 && array[i-indexArray-1] == 100 ){\r\n                                                    try{\r\n                                                        array[i-indexArray] = 0\r\n                                                        array[i-indexArray-1] = 0\r\n                                                    }catch{}\r\n                                                }       \r\n                                            }\r\n                                        }catch{}\r\n                                    }\r\n\r\n                                    if(array[i] == 100 && array[i+1] == 100){\r\n                                        array[i] = array[j];\r\n                                        array[i+1] = array[j+1];\r\n                                        array[j] = insertedData200[k];\r\n                                        array[j+1] = insertedData200[k];\r\n                                    }   \r\n                                    else if(array[i]!=100 || array[i+1] != 100){\r\n                                        insertedData200.push(insertedData200[k]);\r\n                                    }\r\n                                    \r\n                                    if(array[i-1] == 50 && array[i+2] == 50 ){\r\n                                        array[i-1] = 100;\r\n                                        array[i+2] = 100;\r\n                                    }         \r\n                                    for(let i = 0; i<array.length ; i++){\r\n                                        try{\r\n                                            for(let x= 1 ; x <= totalRoom ; x++){\r\n                                                indexArray = (x * 38)\r\n                                                if(array[i+indexArray] == 0 && array[i+indexArray] == 0 ){\r\n                                                    try{\r\n                                                        array[i+indexArray] = 100\r\n                                                        array[i+indexArray] = 100\r\n                                                    }catch{}\r\n                                                }\r\n                                                if(array[i-indexArray] == 0 && array[i-indexArray-1] == 0 ){\r\n                                                    try{\r\n                                                        array[i-indexArray] = 100\r\n                                                        array[i-indexArray-1] = 100\r\n                                                    }catch{}\r\n                                                }       \r\n                                            }\r\n                                        }catch{}\r\n                                    }  \r\n                            }\r\n                            \r\n                        }\r\n                        k++                        \r\n                }\r\n                return array;\r\n            }\r\n            slot2Equal2for200(AntArr200);\r\n\r\n            const Slot2Equal1for200 = (array) => {\r\n                let test = []\r\n                let k = 0;\r\n                // for(let x=0; x<filterData200.length;x++){\r\n                //     test.push(filterData200[x]);\r\n                // }\r\n                for(let i = array.length-1;i>0;i--){\r\n                        if(k < insertedData200.length){\r\n                            let slot2 = insertedData200[k][10]\r\n                            if(slot2 == 1){\r\n                                    const j = Math.floor(Math.random()*(i+1));\r\n                                    if(array[i-1] == 100 && array[i+2] == 100 ){\r\n                                        array[i-1] = 50;\r\n                                        array[i+2] = 50;\r\n                                    }\r\n\r\n                                    let indexArray = 0\r\n                                    let totalRoom = array.length / 38\r\n                                    for(let x= 1 ; x <= totalRoom ; x++){\r\n                                        indexArray = (x * 38)\r\n                                    }\r\n                                    for(let i = 0; i<array.length ; i++){\r\n                                        try{\r\n                                            for(let x= 1 ; x <= totalRoom ; x++){\r\n                                                indexArray = (x * 38)\r\n                                                if(array[i+indexArray] == 100 && array[i+indexArray] == 100 ){\r\n                                                    try{\r\n                                                        array[i+indexArray] = 0\r\n                                                        array[i+indexArray] = 0\r\n                                                    }catch{}\r\n                                                }\r\n                                                if(array[i-indexArray] == 100 && array[i-indexArray-1] == 100 ){\r\n                                                    try{\r\n                                                        array[i-indexArray] = 0\r\n                                                        array[i-indexArray-1] = 0\r\n                                                    }catch{}\r\n                                                }       \r\n                                            }\r\n                                        }catch{}\r\n                                    }\r\n                                    if(array[i] == 100 || array[i] == 50){\r\n                                        array[i] = array[j];\r\n                                        array[j] = insertedData200[k];\r\n                                    }   \r\n                                    else if(array[i]!=100 || array[i] != 50){\r\n                                        insertedData200.push(insertedData200[k]);\r\n                                    }\r\n                                    if(array[i-1] == 50 && array[i+2] == 50 ){\r\n                                        array[i-1] = 100;\r\n                                        array[i+2] = 100;\r\n                                    }      \r\n                                    for(let i = 0; i<array.length ; i++){\r\n                                        try{\r\n                                            for(let x= 1 ; x <= totalRoom ; x++){\r\n                                                indexArray = (x * 38)\r\n                                                if(array[i+indexArray] == 0 && array[i+indexArray] == 0 ){\r\n                                                    try{\r\n                                                        array[i+indexArray] = 100\r\n                                                        array[i+indexArray] = 100\r\n                                                    }catch{}\r\n                                                }\r\n                                                if(array[i-indexArray] == 0 && array[i-indexArray-1] == 0 ){\r\n                                                    try{\r\n                                                        array[i-indexArray] = 100\r\n                                                        array[i-indexArray-1] = 100\r\n                                                    }catch{}\r\n                                                }       \r\n                                            }\r\n                                        }catch{}\r\n                                    }                \r\n                            }\r\n                            \r\n                        }\r\n                        k++                        \r\n                }\r\n                return array;\r\n            }\r\n\r\n            var Slot2_1_200 = Slot2Equal1for200(AntArr200);\r\n            console.log(Slot2_1_200);\r\n\r\n            const checkAmountData200 = (array) => {\r\n                let count = 0\r\n                for(let i = 0; i < array.length; i++){\r\n                        if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined){\r\n                            count += 1\r\n                        }\r\n                }\r\n                return count\r\n            }\r\n            var checkAmount = checkAmountData200(AntArrIns200)\r\n            console.log(checkAmount);\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n    \r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 200 \r\n\r\n            //create 1d array for dataset 500\r\n            const array1D500 = (data) => {\r\n                var result = []\r\n\r\n                for(let i = 0; i< data; i++){\r\n                    result[i]= 100;\r\n                }\r\n                return result;\r\n            }\r\n            var AntArr500 = array1D500(DataArray500);\r\n            //console.log(AntArr500);\r\n\r\n            let insertedData500 = [];\r\n            const AntAlgoInsert500 = (array) => {\r\n                let test = []\r\n                let k = 0;\r\n                for(let x=0; x<filterData500.length;x++){\r\n                    test.push(filterData500[x]);\r\n                }\r\n                for(let i = array.length-1;i>0;i--){\r\n                        if(k < test.length){\r\n                            let slot1 = test[k][9]\r\n                            if(slot1 == 2){\r\n                                    const j = Math.floor(Math.random()*(i+1));\r\n                                    if(array[i] == 100 && array[i+1] == 100){\r\n                                        array[i] = array[j];\r\n                                        array[i+1] = array[j+1];\r\n                                        array[j] = test[k];\r\n                                        array[j+1] = test[k];\r\n                                        insertedData500.push(test[k]);\r\n                                    }   \r\n                                    else if(array[i]!=100 || array[i+1] != 100){\r\n                                        test.push(test[k]);\r\n                                    }                      \r\n                            }\r\n                            \r\n                        }\r\n                        k++                        \r\n                }\r\n\r\n                return array;\r\n            }\r\n            var AntArrIns500 = AntAlgoInsert500(AntArr500);\r\n\r\n            const slot2Equal2for500 = (array) => {\r\n                let test = []\r\n                let k = 0;\r\n                // for(let x=0; x<filterData500.length;x++){\r\n                //     test.push(filterData500[x]);\r\n                // }\r\n                for(let i = array.length-1;i>0;i--){\r\n                        if(k < insertedData500.length){\r\n                            let slot2 = insertedData500[k][10]\r\n                            if(slot2 == 2){\r\n                                    const j = Math.floor(Math.random()*(i+1));\r\n                                    if(array[i-1] == 100 && array[i+2] == 100 ){\r\n                                        array[i-1] = 50;\r\n                                        array[i+2] = 50;\r\n                                    }\r\n\r\n                                    let indexArray = 0\r\n                                    let totalRoom = array.length / 38\r\n                                    for(let x= 1 ; x <= totalRoom ; x++){\r\n                                        indexArray = (x * 38)\r\n                                    }\r\n                                    for(let i = 0; i<array.length ; i++){\r\n                                        try{\r\n                                            for(let x= 1 ; x <= totalRoom ; x++){\r\n                                                indexArray = (x * 38)\r\n                                                if(array[i+indexArray] == 100 && array[i+indexArray] == 100 ){\r\n                                                    try{\r\n                                                        array[i+indexArray] = 0\r\n                                                        array[i+indexArray] = 0\r\n                                                    }catch{}\r\n                                                }\r\n                                                if(array[i-indexArray] == 100 && array[i-indexArray-1] == 100 ){\r\n                                                    try{\r\n                                                        array[i-indexArray] = 0\r\n                                                        array[i-indexArray-1] = 0\r\n                                                    }catch{}\r\n                                                }       \r\n                                            }\r\n                                        }catch{}\r\n                                    }\r\n\r\n                                    if(array[i] == 100 && array[i+1] == 100){\r\n                                        array[i] = array[j];\r\n                                        array[i+1] = array[j+1];\r\n                                        array[j] = insertedData500[k];\r\n                                        array[j+1] = insertedData500[k];\r\n                                    }   \r\n                                    else if(array[i]!=100 || array[i+1] != 100){\r\n                                        insertedData500.push(insertedData500[k]);\r\n                                    }\r\n                                    if(array[i-1] == 50 && array[i+2] == 50 ){\r\n                                        array[i-1] = 100;\r\n                                        array[i+2] = 100;\r\n                                    }\r\n                                    for(let i = 0; i<array.length ; i++){\r\n                                        try{\r\n                                            for(let x= 1 ; x <= totalRoom ; x++){\r\n                                                indexArray = (x * 38)\r\n                                                if(array[i+indexArray] == 0 && array[i+indexArray] == 0 ){\r\n                                                    try{\r\n                                                        array[i+indexArray] = 100\r\n                                                        array[i+indexArray] = 100\r\n                                                    }catch{}\r\n                                                }\r\n                                                if(array[i-indexArray] == 0 && array[i-indexArray-1] == 0 ){\r\n                                                    try{\r\n                                                        array[i-indexArray] = 100\r\n                                                        array[i-indexArray-1] = 100\r\n                                                    }catch{}\r\n                                                }       \r\n                                            }\r\n                                        }catch{}\r\n                                    }            \r\n                            }\r\n                            \r\n                        }\r\n                        k++                        \r\n                }\r\n                return array;\r\n            }\r\n            slot2Equal2for500(AntArr500);\r\n\r\n            const slot2Equal1for500= (array) => {\r\n                let test = []\r\n                let k = 0;\r\n                // for(let x=0; x<filterData500.length;x++){\r\n                //     test.push(filterData500[x]);\r\n                // }\r\n                for(let i = array.length-1;i>0;i--){\r\n                        if(k < insertedData500.length){\r\n                            let slot2 = insertedData500[k][10]\r\n                            if(slot2 == 1){\r\n                                    const j = Math.floor(Math.random()*(i+1));\r\n                                    if(array[i-1] == 100 && array[i+2] == 100 ){\r\n                                        array[i-1] = 50;\r\n                                        array[i+2] = 50;\r\n                                    }\r\n\r\n                                    let indexArray = 0\r\n                                    let totalRoom = array.length / 38\r\n                                    for(let x= 1 ; x <= totalRoom ; x++){\r\n                                        indexArray = (x * 38)\r\n                                    }\r\n                                    for(let i = 0; i<array.length ; i++){\r\n                                        try{\r\n                                            for(let x= 1 ; x <= totalRoom ; x++){\r\n                                                indexArray = (x * 38)\r\n                                                if(array[i+indexArray] == 100 && array[i+indexArray] == 100 ){\r\n                                                    try{\r\n                                                        array[i+indexArray] = 0\r\n                                                        array[i+indexArray] = 0\r\n                                                    }catch{}\r\n                                                }\r\n                                                if(array[i-indexArray] == 100 && array[i-indexArray-1] == 100 ){\r\n                                                    try{\r\n                                                        array[i-indexArray] = 0\r\n                                                        array[i-indexArray-1] = 0\r\n                                                    }catch{}\r\n                                                }       \r\n                                            }\r\n                                        }catch{}\r\n                                    }\r\n\r\n                                    if(array[i] == 100 || array[i] == 50){\r\n                                        array[i] = array[j];\r\n                                        array[j] = insertedData500[k];\r\n                                    }   \r\n                                    else if(array[i]!=100 || array[i] != 50){\r\n                                        insertedData500.push(insertedData500[k]);\r\n                                    }\r\n                                    if(array[i-1] == 50 && array[i+2] == 50 ){\r\n                                        array[i-1] = 100;\r\n                                        array[i+2] = 100;\r\n                                    }\r\n                                    for(let i = 0; i<array.length ; i++){\r\n                                        try{\r\n                                            for(let x= 1 ; x <= totalRoom ; x++){\r\n                                                indexArray = (x * 38)\r\n                                                if(array[i+indexArray] == 0 && array[i+indexArray] == 0 ){\r\n                                                    try{\r\n                                                        array[i+indexArray] = 100\r\n                                                        array[i+indexArray] = 100\r\n                                                    }catch{}\r\n                                                }\r\n                                                if(array[i-indexArray] == 0 && array[i-indexArray-1] == 0 ){\r\n                                                    try{\r\n                                                        array[i-indexArray] = 100\r\n                                                        array[i-indexArray-1] = 100\r\n                                                    }catch{}\r\n                                                }       \r\n                                            }\r\n                                        }catch{}\r\n                                    }                  \r\n                            }\r\n                            \r\n                        }\r\n                        k++                        \r\n                }\r\n                return array;\r\n            }\r\n\r\n            var Slot2_1_500 = slot2Equal1for500(AntArr500);\r\n            console.log(Slot2_1_500);\r\n\r\n            const checkAmountData500 = (array) => {\r\n                let count = 0\r\n                for(let i = 0; i < array.length; i++){\r\n                        if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined){\r\n                            count += 1\r\n                        }\r\n                }\r\n                return count\r\n            }\r\n            var checkAmount = checkAmountData500(AntArrIns500)\r\n            console.log(checkAmount);\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Hard Constraint \r\n// H1: No student attend more than one class/ event at the same time\r\n// H2: The room is large enough to accomodate all of the student in attendace while also meeting the requirement \r\n// H3: At any given time, each room can onle have one course booked\r\n// H4: No student attend class during 12:00 pm -2:00 due to solat jumaat\r\n// H5: One teacher can only teach one class at one time.\r\n\r\n//Check for the H1 violation: same group attend more than 1 class at 1 time\r\n\r\nconst check1Group = (array) => {\r\n    let count =0\r\n    let indexArray = 0\r\n    let totalRoom = array.length / 38\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n        indexArray = (x * 38)\r\n    }\r\n    for(let i = 0; i<array.length ; i++){\r\n        try{\r\n            for(let x= 1 ; x <= totalRoom ; x++){\r\n                indexArray = (x * 38)\r\n                if(array[i+indexArray] != 100 && array[i+indexArray] != undefined ){\r\n                    try{\r\n                        if(array[i][6] == array[i+indexArray][6] && array[i+1][6] == array[i+indexArray+1][6] ){\r\n                            // console.log(array[i][6])\r\n                            // console.log(array[i+indexArray][6])\r\n                            // console.log(array[i+1][6])\r\n                            // console.log(array[i+indexArray+1][6])\r\n                            count +=1\r\n                        }\r\n                    }catch{}\r\n                }\r\n                if(array[i-indexArray] != 100 && array[i-indexArray] != undefined ){\r\n                    try{\r\n                        if(array[i][6] == array[i-indexArray][6] && array[i-1][6] == array[i-indexArray-1][6] ){\r\n                            // console.log(array[i][6])\r\n                            // console.log(array[i-indexArray][6])\r\n                            // console.log(array[i-1][6])\r\n                            // console.log(array[i-indexArray-1][6])\r\n                            count +=1\r\n                        }\r\n                    }catch{}\r\n                }       \r\n            }\r\n        }catch{}\r\n    }\r\n    return count\r\n\r\n}\r\n// var checkH1_50 = check1Group(AntArr50)\r\n// var checkH1_100 = check1Group(AntArr100)\r\n// var checkH1_200 = check1Group(AntArr200)\r\n// var checkH1_500 = check1Group(AntArr500)\r\n// console.log(\"Hard Constraint 1 violation: \"+ checkH1_50);\r\n// console.log(\"Hard Constraint 1 violation: \"+ checkH1_100);\r\n// console.log(\"Hard Constraint 1 violation: \"+ checkH1_200);\r\n// console.log(\"Hard Constraint 1 violation: \"+ checkH1_500);\r\n\r\n\r\n\r\n//Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\r\n\r\nconst checkRoomQuota = (array) => {\r\n    let count = 0\r\n    return count \r\n}\r\nvar checkH5_50 = checkRoomQuota(AntArr50)\r\nvar checkH5_100 = checkRoomQuota(AntArr100)\r\nvar checkH5_200 = checkRoomQuota(AntArr200)\r\nvar checkH5_500 = checkRoomQuota(AntArr500)\r\n\r\n\r\n//Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\r\nconst checkSolatJummat = (array) => {\r\n    let count = 0\r\n    return count \r\n}\r\nvar checkH5_50 = checkSolatJummat(AntArr50)\r\nvar checkH5_100 = checkSolatJummat(AntArr100)\r\nvar checkH5_200 = checkSolatJummat(AntArr200)\r\nvar checkH5_500 = checkSolatJummat(AntArr500)\r\n\r\n//Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\r\n\r\nconst check1Teacher = (array) => {\r\n    let count =0\r\n    let indexArray = 0\r\n    let totalRoom = array.length / 38\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n        indexArray = (x * 38)\r\n    }\r\n    for(let i = 0; i<array.length ; i++){\r\n        try{\r\n            for(let x= 1 ; x <= totalRoom ; x++){\r\n                indexArray = (x * 38)\r\n                if(array[i+indexArray] != 100 && array[i+indexArray] != undefined ){\r\n                    try{\r\n                        if(array[i][5] == array[i+indexArray][5] && array[i+1][5] == array[i+indexArray+1][5] ){\r\n                            // console.log(array[i][5])\r\n                            // console.log(array[i+indexArray][5])\r\n                            // console.log(array[i+1][5])\r\n                            // console.log(array[i+indexArray+1][5])\r\n                            count +=1\r\n                        }\r\n                    }catch{}\r\n                }\r\n                if(array[i-indexArray] != 100 && array[i-indexArray] != undefined ){\r\n                    try{\r\n                        if(array[i][5] == array[i-indexArray][5] && array[i-1][5] == array[i-indexArray-1][5] ){\r\n                            // console.log(array[i][5])\r\n                            // console.log(array[i-indexArray][5])\r\n                            // console.log(array[i-1][5])\r\n                            // console.log(array[i-indexArray-1][5])\r\n                            count +=1\r\n                        }\r\n                    }catch{}\r\n                }       \r\n            }\r\n        }catch{}\r\n    }\r\n    return count\r\n\r\n}\r\nvar checkH5_50 = check1Teacher(AntArr50)\r\nvar checkH5_100 = check1Teacher(AntArr100)\r\nvar checkH5_200 = check1Teacher(AntArr200)\r\nvar checkH5_500 = check1Teacher(AntArr500)\r\n// console.log(\"Hard Constraint 5 violation: \"+ checkH5_50);\r\n// console.log(\"Hard Constraint 5 violation: \"+ checkH5_100);\r\n// console.log(\"Hard Constraint 5 violation: \"+ checkH5_200);\r\n// console.log(\"Hard Constraint 5 violation: \"+ checkH5_500);\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n// Soft Constraint \r\n// S1: A student has a class schedule toward the end of the day\r\n// S2: A student have more than two class in a row\r\n\r\n\r\n//Check for the S1 violation: student have class at the end of the day\r\nconst checkEndOfClass = (array) => {\r\n    let count =0\r\n    let totalRoom = array.length / 38\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n        let indexArray = (x * 38)-1\r\n        if(array[indexArray] != 100 ){\r\n            count = 1\r\n        }\r\n    }\r\n    return count\r\n\r\n}\r\nvar checkS1_50 = checkEndOfClass(AntArr50)\r\nvar checkS1_100 = checkEndOfClass(AntArr100)\r\nvar checkS1_200 = checkEndOfClass(AntArr200)\r\nvar checkS1_500 = checkEndOfClass(AntArr500)\r\n// console.log(\"Soft Constraint 1 violation: \"+ checkS1_50);\r\n// console.log(\"Soft Constraint 1 violation: \"+ checkS1_100);\r\n// console.log(\"Soft Constraint 1 violation: \"+ checkS1_200);\r\n// console.log(\"Soft Constraint 1 violation: \"+ checkS1_500);\r\n\r\n//Check for the S2 violation: student have 2 class in a row\r\n\r\nconst check2ClassInARow = (array) => {\r\n    let count =0\r\n    for(let i = 0; i < array[i].length; i++){\r\n        if(array[i+2] != 100){\r\n            count = 1\r\n        }\r\n    }\r\n    return count\r\n\r\n}\r\nvar checkS2_50 = check2ClassInARow(AntArr50)\r\nvar checkS2_100 = check2ClassInARow(AntArr100)\r\nvar checkS2_200 = check2ClassInARow(AntArr200)\r\nvar checkS2_500 = check2ClassInARow(AntArr500)\r\nconsole.log(\"Soft Constraint 2 violation: \"+ checkS2_50);\r\nconsole.log(\"Soft Constraint 2 violation: \"+ checkS2_100);\r\nconsole.log(\"Soft Constraint 2 violation: \"+ checkS2_200);\r\nconsole.log(\"Soft Constraint 2 violation: \"+ checkS2_500);\r\n\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n//Check total Hard Constraint\r\n\r\nconst checkTotalHardContraint = () => {\r\n    let count =0\r\n    //let totalS1 = checkH1_50 + checkH1_100 + checkH1_200 + checkH1_500\r\n    let totalS2 = checkH5_50 + checkH5_100 + checkH5_200 + checkH5_500\r\n    // if(totalS1 != 0){\r\n    //     count +=1\r\n    // }\r\n    if(totalS2 != 0){\r\n        count +=1\r\n    }   \r\n    return count\r\n}\r\nvar checkTotalHardContraints = checkTotalHardContraint()\r\nconsole.log(\"Total Hard Constraint: \"+checkTotalHardContraints)\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nconst checkTotalSoftContraint = () => {\r\n    let count =0\r\n    let totalS1 = checkS1_50 + checkS1_100 + checkS1_200 + checkS1_500\r\n    let totalS2 = checkS2_50 + checkS2_100 + checkS2_200 + checkS2_500\r\n    if(totalS1 != 0){\r\n        count +=1\r\n    }\r\n    if(totalS2 != 0){\r\n        count +=1\r\n    }   \r\n    return count\r\n}\r\nvar checkTotalSoftContraints = checkTotalSoftContraint()\r\nconsole.log(\"Total Soft Constraint: \"+checkTotalSoftContraints)\r\n\r\n}\r\n\r\n// for(let i= 1; i <= 500; i++){\r\n//     antSystem();\r\n//     console.log(\"iterantion: \" + i)\r\n// }\r\nantSystem();\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n        }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {/* <Dataset  ertCourse={Course}/> */}\r\n            {/* {!isLoading && loadedFile} */}\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ArraySchedule;\r\n\r\n\r\n//result[i][j]=Course.splice(Math.floor(Math.random()* Course.length),1)[0] // create random placement of Course Value\r\n//const Schedule = new Array(10).fill(Array(5).fill(null));\r\n//console.log(Schedule);\r\n// const Course = [['TE1',4],['TE1',4],['TE1',4],['TE1',3],['TE1',4],['TE1',2],['TE1',4],['TE1',4],['TE1',4],['TE1',3]];\r\n//const Course = [['TE1',2],['TE2',2],['TE3',3],['TE4',4],['TE5',3],['TE6',4],['TE7',4],['TE8',2],['TE9',4]];\r\n//const Course = ['TE1','TE2','TE3','TE4','TE5','TE6','TE7','TE8','TE9'];"]},"metadata":{},"sourceType":"module"}