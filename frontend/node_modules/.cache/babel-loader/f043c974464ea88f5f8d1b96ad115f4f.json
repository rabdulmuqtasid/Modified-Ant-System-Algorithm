{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acit\\\\Desktop\\\\FYP Code\\\\FYP Code\\\\frontend\\\\src\\\\components\\\\RandomSchedule\\\\arraySchedule.js\";\nimport { find, forEach, indexOf } from \"lodash\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport _ from 'lodash';\nimport { CSVLink } from \"react-csv\";\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\nlet finalData = [];\n\nconst ArraySchedule = props => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedFile, setLoaadedFile] = useState(false);\n  const [roomData, setroomData] = useState();\n  const [courseData, setcourseData] = useState();\n  const [CsvData, setCsvData] = useState(); // const [Keys, setKeys] = useState();\n  //const [uploadedData, setUploadedData] = useState([]);\n  //console.log(\"props dataset:\"+ props.test)\n\n  const userId = useParams().userId;\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        // const response = await fetch('http://localhost:5000/api/user/');\n        //const response = await fetch('http://localhost:5000/api/files/users/624278b29a90a9077e2f65e4');\n        const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875'); //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\n        //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\n\n        const responsedata = await response.json();\n        let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset); // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\n\n        const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Room'], Dataset['Size']]); //Extract Room\n\n        setroomData([ertRoom]);\n        const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'], Dataset['Course Code'], Dataset['Course Name'], Dataset['Year'], Dataset['Semester'], Dataset['Lecturer'], Dataset['Group'], Dataset['HMS'], Dataset['Programme Code'], Dataset['Slot1'], Dataset['Slot2']]); //Extract Enrollment Quota\n\n        setcourseData([ertCourse]);\n\n        if (!response.ok) {\n          throw new Error(responsedata.message);\n        }\n\n        setLoaadedFile(stringifyData);\n        setIsLoading(true);\n      } catch (err) {\n        console.log(err.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, [userId]);\n\n  if (!isLoading && loadedFile) {\n    const testData = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const EnrollmentQuota = [];\n    const CourseCode = [];\n    const HMS = [];\n    const roomName = [];\n    const roomSize = [];\n    const filterData50 = [];\n    const filterData100 = [];\n    const filterData200 = [];\n    const filterData500 = [];\n    const dupeData = [];\n    const room = [];\n    room.push(roomData[0]);\n    let hardConstraintViolated = 0;\n    let softConstraintViolated = 0; //console.log(courseData[0][0][1]);\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      let enrollment = [courseData[0][i][0]];\n      let code = [courseData[0][i][1]];\n      let hms = [courseData[0][i][7]];\n      enrollment.reduce(function (results, item, index, array) {\n        results[index] = item;\n        EnrollmentQuota.push(item); //console.log(results)\n      }, {});\n      code.reduce(function (results, item, index, array) {\n        results[index] = item;\n        CourseCode.push(item); //console.log(results)\n      }, {});\n      hms.reduce(function (results, item, index, array) {\n        results[index] = item;\n        HMS.push(item); //console.log(results)\n      }, {});\n    }\n\n    for (let i = 0; i < roomData[0].length; i++) {\n      let name = [roomData[0][i][0]];\n      let size = [roomData[0][i][1]];\n      name.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomName.push(item); //console.log(results)\n      }, {});\n      size.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomSize.push(item); //console.log(results)\n      }, {});\n    }\n\n    const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      if (courseData[0][i][0] < 50) {\n        //for(let j = 0; j <courseData[0][i][7]; j++){\n        filterData50.push(courseData[0][i]); //}\n      }\n\n      if (courseData[0][i][0] >= 50 && courseData[0][i][0] < 100) {\n        //for(let j = 0; j <courseData[0][i][7]; j++){\n        filterData100.push(courseData[0][i]); //}\n      }\n\n      if (courseData[0][i][0] >= 100 && courseData[0][i][0] < 200) {\n        //for(let j = 0; j <courseData[0][i][7]; j++){\n        filterData200.push(courseData[0][i]); //}\n      }\n\n      if (courseData[0][i][0] >= 200 && courseData[0][i][0] < 500) {\n        //for(let j = 0; j <courseData[0][i][7]; j++){\n        filterData500.push(courseData[0][i]); //}\n      } //filterData.push(courseData[0][i]);\n\n    }\n\n    let roomUnder50 = [];\n    let roomUnder100 = [];\n    let roomUnder200 = [];\n    let roomUnder500 = [];\n\n    const checkNumberofRoom = () => {\n      for (let i = 0; i < roomData[0].length; i++) {\n        let room = roomData[0][i][1]; //console.log(roomData[0][i][1]);\n\n        if (room < 50) {\n          roomUnder50.push(room);\n        } else if (room > 50 && room < 100) {\n          roomUnder100.push(room);\n        } else if (room > 100 && room < 200) {\n          roomUnder200.push(room);\n        } else if (room > 200) {\n          roomUnder500.push(room);\n        }\n      }\n    };\n\n    checkNumberofRoom();\n\n    const createArray = data => {\n      var result = [];\n\n      for (let i = 0; i < data; i++) {\n        result[i] = [];\n      }\n\n      return result;\n    };\n\n    let DataArray50 = roomUnder50.length * 38;\n    let DataArray100 = roomUnder100.length * 38;\n    let DataArray200 = roomUnder200.length * 38;\n    let DataArray500 = roomUnder500.length * 38;\n    var ground50Array = createArray(DataArray50);\n    var ground100Array = createArray(DataArray100);\n    var ground200Array = createArray(DataArray200);\n    var ground500Array = createArray(DataArray500);\n    let Column50 = roomUnder50.length;\n    let Column100 = roomUnder100.length;\n    let Column200 = roomUnder200.length;\n    let Column500 = roomUnder500.length;\n    let Row = 38; //----------------------------------------------------------------------------------------------------------------------------------------\n\n    const antSystem = () => {\n      //create 1d array for dataset 50\n      const array1D50 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr50 = array1D50(DataArray50);\n      let extraData50_Slot2_2 = [];\n      let extraData50_Slot2_1 = [];\n      let insertedData50_Slot2_2 = [];\n      let insertedData50_Slot2_1 = [];\n\n      const slot2Equal2for50 = array => {\n        let test = [];\n        let k = 0;\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < insertedData50_Slot2_2.length) {\n            let slot2 = insertedData50_Slot2_2[k][10];\n\n            if (slot2 == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i + 1] = array[j + 1];\n                array[j] = insertedData50_Slot2_2[k];\n                array[j + 1] = insertedData50_Slot2_2[k];\n              } else if (array[i] != 100 || array[i + 1] != 100) {\n                //insertedData50_Slot2_2.push(insertedData50_Slot2_2[k]);\n                extraData50_Slot2_2.push(insertedData50_Slot2_2[k]);\n              }\n            }\n          }\n\n          k++;\n        }\n\n        return array;\n      }; //slot2Equal2for50(AntArr50);\n      //slot2Equal2for50(AntArr50);\n\n\n      const slot2Equal1for50 = array => {\n        let test = [];\n        let k = 0;\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < insertedData50_Slot2_1.length) {\n            let slot2 = insertedData50_Slot2_1[k][10];\n\n            if (slot2 == 1) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100 || array[i] == 50) {\n                array[i] = array[j];\n                array[j] = insertedData50_Slot2_1[k];\n              } else if (array[i] != 100 || array[i] != 50) {\n                extraData50_Slot2_1.push(insertedData50_Slot2_1[k]);\n              }\n            }\n          }\n\n          k++;\n        }\n\n        return array;\n      }; //slot2Equal1for50(AntArr50);\n\n\n      const AntAlgoInsert50 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n\n        for (let x = 0; x < filterData50.length; x++) {\n          test.push(filterData50[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let slot1 = test[k][9];\n\n            if (slot1 == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i + 1] = array[j + 1];\n                array[j] = test[k];\n                array[j + 1] = test[k];\n                let slot2 = test[k][10];\n                let indexArray = 0;\n                let totalRoom = array.length / 38;\n\n                for (let x = 1; x <= totalRoom; x++) {\n                  indexArray = x * 38;\n                }\n\n                for (let i = 0; i < array.length; i++) {\n                  try {\n                    for (let x = 1; x <= totalRoom; x++) {\n                      indexArray = x * 38;\n\n                      if (array[j + indexArray] == 100 && array[j + indexArray + 1] == 100) {\n                        try {\n                          array[j + indexArray] = 0;\n                          array[j + indexArray + 1] = 0;\n                        } catch {}\n                      }\n\n                      if (array[j - indexArray] == 100 && array[j - indexArray - 1] == 100) {\n                        try {\n                          array[j - indexArray] = 0;\n                          array[j - indexArray - 1] = 0;\n                        } catch {}\n                      }\n                    }\n                  } catch {}\n                }\n\n                if (slot2 == 2) {\n                  insertedData50_Slot2_2.push(test[k]); //slot2Equal2for50(insertedData50_Slot2_2);\n\n                  if (k2 < insertedData50_Slot2_2.length) {\n                    let slot2 = insertedData50_Slot2_2[k2][10];\n\n                    if (slot2 == 2) {\n                      const j = Math.floor(Math.random() * (i + 1));\n\n                      if (array[i] == 100 && array[i + 1] == 100) {\n                        array[i] = array[j];\n                        array[i + 1] = array[j + 1];\n                        array[j] = insertedData50_Slot2_2[k2];\n                        array[j + 1] = insertedData50_Slot2_2[k2];\n                      } else if (array[i] != 100 || array[i + 1] != 100) {\n                        extraData50_Slot2_2.push(insertedData50_Slot2_2[k2]);\n                      }\n                    }\n                  }\n\n                  k2++;\n                }\n\n                if (slot2 == 1) {\n                  insertedData50_Slot2_1.push(test[k]); //slot2Equal1for50(insertedData50_Slot2_1);\n\n                  if (k3 < insertedData50_Slot2_1.length) {\n                    let slot2 = insertedData50_Slot2_1[k3][10];\n\n                    if (slot2 == 1) {\n                      const j = Math.floor(Math.random() * (i + 1));\n\n                      if (array[i] == 100) {\n                        array[i] = array[j];\n                        array[j] = insertedData50_Slot2_1[k3];\n                      } else if (array[i] != 100) {\n                        extraData50_Slot2_1.push(insertedData50_Slot2_1[k3]);\n                      }\n                    }\n                  }\n\n                  k3++;\n                }\n\n                for (let i = 0; i < array.length; i++) {\n                  try {\n                    for (let x = 1; x <= totalRoom; x++) {\n                      indexArray = x * 38;\n\n                      if (array[j + indexArray] == 0 && array[j + indexArray + 1] == 0) {\n                        try {\n                          array[j + indexArray] = 100;\n                          array[j + indexArray + 1] = 100;\n                        } catch {}\n                      }\n\n                      if (array[j - indexArray] == 0 && array[j - indexArray - 1] == 0) {\n                        try {\n                          array[j - indexArray] = 100;\n                          array[j - indexArray - 1] = 100;\n                        } catch {}\n                      }\n                    }\n                  } catch {}\n                }\n              } else if (array[i] != 100 || array[i + 1] != 100) {\n                test.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        }\n\n        return array;\n      };\n\n      var AntArrIns50 = AntAlgoInsert50(AntArr50);\n\n      const checkAmountData50 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount = checkAmountData50(AntArrIns50); //console.log(AntArrIns50)\n\n      console.log(checkAmount); // console.log(extraData50_Slot2_2)\n      // console.log(extraData50_Slot2_1)\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Data is more than or equal to 50 but less than 100\n      //create 1d array for dataset 100\n\n      const array1D100 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr100 = array1D100(DataArray100); //console.log(AntArr200);\n\n      let extraData100_Slot2_2 = [];\n      let extraData100_Slot2_1 = [];\n      let insertedData100_Slot2_2 = [];\n      let insertedData100_Slot2_1 = [];\n\n      const slot2Equal2for100 = array => {\n        let k = 0;\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < extraData50_Slot2_2.length) {\n            let slot2 = extraData50_Slot2_2[k][10];\n\n            if (slot2 == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i + 1] = array[j + 1];\n                array[j] = extraData50_Slot2_2[k];\n                array[j + 1] = extraData50_Slot2_2[k];\n              } else if (array[i] != 100 || array[i + 1] != 100) {\n                extraData50_Slot2_2.push(extraData50_Slot2_2[k]);\n              }\n            }\n          }\n\n          k++;\n        }\n\n        return array;\n      };\n\n      var Slot2_1_100 = slot2Equal2for100(AntArr100);\n\n      const slot2Equal1for100 = array => {\n        let test = [];\n        let k = 0; // for(let x=0; x<extraData50_Slot2_1.length;x++){\n        //     insertedData100_Slot2_1.push(extraData50_Slot2_1[x]);\n        // }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < extraData50_Slot2_1.length) {\n            let slot2 = extraData50_Slot2_1[k][10];\n\n            if (slot2 == 1) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                array[i] = array[j];\n                array[j] = extraData50_Slot2_1[k];\n              } else if (array[i] != 1000) {\n                // extraData100_Slot2_1.push(extraData50_Slot2_1[k]);\n                extraData50_Slot2_1.push(extraData50_Slot2_1[k]);\n              }\n            }\n          }\n\n          k++;\n        }\n\n        return array;\n      };\n\n      slot2Equal1for100(AntArr100);\n\n      const AntAlgoInsert100 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n\n        for (let x = 0; x < filterData100.length; x++) {\n          test.push(filterData100[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let slot1 = test[k][9];\n\n            if (slot1 == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i + 1] = array[j + 1];\n                array[j] = test[k];\n                array[j + 1] = test[k]; //insertedData100.push(test[k]);\n\n                let slot2 = test[k][10];\n                let indexArray = 0;\n                let totalRoom = array.length / 38;\n\n                for (let x = 1; x <= totalRoom; x++) {\n                  indexArray = x * 38;\n                }\n\n                for (let i = 0; i < array.length; i++) {\n                  try {\n                    for (let x = 1; x <= totalRoom; x++) {\n                      indexArray = x * 38;\n\n                      if (array[j + indexArray] == 100 && array[j + indexArray + 1] == 100) {\n                        try {\n                          array[j + indexArray] = 0;\n                          array[j + indexArray + 1] = 0;\n                        } catch {}\n                      }\n\n                      if (array[j - indexArray] == 100 && array[j - indexArray - 1] == 100) {\n                        try {\n                          array[j - indexArray] = 0;\n                          array[j - indexArray - 1] = 0;\n                        } catch {}\n                      }\n                    }\n                  } catch {}\n                }\n\n                if (slot2 == 2) {\n                  insertedData100_Slot2_2.push(test[k]); // slot2Equal2for100(insertedData100_Slot2_2);\n\n                  if (k2 < insertedData100_Slot2_2.length) {\n                    let slot2 = insertedData100_Slot2_2[k2][10];\n\n                    if (slot2 == 2) {\n                      const j = Math.floor(Math.random() * (i + 1));\n\n                      if (array[i] == 100 && array[i + 1] == 100) {\n                        array[i] = array[j];\n                        array[i + 1] = array[j + 1];\n                        array[j] = insertedData100_Slot2_2[k2];\n                        array[j + 1] = insertedData100_Slot2_2[k2];\n                      } else if (array[i] != 100 || array[i + 1] != 100) {\n                        extraData100_Slot2_2.push(insertedData100_Slot2_2[k2]);\n                      }\n                    }\n                  }\n\n                  k2++;\n                }\n\n                if (slot2 == 1) {\n                  insertedData100_Slot2_1.push(test[k]); //slot2Equal1for100(insertedData100_Slot2_1);\n\n                  if (k3 < insertedData100_Slot2_1.length) {\n                    let slot2 = insertedData100_Slot2_1[k3][10];\n\n                    if (slot2 == 1) {\n                      const j = Math.floor(Math.random() * (i + 1));\n\n                      if (array[i] == 100) {\n                        array[i] = array[j];\n                        array[j] = insertedData100_Slot2_1[k3];\n                      } else if (array[i] != 100) {\n                        extraData100_Slot2_1.push(insertedData100_Slot2_1[k3]);\n                      }\n                    }\n                  }\n\n                  k3++;\n                }\n\n                for (let i = 0; i < array.length; i++) {\n                  try {\n                    for (let x = 1; x <= totalRoom; x++) {\n                      indexArray = x * 38;\n\n                      if (array[j + indexArray] == 0 && array[j + indexArray + 1] == 0) {\n                        try {\n                          array[j + indexArray] = 100;\n                          array[j + indexArray + 1] = 100;\n                        } catch {}\n                      }\n\n                      if (array[j - indexArray] == 0 && array[j - indexArray - 1] == 0) {\n                        try {\n                          array[j - indexArray] = 100;\n                          array[j - indexArray - 1] = 100;\n                        } catch {}\n                      }\n                    }\n                  } catch {}\n                }\n              } else if (array[i] != 100 || array[i + 1] != 100) {\n                test.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        }\n\n        return array;\n      };\n\n      var AntArrIns100 = AntAlgoInsert100(AntArr100);\n\n      const checkAmountData100 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount = checkAmountData100(AntArrIns100); //console.log(AntArrIns100)\n\n      console.log(checkAmount); // console.log(extraData100_Slot2_2)\n      // console.log(extraData100_Slot2_1)\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Data is more than or equal to 100 but less than 200\n      //create 1d array for dataset 200\n\n      const array1D200 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr200 = array1D200(DataArray200); //console.log(AntArr200);\n\n      let extraData200_Slot2_2 = [];\n      let extraData200_Slot2_1 = [];\n      let insertedData200_Slot2_2 = [];\n      let insertedData200_Slot2_1 = [];\n\n      const slot2Equal2for200 = array => {\n        let test = [];\n        let k = 0;\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < extraData100_Slot2_2.length) {\n            let slot2 = extraData100_Slot2_2[k][10];\n\n            if (slot2 == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i + 1] = array[j + 1];\n                array[j] = extraData100_Slot2_2[k];\n                array[j + 1] = extraData100_Slot2_2[k];\n              } else if (array[i] != 100 || array[i + 1] != 100) {\n                //extraData200_Slot2_2.push(insertedData200_Slot2_2[k]);\n                extraData100_Slot2_2.push(extraData100_Slot2_2[k]);\n              }\n            }\n          }\n\n          k++;\n        }\n\n        return array;\n      };\n\n      slot2Equal2for200(AntArr200);\n\n      const Slot2Equal1for200 = array => {\n        let test = [];\n        let k = 0;\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < extraData100_Slot2_1.length) {\n            let slot2 = extraData100_Slot2_1[k][10];\n\n            if (slot2 == 1) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                array[i] = array[j];\n                array[j] = extraData100_Slot2_1[k];\n              } else if (array[i] != 100) {\n                //extraData200_Slot2_1.push(insertedData200_Slot2_1[k]);\n                extraData100_Slot2_1.push(extraData100_Slot2_1[k]);\n              }\n            }\n          }\n\n          k++;\n        }\n\n        return array;\n      };\n\n      var Slot2_1_200 = Slot2Equal1for200(AntArr200); //console.log(Slot2_1_200);\n\n      const AntAlgoInsert200 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n\n        for (let x = 0; x < filterData200.length; x++) {\n          test.push(filterData200[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let slot1 = test[k][9];\n\n            if (slot1 == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i + 1] = array[j + 1];\n                array[j] = test[k];\n                array[j + 1] = test[k]; //insertedData100.push(test[k]);\n\n                let slot2 = test[k][10];\n                let indexArray = 0;\n                let totalRoom = array.length / 38;\n\n                for (let x = 1; x <= totalRoom; x++) {\n                  indexArray = x * 38;\n                }\n\n                for (let i = 0; i < array.length; i++) {\n                  try {\n                    for (let x = 1; x <= totalRoom; x++) {\n                      indexArray = x * 38;\n\n                      if (array[j + indexArray] == 100 && array[j + indexArray + 1] == 100) {\n                        try {\n                          array[j + indexArray] = 0;\n                          array[j + indexArray + 1] = 0;\n                        } catch {}\n                      }\n\n                      if (array[j - indexArray] == 100 && array[j - indexArray - 1] == 100) {\n                        try {\n                          array[j - indexArray] = 0;\n                          array[j - indexArray - 1] = 0;\n                        } catch {}\n                      }\n                    }\n                  } catch {}\n                }\n\n                if (slot2 == 2) {\n                  insertedData200_Slot2_2.push(test[k]); // slot2Equal2for100(insertedData100_Slot2_2);\n\n                  if (k2 < insertedData200_Slot2_2.length) {\n                    let slot2 = insertedData200_Slot2_2[k2][10];\n\n                    if (slot2 == 2) {\n                      const j = Math.floor(Math.random() * (i + 1));\n\n                      if (array[i] == 100 && array[i + 1] == 100) {\n                        array[i] = array[j];\n                        array[i + 1] = array[j + 1];\n                        array[j] = insertedData200_Slot2_2[k2];\n                        array[j + 1] = insertedData200_Slot2_2[k2];\n                      } else if (array[i] != 100 || array[i + 1] != 100) {\n                        //extraData200_Slot2_2.push(insertedData200_Slot2_2[k2]);\n                        insertedData200_Slot2_2.push(insertedData200_Slot2_2[k2]);\n                      }\n                    }\n                  }\n\n                  k2++;\n                }\n\n                if (slot2 == 1) {\n                  insertedData200_Slot2_1.push(test[k]); //slot2Equal1for100(insertedData100_Slot2_1);\n\n                  if (k3 < insertedData200_Slot2_1.length) {\n                    let slot2 = insertedData200_Slot2_1[k3][10];\n\n                    if (slot2 == 1) {\n                      const j = Math.floor(Math.random() * (i + 1));\n\n                      if (array[i] == 100) {\n                        array[i] = array[j];\n                        array[j] = insertedData200_Slot2_1[k3];\n                      } else if (array[i] != 100) {\n                        //extraData200_Slot2_1.push(insertedData200_Slot2_1[k3]);\n                        insertedData200_Slot2_1.push(insertedData200_Slot2_1[k3]);\n                      }\n                    }\n                  }\n\n                  k3++;\n                }\n\n                for (let i = 0; i < array.length; i++) {\n                  try {\n                    for (let x = 1; x <= totalRoom; x++) {\n                      indexArray = x * 38;\n\n                      if (array[j + indexArray] == 0 && array[j + indexArray + 1] == 0) {\n                        try {\n                          array[j + indexArray] = 100;\n                          array[j + indexArray + 1] = 100;\n                        } catch {}\n                      }\n\n                      if (array[j - indexArray] == 0 && array[j - indexArray - 1] == 0) {\n                        try {\n                          array[j - indexArray] = 100;\n                          array[j - indexArray - 1] = 100;\n                        } catch {}\n                      }\n                    }\n                  } catch {}\n                }\n              } else if (array[i] != 100 || array[i + 1] != 100) {\n                test.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        }\n\n        return array;\n      };\n\n      var AntArrIns200 = AntAlgoInsert200(AntArr200);\n\n      const checkAmountData200 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount = checkAmountData200(AntArrIns200); //console.log(AntArrIns200)\n\n      console.log(checkAmount); //----------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Data is more than or equal to 200 \n      //create 1d array for dataset 500\n\n      const array1D500 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr500 = array1D500(DataArray500); //console.log(AntArr500);\n\n      let extraData500_Slot2_2 = [];\n      let extraData500_Slot2_1 = [];\n      let insertedData500_Slot2_2 = [];\n      let insertedData500_Slot2_1 = [];\n\n      const slot2Equal2for500 = array => {\n        let k = 0;\n\n        for (let i = 0; i < extraData500_Slot2_2.length; i++) {\n          extraData200_Slot2_2.push(extraData500_Slot2_2[i]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < extraData200_Slot2_2.length) {\n            let slot2 = extraData200_Slot2_2[k][10];\n\n            if (slot2 == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i + 1] = array[j + 1];\n                array[j] = extraData200_Slot2_2[k];\n                array[j + 1] = extraData200_Slot2_2[k];\n              } else if (array[i] != 100 || array[i + 1] != 100) {\n                //extraData200_Slot2_2.push(insertedData200_Slot2_2[k]);\n                extraData200_Slot2_2.push(extraData200_Slot2_2[k]);\n              }\n            }\n          }\n\n          k++;\n        }\n\n        return array;\n      };\n\n      slot2Equal2for500(AntArr500);\n\n      const slot2Equal1for500 = array => {\n        let test = [];\n        let k = 0;\n\n        for (let i = 0; i < extraData500_Slot2_1.length; i++) {\n          extraData200_Slot2_1.push(extraData500_Slot2_1[i]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < extraData200_Slot2_1.length) {\n            let slot2 = extraData200_Slot2_1[k][10];\n\n            if (slot2 == 1) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                array[i] = array[j];\n                array[j] = extraData200_Slot2_1[k];\n              } else if (array[i] != 100) {\n                //extraData200_Slot2_1.push(insertedData200_Slot2_1[k]);\n                extraData200_Slot2_1.push(extraData200_Slot2_1[k]);\n              }\n            }\n          }\n\n          k++;\n        }\n\n        return array;\n      };\n\n      var Slot2_1_500 = slot2Equal1for500(AntArr500);\n\n      const AntAlgoInsert500 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n\n        for (let x = 0; x < filterData500.length; x++) {\n          test.push(filterData500[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let slot1 = test[k][9];\n\n            if (slot1 == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100 && array[i + 1] == 100) {\n                array[i] = array[j];\n                array[i + 1] = array[j + 1];\n                array[j] = test[k];\n                array[j + 1] = test[k]; //insertedData100.push(test[k]);\n\n                let slot2 = test[k][10];\n\n                if (slot2 == 2) {\n                  insertedData500_Slot2_2.push(test[k]); // slot2Equal2for100(insertedData100_Slot2_2);\n\n                  if (k2 < insertedData500_Slot2_2.length) {\n                    let slot2 = insertedData500_Slot2_2[k2][10];\n\n                    if (slot2 == 2) {\n                      const j = Math.floor(Math.random() * (i + 1));\n\n                      if (array[i] == 100 && array[i + 1] == 100) {\n                        array[i] = array[j];\n                        array[i + 1] = array[j + 1];\n                        array[j] = insertedData500_Slot2_2[k2];\n                        array[j + 1] = insertedData500_Slot2_2[k2];\n                      } else if (array[i] != 100 || array[i + 1] != 100) {\n                        //insertedData500_Slot2_2[k2].push(insertedData500_Slot2_2[k2]);\n                        extraData500_Slot2_2.push(insertedData500_Slot2_2[k2]);\n                      }\n                    }\n                  }\n\n                  k2++;\n                }\n\n                if (slot2 == 1) {\n                  insertedData500_Slot2_1.push(test[k]); //slot2Equal1for100(insertedData100_Slot2_1);\n\n                  if (k3 < insertedData500_Slot2_1.length) {\n                    let slot2 = insertedData500_Slot2_1[k3][10];\n\n                    if (slot2 == 1) {\n                      const j = Math.floor(Math.random() * (i + 1));\n\n                      if (array[i] == 100) {\n                        array[i] = array[j];\n                        array[j] = insertedData500_Slot2_1[k3];\n                      } else if (array[i] != 100) {\n                        // insertedData500_Slot2_1[k3].push(insertedData500_Slot2_1[k3]);\n                        extraData500_Slot2_1.push(insertedData500_Slot2_1[k3]);\n                      }\n                    }\n                  }\n\n                  k3++;\n                }\n              } else if (array[i] != 100 || array[i + 1] != 100) {\n                test.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        }\n\n        return array;\n      };\n\n      var AntArrIns500 = AntAlgoInsert500(AntArr500); //console.log(extraData500_Slot2_2)\n\n      const checkAmountData500 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount = checkAmountData500(AntArrIns500); //console.log(AntArrIns500)\n\n      console.log(checkAmount); //----------------------------------------------------------------------------------------------------------------------------------------\n      // Hard Constraint \n      // H1: No student attend more than one class/ event at the same time\n      // H2: The room is large enough to accomodate all of the student in attendace while also meeting the requirement \n      // H3: At any given time, each room can onle have one course booked\n      // H4: No student attend class during 12:00 pm -2:00 due to solat jumaat\n      // H5: One teacher can only teach one class at one time.\n      //Check for the H1 violation: same group attend more than 1 class at 1 time\n\n      const check1Group = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n        }\n\n        for (let i = 0; i < array.length; i++) {\n          try {\n            for (let x = 1; x <= totalRoom; x++) {\n              indexArray = x * 38;\n\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined) {\n                try {\n                  if (array[i][6] == array[i + indexArray][6] && array[i + 1][6] == array[i + indexArray + 1][6] && array[i][3] == array[i + indexArray][3] && array[i + 1][3] == array[i + indexArray + 1][3]) {\n                    try {\n                      console.log(array[i][6]);\n                      console.log(array[i + indexArray][6]);\n                      count += 1;\n                    } catch {}\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH1_50 = check1Group(AntArr50);\n      var checkH1_100 = check1Group(AntArr100);\n      var checkH1_200 = check1Group(AntArr200);\n      var checkH1_500 = check1Group(AntArr500);\n      console.log(\"Hard Constraint 1 violation: \" + checkH1_50);\n      console.log(\"Hard Constraint 1 violation: \" + checkH1_100);\n      console.log(\"Hard Constraint 1 violation: \" + checkH1_200);\n      console.log(\"Hard Constraint 1 violation: \" + checkH1_500); //Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\n\n      const checkRoomQuota = array => {\n        let count = 0;\n        return count;\n      }; // var checkH5_50 = checkRoomQuota(AntArr50)\n      // var checkH5_100 = checkRoomQuota(AntArr100)\n      // var checkH5_200 = checkRoomQuota(AntArr200)\n      // var checkH5_500 = checkRoomQuota(AntArr500)\n      //Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\n\n\n      const checkSolatJummat = array => {\n        let count = 0;\n        return count;\n      }; // var checkH5_50 = checkSolatJummat(AntArr50)\n      // var checkH5_100 = checkSolatJummat(AntArr100)\n      // var checkH5_200 = checkSolatJummat(AntArr200)\n      // var checkH5_500 = checkSolatJummat(AntArr500)\n      //Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\n\n\n      const check1Teacher = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n        }\n\n        for (let i = 0; i < array.length; i++) {\n          try {\n            for (let x = 1; x <= totalRoom; x++) {\n              indexArray = x * 38;\n\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined) {\n                try {\n                  if (array[i][5] == array[i + indexArray][5] && array[i + 1][5] == array[i + indexArray + 1][5]) {\n                    count += 1;\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH5_50 = check1Teacher(AntArr50);\n      var checkH5_100 = check1Teacher(AntArr100);\n      var checkH5_200 = check1Teacher(AntArr200);\n      var checkH5_500 = check1Teacher(AntArr500);\n      console.log(\"Hard Constraint 5 violation: \" + checkH5_50);\n      console.log(\"Hard Constraint 5 violation: \" + checkH5_100);\n      console.log(\"Hard Constraint 5 violation: \" + checkH5_200);\n      console.log(\"Hard Constraint 5 violation: \" + checkH5_500); //----------------------------------------------------------------------------------------------------------------------------------------\n      // Soft Constraint \n      // S1: A student has a class schedule toward the end of the day\n      // S2: A student have more than two class in a row\n      //Check for the S1 violation: student have class at the end of the day\n\n      const checkEndOfClass = array => {\n        let count = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          let indexArray = x * 38 - 1;\n\n          if (array[indexArray] != 100) {\n            count = 1;\n          }\n        }\n\n        return count;\n      }; // var checkS1_50 = checkEndOfClass(AntArr50)\n      // var checkS1_100 = checkEndOfClass(AntArr100)\n      // var checkS1_200 = checkEndOfClass(AntArr200)\n      // var checkS1_500 = checkEndOfClass(AntArr500)\n      // console.log(\"Soft Constraint 1 violation: \"+ checkS1_50);\n      // console.log(\"Soft Constraint 1 violation: \"+ checkS1_100);\n      // console.log(\"Soft Constraint 1 violation: \"+ checkS1_200);\n      // console.log(\"Soft Constraint 1 violation: \"+ checkS1_500);\n      //Check for the S2 violation: student have 2 class in a row\n\n\n      const check2ClassInARow = array => {\n        let count = 0;\n\n        for (let i = 0; i < array[i].length; i++) {\n          if (array[i + 2] != 100) {\n            count = 1;\n          }\n        }\n\n        return count;\n      }; // var checkS2_50 = check2ClassInARow(AntArr50)\n      // var checkS2_100 = check2ClassInARow(AntArr100)\n      // var checkS2_200 = check2ClassInARow(AntArr200)\n      // var checkS2_500 = check2ClassInARow(AntArr500)\n      // console.log(\"Soft Constraint 2 violation: \"+ checkS2_50);\n      // console.log(\"Soft Constraint 2 violation: \"+ checkS2_100);\n      // console.log(\"Soft Constraint 2 violation: \"+ checkS2_200);\n      // console.log(\"Soft Constraint 2 violation: \"+ checkS2_500);\n      //----------------------------------------------------------------------------------------------------------------------------------------------\n      //Combine all dataset\n\n\n      let combineData = [];\n\n      const combine = (data1, data2, data3, data4) => {\n        for (let i = 0; i < data1.length; i++) {\n          combineData.push(data1[i]);\n        }\n\n        for (let i = 0; i < data2.length; i++) {\n          combineData.push(data2[i]);\n        }\n\n        for (let i = 0; i < data3.length; i++) {\n          combineData.push(data3[i]);\n        }\n\n        for (let i = 0; i < data4.length; i++) {\n          combineData.push(data4[i]);\n        }\n\n        return combineData;\n      };\n\n      let dataCombine = combine(AntArr50, AntArr100, AntArr200, AntArr500);\n      console.log(dataCombine); //-----------------------------------------------------------------------------------------------------------------------------------------------\n      //Check total Hard Constraint\n\n      const checkTotalHardContraint = () => {\n        let count = 0;\n        let totalH1 = checkH1_50 + checkH1_100 + checkH1_200 + checkH1_500;\n        let totalH2 = checkH5_50 + checkH5_100 + checkH5_200 + checkH5_500;\n\n        if (totalH1 != 0) {\n          count += 1;\n        }\n\n        if (totalH2 != 0) {\n          count += 1;\n        }\n\n        return count;\n      };\n\n      console.log(AntArrIns50);\n      console.log(AntArrIns100);\n      console.log(AntArrIns200);\n      console.log(AntArrIns500);\n      var checkTotalHardContraints = checkTotalHardContraint();\n      console.log(\"Total Hard Constraint: \" + checkTotalHardContraints); //----------------------------------------------------------------------------------------------------------------------------------------\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n      // const checkTotalSoftContraint = () => {\n      //     let count =0\n      //     let totalS1 = checkS1_50 + checkS1_100 + checkS1_200 + checkS1_500\n      //     let totalS2 = checkS2_50 + checkS2_100 + checkS2_200 + checkS2_500\n      //     if(totalS1 != 0){\n      //         count +=1\n      //     }\n      //     if(totalS2 != 0){\n      //         count +=1\n      //     }   \n      //     return count\n      // }\n      // var checkTotalSoftContraints = checkTotalSoftContraint()\n      // console.log(\"Total Soft Constraint: \"+checkTotalSoftContraints)\n\n      const HS0 = () => {\n        if (checkTotalHardContraints == 0) {\n          // console.log(Slot2_1_50)\n          // console.log(Slot2_1_100)\n          // console.log(Slot2_1_200)\n          // console.log(Slot2_1_500)\n          console.log(checkTotalHardContraints); //console.log(checkTotalSoftContraints)\n        } // return {Slot2_1_50,Slot2_1_100,Slot2_1_200,Slot2_1_500,checkTotalHardContraints, checkTotalSoftContraints}\n\n      };\n\n      return HS0(); //  return {Slot2_1_50,Slot2_1_100,Slot2_1_200,Slot2_1_500,checkTotalHardContraints, checkTotalSoftContraints}\n    }; // -------------------------------------------------------------------------------------------------------------------------------------------\n\n\n    let returnData50 = [];\n    let returnData100 = [];\n    let returnData200 = [];\n    let returnData500 = [];\n\n    for (let i = 1; i <= 1; i++) {\n      console.log(\"iterantion: \" + i); //  if(antSystem().checkTotalHardContraints == 0){\n      //     // console.log(antSystem().Slot2_1_50)\n      //     // console.log(antSystem().Slot2_1_100)\n      //     // console.log(antSystem().Slot2_1_200)\n      //     // console.log(antSystem().Slot2_1_500)\n      //     returnData50.push(antSystem().Slot2_1_50)\n      //     returnData100.push(antSystem().Slot2_1_100)\n      //     returnData200.push(antSystem().Slot2_1_200)\n      //     returnData500.push(antSystem().Slot2_1_500)\n      // //     console.log( antSystem().checkTotalHardContraints)\n      // //     console.log( antSystem().checkTotalSoftContraints)\n      // //     console.log(\"iterantion: \" + i)\n      // //     //return true;\n      //      break\n      //  }\n\n      antSystem();\n    } // console.log(returnData50[0])\n    // console.log(returnData100[0])\n    // console.log(returnData200[0])\n    // console.log(returnData500[0])\n    // let weekday = ['Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday',\n    // 'Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday',\n    // 'Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday',\n    // 'Friday','Friday','Friday','Friday','Friday','Friday','Friday','Friday']\n    // const create2dArray = (weekdayArray,partDay,array50, part50,array100, part100,array200, part200,array500, part500) => {\n    //     var tmp = [];\n    //     for(var i = 0; i < weekdayArray.length; i += partDay) {\n    //         tmp.push(weekdayArray.slice(i, i + partDay));\n    //     }\n    //     for(var i = 0; i < array50.length; i += part50) {\n    //         tmp.push(array50.slice(i, i + part50));\n    //     }\n    //     for(var i = 0; i < array100.length; i += part100) {\n    //         tmp.push(array100.slice(i, i + part100));\n    //     }\n    //     for(var i = 0; i < array200.length; i += part200) {\n    //         tmp.push(array200.slice(i, i + part200));\n    //     }\n    //     for(var i = 0; i < array500.length; i += part500) {\n    //         tmp.push(array500.slice(i, i + part500));\n    //     }\n    //     return tmp;\n    // }\n    // console.log(create2dArray50(returnData50[0], 38));\n    // console.log(create2dArray100(returnData100[0], 38));\n    // console.log(create2dArray200(returnData200[0], 38));\n    // console.log(create2dArray500(returnData500[0], 38));\n    // let dataset50 = create2dArray50(returnData50[0], 38)\n    // let dataset100 = create2dArray100(returnData100[0], 38)\n    // let dataset200 = create2dArray200(returnData200[0], 38)\n    // let dataset500 = create2dArray500(returnData500[0], 38)\n    //let dataset = create2dArray(weekday,38,returnData50[0], 38, returnData100[0], 38,returnData200[0], 38,returnData500[0], 38)\n    //console.log(dataset);\n    // let completeDataset = []\n    // completeDataset.push(dataset50)\n    // completeDataset.push(dataset100)\n    // completeDataset.push(dataset200)\n    // completeDataset.push(dataset500)\n    // console.log(completeDataset);\n    //finalData.push(dataset);\n    //----------------------------------------------------------------------------------------------------------------------------------------\n\n  } // let headers = [\n  //     { label: \"Monday\", key:\"Monday\"  },\n  //     { label: \"Tuesday\", key:\"Tuesday\" },\n  //     { label: \"Thursday\", key:\"Thursday\"  },\n  //     { label: \"Friday\", key:\"Friday\"  },\n  //     // { label: \"Room\", key: \"Room\" },\n  //     // { label: \"Size\", key: \"Size\" },\n  //     // { label: \"Slot\", key: \"Slot\" }\n  //   ];\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1352,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1355,\n      columnNumber: 13\n    }\n  }, \"Generate Schedule Page\"));\n};\n\nexport default ArraySchedule; //result[i][j]=Course.splice(Math.floor(Math.random()* Course.length),1)[0] // create random placement of Course Value\n//const Schedule = new Array(10).fill(Array(5).fill(null));\n//console.log(Schedule);\n// const Course = [['TE1',4],['TE1',4],['TE1',4],['TE1',3],['TE1',4],['TE1',2],['TE1',4],['TE1',4],['TE1',4],['TE1',3]];\n//const Course = [['TE1',2],['TE2',2],['TE3',3],['TE4',4],['TE5',3],['TE6',4],['TE7',4],['TE8',2],['TE9',4]];\n//const Course = ['TE1','TE2','TE3','TE4','TE5','TE6','TE7','TE8','TE9'];","map":{"version":3,"sources":["C:/Users/acit/Desktop/FYP Code/FYP Code/frontend/src/components/RandomSchedule/arraySchedule.js"],"names":["find","forEach","indexOf","React","useEffect","useState","useContext","useParams","_","CSVLink","LoadingSpinner","finalData","ArraySchedule","props","isLoading","setIsLoading","loadedFile","setLoaadedFile","roomData","setroomData","courseData","setcourseData","CsvData","setCsvData","userId","sendRequest","response","fetch","responsedata","json","stringifyData","JSON","stringify","userWithFiles","Dataset","ertRoom","map","ertCourse","ok","Error","message","err","console","log","testData","EnrollmentQuota","CourseCode","HMS","roomName","roomSize","filterData50","filterData100","filterData200","filterData500","dupeData","room","push","hardConstraintViolated","softConstraintViolated","i","length","enrollment","code","hms","reduce","results","item","index","array","name","size","notDuplicatesRoom","filter","roomUnder50","roomUnder100","roomUnder200","roomUnder500","checkNumberofRoom","createArray","data","result","DataArray50","DataArray100","DataArray200","DataArray500","ground50Array","ground100Array","ground200Array","ground500Array","Column50","Column100","Column200","Column500","Row","antSystem","array1D50","AntArr50","extraData50_Slot2_2","extraData50_Slot2_1","insertedData50_Slot2_2","insertedData50_Slot2_1","slot2Equal2for50","test","k","slot2","j","Math","floor","random","slot2Equal1for50","AntAlgoInsert50","k2","k3","x","slot1","indexArray","totalRoom","AntArrIns50","checkAmountData50","count","undefined","checkAmount","array1D100","AntArr100","extraData100_Slot2_2","extraData100_Slot2_1","insertedData100_Slot2_2","insertedData100_Slot2_1","slot2Equal2for100","Slot2_1_100","slot2Equal1for100","AntAlgoInsert100","AntArrIns100","checkAmountData100","array1D200","AntArr200","extraData200_Slot2_2","extraData200_Slot2_1","insertedData200_Slot2_2","insertedData200_Slot2_1","slot2Equal2for200","Slot2Equal1for200","Slot2_1_200","AntAlgoInsert200","AntArrIns200","checkAmountData200","array1D500","AntArr500","extraData500_Slot2_2","extraData500_Slot2_1","insertedData500_Slot2_2","insertedData500_Slot2_1","slot2Equal2for500","slot2Equal1for500","Slot2_1_500","AntAlgoInsert500","AntArrIns500","checkAmountData500","check1Group","checkH1_50","checkH1_100","checkH1_200","checkH1_500","checkRoomQuota","checkSolatJummat","check1Teacher","checkH5_50","checkH5_100","checkH5_200","checkH5_500","checkEndOfClass","check2ClassInARow","combineData","combine","data1","data2","data3","data4","dataCombine","checkTotalHardContraint","totalH1","totalH2","checkTotalHardContraints","HS0","returnData50","returnData100","returnData200","returnData500"],"mappings":"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","sourcesContent":["import { find, forEach, indexOf } from \"lodash\";\r\nimport React,{ useEffect,useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport _ from 'lodash';\r\nimport { CSVLink } from \"react-csv\";\r\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\r\n\r\n\r\nlet finalData = [];\r\n\r\nconst ArraySchedule = (props) => {\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [loadedFile, setLoaadedFile] = useState(false);\r\n    const [roomData, setroomData] = useState();\r\n    const [courseData, setcourseData] = useState();\r\n    const [CsvData, setCsvData] = useState();\r\n    // const [Keys, setKeys] = useState();\r\n    //const [uploadedData, setUploadedData] = useState([]);\r\n    //console.log(\"props dataset:\"+ props.test)\r\n\r\n    const userId = useParams().userId;\r\n    useEffect(()=>{\r\n        const sendRequest = async () =>{\r\n            setIsLoading(true);\r\n            try{\r\n            // const response = await fetch('http://localhost:5000/api/user/');\r\n            //const response = await fetch('http://localhost:5000/api/files/users/624278b29a90a9077e2f65e4');\r\n            const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875');\r\n            //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\r\n            //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\r\n            const responsedata = await response.json();\r\n            let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset);\r\n\r\n            // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\r\n            const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset =>[Dataset['Room'],Dataset['Size']]); //Extract Room\r\n            setroomData([ertRoom]);\r\n\r\n            const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'],Dataset['Course Code'],Dataset['Course Name'],Dataset['Year'],Dataset['Semester'],Dataset['Lecturer'],Dataset['Group'],Dataset['HMS'],Dataset['Programme Code'],Dataset['Slot1'],Dataset['Slot2']]); //Extract Enrollment Quota\r\n            setcourseData([ertCourse]);\r\n\r\n            if (!response.ok){\r\n                throw new Error(responsedata.message);\r\n            }\r\n            setLoaadedFile(stringifyData);\r\n            setIsLoading(true);\r\n            }catch(err){\r\n                console.log(err.message);\r\n            }\r\n            setIsLoading(false);\r\n            \r\n        };\r\n        sendRequest();\r\n    },[userId]);\r\n\r\n        if(!isLoading && loadedFile){\r\n            const testData = [1,2,3,4,5,6,7,8,9];\r\n            const EnrollmentQuota = [];\r\n            const CourseCode = [];\r\n            const HMS = [];\r\n            const roomName = [];\r\n            const roomSize = [];\r\n            const filterData50  = [];\r\n            const filterData100  = [];\r\n            const filterData200  = [];\r\n            const filterData500  = [];\r\n            const dupeData  = [];\r\n            const room = []\r\n            room.push(roomData[0])\r\n            \r\n            let hardConstraintViolated = 0;\r\n            let softConstraintViolated = 0;\r\n            //console.log(courseData[0][0][1]);\r\n            for(let i = 0; i <courseData[0].length; i++){\r\n                let enrollment = [courseData[0][i][0]];\r\n                let code = [courseData[0][i][1]];\r\n                let hms = [courseData[0][i][7]];\r\n                enrollment.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    EnrollmentQuota.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                code.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    CourseCode.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                hms.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    HMS.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n            }\r\n\r\n            for(let i = 0; i <roomData[0].length; i++){\r\n                let name = [roomData[0][i][0]];\r\n                let size = [roomData[0][i][1]];\r\n                name.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomName.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                size.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomSize.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n            }\r\n \r\n            \r\n            const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\r\n\r\n\r\n                for(let i = 0; i< courseData[0].length;i++){\r\n                    if (courseData[0][i][0] < 50) {\r\n                        //for(let j = 0; j <courseData[0][i][7]; j++){\r\n                            filterData50.push(courseData[0][i]);\r\n                        //}\r\n                    }\r\n                    if (courseData[0][i][0] >= 50 && courseData[0][i][0] < 100) {\r\n                        //for(let j = 0; j <courseData[0][i][7]; j++){\r\n                            filterData100.push(courseData[0][i]);\r\n                        //}\r\n                    }\r\n                    if (courseData[0][i][0] >= 100 && courseData[0][i][0] < 200) {\r\n                        //for(let j = 0; j <courseData[0][i][7]; j++){\r\n                            filterData200.push(courseData[0][i]);\r\n                        //}\r\n                    }\r\n                    if (courseData[0][i][0] >= 200 && courseData[0][i][0] < 500) {\r\n                        //for(let j = 0; j <courseData[0][i][7]; j++){\r\n                            filterData500.push(courseData[0][i]);\r\n                        //}\r\n                    }\r\n                    //filterData.push(courseData[0][i]);\r\n                }\r\n\r\n\r\n            let roomUnder50 = []\r\n            let roomUnder100 = []\r\n            let roomUnder200 = []\r\n            let roomUnder500 = []\r\n            const checkNumberofRoom = () => {\r\n                for(let i = 0; i < roomData[0].length; i++){\r\n                    let room = roomData[0][i][1]\r\n                    //console.log(roomData[0][i][1]);\r\n                    if(room < 50){\r\n                        roomUnder50.push(room)\r\n                    }else if(room > 50 && room < 100){\r\n                        roomUnder100.push(room)\r\n\r\n                    }else if(room > 100 && room < 200){\r\n                        roomUnder200.push(room)\r\n\r\n                    }else if(room > 200){\r\n                        roomUnder500.push(room)\r\n                    }\r\n                }\r\n            }\r\n            checkNumberofRoom();\r\n\r\n\r\n            const createArray = (data) => {\r\n                var result = []\r\n\r\n                    for(let i = 0; i<data; i++){\r\n                        result[i] = []\r\n                    }\r\n                return result;\r\n            }\r\n\r\n            let DataArray50 = roomUnder50.length * 38;\r\n            let DataArray100 = roomUnder100.length * 38;\r\n            let DataArray200 = roomUnder200.length * 38;\r\n            let DataArray500 = roomUnder500.length * 38;\r\n\r\n            var ground50Array = createArray(DataArray50);\r\n            var ground100Array = createArray(DataArray100);\r\n            var ground200Array = createArray(DataArray200);\r\n            var ground500Array = createArray(DataArray500);\r\n\r\n\r\n            let Column50 = roomUnder50.length\r\n            let Column100 = roomUnder100.length\r\n            let Column200 = roomUnder200.length\r\n            let Column500 = roomUnder500.length\r\n            let Row = 38\r\n\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\nconst antSystem = () => {\r\n    //create 1d array for dataset 50\r\n    const array1D50 = (data) => {\r\n       var result = []\r\n\r\n       for(let i = 0; i< data; i++){\r\n           result[i]= 100;\r\n       }\r\n       return result;\r\n   }\r\n   var AntArr50 = array1D50(DataArray50);\r\n\r\n   let extraData50_Slot2_2 = []\r\n   let extraData50_Slot2_1 = []\r\n   let insertedData50_Slot2_2 = []\r\n   let insertedData50_Slot2_1= []\r\n\r\n   const slot2Equal2for50 = (array) => {\r\n       let test = []\r\n       let k = 0;\r\n\r\n       for(let i = array.length-1;i>0;i--){\r\n               if(k < insertedData50_Slot2_2.length){\r\n                   let slot2 = insertedData50_Slot2_2[k][10]\r\n                   if(slot2 == 2){\r\n                           const j = Math.floor(Math.random()*(i+1));\r\n\r\n\r\n                           if(array[i] == 100 && array[i+1] == 100){\r\n                               array[i] = array[j];\r\n                               array[i+1] = array[j+1];\r\n                               array[j] = insertedData50_Slot2_2[k];\r\n                               array[j+1] = insertedData50_Slot2_2[k];\r\n                           }   \r\n                           else if(array[i]!=100 || array[i+1] != 100){\r\n                               //insertedData50_Slot2_2.push(insertedData50_Slot2_2[k]);\r\n                               extraData50_Slot2_2.push(insertedData50_Slot2_2[k])\r\n                           }\r\n                                   \r\n                   }\r\n                   \r\n               }\r\n               k++                        \r\n       }\r\n\r\n       return array;\r\n   }\r\n   //slot2Equal2for50(AntArr50);\r\n   //slot2Equal2for50(AntArr50);\r\n\r\n   const slot2Equal1for50= (array) => {\r\n       let test = []\r\n       let k = 0;\r\n\r\n       for(let i = array.length-1;i>0;i--){\r\n               if(k < insertedData50_Slot2_1.length){\r\n                   let slot2 = insertedData50_Slot2_1[k][10]\r\n                   if(slot2 == 1){\r\n                           const j = Math.floor(Math.random()*(i+1));\r\n\r\n                           if(array[i] == 100 || array[i] == 50){\r\n                               array[i] = array[j];\r\n                               array[j] = insertedData50_Slot2_1[k];\r\n                           }   \r\n                           else if(array[i]!=100 || array[i] != 50){\r\n                               extraData50_Slot2_1.push(insertedData50_Slot2_1[k])\r\n                           }\r\n\r\n                   }\r\n                   \r\n               }\r\n               k++                        \r\n       }\r\n       return array;\r\n   }\r\n   //slot2Equal1for50(AntArr50);\r\n\r\n   const AntAlgoInsert50 = (array) => {\r\n       let test = []\r\n       let k = 0;\r\n       let k2 =0\r\n       let k3 =0\r\n       for(let x=0; x<filterData50.length;x++){\r\n           test.push(filterData50[x]);\r\n       }\r\n       \r\n       for(let i = array.length-1;i>0;i--){\r\n               if(k < test.length){\r\n                   let slot1 = test[k][9]\r\n                   if(slot1 == 2){\r\n                           const j = Math.floor(Math.random()*(i+1));\r\n                           if(array[i] == 100 && array[i+1] == 100){\r\n                               array[i] = array[j];\r\n                               array[i+1] = array[j+1];\r\n                               array[j] = test[k];\r\n                               array[j+1] = test[k];\r\n\r\n                               let slot2 = test[k][10]\r\n        \r\n                               let indexArray = 0\r\n                               let totalRoom = array.length / 38\r\n                               for(let x= 1 ; x <= totalRoom ; x++){\r\n                                   indexArray = (x * 38)\r\n                               }\r\n                               for(let i = 0; i<array.length ; i++){\r\n                                   try{\r\n                                       for(let x= 1 ; x <= totalRoom ; x++){\r\n                                           indexArray = (x * 38)\r\n                                           if(array[j+indexArray] == 100 && array[j+indexArray+1] == 100 ){\r\n                                               try{\r\n                                                   array[j+indexArray] = 0\r\n                                                   array[j+indexArray+1] = 0\r\n                                               }catch{}\r\n                                           }\r\n                                           if(array[j-indexArray] == 100 && array[j-indexArray-1] == 100 ){\r\n                                               try{\r\n                                                   array[j-indexArray] = 0\r\n                                                   array[j-indexArray-1] = 0\r\n                                               }catch{}\r\n                                           }       \r\n                                       }\r\n                                   }catch{}\r\n                               }\r\n\r\n                               if (slot2 == 2){\r\n                                   insertedData50_Slot2_2.push(test[k])\r\n                                   //slot2Equal2for50(insertedData50_Slot2_2);\r\n                                   if(k2 < insertedData50_Slot2_2.length){\r\n                                       let slot2 = insertedData50_Slot2_2[k2][10]\r\n                                       if(slot2 == 2){\r\n                                               const j = Math.floor(Math.random()*(i+1));\r\n                                               if(array[i] == 100 && array[i+1] == 100){\r\n                                                   array[i] = array[j];\r\n                                                   array[i+1] = array[j+1];\r\n                                                   array[j] = insertedData50_Slot2_2[k2];\r\n                                                   array[j+1] = insertedData50_Slot2_2[k2];\r\n                                               }   \r\n                                               else if(array[i]!=100 || array[i+1] != 100){\r\n                                                   extraData50_Slot2_2.push(insertedData50_Slot2_2[k2]);\r\n                                               }    \r\n                                       }\r\n                                       \r\n                                   }\r\n                                   k2++ \r\n                               }\r\n                               if (slot2 == 1){\r\n                                   insertedData50_Slot2_1.push(test[k])\r\n                                   //slot2Equal1for50(insertedData50_Slot2_1);\r\n                                   if(k3 < insertedData50_Slot2_1.length){\r\n                                       let slot2 = insertedData50_Slot2_1[k3][10]\r\n                                       if(slot2 == 1){\r\n                                               const j = Math.floor(Math.random()*(i+1));\r\n                                               if(array[i] == 100){\r\n                                                   array[i] = array[j];\r\n                                                   array[j] = insertedData50_Slot2_1[k3];\r\n                                               }   \r\n                                               else if(array[i]!=100){\r\n                                                   extraData50_Slot2_1.push(insertedData50_Slot2_1[k3]);\r\n                                               }           \r\n                                       }\r\n                                       \r\n                                   }\r\n                                   k3++    \r\n                               }\r\n\r\n\r\n                               for(let i = 0; i<array.length ; i++){\r\n                                   try{\r\n                                       for(let x= 1 ; x <= totalRoom ; x++){\r\n                                           indexArray = (x * 38)\r\n                                           if(array[j+indexArray] == 0 && array[j+indexArray+1] == 0 ){\r\n                                               try{\r\n                                                   array[j+indexArray] = 100\r\n                                                   array[j+indexArray+1] = 100\r\n                                               }catch{}\r\n                                           }\r\n                                           if(array[j-indexArray] == 0 && array[j-indexArray-1] == 0 ){\r\n                                               try{\r\n                                                   array[j-indexArray] = 100\r\n                                                   array[j-indexArray-1] = 100\r\n                                               }catch{}\r\n                                           }       \r\n                                       }\r\n                                   }catch{}\r\n                               } \r\n                           }   \r\n                           else if(array[i]!=100 || array[i+1] != 100){\r\n                               test.push(test[k]);\r\n                           }                 \r\n                   }\r\n                   \r\n               }\r\n               k++                        \r\n       }\r\n\r\n       return array;\r\n   }\r\n   var AntArrIns50 = AntAlgoInsert50(AntArr50);\r\n\r\n\r\n   const checkAmountData50 = (array) => {\r\n       let count = 0\r\n       for(let i = 0; i < array.length; i++){\r\n               if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined){\r\n                   count += 1\r\n               }\r\n       }\r\n       return count\r\n   }\r\n   var checkAmount = checkAmountData50(AntArrIns50)\r\n   //console.log(AntArrIns50)\r\n   console.log(checkAmount);\r\n   // console.log(extraData50_Slot2_2)\r\n   // console.log(extraData50_Slot2_1)\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 50 but less than 100\r\n\r\n            //create 1d array for dataset 100\r\n            const array1D100 = (data) => {\r\n               var result = []\r\n\r\n               for(let i = 0; i< data; i++){\r\n                   result[i]= 100;\r\n               }\r\n               return result;\r\n           }\r\n           var AntArr100 = array1D100(DataArray100);\r\n           //console.log(AntArr200);\r\n\r\n           let extraData100_Slot2_2 = []\r\n           let extraData100_Slot2_1 = []\r\n           let insertedData100_Slot2_2 = []\r\n           let insertedData100_Slot2_1= []\r\n           \r\n\r\n           const slot2Equal2for100 = (array) => {\r\n               let k = 0;\r\n               for(let i = array.length-1;i>0;i--){\r\n                       if(k < extraData50_Slot2_2.length){\r\n                           let slot2 = extraData50_Slot2_2[k][10]\r\n                           if(slot2 == 2){\r\n                                   const j = Math.floor(Math.random()*(i+1));\r\n                                   if(array[i] == 100 && array[i+1] == 100){\r\n                                       array[i] = array[j];\r\n                                       array[i+1] = array[j+1];\r\n                                       array[j] = extraData50_Slot2_2[k];\r\n                                       array[j+1] = extraData50_Slot2_2[k];\r\n                                   }   \r\n                                   else if(array[i]!=100 || array[i+1] != 100){\r\n                                       extraData50_Slot2_2.push(extraData50_Slot2_2[k]);\r\n                                   }    \r\n                           }\r\n                           \r\n                       }\r\n                       k++                        \r\n               }\r\n               return array;\r\n           }\r\n           var Slot2_1_100 = slot2Equal2for100(AntArr100);\r\n\r\n           const slot2Equal1for100 = (array) => {\r\n               let test = []\r\n               let k = 0;\r\n\r\n               // for(let x=0; x<extraData50_Slot2_1.length;x++){\r\n               //     insertedData100_Slot2_1.push(extraData50_Slot2_1[x]);\r\n               // }\r\n               for(let i = array.length-1;i>0;i--){\r\n                       if(k < extraData50_Slot2_1.length){\r\n                           let slot2 = extraData50_Slot2_1[k][10]\r\n                           if(slot2 == 1){\r\n                                   const j = Math.floor(Math.random()*(i+1));\r\n                                   if(array[i] == 100){\r\n                                       array[i] = array[j];\r\n                                       array[j] = extraData50_Slot2_1[k];\r\n                                   }   \r\n                                   else if(array[i]!=1000){\r\n                                       // extraData100_Slot2_1.push(extraData50_Slot2_1[k]);\r\n                                       extraData50_Slot2_1.push(extraData50_Slot2_1[k]);\r\n                                   }           \r\n                           }\r\n                           \r\n                       }\r\n                       k++                        \r\n               }\r\n               return array;\r\n           }\r\n           slot2Equal1for100(AntArr100);\r\n\r\n           const AntAlgoInsert100 = (array) => {\r\n               let test = []\r\n               let k = 0;\r\n               let k2 =0\r\n               let k3 =0\r\n               \r\n               for(let x=0; x<filterData100.length;x++){\r\n                   test.push(filterData100[x]);\r\n               }\r\n               for(let i = array.length-1;i>0;i--){\r\n                       if(k < test.length){\r\n                           let slot1 = test[k][9]\r\n                           if(slot1 == 2){\r\n                                   const j = Math.floor(Math.random()*(i+1));\r\n                                   if(array[i] == 100 && array[i+1] == 100){\r\n                                       array[i] = array[j];\r\n                                       array[i+1] = array[j+1];\r\n                                       array[j] = test[k];\r\n                                       array[j+1] = test[k];\r\n                                       //insertedData100.push(test[k]);\r\n\r\n                                       let slot2 = test[k][10]\r\n\r\n                                       \r\n                                       let indexArray = 0\r\n                                       let totalRoom = array.length / 38\r\n                                       for(let x= 1 ; x <= totalRoom ; x++){\r\n                                           indexArray = (x * 38)\r\n                                       }\r\n                                       for(let i = 0; i<array.length ; i++){\r\n                                           try{\r\n                                               for(let x= 1 ; x <= totalRoom ; x++){\r\n                                                   indexArray = (x * 38)\r\n                                                   if(array[j+indexArray] == 100 && array[j+indexArray+1] == 100 ){\r\n                                                       try{\r\n                                                           array[j+indexArray] = 0\r\n                                                           array[j+indexArray+1] = 0\r\n                                                       }catch{}\r\n                                                   }\r\n                                                   if(array[j-indexArray] == 100 && array[j-indexArray-1] == 100 ){\r\n                                                       try{\r\n                                                           array[j-indexArray] = 0\r\n                                                           array[j-indexArray-1] = 0\r\n                                                       }catch{}\r\n                                                   }       \r\n                                               }\r\n                                           }catch{}\r\n                                       }\r\n       \r\n                                       if (slot2 == 2){\r\n                                           insertedData100_Slot2_2.push(test[k])\r\n                                           // slot2Equal2for100(insertedData100_Slot2_2);\r\n                                           if(k2 < insertedData100_Slot2_2.length){\r\n                                               let slot2 = insertedData100_Slot2_2[k2][10]\r\n                                               if(slot2 == 2){\r\n                                                       const j = Math.floor(Math.random()*(i+1));\r\n                                                       if(array[i] == 100 && array[i+1] == 100){\r\n                                                           array[i] = array[j];\r\n                                                           array[i+1] = array[j+1];\r\n                                                           array[j] = insertedData100_Slot2_2[k2];\r\n                                                           array[j+1] = insertedData100_Slot2_2[k2];\r\n                                                       }   \r\n                                                       else if(array[i]!=100 || array[i+1] != 100){\r\n                                                           extraData100_Slot2_2.push(insertedData100_Slot2_2[k2]);\r\n                                                       }    \r\n                                               }\r\n                                               \r\n                                           }\r\n                                           k2++   \r\n                                       }\r\n                                       if (slot2 == 1){\r\n                                           insertedData100_Slot2_1.push(test[k])\r\n                                           //slot2Equal1for100(insertedData100_Slot2_1);\r\n                                           if(k3 < insertedData100_Slot2_1.length){\r\n                                               let slot2 = insertedData100_Slot2_1[k3][10]\r\n                                               if(slot2 == 1){\r\n                                                       const j = Math.floor(Math.random()*(i+1));\r\n                                                       if(array[i] == 100){\r\n                                                           array[i] = array[j];\r\n                                                           array[j] = insertedData100_Slot2_1[k3];\r\n                                                       }   \r\n                                                       else if(array[i]!=100){\r\n                                                           extraData100_Slot2_1.push(insertedData100_Slot2_1[k3]);\r\n                                                       }           \r\n                                               }\r\n                                               \r\n                                           }\r\n                                           k3++               \r\n                                       }\r\n\r\n       \r\n                                       for(let i = 0; i<array.length ; i++){\r\n                                           try{\r\n                                               for(let x= 1 ; x <= totalRoom ; x++){\r\n                                                   indexArray = (x * 38)\r\n                                                   if(array[j+indexArray] == 0 && array[j+indexArray+1] == 0 ){\r\n                                                       try{\r\n                                                           array[j+indexArray] = 100\r\n                                                           array[j+indexArray+1] = 100\r\n                                                       }catch{}\r\n                                                   }\r\n                                                   if(array[j-indexArray] == 0 && array[j-indexArray-1] == 0 ){\r\n                                                       try{\r\n                                                           array[j-indexArray] = 100\r\n                                                           array[j-indexArray-1] = 100\r\n                                                       }catch{}\r\n                                                   }       \r\n                                               }\r\n                                           }catch{}\r\n                                       } \r\n                                   }   \r\n                                   else if(array[i]!=100 || array[i+1] != 100){\r\n                                       test.push(test[k]);\r\n                                   }                      \r\n                           }\r\n                           \r\n                       }\r\n                       k++                        \r\n               }\r\n\r\n               return array;\r\n           }\r\n           var AntArrIns100 = AntAlgoInsert100(AntArr100);\r\n\r\n           const checkAmountData100 = (array) => {\r\n               let count = 0\r\n               for(let i = 0; i < array.length; i++){\r\n                       if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined){\r\n                           count += 1\r\n                       }\r\n               }\r\n               return count\r\n           }\r\n           var checkAmount = checkAmountData100(AntArrIns100)\r\n           //console.log(AntArrIns100)\r\n           console.log(checkAmount);\r\n           // console.log(extraData100_Slot2_2)\r\n           // console.log(extraData100_Slot2_1)\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 100 but less than 200\r\n\r\n            //create 1d array for dataset 200\r\n            const array1D200 = (data) => {\r\n               var result = []\r\n\r\n               for(let i = 0; i< data; i++){\r\n                   result[i]= 100;\r\n               }\r\n               return result;\r\n           }\r\n           var AntArr200 = array1D200(DataArray200);\r\n           //console.log(AntArr200);\r\n\r\n           let extraData200_Slot2_2 = []\r\n           let extraData200_Slot2_1 = []\r\n           let insertedData200_Slot2_2 = []\r\n           let insertedData200_Slot2_1= []\r\n\r\n\r\n           const slot2Equal2for200 = (array) => {\r\n               let test = []\r\n               let k = 0;\r\n\r\n               for(let i = array.length-1;i>0;i--){\r\n                   if(k < extraData100_Slot2_2.length){\r\n                       let slot2 = extraData100_Slot2_2[k][10]\r\n                       if(slot2 == 2){\r\n                               const j = Math.floor(Math.random()*(i+1));\r\n                               if(array[i] == 100 && array[i+1] == 100){\r\n                                   array[i] = array[j];\r\n                                   array[i+1] = array[j+1];\r\n                                   array[j] = extraData100_Slot2_2[k];\r\n                                   array[j+1] = extraData100_Slot2_2[k];\r\n                               }   \r\n                               else if(array[i]!=100 || array[i+1] != 100){\r\n                                   //extraData200_Slot2_2.push(insertedData200_Slot2_2[k]);\r\n                                   extraData100_Slot2_2.push(extraData100_Slot2_2[k]);\r\n                               }    \r\n                       }\r\n                       \r\n                   }\r\n                   k++                        \r\n           }\r\n               \r\n               return array;\r\n           }\r\n           slot2Equal2for200(AntArr200);\r\n\r\n           const Slot2Equal1for200 = (array) => {\r\n               let test = []\r\n               let k = 0;\r\n\r\n               for(let i = array.length-1;i>0;i--){\r\n                       if(k < extraData100_Slot2_1.length){\r\n                           let slot2 = extraData100_Slot2_1[k][10]\r\n                           if(slot2 == 1){\r\n                                   const j = Math.floor(Math.random()*(i+1));\r\n                                   if(array[i] == 100){\r\n                                       array[i] = array[j];\r\n                                       array[j] = extraData100_Slot2_1[k];\r\n                                   }   \r\n                                   else if(array[i]!=100){\r\n                                       //extraData200_Slot2_1.push(insertedData200_Slot2_1[k]);\r\n                                       extraData100_Slot2_1.push(extraData100_Slot2_1[k]);\r\n                                   }           \r\n                           }\r\n                           \r\n                       }\r\n                       k++                        \r\n               }\r\n               return array;\r\n           }\r\n\r\n           var Slot2_1_200 = Slot2Equal1for200(AntArr200);\r\n           //console.log(Slot2_1_200);\r\n\r\n\r\n           const AntAlgoInsert200 = (array) => {\r\n               let test = []\r\n               let k = 0;\r\n               let k2 = 0;\r\n               let k3 = 0;\r\n\r\n               for(let x=0; x<filterData200.length;x++){\r\n                   test.push(filterData200[x]);\r\n               }\r\n               for(let i = array.length-1;i>0;i--){\r\n                   if(k < test.length){\r\n                       let slot1 = test[k][9]\r\n                       if(slot1 == 2){\r\n                               const j = Math.floor(Math.random()*(i+1));\r\n                               if(array[i] == 100 && array[i+1] == 100){\r\n                                   array[i] = array[j];\r\n                                   array[i+1] = array[j+1];\r\n                                   array[j] = test[k];\r\n                                   array[j+1] = test[k];\r\n                                   //insertedData100.push(test[k]);\r\n\r\n                                   let slot2 = test[k][10]\r\n                                   \r\n                                   let indexArray = 0\r\n                                   let totalRoom = array.length / 38\r\n                                   for(let x= 1 ; x <= totalRoom ; x++){\r\n                                       indexArray = (x * 38)\r\n                                   }\r\n                                   for(let i = 0; i<array.length ; i++){\r\n                                       try{\r\n                                           for(let x= 1 ; x <= totalRoom ; x++){\r\n                                               indexArray = (x * 38)\r\n                                               if(array[j+indexArray] == 100 && array[j+indexArray+1] == 100 ){\r\n                                                   try{\r\n                                                       array[j+indexArray] = 0\r\n                                                       array[j+indexArray+1] = 0\r\n                                                   }catch{}\r\n                                               }\r\n                                               if(array[j-indexArray] == 100 && array[j-indexArray-1] == 100 ){\r\n                                                   try{\r\n                                                       array[j-indexArray] = 0\r\n                                                       array[j-indexArray-1] = 0\r\n                                                   }catch{}\r\n                                               }       \r\n                                           }\r\n                                       }catch{}\r\n                                   }\r\n   \r\n                                   if (slot2 == 2){\r\n                                       insertedData200_Slot2_2.push(test[k])\r\n                                       // slot2Equal2for100(insertedData100_Slot2_2);\r\n                                       if(k2 < insertedData200_Slot2_2.length){\r\n                                           let slot2 = insertedData200_Slot2_2[k2][10]\r\n                                           if(slot2 == 2){\r\n                                                   const j = Math.floor(Math.random()*(i+1));\r\n                                                   if(array[i] == 100 && array[i+1] == 100){\r\n                                                       array[i] = array[j];\r\n                                                       array[i+1] = array[j+1];\r\n                                                       array[j] = insertedData200_Slot2_2[k2];\r\n                                                       array[j+1] = insertedData200_Slot2_2[k2];\r\n                                                   }   \r\n                                                   else if(array[i]!=100 || array[i+1] != 100){\r\n                                                       //extraData200_Slot2_2.push(insertedData200_Slot2_2[k2]);\r\n                                                       insertedData200_Slot2_2.push(insertedData200_Slot2_2[k2]);\r\n                                                   }    \r\n                                           }\r\n                                           \r\n                                       }\r\n                                       k2++   \r\n                                   }\r\n                                   if (slot2 == 1){\r\n                                       insertedData200_Slot2_1.push(test[k])\r\n                                       //slot2Equal1for100(insertedData100_Slot2_1);\r\n                                       if(k3 < insertedData200_Slot2_1.length){\r\n                                           let slot2 = insertedData200_Slot2_1[k3][10]\r\n                                           if(slot2 == 1){\r\n                                                   const j = Math.floor(Math.random()*(i+1));\r\n                                                   if(array[i] == 100){\r\n                                                       array[i] = array[j];\r\n                                                       array[j] = insertedData200_Slot2_1[k3];\r\n                                                   }   \r\n                                                   else if(array[i]!=100){\r\n                                                       //extraData200_Slot2_1.push(insertedData200_Slot2_1[k3]);\r\n                                                       insertedData200_Slot2_1.push(insertedData200_Slot2_1[k3]);\r\n                                                   }           \r\n                                           }\r\n                                           \r\n                                       }\r\n                                       k3++               \r\n                                   }\r\n\r\n                                   for(let i = 0; i<array.length ; i++){\r\n                                       try{\r\n                                           for(let x= 1 ; x <= totalRoom ; x++){\r\n                                               indexArray = (x * 38)\r\n                                               if(array[j+indexArray] == 0 && array[j+indexArray+1] == 0 ){\r\n                                                   try{\r\n                                                       array[j+indexArray] = 100\r\n                                                       array[j+indexArray+1] = 100\r\n                                                   }catch{}\r\n                                               }\r\n                                               if(array[j-indexArray] == 0 && array[j-indexArray-1] == 0 ){\r\n                                                   try{\r\n                                                       array[j-indexArray] = 100\r\n                                                       array[j-indexArray-1] = 100\r\n                                                   }catch{}\r\n                                               }       \r\n                                           }\r\n                                       }catch{}\r\n                                   } \r\n                               }   \r\n                               else if(array[i]!=100 || array[i+1] != 100){\r\n                                   test.push(test[k]);\r\n                               }                      \r\n                       }\r\n                       \r\n                   }\r\n                   k++                        \r\n           }\r\n\r\n               return array;\r\n           }\r\n           var AntArrIns200 = AntAlgoInsert200(AntArr200);\r\n\r\n           const checkAmountData200 = (array) => {\r\n               let count = 0\r\n               for(let i = 0; i < array.length; i++){\r\n                       if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined){\r\n                           count += 1\r\n                       }\r\n               }\r\n               return count\r\n           }\r\n           var checkAmount = checkAmountData200(AntArrIns200)\r\n           //console.log(AntArrIns200)\r\n           console.log(checkAmount);\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n   \r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 200 \r\n\r\n           //create 1d array for dataset 500\r\n           const array1D500 = (data) => {\r\n               var result = []\r\n\r\n               for(let i = 0; i< data; i++){\r\n                   result[i]= 100;\r\n               }\r\n               return result;\r\n           }\r\n           var AntArr500 = array1D500(DataArray500);\r\n           //console.log(AntArr500);\r\n\r\n           let extraData500_Slot2_2 = []\r\n           let extraData500_Slot2_1 = []\r\n           let insertedData500_Slot2_2 = []\r\n           let insertedData500_Slot2_1= []\r\n\r\n           const slot2Equal2for500 = (array) => {\r\n               let k = 0;\r\n\r\n               for(let i = 0; i < extraData500_Slot2_2.length ; i++ ){\r\n                   extraData200_Slot2_2.push(extraData500_Slot2_2[i])\r\n               }\r\n\r\n               for(let i = array.length-1;i>0;i--){\r\n                   if(k <  extraData200_Slot2_2.length){\r\n                       let slot2 =  extraData200_Slot2_2[k][10]\r\n                       if(slot2 == 2){\r\n                               const j = Math.floor(Math.random()*(i+1));\r\n                               if(array[i] == 100 && array[i+1] == 100){\r\n                                   array[i] = array[j];\r\n                                   array[i+1] = array[j+1];\r\n                                   array[j] =  extraData200_Slot2_2[k];\r\n                                   array[j+1] =  extraData200_Slot2_2[k];\r\n                               }   \r\n                               else if(array[i]!=100 || array[i+1] != 100){\r\n                                   //extraData200_Slot2_2.push(insertedData200_Slot2_2[k]);\r\n                                   extraData200_Slot2_2.push( extraData200_Slot2_2[k]);\r\n                               }    \r\n                       }\r\n                       \r\n                   }\r\n                   k++                        \r\n           }\r\n               return array;\r\n           }\r\n           slot2Equal2for500(AntArr500);\r\n\r\n           const slot2Equal1for500= (array) => {\r\n               let test = []\r\n               let k = 0;\r\n               for(let i = 0; i < extraData500_Slot2_1.length ; i++ ){\r\n                   extraData200_Slot2_1.push(extraData500_Slot2_1[i])\r\n               }\r\n               for(let i = array.length-1;i>0;i--){\r\n                   if(k < extraData200_Slot2_1.length){\r\n                       let slot2 = extraData200_Slot2_1[k][10]\r\n                       if(slot2 == 1){\r\n                               const j = Math.floor(Math.random()*(i+1));\r\n                               if(array[i] == 100){\r\n                                   array[i] = array[j];\r\n                                   array[j] = extraData200_Slot2_1[k];\r\n                               }   \r\n                               else if(array[i]!=100){\r\n                                   //extraData200_Slot2_1.push(insertedData200_Slot2_1[k]);\r\n                                   extraData200_Slot2_1.push(extraData200_Slot2_1[k]);\r\n                               }           \r\n                       }\r\n                       \r\n                   }\r\n                   k++                        \r\n           }\r\n               return array;\r\n           }\r\n\r\n           var Slot2_1_500 = slot2Equal1for500(AntArr500);\r\n\r\n           const AntAlgoInsert500 = (array) => {\r\n               let test = []\r\n               let k = 0;\r\n               let k2 = 0;\r\n               let k3 = 0;\r\n               for(let x=0; x<filterData500.length;x++){\r\n                   test.push(filterData500[x]);\r\n               }\r\n               for(let i = array.length-1;i>0;i--){\r\n                   if(k < test.length){\r\n                       let slot1 = test[k][9]\r\n                       if(slot1 == 2){\r\n                               const j = Math.floor(Math.random()*(i+1));\r\n                               if(array[i] == 100 && array[i+1] == 100){\r\n                                   array[i] = array[j];\r\n                                   array[i+1] = array[j+1];\r\n                                   array[j] = test[k];\r\n                                   array[j+1] = test[k];\r\n                                   //insertedData100.push(test[k]);\r\n\r\n                                   let slot2 = test[k][10]\r\n      \r\n                                   if (slot2 == 2){\r\n                                       insertedData500_Slot2_2.push(test[k])\r\n                                       // slot2Equal2for100(insertedData100_Slot2_2);\r\n                                       if(k2 < insertedData500_Slot2_2.length){\r\n                                           let slot2 = insertedData500_Slot2_2[k2][10]\r\n                                           if(slot2 == 2){\r\n                                                   const j = Math.floor(Math.random()*(i+1));\r\n                                                   if(array[i] == 100 && array[i+1] == 100){\r\n                                                       array[i] = array[j];\r\n                                                       array[i+1] = array[j+1];\r\n                                                       array[j] = insertedData500_Slot2_2[k2];\r\n                                                       array[j+1] = insertedData500_Slot2_2[k2];\r\n                                                   }   \r\n                                                   else if(array[i]!=100 || array[i+1] != 100){\r\n                                                       //insertedData500_Slot2_2[k2].push(insertedData500_Slot2_2[k2]);\r\n                                                       extraData500_Slot2_2.push(insertedData500_Slot2_2[k2]);\r\n                                                   }    \r\n                                           }\r\n                                           \r\n                                       }\r\n                                       k2++   \r\n                                   }\r\n                                   if (slot2 == 1){\r\n                                       insertedData500_Slot2_1.push(test[k])\r\n                                       //slot2Equal1for100(insertedData100_Slot2_1);\r\n                                       if(k3 < insertedData500_Slot2_1.length){\r\n                                           let slot2 = insertedData500_Slot2_1[k3][10]\r\n                                           if(slot2 == 1){\r\n                                                   const j = Math.floor(Math.random()*(i+1));\r\n                                                   if(array[i] == 100){\r\n                                                       array[i] = array[j];\r\n                                                       array[j] = insertedData500_Slot2_1[k3];\r\n                                                   }   \r\n                                                   else if(array[i]!=100){\r\n                                                       // insertedData500_Slot2_1[k3].push(insertedData500_Slot2_1[k3]);\r\n                                                       extraData500_Slot2_1.push(insertedData500_Slot2_1[k3]);\r\n                                                   }           \r\n                                           }\r\n                                           \r\n                                       }\r\n                                       k3++ \r\n                                   }\r\n                               }   \r\n                               else if(array[i]!=100 || array[i+1] != 100){\r\n                                   test.push(test[k]);\r\n                               }                      \r\n                       }\r\n                       \r\n                   }\r\n                   k++                        \r\n           }\r\n               return array;\r\n           }\r\n           var AntArrIns500 = AntAlgoInsert500(AntArr500);\r\n           //console.log(extraData500_Slot2_2)\r\n\r\n\r\n           const checkAmountData500 = (array) => {\r\n               let count = 0\r\n               for(let i = 0; i < array.length; i++){\r\n                       if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined){\r\n                           count += 1\r\n                       }\r\n               }\r\n               return count\r\n           }\r\n           var checkAmount = checkAmountData500(AntArrIns500)\r\n           //console.log(AntArrIns500)\r\n           console.log(checkAmount);\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Hard Constraint \r\n// H1: No student attend more than one class/ event at the same time\r\n// H2: The room is large enough to accomodate all of the student in attendace while also meeting the requirement \r\n// H3: At any given time, each room can onle have one course booked\r\n// H4: No student attend class during 12:00 pm -2:00 due to solat jumaat\r\n// H5: One teacher can only teach one class at one time.\r\n\r\n//Check for the H1 violation: same group attend more than 1 class at 1 time\r\n\r\nconst check1Group = (array) => {\r\n   let count =0\r\n   let indexArray = 0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       indexArray = (x * 38)\r\n   }\r\n   for(let i = 0; i<array.length ; i++){\r\n       try{\r\n           for(let x= 1 ; x <= totalRoom ; x++){\r\n               indexArray = (x * 38)\r\n               if(array[i+indexArray] != 100 && array[i+indexArray] != undefined ){\r\n                   try{\r\n                       if(array[i][6] == array[i+indexArray][6] && array[i+1][6] == array[i+indexArray+1][6] && array[i][3] == array[i+indexArray][3] && array[i+1][3] == array[i+indexArray+1][3] ){\r\n                            try{\r\n                                console.log(array[i][6])\r\n                                console.log(array[i+indexArray][6])\r\n                                count +=1\r\n                            }catch{}\r\n                       }\r\n                   }catch{}\r\n               }   \r\n           }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n}\r\nvar checkH1_50 = check1Group(AntArr50)\r\nvar checkH1_100 = check1Group(AntArr100)\r\nvar checkH1_200 = check1Group(AntArr200)\r\nvar checkH1_500 = check1Group(AntArr500)\r\nconsole.log(\"Hard Constraint 1 violation: \"+ checkH1_50);\r\nconsole.log(\"Hard Constraint 1 violation: \"+ checkH1_100);\r\nconsole.log(\"Hard Constraint 1 violation: \"+ checkH1_200);\r\nconsole.log(\"Hard Constraint 1 violation: \"+ checkH1_500);\r\n\r\n\r\n\r\n//Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\r\n\r\nconst checkRoomQuota = (array) => {\r\n   let count = 0\r\n   return count \r\n}\r\n// var checkH5_50 = checkRoomQuota(AntArr50)\r\n// var checkH5_100 = checkRoomQuota(AntArr100)\r\n// var checkH5_200 = checkRoomQuota(AntArr200)\r\n// var checkH5_500 = checkRoomQuota(AntArr500)\r\n\r\n\r\n//Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\r\nconst checkSolatJummat = (array) => {\r\n   let count = 0\r\n   return count \r\n}\r\n// var checkH5_50 = checkSolatJummat(AntArr50)\r\n// var checkH5_100 = checkSolatJummat(AntArr100)\r\n// var checkH5_200 = checkSolatJummat(AntArr200)\r\n// var checkH5_500 = checkSolatJummat(AntArr500)\r\n\r\n//Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\r\n\r\nconst check1Teacher = (array) => {\r\n   let count =0\r\n   let indexArray = 0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       indexArray = (x * 38)\r\n   }\r\n   for(let i = 0; i<array.length ; i++){\r\n       try{\r\n           for(let x= 1 ; x <= totalRoom ; x++){\r\n               indexArray = (x * 38)\r\n               if(array[i+indexArray] != 100 && array[i+indexArray] != undefined ){\r\n                   try{\r\n                       if(array[i][5] == array[i+indexArray][5] && array[i+1][5] == array[i+indexArray+1][5] ){\r\n                           count +=1\r\n                       }\r\n                   }catch{}\r\n               }    \r\n           }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n}\r\nvar checkH5_50 = check1Teacher(AntArr50)\r\nvar checkH5_100 = check1Teacher(AntArr100)\r\nvar checkH5_200 = check1Teacher(AntArr200)\r\nvar checkH5_500 = check1Teacher(AntArr500)\r\nconsole.log(\"Hard Constraint 5 violation: \"+ checkH5_50);\r\nconsole.log(\"Hard Constraint 5 violation: \"+ checkH5_100);\r\nconsole.log(\"Hard Constraint 5 violation: \"+ checkH5_200);\r\nconsole.log(\"Hard Constraint 5 violation: \"+ checkH5_500);\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n// Soft Constraint \r\n// S1: A student has a class schedule toward the end of the day\r\n// S2: A student have more than two class in a row\r\n\r\n\r\n//Check for the S1 violation: student have class at the end of the day\r\nconst checkEndOfClass = (array) => {\r\n   let count =0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       let indexArray = (x * 38)-1\r\n       if(array[indexArray] != 100 ){\r\n           count = 1\r\n       }\r\n   }\r\n   return count\r\n\r\n}\r\n// var checkS1_50 = checkEndOfClass(AntArr50)\r\n// var checkS1_100 = checkEndOfClass(AntArr100)\r\n// var checkS1_200 = checkEndOfClass(AntArr200)\r\n// var checkS1_500 = checkEndOfClass(AntArr500)\r\n// console.log(\"Soft Constraint 1 violation: \"+ checkS1_50);\r\n// console.log(\"Soft Constraint 1 violation: \"+ checkS1_100);\r\n// console.log(\"Soft Constraint 1 violation: \"+ checkS1_200);\r\n// console.log(\"Soft Constraint 1 violation: \"+ checkS1_500);\r\n\r\n//Check for the S2 violation: student have 2 class in a row\r\n\r\nconst check2ClassInARow = (array) => {\r\n   let count =0\r\n   for(let i = 0; i < array[i].length; i++){\r\n       if(array[i+2] != 100){\r\n           count = 1\r\n       }\r\n   }\r\n   return count\r\n\r\n}\r\n// var checkS2_50 = check2ClassInARow(AntArr50)\r\n// var checkS2_100 = check2ClassInARow(AntArr100)\r\n// var checkS2_200 = check2ClassInARow(AntArr200)\r\n// var checkS2_500 = check2ClassInARow(AntArr500)\r\n// console.log(\"Soft Constraint 2 violation: \"+ checkS2_50);\r\n// console.log(\"Soft Constraint 2 violation: \"+ checkS2_100);\r\n// console.log(\"Soft Constraint 2 violation: \"+ checkS2_200);\r\n// console.log(\"Soft Constraint 2 violation: \"+ checkS2_500);\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------------\r\n//Combine all dataset\r\nlet combineData = []\r\nconst combine = (data1,data2,data3,data4)  => {\r\n    for(let i = 0; i < data1.length; i++){\r\n        combineData.push(data1[i])\r\n    }\r\n    for(let i = 0; i < data2.length; i++){\r\n        combineData.push(data2[i])\r\n    }\r\n    for(let i = 0; i < data3.length; i++){\r\n        combineData.push(data3[i])\r\n    }\r\n    for(let i = 0; i < data4.length; i++){\r\n        combineData.push(data4[i])\r\n    }\r\n    return combineData;\r\n}\r\nlet dataCombine = combine(AntArr50,AntArr100,AntArr200,AntArr500)\r\nconsole.log(dataCombine);\r\n\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n//Check total Hard Constraint\r\n\r\nconst checkTotalHardContraint = () => {\r\n   let count =0\r\n   let totalH1 = checkH1_50 + checkH1_100 + checkH1_200 + checkH1_500\r\n   let totalH2 = checkH5_50 + checkH5_100 + checkH5_200 + checkH5_500\r\n   if(totalH1 != 0){\r\n       count +=1\r\n   }\r\n   if(totalH2 != 0){\r\n       count +=1\r\n   }   \r\n   return count\r\n}\r\nconsole.log(AntArrIns50)\r\nconsole.log(AntArrIns100)\r\nconsole.log(AntArrIns200)\r\nconsole.log(AntArrIns500)\r\nvar checkTotalHardContraints = checkTotalHardContraint()\r\nconsole.log(\"Total Hard Constraint: \"+checkTotalHardContraints)\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n// const checkTotalSoftContraint = () => {\r\n//     let count =0\r\n//     let totalS1 = checkS1_50 + checkS1_100 + checkS1_200 + checkS1_500\r\n//     let totalS2 = checkS2_50 + checkS2_100 + checkS2_200 + checkS2_500\r\n//     if(totalS1 != 0){\r\n//         count +=1\r\n//     }\r\n//     if(totalS2 != 0){\r\n//         count +=1\r\n//     }   \r\n//     return count\r\n// }\r\n// var checkTotalSoftContraints = checkTotalSoftContraint()\r\n// console.log(\"Total Soft Constraint: \"+checkTotalSoftContraints)\r\n\r\nconst HS0 = () => {\r\n   if(checkTotalHardContraints == 0){\r\n       // console.log(Slot2_1_50)\r\n       // console.log(Slot2_1_100)\r\n       // console.log(Slot2_1_200)\r\n       // console.log(Slot2_1_500)\r\n       console.log(checkTotalHardContraints)\r\n       //console.log(checkTotalSoftContraints)\r\n   }\r\n   // return {Slot2_1_50,Slot2_1_100,Slot2_1_200,Slot2_1_500,checkTotalHardContraints, checkTotalSoftContraints}\r\n}\r\n    return HS0()\r\n   //  return {Slot2_1_50,Slot2_1_100,Slot2_1_200,Slot2_1_500,checkTotalHardContraints, checkTotalSoftContraints}\r\n}\r\n// -------------------------------------------------------------------------------------------------------------------------------------------\r\nlet returnData50 = []\r\nlet returnData100 = []\r\nlet returnData200 = []\r\nlet returnData500 = []\r\n\r\nfor(let i= 1; i <= 1; i++){\r\n    console.log(\"iterantion: \" + i)\r\n    //  if(antSystem().checkTotalHardContraints == 0){\r\n    //     // console.log(antSystem().Slot2_1_50)\r\n    //     // console.log(antSystem().Slot2_1_100)\r\n    //     // console.log(antSystem().Slot2_1_200)\r\n    //     // console.log(antSystem().Slot2_1_500)\r\n    //     returnData50.push(antSystem().Slot2_1_50)\r\n    //     returnData100.push(antSystem().Slot2_1_100)\r\n    //     returnData200.push(antSystem().Slot2_1_200)\r\n    //     returnData500.push(antSystem().Slot2_1_500)\r\n\r\n    // //     console.log( antSystem().checkTotalHardContraints)\r\n    // //     console.log( antSystem().checkTotalSoftContraints)\r\n    // //     console.log(\"iterantion: \" + i)\r\n    // //     //return true;\r\n    //      break\r\n    //  }\r\n    antSystem();\r\n}\r\n\r\n// console.log(returnData50[0])\r\n// console.log(returnData100[0])\r\n// console.log(returnData200[0])\r\n// console.log(returnData500[0])\r\n\r\n// let weekday = ['Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday',\r\n// 'Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday',\r\n// 'Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday',\r\n// 'Friday','Friday','Friday','Friday','Friday','Friday','Friday','Friday']\r\n\r\n\r\n\r\n\r\n// const create2dArray = (weekdayArray,partDay,array50, part50,array100, part100,array200, part200,array500, part500) => {\r\n//     var tmp = [];\r\n\r\n//     for(var i = 0; i < weekdayArray.length; i += partDay) {\r\n//         tmp.push(weekdayArray.slice(i, i + partDay));\r\n//     }\r\n//     for(var i = 0; i < array50.length; i += part50) {\r\n//         tmp.push(array50.slice(i, i + part50));\r\n//     }\r\n//     for(var i = 0; i < array100.length; i += part100) {\r\n//         tmp.push(array100.slice(i, i + part100));\r\n//     }\r\n//     for(var i = 0; i < array200.length; i += part200) {\r\n//         tmp.push(array200.slice(i, i + part200));\r\n//     }\r\n//     for(var i = 0; i < array500.length; i += part500) {\r\n//         tmp.push(array500.slice(i, i + part500));\r\n//     }\r\n//     return tmp;\r\n// }\r\n// console.log(create2dArray50(returnData50[0], 38));\r\n// console.log(create2dArray100(returnData100[0], 38));\r\n// console.log(create2dArray200(returnData200[0], 38));\r\n// console.log(create2dArray500(returnData500[0], 38));\r\n\r\n// let dataset50 = create2dArray50(returnData50[0], 38)\r\n// let dataset100 = create2dArray100(returnData100[0], 38)\r\n// let dataset200 = create2dArray200(returnData200[0], 38)\r\n// let dataset500 = create2dArray500(returnData500[0], 38)\r\n\r\n//let dataset = create2dArray(weekday,38,returnData50[0], 38, returnData100[0], 38,returnData200[0], 38,returnData500[0], 38)\r\n//console.log(dataset);\r\n\r\n// let completeDataset = []\r\n\r\n// completeDataset.push(dataset50)\r\n// completeDataset.push(dataset100)\r\n// completeDataset.push(dataset200)\r\n// completeDataset.push(dataset500)\r\n// console.log(completeDataset);\r\n\r\n//finalData.push(dataset);\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n        }\r\n        // let headers = [\r\n        //     { label: \"Monday\", key:\"Monday\"  },\r\n        //     { label: \"Tuesday\", key:\"Tuesday\" },\r\n        //     { label: \"Thursday\", key:\"Thursday\"  },\r\n        //     { label: \"Friday\", key:\"Friday\"  },\r\n        //     // { label: \"Room\", key: \"Room\" },\r\n        //     // { label: \"Size\", key: \"Size\" },\r\n        //     // { label: \"Slot\", key: \"Slot\" }\r\n        //   ];\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {/* <Dataset  ertCourse={Course}/> */}\r\n            {/* {!isLoading && loadedFile} */}\r\n            <h1>\r\n                Generate Schedule Page\r\n                {/* { CsvData && CsvData.map((Dataset) =>(<CSVLink data = {Dataset} headers={headers}>Download me</CSVLink>))} */}\r\n                {/* {isLoading && <div className=\"center\"><LoadingSpinner/></div>} */}\r\n                {/* <CSVLink data={finalData} filename={\"my-file.csv\"}  headers={headers}> Download me </CSVLink>; */}\r\n            </h1>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default ArraySchedule;\r\n\r\n\r\n//result[i][j]=Course.splice(Math.floor(Math.random()* Course.length),1)[0] // create random placement of Course Value\r\n//const Schedule = new Array(10).fill(Array(5).fill(null));\r\n//console.log(Schedule);\r\n// const Course = [['TE1',4],['TE1',4],['TE1',4],['TE1',3],['TE1',4],['TE1',2],['TE1',4],['TE1',4],['TE1',4],['TE1',3]];\r\n//const Course = [['TE1',2],['TE2',2],['TE3',3],['TE4',4],['TE5',3],['TE6',4],['TE7',4],['TE8',2],['TE9',4]];\r\n//const Course = ['TE1','TE2','TE3','TE4','TE5','TE6','TE7','TE8','TE9'];"]},"metadata":{},"sourceType":"module"}