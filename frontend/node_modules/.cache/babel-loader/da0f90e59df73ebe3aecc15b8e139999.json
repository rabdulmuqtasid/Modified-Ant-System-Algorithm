{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acit\\\\Desktop\\\\FYP Code\\\\FYP Code\\\\frontend\\\\src\\\\components\\\\RandomSchedule\\\\arraySchedule.js\";\nimport { create, find, forEach, indexOf } from \"lodash\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport _ from 'lodash';\nimport { CSVLink } from \"react-csv\";\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\nlet finalDataAll = [];\nlet finalDataAllElective = [];\nlet checkHardConstraintOutsite = 0;\nlet checkSoftConstraintOutsite = 0;\n\nconst ArraySchedule = props => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedFile, setLoaadedFile] = useState(false);\n  const [roomData, setroomData] = useState();\n  const [courseData, setcourseData] = useState();\n  const [CsvData, setCsvData] = useState(); // const [Keys, setKeys] = useState();\n  //const [uploadedData, setUploadedData] = useState([]);\n  //console.log(\"props dataset:\"+ props.test)\n\n  const userId = useParams().userId;\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875'); //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\n        //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\n\n        const responsedata = await response.json();\n        let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset); // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\n\n        const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Room'], Dataset['Size']]); //Extract Room\n\n        setroomData([ertRoom]);\n        const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'], Dataset['Course Code'], Dataset['Course Name'], Dataset['Year'], Dataset['Semester'], Dataset['Lecturer'], Dataset['Group'], Dataset['HMS'], Dataset['Programme Code'], Dataset['Slot1'], Dataset['Slot2']]); //Extract Enrollment Quota\n\n        setcourseData([ertCourse]);\n\n        if (!response.ok) {\n          throw new Error(responsedata.message);\n        }\n\n        setLoaadedFile(stringifyData);\n        setIsLoading(true);\n      } catch (err) {\n        console.log(err.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, [userId]);\n\n  if (!isLoading && loadedFile) {\n    const testData = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const EnrollmentQuota = [];\n    const CourseCode = [];\n    const HMS = [];\n    const lecturerData = [];\n    const roomName = [];\n    const roomSize = [];\n    const filterData50 = [];\n    const filterData100 = [];\n    const filterData200 = [];\n    const filterData500 = [];\n    const filterDataElective50 = [];\n    const filterDataElective100 = [];\n    const filterDataElective200 = [];\n    const filterDataElective500 = [];\n    const dupeData = [];\n    const room = [];\n    room.push(roomData[0]);\n    let hardConstraintViolated = 0;\n    let softConstraintViolated = 0; //console.log(courseData[0][0][1]);\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      let enrollment = [courseData[0][i][0]];\n      let code = [courseData[0][i][1]];\n      let hms = [courseData[0][i][7]];\n      let lecturer = [courseData[0][i][5]];\n      enrollment.reduce(function (results, item, index, array) {\n        results[index] = item;\n        EnrollmentQuota.push(item); //console.log(results)\n      }, {});\n      code.reduce(function (results, item, index, array) {\n        results[index] = item;\n        CourseCode.push(item); //console.log(results)\n      }, {});\n      hms.reduce(function (results, item, index, array) {\n        results[index] = item;\n        HMS.push(item); //console.log(results)\n      }, {});\n      lecturer.reduce(function (results, item, index, array) {\n        results[index] = item;\n        lecturerData.push(item); //console.log(results)\n      }, {});\n    }\n\n    for (let i = 0; i < roomData[0].length; i++) {\n      let name = [roomData[0][i][0]];\n      let size = [roomData[0][i][1]];\n      name.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomName.push(item); //console.log(results)\n      }, {});\n      size.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomSize.push(item); //console.log(results)\n      }, {});\n    }\n\n    const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\n    const notDuplicatesLecturer = lecturerData.filter((item, index) => index == lecturerData.indexOf(item));\n    notDuplicatesLecturer.pop(); //console.log(notDuplicatesLecturer)\n\n    let courseDataXElective = [];\n    let courseDataWithElective = []; //saparate faculty course with the elective course\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      if (courseData[0][i][1].slice(0, 3) != 'TMU') {\n        courseData[0][i].splice();\n\n        if (courseData[0][i][1].slice(0, 3) != 'TMX') {\n          courseData[0][i].splice();\n          courseDataXElective.push(courseData[0][i]);\n        }\n      }\n    } //saparate elective course with the faculty course\n\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      if (courseData[0][i][1].slice(0, 3) == 'TMU' || courseData[0][i][1].slice(0, 3) == 'TMX') {\n        courseDataWithElective.push(courseData[0][i]);\n      }\n    } //insert data without elective courses into correct room capacity\n\n\n    for (let i = 0; i < courseDataXElective.length; i++) {\n      if (courseDataXElective[i][0] < 50) {\n        filterData50.push(courseDataXElective[i]);\n      }\n\n      if (courseDataXElective[i][0] >= 50 && courseDataXElective[i][0] < 100) {\n        filterData100.push(courseDataXElective[i]);\n      }\n\n      if (courseDataXElective[i][0] >= 100 && courseDataXElective[i][0] < 200) {\n        filterData200.push(courseDataXElective[i]);\n      }\n\n      if (courseDataXElective[i][0] >= 200 && courseDataXElective[i][0] < 500) {\n        filterData500.push(courseDataXElective[i]);\n      }\n    } //console.log(filterData50)\n    //insert data without faculty courses into correct room capacity\n\n\n    for (let i = 0; i < courseDataWithElective.length; i++) {\n      if (courseDataWithElective[i][0] < 50) {\n        filterDataElective50.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 50 && courseDataWithElective[i][0] < 100) {\n        filterDataElective100.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 100 && courseDataWithElective[i][0] < 200) {\n        filterDataElective200.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 200 && courseDataWithElective[i][0] < 500) {\n        filterDataElective500.push(courseDataWithElective[i]);\n      }\n    } // console.log(filterDataElective50);\n    // console.log(filterDataElective100);\n    // console.log(filterDataElective200);\n    // console.log(filterDataElective500);\n\n\n    let roomUnder50 = [];\n    let roomUnder100 = [];\n    let roomUnder200 = [];\n    let roomUnder500 = [];\n\n    const checkNumberofRoom = () => {\n      for (let i = 0; i < roomData[0].length; i++) {\n        let room = roomData[0][i][1]; //console.log(roomData[0][i][1]);\n\n        if (room < 50) {\n          roomUnder50.push(room);\n        } else if (room > 50 && room < 100) {\n          roomUnder100.push(room);\n        } else if (room > 100 && room < 200) {\n          roomUnder200.push(room);\n        } else if (room > 200) {\n          roomUnder500.push(room);\n        }\n      }\n    };\n\n    checkNumberofRoom();\n\n    const createArray = data => {\n      var result = [];\n\n      for (let i = 0; i < data; i++) {\n        result[i] = [];\n      }\n\n      return result;\n    };\n\n    let DataArray50 = roomUnder50.length * 38;\n    let DataArray100 = roomUnder100.length * 38;\n    let DataArray200 = roomUnder200.length * 38;\n    let DataArray500 = roomUnder500.length * 38;\n    let DataArrayElective50 = roomUnder50.length * 10;\n    let DataArrayElective100 = roomUnder100.length * 10;\n    let DataArrayElective200 = roomUnder200.length * 10;\n    let DataArrayElective500 = roomUnder500.length * 10; //----------------------------------------------------------------------------------------------------------------------------------------\n\n    var checkTotalHardContraintsAll = 0;\n    var checkTotalSoftContraintsAll = 0;\n\n    const antSystem = () => {\n      //Faculty courses\n      //create 1d array for dataset 50\n      const array1D50 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr50 = array1D50(DataArray50);\n      let extraData50_Slot2_2 = [];\n      let extraData50_Slot2_1 = [];\n      let insertedData50_Slot2_2 = [];\n      let insertedData50_Slot2_1 = [];\n\n      const AntAlgoInsert50 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterData50.length; x++) {\n          test.push(filterData50[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let slot1 = test[k][9];\n            let slot2 = test[k][10];\n\n            if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                //slot in slot1 = 2\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const z = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[z];\n                      array[i - 1] = array[z - 1];\n                      array[i] = test[k];\n                      array[i - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[z];\n                      array[i + 1] = array[z + 1];\n                      array[z] = test[k];\n                      array[z + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } //slot in slot1 = 2\n                else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const v = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[v];\n                      array[i - 1] = array[v - 1];\n                      array[v] = test[k];\n                      array[v - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[v];\n                      array[i + 1] = array[v + 1];\n                      array[v] = test[k];\n                      array[v + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  array[j + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  insertedData50_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  insertedData50_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = array[j];\n                  array[j] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //console.log(remainderArraySlot1);\n        //for(let x = 0; x < remainderArraySlot1.length; x++){\n\n\n        for (let z = 0; z < array.length; z++) {\n          for (let x = 0; x < remainderArraySlot1.length; x++) {\n            if (array[z] == remainderArraySlot1[x]) {\n              for (let b = 1; b <= totalRoom; b++) {\n                if (array[z + 38 * b] == 100 && array[z + 38 * b - 1] == 100) {\n                  array[z + 38 * b] = 0;\n                  array[z + 38 * b - 1] = 0;\n                }\n\n                if (array[z - 38 * b] == 100 && array[z - 38 * b - 1] == 100) {\n                  array[z - 38 * b] = 0;\n                  array[z - 38 * b - 1] = 0;\n                }\n              }\n            }\n          }\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData50_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData50_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const c = Math.floor(Math.random() * (x + 1));\n              array[x] = array[c];\n              array[x + 1] = array[c + 1];\n              array[c] = remainderArray[k2];\n              array[c + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData50_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData50_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const b = Math.floor(Math.random() * (x + 1));\n              array[x] = array[b];\n              array[x + 1] = array[b + 1];\n              array[b] = remainderArray[k2];\n              array[b + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData50_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData50_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        } //if there is array in -1, reslot in into the array\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedData50_Slot2_1.push(array[-1]); // array[-1] = undefined\n        }\n\n        return array;\n      };\n\n      var AntArrIns50 = AntAlgoInsert50(AntArr50);\n\n      const checkAmountData50B = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmountB = checkAmountData50B(AntArrIns50);\n\n      const slot2Equal1for50 = array => {\n        let k = 0;\n        let test2 = []; //console.log(insertedData50_Slot2_1)\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedData50_Slot2_1.length) {\n              array[x] = insertedData50_Slot2_1[k];\n            }\n\n            k++;\n          }\n        } //console.log(test2)\n\n\n        return array;\n      };\n\n      slot2Equal1for50(AntArr50);\n\n      const slot2Equal2for50 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedData50_Slot2_2.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = insertedData50_Slot2_2[k];\n              array[q + 1] = insertedData50_Slot2_2[k];\n            } else {\n              if (insertedData50_Slot2_2[k] != undefined) {\n                extraData50_Slot2_2.push(insertedData50_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < extraData50_Slot2_2.length) {\n              array[x] = extraData50_Slot2_2[k];\n              array[x + 1] = extraData50_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2for50(AntArr50);\n\n      const checkAmountData50 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount50 = checkAmountData50(AntArrIns50); //----------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Data is more than or equal to 50 but less than 100\n      //create 1d array for dataset 100\n\n      const array1D100 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr100 = array1D100(DataArray100);\n      let extraData100_Slot2_2 = [];\n      let extraData100_Slot2_1 = [];\n      let insertedData100_Slot2_2 = [];\n      let insertedData100_Slot2_1 = [];\n\n      const AntAlgoInsert100 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterData100.length; x++) {\n          test.push(filterData100[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let slot1 = test[k][9];\n            let slot2 = test[k][10];\n\n            if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                //slot in slot1 = 2\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const z = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[z];\n                      array[i - 1] = array[z - 1];\n                      array[i] = test[k];\n                      array[i - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[z];\n                      array[i + 1] = array[z + 1];\n                      array[z] = test[k];\n                      array[z + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } //slot in slot1 = 2\n                else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const v = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[v];\n                      array[i - 1] = array[v - 1];\n                      array[v] = test[k];\n                      array[v - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[v];\n                      array[i + 1] = array[v + 1];\n                      array[v] = test[k];\n                      array[v + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  array[j + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  insertedData100_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  insertedData100_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = array[j];\n                  array[j] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //console.log(remainderArraySlot1);\n        //for(let x = 0; x < remainderArraySlot1.length; x++){\n\n\n        for (let z = 0; z < array.length; z++) {\n          for (let x = 0; x < remainderArraySlot1.length; x++) {\n            if (array[z] == remainderArraySlot1[x]) {\n              for (let b = 1; b <= totalRoom; b++) {\n                if (array[z + 38 * b] == 100 && array[z + 38 * b - 1] == 100) {\n                  array[z + 38 * b] = 0;\n                  array[z + 38 * b - 1] = 0;\n                }\n\n                if (array[z - 38 * b] == 100 && array[z - 38 * b - 1] == 100) {\n                  array[z - 38 * b] = 0;\n                  array[z - 38 * b - 1] = 0;\n                }\n              }\n            }\n          }\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData100_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData100_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const c = Math.floor(Math.random() * (x + 1));\n              array[x] = array[c];\n              array[x + 1] = array[c + 1];\n              array[c] = remainderArray[k2];\n              array[c + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData100_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData100_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const b = Math.floor(Math.random() * (x + 1));\n              array[x] = array[b];\n              array[x + 1] = array[b + 1];\n              array[b] = remainderArray[k2];\n              array[b + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData100_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData100_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        } //if there is array in -1, reslot in into the array\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedData100_Slot2_1.push(array[-1]); // array[-1] = undefined\n        }\n\n        return array;\n      };\n\n      var AntArrIns100 = AntAlgoInsert100(AntArr100);\n\n      const checkAmountData100B = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 100 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmountB = checkAmountData100B(AntArrIns100);\n\n      const slot2Equal1for100 = array => {\n        let k = 0;\n        let test2 = []; //console.log(insertedData100_Slot2_1)\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedData100_Slot2_1.length) {\n              array[x] = insertedData100_Slot2_1[k];\n            }\n\n            k++;\n          }\n        } //console.log(test2)\n\n\n        return array;\n      };\n\n      slot2Equal1for100(AntArr100);\n\n      const slot2Equal2for100 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedData100_Slot2_2.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = insertedData100_Slot2_2[k];\n              array[q + 1] = insertedData100_Slot2_2[k];\n            } else {\n              if (insertedData100_Slot2_2[k] != undefined) {\n                extraData100_Slot2_2.push(insertedData100_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < extraData100_Slot2_2.length) {\n              array[x] = extraData100_Slot2_2[k];\n              array[x + 1] = extraData100_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2for100(AntArr100);\n\n      const checkAmountData100 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 100 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount100 = checkAmountData100(AntArrIns100); //----------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Data is more than or equal to 100 but less than 200\n      //create 1d array for dataset 200\n\n      const array1D200 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr200 = array1D200(DataArray200);\n      let extraData200_Slot2_2 = [];\n      let extraData200_Slot2_1 = [];\n      let insertedData200_Slot2_2 = [];\n      let insertedData200_Slot2_1 = [];\n\n      const AntAlgoInsert200 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterData200.length; x++) {\n          test.push(filterData200[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let slot1 = test[k][9];\n            let slot2 = test[k][10];\n\n            if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                //slot in slot1 = 2\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const z = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[z];\n                      array[i - 1] = array[z - 1];\n                      array[i] = test[k];\n                      array[i - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[z];\n                      array[i + 1] = array[z + 1];\n                      array[z] = test[k];\n                      array[z + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } //slot in slot1 = 2\n                else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const v = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[v];\n                      array[i - 1] = array[v - 1];\n                      array[v] = test[k];\n                      array[v - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[v];\n                      array[i + 1] = array[v + 1];\n                      array[v] = test[k];\n                      array[v + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  array[j + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  insertedData200_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  insertedData200_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = array[j];\n                  array[j] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //console.log(remainderArraySlot1);\n        //for(let x = 0; x < remainderArraySlot1.length; x++){\n\n\n        for (let z = 0; z < array.length; z++) {\n          for (let x = 0; x < remainderArraySlot1.length; x++) {\n            if (array[z] == remainderArraySlot1[x]) {\n              for (let b = 1; b <= totalRoom; b++) {\n                if (array[z + 38 * b] == 100 && array[z + 38 * b - 1] == 100) {\n                  array[z + 38 * b] = 0;\n                  array[z + 38 * b - 1] = 0;\n                }\n\n                if (array[z - 38 * b] == 100 && array[z - 38 * b - 1] == 100) {\n                  array[z - 38 * b] = 0;\n                  array[z - 38 * b - 1] = 0;\n                }\n              }\n            }\n          }\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData200_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData200_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const c = Math.floor(Math.random() * (x + 1));\n              array[x] = array[c];\n              array[x + 1] = array[c + 1];\n              array[c] = remainderArray[k2];\n              array[c + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData200_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData200_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const b = Math.floor(Math.random() * (x + 1));\n              array[x] = array[b];\n              array[x + 1] = array[b + 1];\n              array[b] = remainderArray[k2];\n              array[b + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData200_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData200_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        } //if there is array in -1, reslot in into the array\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedData200_Slot2_1.push(array[-1]); // array[-1] = undefined\n        }\n\n        return array;\n      };\n\n      var AntArrIns200 = AntAlgoInsert200(AntArr200);\n\n      const checkAmountData200B = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 200 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmountB = checkAmountData200B(AntArrIns200);\n\n      const slot2Equal1for200 = array => {\n        let k = 0;\n        let test2 = []; //console.log(insertedData200_Slot2_1)\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedData200_Slot2_1.length) {\n              array[x] = insertedData200_Slot2_1[k];\n            }\n\n            k++;\n          }\n        } //console.log(test2)\n\n\n        return array;\n      };\n\n      slot2Equal1for200(AntArr200);\n\n      const slot2Equal2for200 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedData200_Slot2_2.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = insertedData200_Slot2_2[k];\n              array[q + 1] = insertedData200_Slot2_2[k];\n            } else {\n              if (insertedData200_Slot2_2[k] != undefined) {\n                extraData200_Slot2_2.push(insertedData200_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < extraData200_Slot2_2.length) {\n              array[x] = extraData200_Slot2_2[k];\n              array[x + 1] = extraData200_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2for200(AntArr200);\n\n      const checkAmountData200 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 200 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount200 = checkAmountData200(AntArrIns200); //----------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Data is more than or equal to 200 \n      //create 1d array for dataset 500\n\n      const array1D500 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArr500 = array1D500(DataArray500);\n      let extraData500_Slot2_2 = [];\n      let extraData500_Slot2_1 = [];\n      let insertedData500_Slot2_2 = [];\n      let insertedData500_Slot2_1 = [];\n\n      const AntAlgoInsert500 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterData500.length; x++) {\n          test.push(filterData500[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let slot1 = test[k][9];\n            let slot2 = test[k][10];\n\n            if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                //slot in slot1 = 2\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const z = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[z];\n                      array[i - 1] = array[z - 1];\n                      array[i] = test[k];\n                      array[i - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[z];\n                      array[i + 1] = array[z + 1];\n                      array[z] = test[k];\n                      array[z + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } //slot in slot1 = 2\n                else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const v = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[v];\n                      array[i - 1] = array[v - 1];\n                      array[v] = test[k];\n                      array[v - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[v];\n                      array[i + 1] = array[v + 1];\n                      array[v] = test[k];\n                      array[v + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  array[j + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  insertedData500_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  insertedData500_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = array[j];\n                  array[j] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //console.log(remainderArraySlot1);\n        //for(let x = 0; x < remainderArraySlot1.length; x++){\n\n\n        for (let z = 0; z < array.length; z++) {\n          for (let x = 0; x < remainderArraySlot1.length; x++) {\n            if (array[z] == remainderArraySlot1[x]) {\n              for (let b = 1; b <= totalRoom; b++) {\n                if (array[z + 38 * b] == 100 && array[z + 38 * b - 1] == 100) {\n                  array[z + 38 * b] = 0;\n                  array[z + 38 * b - 1] = 0;\n                }\n\n                if (array[z - 38 * b] == 100 && array[z - 38 * b - 1] == 100) {\n                  array[z - 38 * b] = 0;\n                  array[z - 38 * b - 1] = 0;\n                }\n              }\n            }\n          }\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData500_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedData500_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const c = Math.floor(Math.random() * (x + 1));\n              array[x] = array[c];\n              array[x + 1] = array[c + 1];\n              array[c] = remainderArray[k2];\n              array[c + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData500_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData500_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const b = Math.floor(Math.random() * (x + 1));\n              array[x] = array[b];\n              array[x + 1] = array[b + 1];\n              array[b] = remainderArray[k2];\n              array[b + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedData500_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedData500_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        } //if there is array in -1, reslot in into the array\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedData500_Slot2_1.push(array[-1]); // array[-1] = undefined\n        }\n\n        return array;\n      };\n\n      var AntArrIns500 = AntAlgoInsert500(AntArr500);\n\n      const checkAmountData500B = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 500 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmountB = checkAmountData500B(AntArrIns500);\n\n      const slot2Equal1for500 = array => {\n        let k = 0;\n        let test2 = []; //console.log(insertedData500_Slot2_1)\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedData500_Slot2_1.length) {\n              array[x] = insertedData500_Slot2_1[k];\n            }\n\n            k++;\n          }\n        } //console.log(test2)\n\n\n        return array;\n      };\n\n      slot2Equal1for500(AntArr500);\n\n      const slot2Equal2for500 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedData500_Slot2_2.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = insertedData500_Slot2_2[k];\n              array[q + 1] = insertedData500_Slot2_2[k];\n            } else {\n              if (insertedData500_Slot2_2[k] != undefined) {\n                extraData500_Slot2_2.push(insertedData500_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < extraData500_Slot2_2.length) {\n              array[x] = extraData500_Slot2_2[k];\n              array[x + 1] = extraData500_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2for500(AntArr500);\n\n      const checkAmountData500 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 500 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount500 = checkAmountData500(AntArrIns500); //---------------------------------------------------------------------------------------------------------------------------------------------\n      //---------------------------------------------------------------------------------------------------------------------------------------------\n      //Elective courses\n      //create 1d array for dataset 50\n\n      const array1DElective50 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective50 = array1DElective50(DataArrayElective50);\n      let extraDataElective50_Slot2_2 = [];\n      let extraData50Elective_Slot2_1 = [];\n      let insertedDataElective50_Slot2_2 = [];\n      let insertedDataElective50_Slot2_1 = [];\n\n      const AntAlgoInsertElective50 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterDataElective50.length; x++) {\n          test.push(filterDataElective50[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let slot1 = test[k][9];\n            let slot2 = test[k][10];\n\n            if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                //slot in slot1 = 2\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const z = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[z];\n                      array[i - 1] = array[z - 1];\n                      array[i] = test[k];\n                      array[i - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[z];\n                      array[i + 1] = array[z + 1];\n                      array[z] = test[k];\n                      array[z + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } //slot in slot1 = 2\n                else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const v = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[v];\n                      array[i - 1] = array[v - 1];\n                      array[v] = test[k];\n                      array[v - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[v];\n                      array[i + 1] = array[v + 1];\n                      array[v] = test[k];\n                      array[v + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  array[j + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  insertedDataElective50_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  insertedDataElective50_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = array[j];\n                  array[j] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //console.log(remainderArraySlot1);\n        //for(let x = 0; x < remainderArraySlot1.length; x++){\n\n\n        for (let z = 0; z < array.length; z++) {\n          for (let x = 0; x < remainderArraySlot1.length; x++) {\n            if (array[z] == remainderArraySlot1[x]) {\n              for (let b = 1; b <= totalRoom; b++) {\n                if (array[z + 38 * b] == 100 && array[z + 38 * b - 1] == 100) {\n                  array[z + 38 * b] = 0;\n                  array[z + 38 * b - 1] = 0;\n                }\n\n                if (array[z - 38 * b] == 100 && array[z - 38 * b - 1] == 100) {\n                  array[z - 38 * b] = 0;\n                  array[z - 38 * b - 1] = 0;\n                }\n              }\n            }\n          }\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedDataElective50_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedDataElective50_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const c = Math.floor(Math.random() * (x + 1));\n              array[x] = array[c];\n              array[x + 1] = array[c + 1];\n              array[c] = remainderArray[k2];\n              array[c + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedDataElective50_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedDataElective50_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const b = Math.floor(Math.random() * (x + 1));\n              array[x] = array[b];\n              array[x + 1] = array[b + 1];\n              array[b] = remainderArray[k2];\n              array[b + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedDataElective50_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedDataElective50_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        } //if there is array in -1, reslot in into the array\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedDataElective50_Slot2_1.push(array[-1]); // array[-1] = undefined\n        }\n\n        return array;\n      };\n\n      var AntArrInsElective50 = AntAlgoInsertElective50(AntArrElective50);\n\n      const checkAmountDataElective50B = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmountB = checkAmountDataElective50B(AntArrInsElective50);\n\n      const slot2Equal1forElective50 = array => {\n        let k = 0;\n        let test2 = []; //console.log(insertedDataElective50_Slot2_1)\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedDataElective50_Slot2_1.length) {\n              array[x] = insertedDataElective50_Slot2_1[k];\n            }\n\n            k++;\n          }\n        } //console.log(test2)\n\n\n        return array;\n      };\n\n      slot2Equal1forElective50(AntArrElective50);\n\n      const slot2Equal2forElective50 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedDataElective50_Slot2_2.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = insertedDataElective50_Slot2_2[k];\n              array[q + 1] = insertedDataElective50_Slot2_2[k];\n            } else {\n              if (insertedDataElective50_Slot2_2[k] != undefined) {\n                extraDataElective50_Slot2_2.push(insertedDataElective50_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < extraDataElective50_Slot2_2.length) {\n              array[x] = extraDataElective50_Slot2_2[k];\n              array[x + 1] = extraDataElective50_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2forElective50(AntArrElective50);\n\n      const checkAmountDataElective50 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmountElective50 = checkAmountDataElective50(AntArrInsElective50); //---------------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Data is more than or equal to 50 but less than 100\n      //create 1d array for dataset 100\n\n      const array1DElective100 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective100 = array1DElective100(DataArrayElective100);\n      let extraDataElective100_Slot2_2 = [];\n      let extraData100Elective_Slot2_1 = [];\n      let insertedDataElective100_Slot2_2 = [];\n      let insertedDataElective100_Slot2_1 = [];\n\n      const AntAlgoInsertElective100 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterDataElective100.length; x++) {\n          test.push(filterDataElective100[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let slot1 = test[k][9];\n            let slot2 = test[k][10];\n\n            if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                //slot in slot1 = 2\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const z = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[z];\n                      array[i - 1] = array[z - 1];\n                      array[i] = test[k];\n                      array[i - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[z];\n                      array[i + 1] = array[z + 1];\n                      array[z] = test[k];\n                      array[z + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } //slot in slot1 = 2\n                else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const v = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[v];\n                      array[i - 1] = array[v - 1];\n                      array[v] = test[k];\n                      array[v - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[v];\n                      array[i + 1] = array[v + 1];\n                      array[v] = test[k];\n                      array[v + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  array[j + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  insertedDataElective100_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  insertedDataElective100_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = array[j];\n                  array[j] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //console.log(remainderArraySlot1);\n        //for(let x = 0; x < remainderArraySlot1.length; x++){\n\n\n        for (let z = 0; z < array.length; z++) {\n          for (let x = 0; x < remainderArraySlot1.length; x++) {\n            if (array[z] == remainderArraySlot1[x]) {\n              for (let b = 1; b <= totalRoom; b++) {\n                if (array[z + 38 * b] == 100 && array[z + 38 * b - 1] == 100) {\n                  array[z + 38 * b] = 0;\n                  array[z + 38 * b - 1] = 0;\n                }\n\n                if (array[z - 38 * b] == 100 && array[z - 38 * b - 1] == 100) {\n                  array[z - 38 * b] = 0;\n                  array[z - 38 * b - 1] = 0;\n                }\n              }\n            }\n          }\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedDataElective100_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedDataElective100_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const c = Math.floor(Math.random() * (x + 1));\n              array[x] = array[c];\n              array[x + 1] = array[c + 1];\n              array[c] = remainderArray[k2];\n              array[c + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedDataElective100_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedDataElective100_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const b = Math.floor(Math.random() * (x + 1));\n              array[x] = array[b];\n              array[x + 1] = array[b + 1];\n              array[b] = remainderArray[k2];\n              array[b + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedDataElective100_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedDataElective100_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        } //if there is array in -1, reslot in into the array\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedDataElective100_Slot2_1.push(array[-1]); // array[-1] = undefined\n        }\n\n        return array;\n      };\n\n      var AntArrInsElective100 = AntAlgoInsertElective100(AntArrElective100);\n\n      const checkAmountDataElective100B = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 100 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmountB = checkAmountDataElective100B(AntArrInsElective100);\n\n      const slot2Equal1forElective100 = array => {\n        let k = 0;\n        let test2 = []; //console.log(insertedDataElective100_Slot2_1)\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedDataElective100_Slot2_1.length) {\n              array[x] = insertedDataElective100_Slot2_1[k];\n            }\n\n            k++;\n          }\n        } //console.log(test2)\n\n\n        return array;\n      };\n\n      slot2Equal1forElective100(AntArrElective100);\n\n      const slot2Equal2forElective100 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedDataElective100_Slot2_2.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = insertedDataElective100_Slot2_2[k];\n              array[q + 1] = insertedDataElective100_Slot2_2[k];\n            } else {\n              if (insertedDataElective100_Slot2_2[k] != undefined) {\n                extraDataElective100_Slot2_2.push(insertedDataElective100_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < extraDataElective100_Slot2_2.length) {\n              array[x] = extraDataElective100_Slot2_2[k];\n              array[x + 1] = extraDataElective100_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2forElective100(AntArrElective100);\n\n      const checkAmountDataElective100 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 100 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmountElective100 = checkAmountDataElective100(AntArrInsElective100); //----------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Data is more than or equal to 100 but less than 200\n      //create 1d array for dataset 200\n\n      const array1DElective200 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective200 = array1DElective200(DataArrayElective200);\n      let extraDataElective200_Slot2_2 = [];\n      let extraData200Elective_Slot2_1 = [];\n      let insertedDataElective200_Slot2_2 = [];\n      let insertedDataElective200_Slot2_1 = [];\n\n      const AntAlgoInsertElective200 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterDataElective200.length; x++) {\n          test.push(filterDataElective200[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let slot1 = test[k][9];\n            let slot2 = test[k][10];\n\n            if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                //slot in slot1 = 2\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const z = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[z];\n                      array[i - 1] = array[z - 1];\n                      array[i] = test[k];\n                      array[i - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[z];\n                      array[i + 1] = array[z + 1];\n                      array[z] = test[k];\n                      array[z + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } //slot in slot1 = 2\n                else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const v = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[v];\n                      array[i - 1] = array[v - 1];\n                      array[v] = test[k];\n                      array[v - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[v];\n                      array[i + 1] = array[v + 1];\n                      array[v] = test[k];\n                      array[v + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  array[j + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  insertedDataElective200_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  insertedDataElective200_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = array[j];\n                  array[j] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //console.log(remainderArraySlot1);\n        //for(let x = 0; x < remainderArraySlot1.length; x++){\n\n\n        for (let z = 0; z < array.length; z++) {\n          for (let x = 0; x < remainderArraySlot1.length; x++) {\n            if (array[z] == remainderArraySlot1[x]) {\n              for (let b = 1; b <= totalRoom; b++) {\n                if (array[z + 38 * b] == 100 && array[z + 38 * b - 1] == 100) {\n                  array[z + 38 * b] = 0;\n                  array[z + 38 * b - 1] = 0;\n                }\n\n                if (array[z - 38 * b] == 100 && array[z - 38 * b - 1] == 100) {\n                  array[z - 38 * b] = 0;\n                  array[z - 38 * b - 1] = 0;\n                }\n              }\n            }\n          }\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedDataElective200_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedDataElective200_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const c = Math.floor(Math.random() * (x + 1));\n              array[x] = array[c];\n              array[x + 1] = array[c + 1];\n              array[c] = remainderArray[k2];\n              array[c + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedDataElective200_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedDataElective200_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const b = Math.floor(Math.random() * (x + 1));\n              array[x] = array[b];\n              array[x + 1] = array[b + 1];\n              array[b] = remainderArray[k2];\n              array[b + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedDataElective200_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedDataElective200_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        } //if there is array in -1, reslot in into the array\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedDataElective200_Slot2_1.push(array[-1]); // array[-1] = undefined\n        }\n\n        return array;\n      };\n\n      var AntArrInsElective200 = AntAlgoInsertElective200(AntArrElective200);\n\n      const checkAmountDataElective200B = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 200 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmountB = checkAmountDataElective200B(AntArrInsElective200);\n\n      const slot2Equal1forElective200 = array => {\n        let k = 0;\n        let test2 = []; //console.log(insertedDataElective200_Slot2_1)\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedDataElective200_Slot2_1.length) {\n              array[x] = insertedDataElective200_Slot2_1[k];\n            }\n\n            k++;\n          }\n        } //console.log(test2)\n\n\n        return array;\n      };\n\n      slot2Equal1forElective200(AntArrElective200);\n\n      const slot2Equal2forElective200 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedDataElective200_Slot2_2.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = insertedDataElective200_Slot2_2[k];\n              array[q + 1] = insertedDataElective200_Slot2_2[k];\n            } else {\n              if (insertedDataElective200_Slot2_2[k] != undefined) {\n                extraDataElective200_Slot2_2.push(insertedDataElective200_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < extraDataElective200_Slot2_2.length) {\n              array[x] = extraDataElective200_Slot2_2[k];\n              array[x + 1] = extraDataElective200_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2forElective200(AntArrElective200);\n\n      const checkAmountDataElective200 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 200 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmountElective200 = checkAmountDataElective200(AntArrInsElective200); //----------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      // Data is more than or equal to 200 \n      //create 1d array for dataset 500\n\n      const array1DElective500 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective500 = array1DElective500(DataArrayElective500);\n      let extraDataElective500_Slot2_2 = [];\n      let extraData500Elective_Slot2_1 = [];\n      let insertedDataElective500_Slot2_2 = [];\n      let insertedDataElective500_Slot2_1 = [];\n\n      const AntAlgoInsertElective500 = array => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let remainderArray = [];\n        let remainderArraySlot1 = [];\n        let totalRoom = array.length / 38;\n\n        for (let x = 0; x < filterDataElective500.length; x++) {\n          test.push(filterDataElective500[x]);\n        }\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < test.length) {\n            let hourMS = test[k][7];\n            let slot1 = test[k][9];\n            let slot2 = test[k][10];\n\n            if (hourMS == 4) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                //slot in slot1 = 2\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const z = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[z];\n                      array[i - 1] = array[z - 1];\n                      array[i] = test[k];\n                      array[i - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[z];\n                      array[i + 1] = array[z + 1];\n                      array[z] = test[k];\n                      array[z + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } //slot in slot1 = 2\n                else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k]; // make stack become 0\n\n                  for (let b = 1; b <= totalRoom; b++) {\n                    if (array[j + 38 * b] == 100 && array[j + 38 * b - 1] == 100) {\n                      array[j + 38 * b] = 0;\n                      array[j + 38 * b - 1] = 0;\n                    }\n\n                    if (array[j - 38 * b] == 100 && array[j - 38 * b - 1] == 100) {\n                      array[j - 38 * b] = 0;\n                      array[j - 38 * b - 1] = 0;\n                    }\n                  }\n\n                  const v = Math.floor(Math.random() * (i + 1));\n\n                  if (array[i] == 100) {\n                    //slot in slot1 = 2\n                    if (array[i - 1] == 100) {\n                      array[i] = array[v];\n                      array[i - 1] = array[v - 1];\n                      array[v] = test[k];\n                      array[v - 1] = test[k];\n                    } else if (array[i + 1] == 100) {\n                      array[i] = array[v];\n                      array[i + 1] = array[v + 1];\n                      array[v] = test[k];\n                      array[v + 1] = test[k];\n                    } else {\n                      remainderArraySlot1.push(test[k]);\n                    }\n                  } else {\n                    remainderArraySlot1.push(test[k]);\n                  } //revert back to 100\n\n\n                  for (let x = 0; x < array.length; x++) {\n                    if (array[x] == 0) {\n                      array[x] = 100;\n                    }\n                  }\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 3) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100 && array[i + 1] == 100) {\n                  // slot 3 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  array[j + 1] = test[k];\n                } else if (array[i - 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                  insertedDataElective500_Slot2_1.push(test[k]);\n                } else if (array[i + 1] == 100) {\n                  //slot 2 hours in 1 go\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                  insertedDataElective500_Slot2_1.push(test[k]);\n                } else if (array[i] == 100) {\n                  //slot 1 hours in 1 go\n                  array[i] = array[j];\n                  array[j] = test[k];\n                  remainderArraySlot1.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            } else if (hourMS == 2) {\n              const j = Math.floor(Math.random() * (i + 1));\n\n              if (array[i] == 100) {\n                if (array[i - 1] == 100) {\n                  array[i] = array[j];\n                  array[i - 1] = array[j - 1];\n                  array[j] = test[k];\n                  array[j - 1] = test[k];\n                } else if (array[i + 1] == 100) {\n                  array[i] = array[j];\n                  array[i + 1] = array[j + 1];\n                  array[j] = test[k];\n                  array[j + 1] = test[k];\n                } else {\n                  remainderArray.push(test[k]);\n                }\n              } else {\n                remainderArray.push(test[k]);\n              }\n            }\n          }\n\n          k++;\n        } //console.log(remainderArraySlot1);\n        //for(let x = 0; x < remainderArraySlot1.length; x++){\n\n\n        for (let z = 0; z < array.length; z++) {\n          for (let x = 0; x < remainderArraySlot1.length; x++) {\n            if (array[z] == remainderArraySlot1[x]) {\n              for (let b = 1; b <= totalRoom; b++) {\n                if (array[z + 38 * b] == 100 && array[z + 38 * b - 1] == 100) {\n                  array[z + 38 * b] = 0;\n                  array[z + 38 * b - 1] = 0;\n                }\n\n                if (array[z - 38 * b] == 100 && array[z - 38 * b - 1] == 100) {\n                  array[z - 38 * b] = 0;\n                  array[z - 38 * b - 1] = 0;\n                }\n              }\n            }\n          }\n        } //fullfill the slot 3\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedDataElective500_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k3 < remainderArraySlot1.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = remainderArraySlot1[k3];\n              array[q + 1] = remainderArraySlot1[k3];\n            } else {\n              if (remainderArraySlot1[k3] != undefined) {\n                insertedDataElective500_Slot2_2.push(remainderArraySlot1[k3]);\n              }\n            }\n\n            k3++;\n          }\n        } //console.log(remainderArray);\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const c = Math.floor(Math.random() * (x + 1));\n              array[x] = array[c];\n              array[x + 1] = array[c + 1];\n              array[c] = remainderArray[k2];\n              array[c + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedDataElective500_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedDataElective500_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          } else if (array[x] == 100 && array[x + 1] == 100) {\n            if (k2 < remainderArray.length) {\n              const b = Math.floor(Math.random() * (x + 1));\n              array[x] = array[b];\n              array[x + 1] = array[b + 1];\n              array[b] = remainderArray[k2];\n              array[b + 1] = remainderArray[k2];\n            }\n\n            try {\n              let slot2 = remainderArray[k2][10];\n\n              if (slot2 == 1) {\n                insertedDataElective500_Slot2_1.push(remainderArray[k2]);\n              }\n\n              if (slot2 == 2) {\n                insertedDataElective500_Slot2_2.push(remainderArray[k2]);\n              }\n            } catch {}\n\n            k2++;\n          }\n        } //if there is array in -1, reslot in into the array\n\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 0) {\n            array[x] = 100;\n          }\n        }\n\n        if (array[-1] != undefined) {\n          insertedDataElective500_Slot2_1.push(array[-1]); // array[-1] = undefined\n        }\n\n        return array;\n      };\n\n      var AntArrInsElective500 = AntAlgoInsertElective500(AntArrElective500);\n\n      const checkAmountDataElective500B = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 500 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmountB = checkAmountDataElective500B(AntArrInsElective500);\n\n      const slot2Equal1forElective500 = array => {\n        let k = 0;\n        let test2 = []; //console.log(insertedDataElective500_Slot2_1)\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100) {\n            if (k < insertedDataElective500_Slot2_1.length) {\n              array[x] = insertedDataElective500_Slot2_1[k];\n            }\n\n            k++;\n          }\n        } //console.log(test2)\n\n\n        return array;\n      };\n\n      slot2Equal1forElective500(AntArrElective500);\n\n      const slot2Equal2forElective500 = array => {\n        let k = 0;\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < insertedDataElective500_Slot2_2.length) {\n              const q = Math.floor(Math.random() * (x + 1));\n              array[x] = array[q];\n              array[x + 1] = array[q + 1];\n              array[q] = insertedDataElective500_Slot2_2[k];\n              array[q + 1] = insertedDataElective500_Slot2_2[k];\n            } else {\n              if (insertedDataElective500_Slot2_2[k] != undefined) {\n                extraDataElective500_Slot2_2.push(insertedDataElective500_Slot2_2[k]);\n              }\n            }\n\n            k++;\n          }\n        }\n\n        for (let x = 0; x < array.length; x++) {\n          if (array[x] == 100 && array[x + 1] == 100) {\n            if (k < extraDataElective500_Slot2_2.length) {\n              array[x] = extraDataElective500_Slot2_2[k];\n              array[x + 1] = extraDataElective500_Slot2_2[k];\n            }\n\n            k++;\n          }\n        }\n\n        return array;\n      };\n\n      slot2Equal2forElective500(AntArrElective500);\n\n      const checkAmountDataElective500 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 500 && array[i] != 0 && array[i] != undefined) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmountElective500 = checkAmountDataElective500(AntArrInsElective500); //---------------------------------------------------------------------------------------------------------------------------------------------\n      //---------------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------------\n\n      let combineData = [];\n      let combineElectiveData = []; //Combine all dataset\n\n      const combine = (data1, data2, data3, data4, data5, data6, data7, data8) => {\n        for (let i = 0; i < data1.length; i++) {\n          combineData.push(data1[i]);\n        }\n\n        for (let i = 0; i < data2.length; i++) {\n          combineData.push(data2[i]);\n        }\n\n        for (let i = 0; i < data3.length; i++) {\n          combineData.push(data3[i]);\n        }\n\n        for (let i = 0; i < data4.length; i++) {\n          combineData.push(data4[i]);\n        } // for(let i = 0; i < data5.length; i++){\n        //     combineData.push(data5[i])\n        // }\n        // for(let i = 0; i < data6.length; i++){\n        //     combineData.push(data6[i])\n        // }\n        // for(let i = 0; i < data7.length; i++){\n        //     combineData.push(data7[i])\n        // }\n        // for(let i = 0; i < data8.length; i++){\n        //     combineData.push(data8[i])\n        // }\n\n\n        return combineData;\n      };\n\n      let dataCombine = combine(AntArr50, AntArr100, AntArr200, AntArr500); //let dataCombine = combine(AntArr50,AntArr100,AntArr200,AntArr500,AntArrElective50,AntArrElective100,AntArrElective200,AntArrElective500)\n      //combine elective data\n\n      const combineElective = (data1, data2, data3, data4) => {\n        for (let i = 0; i < data1.length; i++) {\n          combineElectiveData.push(data1[i]);\n        }\n\n        for (let i = 0; i < data2.length; i++) {\n          combineElectiveData.push(data2[i]);\n        }\n\n        for (let i = 0; i < data3.length; i++) {\n          combineElectiveData.push(data3[i]);\n        }\n\n        for (let i = 0; i < data4.length; i++) {\n          combineElectiveData.push(data4[i]);\n        }\n\n        return combineElectiveData;\n      };\n\n      let dataCombineElective = combineElective(AntArrElective50, AntArrElective100, AntArrElective200, AntArrElective500); //console.log(dataCombine)\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n      // Hard Constraint \n      // H1: No student attend more than one class/ event at the same time\n      // H2: The room is large enough to accomodate all of the student in attendace while also meeting the requirement \n      // H3: At any given time, each room can onle have one course booked\n      // H4: No student attend class during 12:00 pm -2:00 due to solat jumaat\n      // H5: One teacher can only teach one class at one time.\n      //Check for the H1 violation: same group attend more than 1 class at 1 time\n\n      const check1Group = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 37;\n        }\n\n        for (let i = 0; i < array.length; i++) {\n          try {\n            for (let x = 1; x <= totalRoom; x++) {\n              indexArray = x * 37;\n\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined) {\n                try {\n                  if (array[i][6] == array[i + indexArray][6] && array[i + 1][6] == array[i + indexArray + 1][6] && array[i][5] == array[i + indexArray][5] && array[i + 1][5] == array[i + indexArray + 1][5]) {\n                    try {\n                      //console.log(array[i])\n                      //console.log(array[i+indexArray])\n                      count += 1;\n                    } catch {}\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH1_ALL = check1Group(dataCombine);\n      var checkH1_ALLElective = check1Group(dataCombineElective); //Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\n\n      const checkRoomQuota = array => {\n        let count = 0;\n        return count;\n      };\n\n      var checkH2_ALL = checkRoomQuota(dataCombine);\n      var checkH2_ALLElective = checkRoomQuota(dataCombineElective); //Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\n\n      const checkSolatJummat = array => {\n        let count = 0;\n        return count;\n      };\n\n      var checkH4_ALL = checkSolatJummat(dataCombine);\n      var checkH4_ALLElective = checkSolatJummat(dataCombineElective); //Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\n\n      const check1Teacher = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38; //    for(let i = 0; i< notDuplicatesLecturer.length; i++){\n        //        for(let j =0; j<array.length; j++){\n        //            if(notDuplicatesLecturer[i] == array[j][5]){\n        //                 console.log(j);\n        //            }\n        //        }\n        //    }\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n        }\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n\n          try {\n            for (let i = 1; i < array.length; i++) {\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined) {\n                try {\n                  if (array[i][5] == array[i + indexArray][5] || array[i + 1][5] == array[i + indexArray + 1][5]) {\n                    count += 1; //    console.log(i)\n                    //    console.log(i+indexArray)\n                    //    console.log(array[i+indexArray][5])\n                    //    console.log(array[i][5])\n                  } else if (array[i][5] == array[i + indexArray][5] && array[i - 1][5] == array[i + indexArray - 1][5]) {\n                    count += 1; // console.log(i)\n                    // console.log(array[i][5])\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH5_ALL = check1Teacher(dataCombine);\n      var checkH5_ALLElective = check1Group(dataCombineElective); //----------------------------------------------------------------------------------------------------------------------------------------\n      // Soft Constraint \n      // S1: A student has a class schedule toward the end of the day\n      // S2: A student have more than two class in a row\n      //Check for the S1 violation: student have class at the end of the day\n\n      const checkEndOfClass = array => {\n        let count = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          let indexArray = x * 37;\n\n          if (array[indexArray] != 100) {\n            count = 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkS1_50 = checkEndOfClass(AntArr50);\n      var checkS1_100 = checkEndOfClass(AntArr100);\n      var checkS1_200 = checkEndOfClass(AntArr200);\n      var checkS1_500 = checkEndOfClass(AntArr500);\n      var checkS1_Elective50 = checkEndOfClass(AntArrElective50);\n      var checkS1_Elective100 = checkEndOfClass(AntArrElective100);\n      var checkS1_Elective200 = checkEndOfClass(AntArrElective200);\n      var checkS1_Elective500 = checkEndOfClass(AntArrElective500); //Check for the S2 violation: teacher have 2 class in a row\n\n      const check2ClassInARow = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          try {\n            if (array[i][5] != undefined && array[i + 3][5] != undefined && array[i + 2][5] != undefined && array[i + 4][5] != undefined) {\n              if (array[i][5] == array[i + 3][5] && array[i + 2][5] == array[i + 4][5]) {\n                // console.log(array[i][5])\n                // console.log(array[i+3][5])\n                // console.log(array[i+2][5])\n                // console.log(array[i+4][5])\n                count = 1;\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkS2_50 = check2ClassInARow(AntArr50);\n      var checkS2_100 = check2ClassInARow(AntArr100);\n      var checkS2_200 = check2ClassInARow(AntArr200);\n      var checkS2_500 = check2ClassInARow(AntArr500);\n      var checkS2_Elective50 = check2ClassInARow(AntArrElective50);\n      var checkS2_Elective100 = check2ClassInARow(AntArrElective100);\n      var checkS2_Elective200 = check2ClassInARow(AntArrElective200);\n      var checkS2_Elective500 = check2ClassInARow(AntArrElective500); //----------------------------------------------------------------------------------------------------------------------------------------------\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n      //Check total Hard Constraint\n\n      const checkTotalHardContraint = () => {\n        let count = 0;\n        let totalH1 = checkH1_ALL;\n        let totalH2 = checkH2_ALL;\n        let totalH4 = checkH4_ALL;\n        let totalH5 = checkH5_ALL;\n        let totalH1_Elective = checkH1_ALLElective;\n        let totalH2_Elective = checkH2_ALLElective;\n        let totalH4_Elective = checkH4_ALLElective;\n        let totalH5_Elective = checkH5_ALLElective;\n        let totalHC = totalH1 + totalH2 + totalH4 + totalH5 + totalH1_Elective + totalH2_Elective + totalH4_Elective + totalH5_Elective; //let totalHC = totalH1 + totalH2 + totalH4 + totalH5 \n\n        if (totalHC != 0) {\n          count += 1;\n        }\n\n        return count;\n      };\n\n      var checkTotalHardContraints = checkTotalHardContraint(); //console.log(\"Total Hard Constraint: \"+checkTotalHardContraints)\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n\n      const checkTotalSoftContraint = () => {\n        let count = 0;\n        let totalS1 = checkS1_50 + checkS1_100 + checkS1_200 + checkS1_500 + checkS1_Elective50 + checkS1_Elective100 + checkS1_Elective200 + checkS1_Elective500;\n        let totalS2 = checkS2_50 + checkS2_100 + checkS2_200 + checkS2_500 + checkS2_Elective50 + checkS2_Elective100 + checkS2_Elective200 + checkS2_Elective500;\n\n        if (totalS1 != 0) {\n          count += 1;\n        }\n\n        if (totalS2 != 0) {\n          count += 1;\n        }\n\n        return count;\n      };\n\n      var checkTotalSoftContraints = checkTotalSoftContraint(); //console.log(\"Total Soft Constraint: \"+checkTotalSoftContraints)\n      //----------------------------------------------------------------------------------------------------------------------------------------------\n\n      const change100ToEmpty = data => {\n        for (let i = 0; i < data.length; i++) {\n          if (data[i] == 100) {\n            data[i] = [];\n          }\n        }\n\n        return data;\n      };\n\n      let finalData = change100ToEmpty(combineData);\n\n      const change100ToEmptyElective = data => {\n        for (let i = 0; i < data.length; i++) {\n          if (data[i] == 100) {\n            data[i] = [];\n          }\n        }\n\n        return data;\n      };\n\n      let finalDataElective = change100ToEmptyElective(combineElectiveData);\n\n      const checkMissingData = (data50, data100, data200, data500, dataE50, dataE100, dataE200, dataE500) => {\n        let countData = [];\n\n        for (let i = 0; i < courseData[0].length; i++) {\n          for (let j = 0; j < courseData[0][i][7]; j++) {\n            countData.push(courseData[0][i]);\n          }\n        }\n\n        let totalGenerateScheduleData = data50 + data100 + data200 + data500 + dataE50 + dataE100 + dataE200 + dataE500;\n\n        if (countData.length == totalGenerateScheduleData) {} else {}\n      };\n\n      checkMissingData(checkAmount50, checkAmount100, checkAmount200, checkAmount500, checkAmountElective50, checkAmountElective100, checkAmountElective200, checkAmountElective500);\n      checkTotalHardContraintsAll = checkTotalHardContraints;\n      checkTotalSoftContraintsAll = checkTotalSoftContraints;\n      finalDataAll.push(finalData);\n      finalDataAllElective.push(finalDataElective);\n      return {\n        checkTotalHardContraints,\n        checkTotalSoftContraints,\n        finalData,\n        finalDataAllElective\n      };\n    };\n\n    let antSystemAlgo = antSystem(); // -------------------------------------------------------------------------------------------------------------------------------------------\n\n    let trigger = 0;\n\n    const iteration = () => {\n      antSystem();\n      let globalBestHS = checkTotalHardContraintsAll;\n      let globalBestSS = checkTotalSoftContraintsAll;\n      let globalBestScehdule = finalDataAll[0];\n      let globalBestScehduleElective = finalDataAllElective[0];\n\n      for (let i = 1; i <= 500; i++) {\n        antSystem();\n        let localBestHS = checkTotalHardContraintsAll;\n        let localBestSS = checkTotalSoftContraintsAll;\n        let localBestScehdule = finalDataAll[0];\n        let localBestScehduleElective = finalDataAllElective[0];\n        console.log(\"iteraion: \" + i);\n\n        if (globalBestHS > localBestHS) {\n          globalBestHS = localBestHS;\n          globalBestSS = localBestSS;\n          globalBestScehdule = localBestScehdule;\n          globalBestScehduleElective = localBestScehduleElective;\n        }\n\n        if (localBestHS == 0) {\n          console.log(\"iteraion: \" + i);\n          console.log(\"workable solution is found\");\n          globalBestHS = localBestHS;\n          globalBestSS = localBestSS;\n          globalBestScehdule = localBestScehdule;\n          globalBestScehduleElective = localBestScehduleElective;\n          console.log(\"Workable Gloabal best HS: \" + globalBestHS);\n          console.log(\"Workable Gloabal best SS: \" + globalBestSS); //console.log(finalDataAll[0])\n\n          trigger = 1;\n          return [finalDataAll[0], finalDataAllElective[0]];\n        } else if (localBestHS == 0 && localBestSS == 0) {\n          console.log(\"iteraion: \" + i);\n          console.log(\"perfect solution is found\");\n          globalBestHS = localBestHS;\n          globalBestSS = localBestSS;\n          globalBestScehdule = localBestScehdule;\n          console.log(\"Perfect Gloabal best HS: \" + globalBestHS);\n          console.log(\"Perfect Gloabal best SS: \" + globalBestSS);\n          console.log(finalDataAll[0]);\n          trigger = 1;\n          return [finalDataAll[0], finalDataAllElective[0]];\n        }\n      }\n\n      return [finalDataAll[0], finalDataAllElective[0]];\n    };\n\n    let interations = iteration();\n    let presentableData = [];\n    let presentableDataElective = [];\n\n    if (trigger == 1) {\n      //shot course code, course name and lecturer    \n      const changeToPresentationData = data => {\n        for (let i = 0; i <= data[0].length; i++) {\n          try {\n            presentableData.push([data[0][i][1], data[0][i][2], data[0][i][5]]);\n          } catch (error) {}\n        }\n\n        for (let i = 0; i <= data[1].length; i++) {\n          try {\n            presentableDataElective.push([data[1][i][1], data[1][i][2], data[1][i][5]]);\n          } catch (error) {}\n        }\n      };\n\n      changeToPresentationData(interations);\n      let allRoomName = [];\n\n      for (let i = 0; i < roomData[0].length; i++) {\n        allRoomName.push(roomData[0][i][0]);\n      }\n\n      allRoomName.unshift(\"Room\");\n\n      if (allRoomName.pop() == undefined) {}\n\n      let weekday = ['Monday', 'Monday', 'Monday', 'Monday', 'Monday', 'Monday', 'Monday', 'Monday', 'Monday', 'Monday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Tuesday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Thursday', 'Friday', 'Friday', 'Friday', 'Friday', 'Friday', 'Friday', 'Friday', 'Friday'];\n      let wed = ['Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday'];\n\n      const create2dArray = (weekdayArray, partDay, arrayAll, partAll) => {\n        var tmp = [];\n\n        for (var i = 0; i < weekdayArray.length; i += partDay) {\n          tmp.push(weekdayArray.slice(i, i + partDay));\n        }\n\n        for (var i = 0; i < arrayAll.length; i += partAll) {\n          tmp.push(arrayAll.slice(i, i + partAll));\n        }\n\n        return tmp;\n      };\n\n      let dataset = create2dArray(weekday, 38, presentableData, 38);\n      console.log(dataset);\n\n      const create2dArrayElective = (weekdayArray, partDay, arrayAll, partAll) => {\n        var tmp = [];\n\n        for (var i = 0; i < weekdayArray.length; i += partDay) {\n          tmp.push(weekdayArray.slice(i, i + partDay));\n        }\n\n        for (var i = 0; i < arrayAll.length; i += partAll) {\n          tmp.push(arrayAll.slice(i, i + partAll));\n        }\n\n        return tmp;\n      };\n\n      let datasetElective = create2dArrayElective(wed, 10, presentableDataElective, 10);\n      console.log(datasetElective); //let compileDataset = dataset.concat(datasetElective);\n      //console.log(dataset)\n\n      const insertRoomName = (roomData, array) => {\n        for (let i = 0; i < array.length; i++) {\n          array[i].unshift(roomData[i]);\n        }\n\n        return array;\n      };\n\n      insertRoomName(allRoomName, dataset);\n\n      const insertRoomNameElective = (roomData, array) => {\n        for (let i = 0; i < array.length; i++) {\n          array[i].unshift(roomData[i]);\n        }\n\n        return array;\n      };\n\n      insertRoomName(allRoomName, datasetElective);\n      /** Convert a 2D array into a CSV string\r\n       */\n\n      function arrayToCsv(data) {\n        //console.log(data)\n        return data.map(row => row.map(String) // convert every value to String\n        .map(v => v.replaceAll('\"', '\"\"')) // escape double colons\n        .map(v => `\"${v}\"`) // quote it\n        .join(',') // comma-separated\n        ).join('\\r\\n'); // rows starting on new lines\n      }\n\n      let csv = arrayToCsv(dataset);\n\n      function downloadBlob(content, filename, contentType) {\n        // Create a blob\n        var blob = new Blob([content], {\n          type: contentType\n        });\n        var url = URL.createObjectURL(blob); // Create a link to download it\n\n        var pom = document.createElement('a');\n        pom.href = url;\n        pom.setAttribute('download', filename);\n        pom.click();\n      }\n      /** Convert a 2D array into a CSV string\r\n       * elective\r\n      */\n\n\n      function arrayToCsvElective(data) {\n        //console.log(data)\n        return data.map(row => row.map(String) // convert every value to String\n        .map(v => v.replaceAll('\"', '\"\"')) // escape double colons\n        .map(v => `\"${v}\"`) // quote it\n        .join(',') // comma-separated\n        ).join('\\r\\n'); // rows starting on new lines\n      }\n\n      let csvElective = arrayToCsvElective(datasetElective);\n\n      function downloadBlobElective(content, filename, contentType) {\n        // Create a blob\n        var blob = new Blob([content], {\n          type: contentType\n        });\n        var url = URL.createObjectURL(blob); // Create a link to download it\n\n        var pom = document.createElement('a');\n        pom.href = url;\n        pom.setAttribute('download', filename);\n        pom.click();\n      }\n\n      downloadBlob(csv, 'ModifiedAntSystem_GeneratedSchedule.csv', 'text/csv;charset=utf-8;');\n      downloadBlobElective(csvElective, 'ModifiedAntSystemElective_GeneratedSchedule.csv', 'text/csv;charset=utf-8;');\n    } else {\n      alert(\"no workable solution found, please refersh until get workable solution\");\n    } //----------------------------------------------------------------------------------------------------------------------------------------\n\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3932,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3933,\n      columnNumber: 13\n    }\n  }, \"Generate Schedule Page\"));\n};\n\nexport default ArraySchedule; //result[i][j]=Course.splice(Math.floor(Math.random()* Course.length),1)[0] // create random placement of Course Value\n//const Schedule = new Array(10).fill(Array(5).fill(null));\n//console.log(Schedule);\n// const Course = [['TE1',4],['TE1',4],['TE1',4],['TE1',3],['TE1',4],['TE1',2],['TE1',4],['TE1',4],['TE1',4],['TE1',3]];\n//const Course = [['TE1',2],['TE2',2],['TE3',3],['TE4',4],['TE5',3],['TE6',4],['TE7',4],['TE8',2],['TE9',4]];\n//const Course = ['TE1','TE2','TE3','TE4','TE5','TE6','TE7','TE8','TE9'];","map":{"version":3,"sources":["C:/Users/acit/Desktop/FYP Code/FYP Code/frontend/src/components/RandomSchedule/arraySchedule.js"],"names":["create","find","forEach","indexOf","React","useEffect","useState","useContext","useParams","_","CSVLink","LoadingSpinner","finalDataAll","finalDataAllElective","checkHardConstraintOutsite","checkSoftConstraintOutsite","ArraySchedule","props","isLoading","setIsLoading","loadedFile","setLoaadedFile","roomData","setroomData","courseData","setcourseData","CsvData","setCsvData","userId","sendRequest","response","fetch","responsedata","json","stringifyData","JSON","stringify","userWithFiles","Dataset","ertRoom","map","ertCourse","ok","Error","message","err","console","log","testData","EnrollmentQuota","CourseCode","HMS","lecturerData","roomName","roomSize","filterData50","filterData100","filterData200","filterData500","filterDataElective50","filterDataElective100","filterDataElective200","filterDataElective500","dupeData","room","push","hardConstraintViolated","softConstraintViolated","i","length","enrollment","code","hms","lecturer","reduce","results","item","index","array","name","size","notDuplicatesRoom","filter","notDuplicatesLecturer","pop","courseDataXElective","courseDataWithElective","slice","splice","roomUnder50","roomUnder100","roomUnder200","roomUnder500","checkNumberofRoom","createArray","data","result","DataArray50","DataArray100","DataArray200","DataArray500","DataArrayElective50","DataArrayElective100","DataArrayElective200","DataArrayElective500","checkTotalHardContraintsAll","checkTotalSoftContraintsAll","antSystem","array1D50","AntArr50","extraData50_Slot2_2","extraData50_Slot2_1","insertedData50_Slot2_2","insertedData50_Slot2_1","AntAlgoInsert50","test","k","k2","k3","remainderArray","remainderArraySlot1","totalRoom","x","hourMS","slot1","slot2","j","Math","floor","random","b","z","v","q","undefined","c","AntArrIns50","checkAmountData50B","count","checkAmountB","slot2Equal1for50","test2","slot2Equal2for50","checkAmountData50","checkAmount50","array1D100","AntArr100","extraData100_Slot2_2","extraData100_Slot2_1","insertedData100_Slot2_2","insertedData100_Slot2_1","AntAlgoInsert100","AntArrIns100","checkAmountData100B","slot2Equal1for100","slot2Equal2for100","checkAmountData100","checkAmount100","array1D200","AntArr200","extraData200_Slot2_2","extraData200_Slot2_1","insertedData200_Slot2_2","insertedData200_Slot2_1","AntAlgoInsert200","AntArrIns200","checkAmountData200B","slot2Equal1for200","slot2Equal2for200","checkAmountData200","checkAmount200","array1D500","AntArr500","extraData500_Slot2_2","extraData500_Slot2_1","insertedData500_Slot2_2","insertedData500_Slot2_1","AntAlgoInsert500","AntArrIns500","checkAmountData500B","slot2Equal1for500","slot2Equal2for500","checkAmountData500","checkAmount500","array1DElective50","AntArrElective50","extraDataElective50_Slot2_2","extraData50Elective_Slot2_1","insertedDataElective50_Slot2_2","insertedDataElective50_Slot2_1","AntAlgoInsertElective50","AntArrInsElective50","checkAmountDataElective50B","slot2Equal1forElective50","slot2Equal2forElective50","checkAmountDataElective50","checkAmountElective50","array1DElective100","AntArrElective100","extraDataElective100_Slot2_2","extraData100Elective_Slot2_1","insertedDataElective100_Slot2_2","insertedDataElective100_Slot2_1","AntAlgoInsertElective100","AntArrInsElective100","checkAmountDataElective100B","slot2Equal1forElective100","slot2Equal2forElective100","checkAmountDataElective100","checkAmountElective100","array1DElective200","AntArrElective200","extraDataElective200_Slot2_2","extraData200Elective_Slot2_1","insertedDataElective200_Slot2_2","insertedDataElective200_Slot2_1","AntAlgoInsertElective200","AntArrInsElective200","checkAmountDataElective200B","slot2Equal1forElective200","slot2Equal2forElective200","checkAmountDataElective200","checkAmountElective200","array1DElective500","AntArrElective500","extraDataElective500_Slot2_2","extraData500Elective_Slot2_1","insertedDataElective500_Slot2_2","insertedDataElective500_Slot2_1","AntAlgoInsertElective500","AntArrInsElective500","checkAmountDataElective500B","slot2Equal1forElective500","slot2Equal2forElective500","checkAmountDataElective500","checkAmountElective500","combineData","combineElectiveData","combine","data1","data2","data3","data4","data5","data6","data7","data8","dataCombine","combineElective","dataCombineElective","check1Group","indexArray","checkH1_ALL","checkH1_ALLElective","checkRoomQuota","checkH2_ALL","checkH2_ALLElective","checkSolatJummat","checkH4_ALL","checkH4_ALLElective","check1Teacher","checkH5_ALL","checkH5_ALLElective","checkEndOfClass","checkS1_50","checkS1_100","checkS1_200","checkS1_500","checkS1_Elective50","checkS1_Elective100","checkS1_Elective200","checkS1_Elective500","check2ClassInARow","checkS2_50","checkS2_100","checkS2_200","checkS2_500","checkS2_Elective50","checkS2_Elective100","checkS2_Elective200","checkS2_Elective500","checkTotalHardContraint","totalH1","totalH2","totalH4","totalH5","totalH1_Elective","totalH2_Elective","totalH4_Elective","totalH5_Elective","totalHC","checkTotalHardContraints","checkTotalSoftContraint","totalS1","totalS2","checkTotalSoftContraints","change100ToEmpty","finalData","change100ToEmptyElective","finalDataElective","checkMissingData","data50","data100","data200","data500","dataE50","dataE100","dataE200","dataE500","countData","totalGenerateScheduleData","antSystemAlgo","trigger","iteration","globalBestHS","globalBestSS","globalBestScehdule","globalBestScehduleElective","localBestHS","localBestSS","localBestScehdule","localBestScehduleElective","interations","presentableData","presentableDataElective","changeToPresentationData","error","allRoomName","unshift","weekday","wed","create2dArray","weekdayArray","partDay","arrayAll","partAll","tmp","dataset","create2dArrayElective","datasetElective","insertRoomName","insertRoomNameElective","arrayToCsv","row","String","replaceAll","join","csv","downloadBlob","content","filename","contentType","blob","Blob","type","url","URL","createObjectURL","pom","document","createElement","href","setAttribute","click","arrayToCsvElective","csvElective","downloadBlobElective","alert"],"mappings":"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","sourcesContent":["import { create, find, forEach, indexOf } from \"lodash\";\r\nimport React,{ useEffect,useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport _ from 'lodash';\r\nimport { CSVLink } from \"react-csv\";\r\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\r\n\r\n\r\nlet finalDataAll = [];\r\nlet finalDataAllElective = [];\r\nlet checkHardConstraintOutsite = 0;\r\nlet checkSoftConstraintOutsite = 0;\r\n\r\nconst ArraySchedule = (props) => {\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [loadedFile, setLoaadedFile] = useState(false);\r\n    const [roomData, setroomData] = useState();\r\n    const [courseData, setcourseData] = useState();\r\n    const [CsvData, setCsvData] = useState();\r\n    // const [Keys, setKeys] = useState();\r\n    //const [uploadedData, setUploadedData] = useState([]);\r\n    //console.log(\"props dataset:\"+ props.test)\r\n\r\n    const userId = useParams().userId;\r\n    useEffect(()=>{\r\n        const sendRequest = async () =>{\r\n            setIsLoading(true);\r\n            try{\r\n            const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875');\r\n            //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\r\n            //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\r\n            const responsedata = await response.json();\r\n            let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset);\r\n\r\n            // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\r\n            const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset =>[Dataset['Room'],Dataset['Size']]); //Extract Room\r\n            setroomData([ertRoom]);\r\n\r\n            const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'],Dataset['Course Code'],Dataset['Course Name'],Dataset['Year'],Dataset['Semester'],Dataset['Lecturer'],Dataset['Group'],Dataset['HMS'],Dataset['Programme Code'],Dataset['Slot1'],Dataset['Slot2']]); //Extract Enrollment Quota\r\n            setcourseData([ertCourse]);\r\n\r\n            if (!response.ok){\r\n                throw new Error(responsedata.message);\r\n            }\r\n            setLoaadedFile(stringifyData);\r\n            setIsLoading(true);\r\n            }catch(err){\r\n                console.log(err.message);\r\n            }\r\n            setIsLoading(false);\r\n            \r\n        };\r\n        sendRequest();\r\n    },[userId]);\r\n\r\n        if(!isLoading && loadedFile){\r\n            const testData = [1,2,3,4,5,6,7,8,9];\r\n            const EnrollmentQuota = [];\r\n            const CourseCode = [];\r\n            const HMS = [];\r\n            const lecturerData = []\r\n            const roomName = [];\r\n            const roomSize = [];\r\n            const filterData50  = [];\r\n            const filterData100  = [];\r\n            const filterData200  = [];\r\n            const filterData500  = [];\r\n            const filterDataElective50  = [];\r\n            const filterDataElective100  = [];\r\n            const filterDataElective200  = [];\r\n            const filterDataElective500  = [];\r\n            const dupeData  = [];\r\n            const room = []\r\n            room.push(roomData[0])\r\n            \r\n            let hardConstraintViolated = 0;\r\n            let softConstraintViolated = 0;\r\n            //console.log(courseData[0][0][1]);\r\n            for(let i = 0; i <courseData[0].length; i++){\r\n                let enrollment = [courseData[0][i][0]];\r\n                let code = [courseData[0][i][1]];\r\n                let hms = [courseData[0][i][7]];\r\n                let lecturer = [courseData[0][i][5]];\r\n                enrollment.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    EnrollmentQuota.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                code.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    CourseCode.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                hms.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    HMS.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                lecturer.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    lecturerData.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n            }\r\n\r\n            for(let i = 0; i <roomData[0].length; i++){\r\n                let name = [roomData[0][i][0]];\r\n                let size = [roomData[0][i][1]];\r\n                name.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomName.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                size.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomSize.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n            }\r\n \r\n            \r\n            const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\r\n\r\n            const notDuplicatesLecturer = lecturerData.filter((item, index) => index == lecturerData.indexOf(item));\r\n            notDuplicatesLecturer.pop();\r\n            //console.log(notDuplicatesLecturer)\r\n\r\n\r\n            let courseDataXElective = []\r\n            let courseDataWithElective = []\r\n\r\n            //saparate faculty course with the elective course\r\n            for(let i=0; i< courseData[0].length; i++){\r\n                if(courseData[0][i][1].slice(0,3) != 'TMU'){\r\n                    courseData[0][i].splice()\r\n                    if(  courseData[0][i][1].slice(0,3) != 'TMX'){\r\n                        courseData[0][i].splice()\r\n                        courseDataXElective.push(courseData[0][i])\r\n                    }\r\n                }\r\n            }\r\n\r\n            //saparate elective course with the faculty course\r\n            for(let i=0; i< courseData[0].length; i++){\r\n                if(courseData[0][i][1].slice(0,3) == 'TMU' ||  courseData[0][i][1].slice(0,3) == 'TMX'){\r\n                    courseDataWithElective.push(courseData[0][i])\r\n                }\r\n            }\r\n\r\n            //insert data without elective courses into correct room capacity\r\n                for(let i = 0; i< courseDataXElective.length;i++){\r\n                        if (courseDataXElective[i][0] < 50) {\r\n                            filterData50.push(courseDataXElective[i]);\r\n                        }\r\n                        if (courseDataXElective[i][0] >= 50 && courseDataXElective[i][0] < 100) {\r\n                            \r\n                            filterData100.push(courseDataXElective[i]);\r\n                        }\r\n                        if (courseDataXElective[i][0] >= 100 && courseDataXElective[i][0] < 200 ) {\r\n                            filterData200.push(courseDataXElective[i]);\r\n                        }\r\n                        if (courseDataXElective[i][0] >= 200 && courseDataXElective[i][0] < 500) {\r\n                            filterData500.push(courseDataXElective[i]);\r\n                        }\r\n                }\r\n                //console.log(filterData50)\r\n\r\n                //insert data without faculty courses into correct room capacity\r\n                for(let i = 0; i< courseDataWithElective.length;i++){\r\n                    if (courseDataWithElective[i][0] < 50) {\r\n                        filterDataElective50.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 50 && courseDataWithElective[i][0] < 100) {\r\n                        \r\n                        filterDataElective100.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 100 && courseDataWithElective[i][0] < 200 ) {\r\n                        filterDataElective200.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 200 && courseDataWithElective[i][0] < 500) {\r\n                        filterDataElective500.push(courseDataWithElective[i]);\r\n                    }\r\n                }\r\n                // console.log(filterDataElective50);\r\n                // console.log(filterDataElective100);\r\n                // console.log(filterDataElective200);\r\n                // console.log(filterDataElective500);\r\n\r\n\r\n            let roomUnder50 = []\r\n            let roomUnder100 = []\r\n            let roomUnder200 = []\r\n            let roomUnder500 = []\r\n            const checkNumberofRoom = () => {\r\n                for(let i = 0; i < roomData[0].length; i++){\r\n                    let room = roomData[0][i][1]\r\n                    //console.log(roomData[0][i][1]);\r\n                    if(room < 50){\r\n                        roomUnder50.push(room)\r\n                    }else if(room > 50 && room < 100){\r\n                        roomUnder100.push(room)\r\n\r\n                    }else if(room > 100 && room < 200){\r\n                        roomUnder200.push(room)\r\n\r\n                    }else if(room > 200){\r\n                        roomUnder500.push(room)\r\n                    }\r\n                }\r\n            }\r\n            checkNumberofRoom();\r\n\r\n\r\n            const createArray = (data) => {\r\n                var result = []\r\n\r\n                    for(let i = 0; i<data; i++){\r\n                        result[i] = []\r\n                    }\r\n                return result;\r\n            }\r\n\r\n            let DataArray50 = roomUnder50.length * 38;\r\n            let DataArray100 = roomUnder100.length * 38;\r\n            let DataArray200 = roomUnder200.length * 38;\r\n            let DataArray500 = roomUnder500.length * 38;\r\n\r\n            let DataArrayElective50 = roomUnder50.length * 10;\r\n            let DataArrayElective100 = roomUnder100.length * 10;\r\n            let DataArrayElective200 = roomUnder200.length * 10;\r\n            let DataArrayElective500 = roomUnder500.length * 10;\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nvar checkTotalHardContraintsAll = 0\r\nvar checkTotalSoftContraintsAll = 0\r\n\r\nconst antSystem = () => {\r\n\r\n    //Faculty courses\r\n\r\n    //create 1d array for dataset 50\r\n   const array1D50 = (data) => {\r\n       var result = []\r\n\r\n       for(let i = 0; i< data; i++){\r\n           result[i]= 100;\r\n       }\r\n       return result;\r\n   }\r\n   var AntArr50 = array1D50(DataArray50);\r\n\r\n   let extraData50_Slot2_2 = []\r\n   let extraData50_Slot2_1 = []\r\n   let insertedData50_Slot2_2 = []\r\n   let insertedData50_Slot2_1= []\r\n\r\n   const AntAlgoInsert50 = (array) => {\r\n       let test = []\r\n       let k = 0;\r\n       let k2 =0\r\n       let k3 =0\r\n\r\n       let remainderArray = []\r\n       let remainderArraySlot1 = []\r\n\r\n       let totalRoom = array.length / 38\r\n\r\n       for(let x=0; x<filterData50.length;x++){\r\n           test.push(filterData50[x]);\r\n       }\r\n\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k < test.length){\r\n            let hourMS = test[k][7]\r\n            let slot1 = test[k][9]\r\n            let slot2 = test[k][10]\r\n\r\n            if(hourMS == 4){\r\n               const j = Math.floor(Math.random()*(i+1));\r\n               if(array[i] == 100){\r\n                   //slot in slot1 = 2\r\n                   if(array[i-1] == 100 ){\r\n                       array[i] = array[j];\r\n                       array[i-1] = array[j-1];\r\n                       array[j] = test[k];\r\n                       array[j-1] = test[k];\r\n                       \r\n                       // make stack become 0\r\n                       for(let b = 1; b <= totalRoom; b++){\r\n                        if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                            array[j+38*b] = 0         \r\n                            array[j+38*b-1] = 0\r\n                        }\r\n                        if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                            array[j-38*b] = 0         \r\n                            array[j-38*b-1] = 0\r\n                        }\r\n                       }\r\n                       const z = Math.floor(Math.random()*(i+1));\r\n                       if(array[i] == 100){\r\n                           //slot in slot1 = 2\r\n                           if(array[i-1] == 100 ){\r\n                               array[i] = array[z];\r\n                               array[i-1] = array[z-1];\r\n                               array[i] = test[k];\r\n                               array[i-1] = test[k];\r\n                           }\r\n                           else if(array[i+1] == 100 ){\r\n                                array[i] = array[z];\r\n                                array[i+1] = array[z+1];\r\n                                array[z] = test[k];\r\n                                array[z+1] = test[k];\r\n                           }\r\n                           else{\r\n                            remainderArraySlot1.push(test[k]);\r\n                            }\r\n                        }\r\n                        else{\r\n                            remainderArraySlot1.push(test[k]);\r\n                        }\r\n                        //revert back to 100\r\n                        for(let x =0; x<array.length; x++){\r\n                            if(array[x] == 0){\r\n                                array[x] = 100\r\n                            }\r\n                        }\r\n                   }\r\n                   //slot in slot1 = 2\r\n                   else if(array[i+1] == 100 ){\r\n                       array[i] = array[j];\r\n                       array[i+1] = array[j+1];\r\n                       array[j] = test[k];\r\n                       array[j+1] = test[k];\r\n                       \r\n                        // make stack become 0\r\n                       for(let b = 1; b <= totalRoom; b++){\r\n                        if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                            array[j+38*b] = 0         \r\n                            array[j+38*b-1] = 0\r\n                        }\r\n                        if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                            array[j-38*b] = 0         \r\n                            array[j-38*b-1] = 0\r\n                        }\r\n                       }\r\n                       const v = Math.floor(Math.random()*(i+1));\r\n                       if(array[i] == 100){\r\n                           //slot in slot1 = 2\r\n                           if(array[i-1] == 100 ){\r\n                               array[i] = array[v];\r\n                               array[i-1] = array[v-1];\r\n                               array[v] = test[k];\r\n                               array[v-1] = test[k];\r\n                           }\r\n                           else if(array[i+1] == 100){\r\n                                array[i] = array[v];\r\n                                array[i+1] = array[v+1];\r\n                                array[v] = test[k];\r\n                                array[v+1] = test[k];\r\n                           }\r\n                           else{\r\n                            remainderArraySlot1.push(test[k]);\r\n                            }\r\n                        }\r\n                        else{\r\n                            remainderArraySlot1.push(test[k]);\r\n                        }\r\n                        //revert back to 100\r\n                        for(let x =0; x<array.length; x++){\r\n                            if(array[x] == 0){\r\n                                array[x] = 100\r\n                            }\r\n                        }\r\n                   }\r\n                   else{\r\n                       remainderArray.push(test[k]);\r\n                   }\r\n               }else{\r\n                   remainderArray.push(test[k]);\r\n                   \r\n               }\r\n            }\r\n\r\n            else if(hourMS == 3){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        array[j+1] = test[k];\r\n                        \r\n                    }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        insertedData50_Slot2_1.push(test[k])\r\n                        \r\n                    }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        insertedData50_Slot2_1.push(test[k])\r\n                        \r\n                    }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                        array[i] = array[j];\r\n                        array[j] = test[k];\r\n                        remainderArraySlot1.push(test[k])\r\n                        \r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                    \r\n                }\r\n                }\r\n\r\n             else if(hourMS == 2){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    if(array[i-1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        \r\n                    }else if(array[i+1] == 100){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        \r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                        \r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                }\r\n                }\r\n            }\r\n            k++  \r\n        }\r\n        //console.log(remainderArraySlot1);\r\n        //for(let x = 0; x < remainderArraySlot1.length; x++){\r\n        for(let z =0; z< array.length; z++){\r\n            for(let x = 0; x < remainderArraySlot1.length; x++){\r\n                if(array[z] == remainderArraySlot1[x]){\r\n                    for(let b = 1; b <= totalRoom; b++){\r\n                        if( array[z+38*b]==100 && array[z+38*b-1]==100){\r\n                            array[z+38*b] = 0         \r\n                            array[z+38*b-1] = 0\r\n                        }\r\n                        if( array[z-38*b]==100 && array[z-38*b-1]==100){\r\n                            array[z-38*b] = 0         \r\n                            array[z-38*b-1] = 0\r\n                        }\r\n                       }\r\n                }\r\n            }\r\n        }\r\n\r\n        //fullfill the slot 3\r\n        for(let x = 0; x< array.length; x++){\r\n            if(array[x] == 100 && array[x+1] == 100){\r\n                if(k3 < remainderArraySlot1.length){\r\n                    const q = Math.floor(Math.random()*(x+1));\r\n                        array[x] = array[q]\r\n                        array[x+1] = array[q+1]\r\n                        array[q] = remainderArraySlot1[k3]\r\n                        array[q+1] = remainderArraySlot1[k3]\r\n                }else{\r\n                    if(remainderArraySlot1[k3] != undefined){\r\n                        insertedData50_Slot2_2.push(remainderArraySlot1[k3])\r\n                    }\r\n                }\r\n                k3++   \r\n            }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                if(k3 < remainderArraySlot1.length){\r\n                    const q = Math.floor(Math.random()*(x+1));\r\n                        array[x] = array[q]\r\n                        array[x+1] = array[q+1]\r\n                        array[q] = remainderArraySlot1[k3]\r\n                        array[q+1] = remainderArraySlot1[k3]\r\n                }else{\r\n                    if(remainderArraySlot1[k3] != undefined){\r\n                        insertedData50_Slot2_2.push(remainderArraySlot1[k3])\r\n                    }\r\n                }\r\n                k3++   \r\n            }\r\n        }\r\n\r\n\r\n        //console.log(remainderArray);\r\n        for(let x = 0; x< array.length; x++){\r\n                if(array[x] == 100 && array[x+1] ==100 ){\r\n                    if(k2 < remainderArray.length){\r\n                        const c = Math.floor(Math.random()*(x+1));\r\n                        array[x] = array[c]\r\n                        array[x+1] = array[c+1]\r\n                        array[c] = remainderArray[k2]\r\n                        array[c+1] = remainderArray[k2]\r\n                    }\r\n                    try{\r\n                        let slot2 = remainderArray[k2][10]\r\n                        if(slot2 == 1){\r\n                            insertedData50_Slot2_1.push(remainderArray[k2])\r\n                        }\r\n                        if(slot2 == 2){\r\n                            insertedData50_Slot2_2.push(remainderArray[k2])\r\n                        }\r\n                    }catch{}\r\n                k2++   \r\n            }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                if(k2 < remainderArray.length){\r\n                    const b = Math.floor(Math.random()*(x+1));\r\n                    array[x] = array[b]\r\n                    array[x+1] = array[b+1]\r\n                    array[b] = remainderArray[k2]\r\n                    array[b+1] = remainderArray[k2]\r\n                }\r\n                try{\r\n                    let slot2 = remainderArray[k2][10]\r\n                    if(slot2 == 1){\r\n                        insertedData50_Slot2_1.push(remainderArray[k2])\r\n                    }\r\n                    if(slot2 == 2){\r\n                        insertedData50_Slot2_2.push(remainderArray[k2])\r\n                    }\r\n                }catch{}\r\n            k2++   \r\n        }\r\n        }\r\n\r\n        //if there is array in -1, reslot in into the array\r\n        for(let x =0; x<array.length; x++){\r\n            if(array[x] == 0){\r\n                array[x] = 100\r\n            }\r\n        }\r\n        if(array[-1] != undefined){\r\n            insertedData50_Slot2_1.push(array[-1]);\r\n            // array[-1] = undefined\r\n        }\r\n\r\n       return array;\r\n   }\r\n   var AntArrIns50 = AntAlgoInsert50(AntArr50);\r\n\r\n   const checkAmountData50B = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n    }\r\n    var checkAmountB = checkAmountData50B(AntArrIns50)\r\n\r\n\r\n    const slot2Equal1for50 = (array) => {\r\n        let k = 0;\r\n        let test2 = []\r\n        //console.log(insertedData50_Slot2_1)\r\n        \r\n        for(let x = 0; x< array.length; x++){\r\n            if(array[x] == 100){\r\n                if(k < insertedData50_Slot2_1.length){\r\n                    array[x] = insertedData50_Slot2_1[k]\r\n                }\r\n            k++   \r\n            }\r\n        }\r\n        //console.log(test2)\r\n        return array;\r\n    }\r\n    slot2Equal1for50(AntArr50);\r\n \r\n\r\n    const slot2Equal2for50 = (array) => {\r\n        let k = 0;\r\n        for(let x = 0; x< array.length; x++){\r\n            if(array[x] == 100 && array[x+1] ==100){\r\n                if(k < insertedData50_Slot2_2.length){\r\n                    const q = Math.floor(Math.random()*(x+1));\r\n                        array[x] = array[q]\r\n                        array[x+1] = array[q+1]\r\n                        array[q] = insertedData50_Slot2_2[k]\r\n                        array[q+1] = insertedData50_Slot2_2[k]\r\n                }else{\r\n                    if(insertedData50_Slot2_2[k] != undefined){\r\n                        extraData50_Slot2_2.push(insertedData50_Slot2_2[k])\r\n                    }\r\n                }\r\n                k++   \r\n            }\r\n        }\r\n\r\n        for(let x = 0; x< array.length; x++){\r\n            if(array[x] == 100 && array[x+1] ==100){\r\n                if(k < extraData50_Slot2_2.length){\r\n                    array[x] = extraData50_Slot2_2[k]\r\n                    array[x+1] = extraData50_Slot2_2[k]\r\n                }\r\n            k++   \r\n            }\r\n        }\r\n        return array;\r\n}\r\n    slot2Equal2for50(AntArr50);\r\n\r\n   const checkAmountData50 = (array) => {\r\n       let count = 0\r\n       for(let i = 0; i < array.length; i++){\r\n               if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined){\r\n                   count += 1\r\n               }\r\n       }\r\n       return count\r\n   }\r\n   var checkAmount50 = checkAmountData50(AntArrIns50)\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 50 but less than 100\r\n\r\n    //create 1d array for dataset 100\r\n    const array1D100 = (data) => {\r\n        var result = []\r\n    \r\n        for(let i = 0; i< data; i++){\r\n            result[i]= 100;\r\n        }\r\n        return result;\r\n    }\r\n    var AntArr100 = array1D100(DataArray100);\r\n    \r\n    let extraData100_Slot2_2 = []\r\n    let extraData100_Slot2_1 = []\r\n    let insertedData100_Slot2_2 = []\r\n    let insertedData100_Slot2_1= []\r\n    \r\n    const AntAlgoInsert100 = (array) => {\r\n        let test = []\r\n        let k = 0;\r\n        let k2 =0\r\n        let k3 =0\r\n    \r\n        let remainderArray = []\r\n        let remainderArraySlot1 = []\r\n    \r\n        let totalRoom = array.length / 38\r\n    \r\n        for(let x=0; x<filterData100.length;x++){\r\n            test.push(filterData100[x]);\r\n        }\r\n    \r\n            for(let i = array.length-1;i>0;i--){\r\n                if(k < test.length){\r\n                let hourMS = test[k][7]\r\n                let slot1 = test[k][9]\r\n                let slot2 = test[k][10]\r\n    \r\n                if(hourMS == 4){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    //slot in slot1 = 2\r\n                    if(array[i-1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        \r\n                        // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                            if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                                array[j+38*b] = 0         \r\n                                array[j+38*b-1] = 0\r\n                            }\r\n                            if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                                array[j-38*b] = 0         \r\n                                array[j-38*b-1] = 0\r\n                            }\r\n                        }\r\n                        const z = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[z];\r\n                                array[i-1] = array[z-1];\r\n                                array[i] = test[k];\r\n                                array[i-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100 ){\r\n                                    array[i] = array[z];\r\n                                    array[i+1] = array[z+1];\r\n                                    array[z] = test[k];\r\n                                    array[z+1] = test[k];\r\n                            }\r\n                            else{\r\n                                remainderArraySlot1.push(test[k]);\r\n                                }\r\n                            }\r\n                            else{\r\n                                remainderArraySlot1.push(test[k]);\r\n                            }\r\n                            //revert back to 100\r\n                            for(let x =0; x<array.length; x++){\r\n                                if(array[x] == 0){\r\n                                    array[x] = 100\r\n                                }\r\n                            }\r\n                    }\r\n                    //slot in slot1 = 2\r\n                    else if(array[i+1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        \r\n                            // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                            if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                                array[j+38*b] = 0         \r\n                                array[j+38*b-1] = 0\r\n                            }\r\n                            if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                                array[j-38*b] = 0         \r\n                                array[j-38*b-1] = 0\r\n                            }\r\n                        }\r\n                        const v = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[v];\r\n                                array[i-1] = array[v-1];\r\n                                array[v] = test[k];\r\n                                array[v-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100){\r\n                                    array[i] = array[v];\r\n                                    array[i+1] = array[v+1];\r\n                                    array[v] = test[k];\r\n                                    array[v+1] = test[k];\r\n                            }\r\n                            else{\r\n                                remainderArraySlot1.push(test[k]);\r\n                                }\r\n                            }\r\n                            else{\r\n                                remainderArraySlot1.push(test[k]);\r\n                            }\r\n                            //revert back to 100\r\n                            for(let x =0; x<array.length; x++){\r\n                                if(array[x] == 0){\r\n                                    array[x] = 100\r\n                                }\r\n                            }\r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                    \r\n                }\r\n                }\r\n    \r\n                else if(hourMS == 3){\r\n                    const j = Math.floor(Math.random()*(i+1));\r\n                    if(array[i] == 100){\r\n                        if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                            array[i] = array[j];\r\n                            array[i-1] = array[j-1];\r\n                            array[i+1] = array[j+1];\r\n                            array[j] = test[k];\r\n                            array[j-1] = test[k];\r\n                            array[j+1] = test[k];\r\n                            \r\n                        }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                            array[i] = array[j];\r\n                            array[i-1] = array[j-1];\r\n                            array[j] = test[k];\r\n                            array[j-1] = test[k];\r\n                            insertedData100_Slot2_1.push(test[k])\r\n                            \r\n                        }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                            array[i] = array[j];\r\n                            array[i+1] = array[j+1];\r\n                            array[j] = test[k];\r\n                            array[j+1] = test[k];\r\n                            insertedData100_Slot2_1.push(test[k])\r\n                            \r\n                        }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                            array[i] = array[j];\r\n                            array[j] = test[k];\r\n                            remainderArraySlot1.push(test[k])\r\n                            \r\n                        }\r\n                    }else{\r\n                        remainderArray.push(test[k]);\r\n                        \r\n                    }\r\n                    }\r\n    \r\n                else if(hourMS == 2){\r\n                    const j = Math.floor(Math.random()*(i+1));\r\n                    if(array[i] == 100){\r\n                        if(array[i-1] == 100 ){\r\n                            array[i] = array[j];\r\n                            array[i-1] = array[j-1];\r\n                            array[j] = test[k];\r\n                            array[j-1] = test[k];\r\n                            \r\n                        }else if(array[i+1] == 100){\r\n                            array[i] = array[j];\r\n                            array[i+1] = array[j+1];\r\n                            array[j] = test[k];\r\n                            array[j+1] = test[k];\r\n                            \r\n                        }\r\n                        else{\r\n                            remainderArray.push(test[k]);\r\n                            \r\n                        }\r\n                    }else{\r\n                        remainderArray.push(test[k]);\r\n                    }\r\n                    }\r\n                }\r\n                k++  \r\n            }\r\n            //console.log(remainderArraySlot1);\r\n            //for(let x = 0; x < remainderArraySlot1.length; x++){\r\n            for(let z =0; z< array.length; z++){\r\n                for(let x = 0; x < remainderArraySlot1.length; x++){\r\n                    if(array[z] == remainderArraySlot1[x]){\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                            if( array[z+38*b]==100 && array[z+38*b-1]==100){\r\n                                array[z+38*b] = 0         \r\n                                array[z+38*b-1] = 0\r\n                            }\r\n                            if( array[z-38*b]==100 && array[z-38*b-1]==100){\r\n                                array[z-38*b] = 0         \r\n                                array[z-38*b-1] = 0\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    \r\n            //fullfill the slot 3\r\n            for(let x = 0; x< array.length; x++){\r\n                if(array[x] == 100 && array[x+1] == 100){\r\n                    if(k3 < remainderArraySlot1.length){\r\n                        const q = Math.floor(Math.random()*(x+1));\r\n                            array[x] = array[q]\r\n                            array[x+1] = array[q+1]\r\n                            array[q] = remainderArraySlot1[k3]\r\n                            array[q+1] = remainderArraySlot1[k3]\r\n                    }else{\r\n                        if(remainderArraySlot1[k3] != undefined){\r\n                            insertedData100_Slot2_2.push(remainderArraySlot1[k3])\r\n                        }\r\n                    }\r\n                    k3++   \r\n                }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                    if(k3 < remainderArraySlot1.length){\r\n                        const q = Math.floor(Math.random()*(x+1));\r\n                            array[x] = array[q]\r\n                            array[x+1] = array[q+1]\r\n                            array[q] = remainderArraySlot1[k3]\r\n                            array[q+1] = remainderArraySlot1[k3]\r\n                    }else{\r\n                        if(remainderArraySlot1[k3] != undefined){\r\n                            insertedData100_Slot2_2.push(remainderArraySlot1[k3])\r\n                        }\r\n                    }\r\n                    k3++   \r\n                }\r\n            }\r\n    \r\n    \r\n            //console.log(remainderArray);\r\n            for(let x = 0; x< array.length; x++){\r\n                    if(array[x] == 100 && array[x+1] ==100 ){\r\n                        if(k2 < remainderArray.length){\r\n                            const c = Math.floor(Math.random()*(x+1));\r\n                            array[x] = array[c]\r\n                            array[x+1] = array[c+1]\r\n                            array[c] = remainderArray[k2]\r\n                            array[c+1] = remainderArray[k2]\r\n                        }\r\n                        try{\r\n                            let slot2 = remainderArray[k2][10]\r\n                            if(slot2 == 1){\r\n                                insertedData100_Slot2_1.push(remainderArray[k2])\r\n                            }\r\n                            if(slot2 == 2){\r\n                                insertedData100_Slot2_2.push(remainderArray[k2])\r\n                            }\r\n                        }catch{}\r\n                    k2++   \r\n                }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                    if(k2 < remainderArray.length){\r\n                        const b = Math.floor(Math.random()*(x+1));\r\n                        array[x] = array[b]\r\n                        array[x+1] = array[b+1]\r\n                        array[b] = remainderArray[k2]\r\n                        array[b+1] = remainderArray[k2]\r\n                    }\r\n                    try{\r\n                        let slot2 = remainderArray[k2][10]\r\n                        if(slot2 == 1){\r\n                            insertedData100_Slot2_1.push(remainderArray[k2])\r\n                        }\r\n                        if(slot2 == 2){\r\n                            insertedData100_Slot2_2.push(remainderArray[k2])\r\n                        }\r\n                    }catch{}\r\n                k2++   \r\n            }\r\n            }\r\n    \r\n            //if there is array in -1, reslot in into the array\r\n            for(let x =0; x<array.length; x++){\r\n                if(array[x] == 0){\r\n                    array[x] = 100\r\n                }\r\n            }\r\n            if(array[-1] != undefined){\r\n                insertedData100_Slot2_1.push(array[-1]);\r\n                // array[-1] = undefined\r\n            }\r\n    \r\n        return array;\r\n    }\r\n    var AntArrIns100 = AntAlgoInsert100(AntArr100);\r\n    \r\n    const checkAmountData100B = (array) => {\r\n        let count = 0\r\n        for(let i = 0; i < array.length; i++){\r\n                if(array[i] != 100 && array[i] !=100 && array[i] != 0 && array[i] != undefined){\r\n                    count += 1\r\n                }\r\n        }\r\n        return count\r\n    }\r\n    var checkAmountB = checkAmountData100B(AntArrIns100)\r\n\r\n    \r\n    const slot2Equal1for100 = (array) => {\r\n            let k = 0;\r\n            let test2 = []\r\n            //console.log(insertedData100_Slot2_1)\r\n            \r\n            for(let x = 0; x< array.length; x++){\r\n                if(array[x] == 100){\r\n                    if(k < insertedData100_Slot2_1.length){\r\n                        array[x] = insertedData100_Slot2_1[k]\r\n                    }\r\n                k++   \r\n                }\r\n            }\r\n            //console.log(test2)\r\n            return array;\r\n    }\r\n    slot2Equal1for100(AntArr100);\r\n    \r\n    \r\n    const slot2Equal2for100 = (array) => {\r\n            let k = 0;\r\n            for(let x = 0; x< array.length; x++){\r\n                if(array[x] == 100 && array[x+1] ==100){\r\n                    if(k < insertedData100_Slot2_2.length){\r\n                        const q = Math.floor(Math.random()*(x+1));\r\n                            array[x] = array[q]\r\n                            array[x+1] = array[q+1]\r\n                            array[q] = insertedData100_Slot2_2[k]\r\n                            array[q+1] = insertedData100_Slot2_2[k]\r\n                    }else{\r\n                        if(insertedData100_Slot2_2[k] != undefined){\r\n                            extraData100_Slot2_2.push(insertedData100_Slot2_2[k])\r\n                        }\r\n                    }\r\n                    k++   \r\n                }\r\n            }\r\n    \r\n            for(let x = 0; x< array.length; x++){\r\n                if(array[x] == 100 && array[x+1] ==100){\r\n                    if(k < extraData100_Slot2_2.length){\r\n                        array[x] = extraData100_Slot2_2[k]\r\n                        array[x+1] = extraData100_Slot2_2[k]\r\n                    }\r\n                k++   \r\n                }\r\n            }\r\n            return array;\r\n    }\r\n    slot2Equal2for100(AntArr100);\r\n    \r\n    const checkAmountData100 = (array) => {\r\n        let count = 0\r\n        for(let i = 0; i < array.length; i++){\r\n                if(array[i] != 100 && array[i] !=100 && array[i] != 0 && array[i] != undefined){\r\n                    count += 1\r\n                }\r\n        }\r\n        return count\r\n    }\r\n    var checkAmount100 = checkAmountData100(AntArrIns100)\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 100 but less than 200\r\n\r\n    //create 1d array for dataset 200\r\n    const array1D200 = (data) => {\r\n        var result = []\r\n    \r\n        for(let i = 0; i< data; i++){\r\n            result[i]= 100;\r\n        }\r\n        return result;\r\n    }\r\n    var AntArr200 = array1D200(DataArray200);\r\n    \r\n    let extraData200_Slot2_2 = []\r\n    let extraData200_Slot2_1 = []\r\n    let insertedData200_Slot2_2 = []\r\n    let insertedData200_Slot2_1= []\r\n    \r\n    const AntAlgoInsert200 = (array) => {\r\n        let test = []\r\n        let k = 0;\r\n        let k2 =0\r\n        let k3 =0\r\n    \r\n        let remainderArray = []\r\n        let remainderArraySlot1 = []\r\n    \r\n        let totalRoom = array.length / 38\r\n    \r\n        for(let x=0; x<filterData200.length;x++){\r\n            test.push(filterData200[x]);\r\n        }\r\n    \r\n            for(let i = array.length-1;i>0;i--){\r\n                if(k < test.length){\r\n                let hourMS = test[k][7]\r\n                let slot1 = test[k][9]\r\n                let slot2 = test[k][10]\r\n    \r\n                if(hourMS == 4){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    //slot in slot1 = 2\r\n                    if(array[i-1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        \r\n                        // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                            if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                                array[j+38*b] = 0         \r\n                                array[j+38*b-1] = 0\r\n                            }\r\n                            if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                                array[j-38*b] = 0         \r\n                                array[j-38*b-1] = 0\r\n                            }\r\n                        }\r\n                        const z = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[z];\r\n                                array[i-1] = array[z-1];\r\n                                array[i] = test[k];\r\n                                array[i-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100 ){\r\n                                    array[i] = array[z];\r\n                                    array[i+1] = array[z+1];\r\n                                    array[z] = test[k];\r\n                                    array[z+1] = test[k];\r\n                            }\r\n                            else{\r\n                                remainderArraySlot1.push(test[k]);\r\n                                }\r\n                            }\r\n                            else{\r\n                                remainderArraySlot1.push(test[k]);\r\n                            }\r\n                            //revert back to 100\r\n                            for(let x =0; x<array.length; x++){\r\n                                if(array[x] == 0){\r\n                                    array[x] = 100\r\n                                }\r\n                            }\r\n                    }\r\n                    //slot in slot1 = 2\r\n                    else if(array[i+1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        \r\n                            // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                            if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                                array[j+38*b] = 0         \r\n                                array[j+38*b-1] = 0\r\n                            }\r\n                            if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                                array[j-38*b] = 0         \r\n                                array[j-38*b-1] = 0\r\n                            }\r\n                        }\r\n                        const v = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[v];\r\n                                array[i-1] = array[v-1];\r\n                                array[v] = test[k];\r\n                                array[v-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100){\r\n                                    array[i] = array[v];\r\n                                    array[i+1] = array[v+1];\r\n                                    array[v] = test[k];\r\n                                    array[v+1] = test[k];\r\n                            }\r\n                            else{\r\n                                remainderArraySlot1.push(test[k]);\r\n                                }\r\n                            }\r\n                            else{\r\n                                remainderArraySlot1.push(test[k]);\r\n                            }\r\n                            //revert back to 100\r\n                            for(let x =0; x<array.length; x++){\r\n                                if(array[x] == 0){\r\n                                    array[x] = 100\r\n                                }\r\n                            }\r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                    \r\n                }\r\n                }\r\n    \r\n                else if(hourMS == 3){\r\n                    const j = Math.floor(Math.random()*(i+1));\r\n                    if(array[i] == 100){\r\n                        if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                            array[i] = array[j];\r\n                            array[i-1] = array[j-1];\r\n                            array[i+1] = array[j+1];\r\n                            array[j] = test[k];\r\n                            array[j-1] = test[k];\r\n                            array[j+1] = test[k];\r\n                            \r\n                        }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                            array[i] = array[j];\r\n                            array[i-1] = array[j-1];\r\n                            array[j] = test[k];\r\n                            array[j-1] = test[k];\r\n                            insertedData200_Slot2_1.push(test[k])\r\n                            \r\n                        }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                            array[i] = array[j];\r\n                            array[i+1] = array[j+1];\r\n                            array[j] = test[k];\r\n                            array[j+1] = test[k];\r\n                            insertedData200_Slot2_1.push(test[k])\r\n                            \r\n                        }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                            array[i] = array[j];\r\n                            array[j] = test[k];\r\n                            remainderArraySlot1.push(test[k])\r\n                            \r\n                        }\r\n                    }else{\r\n                        remainderArray.push(test[k]);\r\n                        \r\n                    }\r\n                    }\r\n    \r\n                else if(hourMS == 2){\r\n                    const j = Math.floor(Math.random()*(i+1));\r\n                    if(array[i] == 100){\r\n                        if(array[i-1] == 100 ){\r\n                            array[i] = array[j];\r\n                            array[i-1] = array[j-1];\r\n                            array[j] = test[k];\r\n                            array[j-1] = test[k];\r\n                            \r\n                        }else if(array[i+1] == 100){\r\n                            array[i] = array[j];\r\n                            array[i+1] = array[j+1];\r\n                            array[j] = test[k];\r\n                            array[j+1] = test[k];\r\n                            \r\n                        }\r\n                        else{\r\n                            remainderArray.push(test[k]);\r\n                            \r\n                        }\r\n                    }else{\r\n                        remainderArray.push(test[k]);\r\n                    }\r\n                    }\r\n                }\r\n                k++  \r\n            }\r\n            //console.log(remainderArraySlot1);\r\n            //for(let x = 0; x < remainderArraySlot1.length; x++){\r\n            for(let z =0; z< array.length; z++){\r\n                for(let x = 0; x < remainderArraySlot1.length; x++){\r\n                    if(array[z] == remainderArraySlot1[x]){\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                            if( array[z+38*b]==100 && array[z+38*b-1]==100){\r\n                                array[z+38*b] = 0         \r\n                                array[z+38*b-1] = 0\r\n                            }\r\n                            if( array[z-38*b]==100 && array[z-38*b-1]==100){\r\n                                array[z-38*b] = 0         \r\n                                array[z-38*b-1] = 0\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    \r\n            //fullfill the slot 3\r\n            for(let x = 0; x< array.length; x++){\r\n                if(array[x] == 100 && array[x+1] == 100){\r\n                    if(k3 < remainderArraySlot1.length){\r\n                        const q = Math.floor(Math.random()*(x+1));\r\n                            array[x] = array[q]\r\n                            array[x+1] = array[q+1]\r\n                            array[q] = remainderArraySlot1[k3]\r\n                            array[q+1] = remainderArraySlot1[k3]\r\n                    }else{\r\n                        if(remainderArraySlot1[k3] != undefined){\r\n                            insertedData200_Slot2_2.push(remainderArraySlot1[k3])\r\n                        }\r\n                    }\r\n                    k3++   \r\n                }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                    if(k3 < remainderArraySlot1.length){\r\n                        const q = Math.floor(Math.random()*(x+1));\r\n                            array[x] = array[q]\r\n                            array[x+1] = array[q+1]\r\n                            array[q] = remainderArraySlot1[k3]\r\n                            array[q+1] = remainderArraySlot1[k3]\r\n                    }else{\r\n                        if(remainderArraySlot1[k3] != undefined){\r\n                            insertedData200_Slot2_2.push(remainderArraySlot1[k3])\r\n                        }\r\n                    }\r\n                    k3++   \r\n                }\r\n            }\r\n    \r\n    \r\n            //console.log(remainderArray);\r\n            for(let x = 0; x< array.length; x++){\r\n                    if(array[x] == 100 && array[x+1] ==100 ){\r\n                        if(k2 < remainderArray.length){\r\n                            const c = Math.floor(Math.random()*(x+1));\r\n                            array[x] = array[c]\r\n                            array[x+1] = array[c+1]\r\n                            array[c] = remainderArray[k2]\r\n                            array[c+1] = remainderArray[k2]\r\n                        }\r\n                        try{\r\n                            let slot2 = remainderArray[k2][10]\r\n                            if(slot2 == 1){\r\n                                insertedData200_Slot2_1.push(remainderArray[k2])\r\n                            }\r\n                            if(slot2 == 2){\r\n                                insertedData200_Slot2_2.push(remainderArray[k2])\r\n                            }\r\n                        }catch{}\r\n                    k2++   \r\n                }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                    if(k2 < remainderArray.length){\r\n                        const b = Math.floor(Math.random()*(x+1));\r\n                        array[x] = array[b]\r\n                        array[x+1] = array[b+1]\r\n                        array[b] = remainderArray[k2]\r\n                        array[b+1] = remainderArray[k2]\r\n                    }\r\n                    try{\r\n                        let slot2 = remainderArray[k2][10]\r\n                        if(slot2 == 1){\r\n                            insertedData200_Slot2_1.push(remainderArray[k2])\r\n                        }\r\n                        if(slot2 == 2){\r\n                            insertedData200_Slot2_2.push(remainderArray[k2])\r\n                        }\r\n                    }catch{}\r\n                k2++   \r\n            }\r\n            }\r\n    \r\n            //if there is array in -1, reslot in into the array\r\n            for(let x =0; x<array.length; x++){\r\n                if(array[x] == 0){\r\n                    array[x] = 100\r\n                }\r\n            }\r\n            if(array[-1] != undefined){\r\n                insertedData200_Slot2_1.push(array[-1]);\r\n                // array[-1] = undefined\r\n            }\r\n    \r\n        return array;\r\n    }\r\n    var AntArrIns200 = AntAlgoInsert200(AntArr200);\r\n    \r\n    const checkAmountData200B = (array) => {\r\n        let count = 0\r\n        for(let i = 0; i < array.length; i++){\r\n                if(array[i] != 100 && array[i] !=200 && array[i] != 0 && array[i] != undefined){\r\n                    count += 1\r\n                }\r\n        }\r\n        return count\r\n    }\r\n    var checkAmountB = checkAmountData200B(AntArrIns200)\r\n\r\n    \r\n    const slot2Equal1for200 = (array) => {\r\n            let k = 0;\r\n            let test2 = []\r\n            //console.log(insertedData200_Slot2_1)\r\n            \r\n            for(let x = 0; x< array.length; x++){\r\n                if(array[x] == 100){\r\n                    if(k < insertedData200_Slot2_1.length){\r\n                        array[x] = insertedData200_Slot2_1[k]\r\n                    }\r\n                k++   \r\n                }\r\n            }\r\n            //console.log(test2)\r\n            return array;\r\n    }\r\n    slot2Equal1for200(AntArr200);\r\n    \r\n    \r\n    const slot2Equal2for200 = (array) => {\r\n            let k = 0;\r\n            for(let x = 0; x< array.length; x++){\r\n                if(array[x] == 100 && array[x+1] ==100){\r\n                    if(k < insertedData200_Slot2_2.length){\r\n                        const q = Math.floor(Math.random()*(x+1));\r\n                            array[x] = array[q]\r\n                            array[x+1] = array[q+1]\r\n                            array[q] = insertedData200_Slot2_2[k]\r\n                            array[q+1] = insertedData200_Slot2_2[k]\r\n                    }else{\r\n                        if(insertedData200_Slot2_2[k] != undefined){\r\n                            extraData200_Slot2_2.push(insertedData200_Slot2_2[k])\r\n                        }\r\n                    }\r\n                    k++   \r\n                }\r\n            }\r\n    \r\n            for(let x = 0; x< array.length; x++){\r\n                if(array[x] == 100 && array[x+1] ==100){\r\n                    if(k < extraData200_Slot2_2.length){\r\n                        array[x] = extraData200_Slot2_2[k]\r\n                        array[x+1] = extraData200_Slot2_2[k]\r\n                    }\r\n                k++   \r\n                }\r\n            }\r\n            return array;\r\n    }\r\n    slot2Equal2for200(AntArr200);\r\n    \r\n    const checkAmountData200 = (array) => {\r\n        let count = 0\r\n        for(let i = 0; i < array.length; i++){\r\n                if(array[i] != 100 && array[i] !=200 && array[i] != 0 && array[i] != undefined){\r\n                    count += 1\r\n                }\r\n        }\r\n        return count\r\n    }\r\n    var checkAmount200 = checkAmountData200(AntArrIns200)\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 200 \r\n\r\n    //create 1d array for dataset 500\r\n    const array1D500 = (data) => {\r\n        var result = []\r\n    \r\n        for(let i = 0; i< data; i++){\r\n            result[i]= 100;\r\n        }\r\n        return result;\r\n    }\r\n    var AntArr500 = array1D500(DataArray500);\r\n    \r\n    let extraData500_Slot2_2 = []\r\n    let extraData500_Slot2_1 = []\r\n    let insertedData500_Slot2_2 = []\r\n    let insertedData500_Slot2_1= []\r\n    \r\n    const AntAlgoInsert500 = (array) => {\r\n        let test = []\r\n        let k = 0;\r\n        let k2 =0\r\n        let k3 =0\r\n    \r\n        let remainderArray = []\r\n        let remainderArraySlot1 = []\r\n    \r\n        let totalRoom = array.length / 38\r\n    \r\n        for(let x=0; x<filterData500.length;x++){\r\n            test.push(filterData500[x]);\r\n        }\r\n    \r\n            for(let i = array.length-1;i>0;i--){\r\n                if(k < test.length){\r\n                let hourMS = test[k][7]\r\n                let slot1 = test[k][9]\r\n                let slot2 = test[k][10]\r\n    \r\n                if(hourMS == 4){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    //slot in slot1 = 2\r\n                    if(array[i-1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        \r\n                        // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                            if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                                array[j+38*b] = 0         \r\n                                array[j+38*b-1] = 0\r\n                            }\r\n                            if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                                array[j-38*b] = 0         \r\n                                array[j-38*b-1] = 0\r\n                            }\r\n                        }\r\n                        const z = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[z];\r\n                                array[i-1] = array[z-1];\r\n                                array[i] = test[k];\r\n                                array[i-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100 ){\r\n                                    array[i] = array[z];\r\n                                    array[i+1] = array[z+1];\r\n                                    array[z] = test[k];\r\n                                    array[z+1] = test[k];\r\n                            }\r\n                            else{\r\n                                remainderArraySlot1.push(test[k]);\r\n                                }\r\n                            }\r\n                            else{\r\n                                remainderArraySlot1.push(test[k]);\r\n                            }\r\n                            //revert back to 100\r\n                            for(let x =0; x<array.length; x++){\r\n                                if(array[x] == 0){\r\n                                    array[x] = 100\r\n                                }\r\n                            }\r\n                    }\r\n                    //slot in slot1 = 2\r\n                    else if(array[i+1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        \r\n                            // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                            if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                                array[j+38*b] = 0         \r\n                                array[j+38*b-1] = 0\r\n                            }\r\n                            if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                                array[j-38*b] = 0         \r\n                                array[j-38*b-1] = 0\r\n                            }\r\n                        }\r\n                        const v = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[v];\r\n                                array[i-1] = array[v-1];\r\n                                array[v] = test[k];\r\n                                array[v-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100){\r\n                                    array[i] = array[v];\r\n                                    array[i+1] = array[v+1];\r\n                                    array[v] = test[k];\r\n                                    array[v+1] = test[k];\r\n                            }\r\n                            else{\r\n                                remainderArraySlot1.push(test[k]);\r\n                                }\r\n                            }\r\n                            else{\r\n                                remainderArraySlot1.push(test[k]);\r\n                            }\r\n                            //revert back to 100\r\n                            for(let x =0; x<array.length; x++){\r\n                                if(array[x] == 0){\r\n                                    array[x] = 100\r\n                                }\r\n                            }\r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                    \r\n                }\r\n                }\r\n    \r\n                else if(hourMS == 3){\r\n                    const j = Math.floor(Math.random()*(i+1));\r\n                    if(array[i] == 100){\r\n                        if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                            array[i] = array[j];\r\n                            array[i-1] = array[j-1];\r\n                            array[i+1] = array[j+1];\r\n                            array[j] = test[k];\r\n                            array[j-1] = test[k];\r\n                            array[j+1] = test[k];\r\n                            \r\n                        }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                            array[i] = array[j];\r\n                            array[i-1] = array[j-1];\r\n                            array[j] = test[k];\r\n                            array[j-1] = test[k];\r\n                            insertedData500_Slot2_1.push(test[k])\r\n                            \r\n                        }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                            array[i] = array[j];\r\n                            array[i+1] = array[j+1];\r\n                            array[j] = test[k];\r\n                            array[j+1] = test[k];\r\n                            insertedData500_Slot2_1.push(test[k])\r\n                            \r\n                        }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                            array[i] = array[j];\r\n                            array[j] = test[k];\r\n                            remainderArraySlot1.push(test[k])\r\n                            \r\n                        }\r\n                    }else{\r\n                        remainderArray.push(test[k]);\r\n                        \r\n                    }\r\n                    }\r\n    \r\n                else if(hourMS == 2){\r\n                    const j = Math.floor(Math.random()*(i+1));\r\n                    if(array[i] == 100){\r\n                        if(array[i-1] == 100 ){\r\n                            array[i] = array[j];\r\n                            array[i-1] = array[j-1];\r\n                            array[j] = test[k];\r\n                            array[j-1] = test[k];\r\n                            \r\n                        }else if(array[i+1] == 100){\r\n                            array[i] = array[j];\r\n                            array[i+1] = array[j+1];\r\n                            array[j] = test[k];\r\n                            array[j+1] = test[k];\r\n                            \r\n                        }\r\n                        else{\r\n                            remainderArray.push(test[k]);\r\n                            \r\n                        }\r\n                    }else{\r\n                        remainderArray.push(test[k]);\r\n                    }\r\n                    }\r\n                }\r\n                k++  \r\n            }\r\n            //console.log(remainderArraySlot1);\r\n            //for(let x = 0; x < remainderArraySlot1.length; x++){\r\n            for(let z =0; z< array.length; z++){\r\n                for(let x = 0; x < remainderArraySlot1.length; x++){\r\n                    if(array[z] == remainderArraySlot1[x]){\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                            if( array[z+38*b]==100 && array[z+38*b-1]==100){\r\n                                array[z+38*b] = 0         \r\n                                array[z+38*b-1] = 0\r\n                            }\r\n                            if( array[z-38*b]==100 && array[z-38*b-1]==100){\r\n                                array[z-38*b] = 0         \r\n                                array[z-38*b-1] = 0\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    \r\n            //fullfill the slot 3\r\n            for(let x = 0; x< array.length; x++){\r\n                if(array[x] == 100 && array[x+1] == 100){\r\n                    if(k3 < remainderArraySlot1.length){\r\n                        const q = Math.floor(Math.random()*(x+1));\r\n                            array[x] = array[q]\r\n                            array[x+1] = array[q+1]\r\n                            array[q] = remainderArraySlot1[k3]\r\n                            array[q+1] = remainderArraySlot1[k3]\r\n                    }else{\r\n                        if(remainderArraySlot1[k3] != undefined){\r\n                            insertedData500_Slot2_2.push(remainderArraySlot1[k3])\r\n                        }\r\n                    }\r\n                    k3++   \r\n                }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                    if(k3 < remainderArraySlot1.length){\r\n                        const q = Math.floor(Math.random()*(x+1));\r\n                            array[x] = array[q]\r\n                            array[x+1] = array[q+1]\r\n                            array[q] = remainderArraySlot1[k3]\r\n                            array[q+1] = remainderArraySlot1[k3]\r\n                    }else{\r\n                        if(remainderArraySlot1[k3] != undefined){\r\n                            insertedData500_Slot2_2.push(remainderArraySlot1[k3])\r\n                        }\r\n                    }\r\n                    k3++   \r\n                }\r\n            }\r\n    \r\n    \r\n            //console.log(remainderArray);\r\n            for(let x = 0; x< array.length; x++){\r\n                    if(array[x] == 100 && array[x+1] ==100 ){\r\n                        if(k2 < remainderArray.length){\r\n                            const c = Math.floor(Math.random()*(x+1));\r\n                            array[x] = array[c]\r\n                            array[x+1] = array[c+1]\r\n                            array[c] = remainderArray[k2]\r\n                            array[c+1] = remainderArray[k2]\r\n                        }\r\n                        try{\r\n                            let slot2 = remainderArray[k2][10]\r\n                            if(slot2 == 1){\r\n                                insertedData500_Slot2_1.push(remainderArray[k2])\r\n                            }\r\n                            if(slot2 == 2){\r\n                                insertedData500_Slot2_2.push(remainderArray[k2])\r\n                            }\r\n                        }catch{}\r\n                    k2++   \r\n                }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                    if(k2 < remainderArray.length){\r\n                        const b = Math.floor(Math.random()*(x+1));\r\n                        array[x] = array[b]\r\n                        array[x+1] = array[b+1]\r\n                        array[b] = remainderArray[k2]\r\n                        array[b+1] = remainderArray[k2]\r\n                    }\r\n                    try{\r\n                        let slot2 = remainderArray[k2][10]\r\n                        if(slot2 == 1){\r\n                            insertedData500_Slot2_1.push(remainderArray[k2])\r\n                        }\r\n                        if(slot2 == 2){\r\n                            insertedData500_Slot2_2.push(remainderArray[k2])\r\n                        }\r\n                    }catch{}\r\n                k2++   \r\n            }\r\n            }\r\n    \r\n            //if there is array in -1, reslot in into the array\r\n            for(let x =0; x<array.length; x++){\r\n                if(array[x] == 0){\r\n                    array[x] = 100\r\n                }\r\n            }\r\n            if(array[-1] != undefined){\r\n                insertedData500_Slot2_1.push(array[-1]);\r\n                // array[-1] = undefined\r\n            }\r\n    \r\n        return array;\r\n    }\r\n    var AntArrIns500 = AntAlgoInsert500(AntArr500);\r\n    \r\n    const checkAmountData500B = (array) => {\r\n        let count = 0\r\n        for(let i = 0; i < array.length; i++){\r\n                if(array[i] != 100 && array[i] !=500 && array[i] != 0 && array[i] != undefined){\r\n                    count += 1\r\n                }\r\n        }\r\n        return count\r\n    }\r\n    var checkAmountB = checkAmountData500B(AntArrIns500)\r\n\r\n    \r\n    const slot2Equal1for500 = (array) => {\r\n            let k = 0;\r\n            let test2 = []\r\n            //console.log(insertedData500_Slot2_1)\r\n            \r\n            for(let x = 0; x< array.length; x++){\r\n                if(array[x] == 100){\r\n                    if(k < insertedData500_Slot2_1.length){\r\n                        array[x] = insertedData500_Slot2_1[k]\r\n                    }\r\n                k++   \r\n                }\r\n            }\r\n            //console.log(test2)\r\n            return array;\r\n    }\r\n    slot2Equal1for500(AntArr500);\r\n    \r\n    \r\n    const slot2Equal2for500 = (array) => {\r\n            let k = 0;\r\n            for(let x = 0; x< array.length; x++){\r\n                if(array[x] == 100 && array[x+1] ==100){\r\n                    if(k < insertedData500_Slot2_2.length){\r\n                        const q = Math.floor(Math.random()*(x+1));\r\n                            array[x] = array[q]\r\n                            array[x+1] = array[q+1]\r\n                            array[q] = insertedData500_Slot2_2[k]\r\n                            array[q+1] = insertedData500_Slot2_2[k]\r\n                    }else{\r\n                        if(insertedData500_Slot2_2[k] != undefined){\r\n                            extraData500_Slot2_2.push(insertedData500_Slot2_2[k])\r\n                        }\r\n                    }\r\n                    k++   \r\n                }\r\n            }\r\n    \r\n            for(let x = 0; x< array.length; x++){\r\n                if(array[x] == 100 && array[x+1] ==100){\r\n                    if(k < extraData500_Slot2_2.length){\r\n                        array[x] = extraData500_Slot2_2[k]\r\n                        array[x+1] = extraData500_Slot2_2[k]\r\n                    }\r\n                k++   \r\n                }\r\n            }\r\n            return array;\r\n    }\r\n    slot2Equal2for500(AntArr500);\r\n    \r\n    const checkAmountData500 = (array) => {\r\n        let count = 0\r\n        for(let i = 0; i < array.length; i++){\r\n                if(array[i] != 100 && array[i] !=500 && array[i] != 0 && array[i] != undefined){\r\n                    count += 1\r\n                }\r\n        }\r\n        return count\r\n    }\r\n    var checkAmount500 = checkAmountData500(AntArrIns500)\r\n\r\n\r\n//---------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n\r\n\r\n//---------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n//Elective courses\r\n\r\n    //create 1d array for dataset 50\r\n    const array1DElective50 = (data) => {\r\n        var result = []\r\n    \r\n        for(let i = 0; i< data; i++){\r\n            result[i]= 100;\r\n        }\r\n        return result;\r\n    }\r\n    var AntArrElective50 = array1DElective50(DataArrayElective50);\r\n    \r\n    let extraDataElective50_Slot2_2 = []\r\n    let extraData50Elective_Slot2_1 = []\r\n    let insertedDataElective50_Slot2_2 = []\r\n    let insertedDataElective50_Slot2_1= []\r\n    \r\n    const AntAlgoInsertElective50 = (array) => {\r\n        let test = []\r\n        let k = 0;\r\n        let k2 =0\r\n        let k3 =0\r\n    \r\n        let remainderArray = []\r\n        let remainderArraySlot1 = []\r\n    \r\n        let totalRoom = array.length / 38\r\n    \r\n        for(let x=0; x<filterDataElective50.length;x++){\r\n            test.push(filterDataElective50[x]);\r\n        }\r\n    \r\n         for(let i = array.length-1;i>0;i--){\r\n             if(k < test.length){\r\n             let hourMS = test[k][7]\r\n             let slot1 = test[k][9]\r\n             let slot2 = test[k][10]\r\n    \r\n             if(hourMS == 4){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    //slot in slot1 = 2\r\n                    if(array[i-1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        \r\n                        // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                             array[j+38*b] = 0         \r\n                             array[j+38*b-1] = 0\r\n                         }\r\n                         if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                             array[j-38*b] = 0         \r\n                             array[j-38*b-1] = 0\r\n                         }\r\n                        }\r\n                        const z = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[z];\r\n                                array[i-1] = array[z-1];\r\n                                array[i] = test[k];\r\n                                array[i-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100 ){\r\n                                 array[i] = array[z];\r\n                                 array[i+1] = array[z+1];\r\n                                 array[z] = test[k];\r\n                                 array[z+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                         }\r\n                         //revert back to 100\r\n                         for(let x =0; x<array.length; x++){\r\n                             if(array[x] == 0){\r\n                                 array[x] = 100\r\n                             }\r\n                         }\r\n                    }\r\n                    //slot in slot1 = 2\r\n                    else if(array[i+1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        \r\n                         // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                             array[j+38*b] = 0         \r\n                             array[j+38*b-1] = 0\r\n                         }\r\n                         if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                             array[j-38*b] = 0         \r\n                             array[j-38*b-1] = 0\r\n                         }\r\n                        }\r\n                        const v = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[v];\r\n                                array[i-1] = array[v-1];\r\n                                array[v] = test[k];\r\n                                array[v-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100){\r\n                                 array[i] = array[v];\r\n                                 array[i+1] = array[v+1];\r\n                                 array[v] = test[k];\r\n                                 array[v+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                         }\r\n                         //revert back to 100\r\n                         for(let x =0; x<array.length; x++){\r\n                             if(array[x] == 0){\r\n                                 array[x] = 100\r\n                             }\r\n                         }\r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                    \r\n                }\r\n             }\r\n    \r\n             else if(hourMS == 3){\r\n                 const j = Math.floor(Math.random()*(i+1));\r\n                 if(array[i] == 100){\r\n                     if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[i-1] = array[j-1];\r\n                         array[i+1] = array[j+1];\r\n                         array[j] = test[k];\r\n                         array[j-1] = test[k];\r\n                         array[j+1] = test[k];\r\n                         \r\n                     }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[i-1] = array[j-1];\r\n                         array[j] = test[k];\r\n                         array[j-1] = test[k];\r\n                         insertedDataElective50_Slot2_1.push(test[k])\r\n                         \r\n                     }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[i+1] = array[j+1];\r\n                         array[j] = test[k];\r\n                         array[j+1] = test[k];\r\n                         insertedDataElective50_Slot2_1.push(test[k])\r\n                         \r\n                     }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[j] = test[k];\r\n                         remainderArraySlot1.push(test[k])\r\n                         \r\n                     }\r\n                 }else{\r\n                     remainderArray.push(test[k]);\r\n                     \r\n                 }\r\n                 }\r\n    \r\n              else if(hourMS == 2){\r\n                 const j = Math.floor(Math.random()*(i+1));\r\n                 if(array[i] == 100){\r\n                     if(array[i-1] == 100 ){\r\n                         array[i] = array[j];\r\n                         array[i-1] = array[j-1];\r\n                         array[j] = test[k];\r\n                         array[j-1] = test[k];\r\n                         \r\n                     }else if(array[i+1] == 100){\r\n                         array[i] = array[j];\r\n                         array[i+1] = array[j+1];\r\n                         array[j] = test[k];\r\n                         array[j+1] = test[k];\r\n                         \r\n                     }\r\n                     else{\r\n                         remainderArray.push(test[k]);\r\n                         \r\n                     }\r\n                 }else{\r\n                     remainderArray.push(test[k]);\r\n                 }\r\n                 }\r\n             }\r\n             k++  \r\n         }\r\n         //console.log(remainderArraySlot1);\r\n         //for(let x = 0; x < remainderArraySlot1.length; x++){\r\n         for(let z =0; z< array.length; z++){\r\n             for(let x = 0; x < remainderArraySlot1.length; x++){\r\n                 if(array[z] == remainderArraySlot1[x]){\r\n                     for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[z+38*b]==100 && array[z+38*b-1]==100){\r\n                             array[z+38*b] = 0         \r\n                             array[z+38*b-1] = 0\r\n                         }\r\n                         if( array[z-38*b]==100 && array[z-38*b-1]==100){\r\n                             array[z-38*b] = 0         \r\n                             array[z-38*b-1] = 0\r\n                         }\r\n                        }\r\n                 }\r\n             }\r\n         }\r\n    \r\n         //fullfill the slot 3\r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] == 100){\r\n                 if(k3 < remainderArraySlot1.length){\r\n                     const q = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[q]\r\n                         array[x+1] = array[q+1]\r\n                         array[q] = remainderArraySlot1[k3]\r\n                         array[q+1] = remainderArraySlot1[k3]\r\n                 }else{\r\n                     if(remainderArraySlot1[k3] != undefined){\r\n                         insertedDataElective50_Slot2_2.push(remainderArraySlot1[k3])\r\n                     }\r\n                 }\r\n                 k3++   \r\n             }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                 if(k3 < remainderArraySlot1.length){\r\n                     const q = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[q]\r\n                         array[x+1] = array[q+1]\r\n                         array[q] = remainderArraySlot1[k3]\r\n                         array[q+1] = remainderArraySlot1[k3]\r\n                 }else{\r\n                     if(remainderArraySlot1[k3] != undefined){\r\n                         insertedDataElective50_Slot2_2.push(remainderArraySlot1[k3])\r\n                     }\r\n                 }\r\n                 k3++   \r\n             }\r\n         }\r\n    \r\n    \r\n         //console.log(remainderArray);\r\n         for(let x = 0; x< array.length; x++){\r\n                 if(array[x] == 100 && array[x+1] ==100 ){\r\n                     if(k2 < remainderArray.length){\r\n                         const c = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[c]\r\n                         array[x+1] = array[c+1]\r\n                         array[c] = remainderArray[k2]\r\n                         array[c+1] = remainderArray[k2]\r\n                     }\r\n                     try{\r\n                         let slot2 = remainderArray[k2][10]\r\n                         if(slot2 == 1){\r\n                             insertedDataElective50_Slot2_1.push(remainderArray[k2])\r\n                         }\r\n                         if(slot2 == 2){\r\n                             insertedDataElective50_Slot2_2.push(remainderArray[k2])\r\n                         }\r\n                     }catch{}\r\n                 k2++   \r\n             }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                 if(k2 < remainderArray.length){\r\n                     const b = Math.floor(Math.random()*(x+1));\r\n                     array[x] = array[b]\r\n                     array[x+1] = array[b+1]\r\n                     array[b] = remainderArray[k2]\r\n                     array[b+1] = remainderArray[k2]\r\n                 }\r\n                 try{\r\n                     let slot2 = remainderArray[k2][10]\r\n                     if(slot2 == 1){\r\n                         insertedDataElective50_Slot2_1.push(remainderArray[k2])\r\n                     }\r\n                     if(slot2 == 2){\r\n                         insertedDataElective50_Slot2_2.push(remainderArray[k2])\r\n                     }\r\n                 }catch{}\r\n             k2++   \r\n         }\r\n         }\r\n    \r\n         //if there is array in -1, reslot in into the array\r\n         for(let x =0; x<array.length; x++){\r\n             if(array[x] == 0){\r\n                 array[x] = 100\r\n             }\r\n         }\r\n         if(array[-1] != undefined){\r\n             insertedDataElective50_Slot2_1.push(array[-1]);\r\n             // array[-1] = undefined\r\n         }\r\n    \r\n        return array;\r\n    }\r\n    var AntArrInsElective50 = AntAlgoInsertElective50(AntArrElective50);\r\n    \r\n    const checkAmountDataElective50B = (array) => {\r\n     let count = 0\r\n     for(let i = 0; i < array.length; i++){\r\n             if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined){\r\n                 count += 1\r\n             }\r\n     }\r\n     return count\r\n     }\r\n    var checkAmountB = checkAmountDataElective50B(AntArrInsElective50)\r\n    \r\n    \r\n     const slot2Equal1forElective50 = (array) => {\r\n         let k = 0;\r\n         let test2 = []\r\n         //console.log(insertedDataElective50_Slot2_1)\r\n         \r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100){\r\n                 if(k < insertedDataElective50_Slot2_1.length){\r\n                     array[x] = insertedDataElective50_Slot2_1[k]\r\n                 }\r\n             k++   \r\n             }\r\n         }\r\n         //console.log(test2)\r\n         return array;\r\n     }\r\n     slot2Equal1forElective50(AntArrElective50);\r\n    \r\n    \r\n     const slot2Equal2forElective50 = (array) => {\r\n         let k = 0;\r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k < insertedDataElective50_Slot2_2.length){\r\n                     const q = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[q]\r\n                         array[x+1] = array[q+1]\r\n                         array[q] = insertedDataElective50_Slot2_2[k]\r\n                         array[q+1] = insertedDataElective50_Slot2_2[k]\r\n                 }else{\r\n                     if(insertedDataElective50_Slot2_2[k] != undefined){\r\n                         extraDataElective50_Slot2_2.push(insertedDataElective50_Slot2_2[k])\r\n                     }\r\n                 }\r\n                 k++   \r\n             }\r\n         }\r\n    \r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k < extraDataElective50_Slot2_2.length){\r\n                     array[x] = extraDataElective50_Slot2_2[k]\r\n                     array[x+1] = extraDataElective50_Slot2_2[k]\r\n                 }\r\n             k++   \r\n             }\r\n         }\r\n         return array;\r\n    }\r\n     slot2Equal2forElective50(AntArrElective50);\r\n    \r\n    const checkAmountDataElective50 = (array) => {\r\n        let count = 0\r\n        for(let i = 0; i < array.length; i++){\r\n                if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined){\r\n                    count += 1\r\n                }\r\n        }\r\n        return count\r\n    }\r\n    var checkAmountElective50 = checkAmountDataElective50(AntArrInsElective50)\r\n//---------------------------------------------------------------------------------------------------------------------------------------------\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 50 but less than 100\r\n\r\n    //create 1d array for dataset 100\r\n    const array1DElective100 = (data) => {\r\n        var result = []\r\n    \r\n        for(let i = 0; i< data; i++){\r\n            result[i]= 100;\r\n        }\r\n        return result;\r\n    }\r\n    var AntArrElective100 = array1DElective100(DataArrayElective100);\r\n    \r\n    let extraDataElective100_Slot2_2 = []\r\n    let extraData100Elective_Slot2_1 = []\r\n    let insertedDataElective100_Slot2_2 = []\r\n    let insertedDataElective100_Slot2_1= []\r\n    \r\n    const AntAlgoInsertElective100 = (array) => {\r\n        let test = []\r\n        let k = 0;\r\n        let k2 =0\r\n        let k3 =0\r\n    \r\n        let remainderArray = []\r\n        let remainderArraySlot1 = []\r\n    \r\n        let totalRoom = array.length / 38\r\n    \r\n        for(let x=0; x<filterDataElective100.length;x++){\r\n            test.push(filterDataElective100[x]);\r\n        }\r\n    \r\n         for(let i = array.length-1;i>0;i--){\r\n             if(k < test.length){\r\n             let hourMS = test[k][7]\r\n             let slot1 = test[k][9]\r\n             let slot2 = test[k][10]\r\n    \r\n             if(hourMS == 4){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    //slot in slot1 = 2\r\n                    if(array[i-1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        \r\n                        // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                             array[j+38*b] = 0         \r\n                             array[j+38*b-1] = 0\r\n                         }\r\n                         if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                             array[j-38*b] = 0         \r\n                             array[j-38*b-1] = 0\r\n                         }\r\n                        }\r\n                        const z = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[z];\r\n                                array[i-1] = array[z-1];\r\n                                array[i] = test[k];\r\n                                array[i-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100 ){\r\n                                 array[i] = array[z];\r\n                                 array[i+1] = array[z+1];\r\n                                 array[z] = test[k];\r\n                                 array[z+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                         }\r\n                         //revert back to 100\r\n                         for(let x =0; x<array.length; x++){\r\n                             if(array[x] == 0){\r\n                                 array[x] = 100\r\n                             }\r\n                         }\r\n                    }\r\n                    //slot in slot1 = 2\r\n                    else if(array[i+1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        \r\n                         // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                             array[j+38*b] = 0         \r\n                             array[j+38*b-1] = 0\r\n                         }\r\n                         if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                             array[j-38*b] = 0         \r\n                             array[j-38*b-1] = 0\r\n                         }\r\n                        }\r\n                        const v = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[v];\r\n                                array[i-1] = array[v-1];\r\n                                array[v] = test[k];\r\n                                array[v-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100){\r\n                                 array[i] = array[v];\r\n                                 array[i+1] = array[v+1];\r\n                                 array[v] = test[k];\r\n                                 array[v+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                         }\r\n                         //revert back to 100\r\n                         for(let x =0; x<array.length; x++){\r\n                             if(array[x] == 0){\r\n                                 array[x] = 100\r\n                             }\r\n                         }\r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                    \r\n                }\r\n             }\r\n    \r\n             else if(hourMS == 3){\r\n                 const j = Math.floor(Math.random()*(i+1));\r\n                 if(array[i] == 100){\r\n                     if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[i-1] = array[j-1];\r\n                         array[i+1] = array[j+1];\r\n                         array[j] = test[k];\r\n                         array[j-1] = test[k];\r\n                         array[j+1] = test[k];\r\n                         \r\n                     }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[i-1] = array[j-1];\r\n                         array[j] = test[k];\r\n                         array[j-1] = test[k];\r\n                         insertedDataElective100_Slot2_1.push(test[k])\r\n                         \r\n                     }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[i+1] = array[j+1];\r\n                         array[j] = test[k];\r\n                         array[j+1] = test[k];\r\n                         insertedDataElective100_Slot2_1.push(test[k])\r\n                         \r\n                     }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[j] = test[k];\r\n                         remainderArraySlot1.push(test[k])\r\n                         \r\n                     }\r\n                 }else{\r\n                     remainderArray.push(test[k]);\r\n                     \r\n                 }\r\n                 }\r\n    \r\n              else if(hourMS == 2){\r\n                 const j = Math.floor(Math.random()*(i+1));\r\n                 if(array[i] == 100){\r\n                     if(array[i-1] == 100 ){\r\n                         array[i] = array[j];\r\n                         array[i-1] = array[j-1];\r\n                         array[j] = test[k];\r\n                         array[j-1] = test[k];\r\n                         \r\n                     }else if(array[i+1] == 100){\r\n                         array[i] = array[j];\r\n                         array[i+1] = array[j+1];\r\n                         array[j] = test[k];\r\n                         array[j+1] = test[k];\r\n                         \r\n                     }\r\n                     else{\r\n                         remainderArray.push(test[k]);\r\n                         \r\n                     }\r\n                 }else{\r\n                     remainderArray.push(test[k]);\r\n                 }\r\n                 }\r\n             }\r\n             k++  \r\n         }\r\n         //console.log(remainderArraySlot1);\r\n         //for(let x = 0; x < remainderArraySlot1.length; x++){\r\n         for(let z =0; z< array.length; z++){\r\n             for(let x = 0; x < remainderArraySlot1.length; x++){\r\n                 if(array[z] == remainderArraySlot1[x]){\r\n                     for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[z+38*b]==100 && array[z+38*b-1]==100){\r\n                             array[z+38*b] = 0         \r\n                             array[z+38*b-1] = 0\r\n                         }\r\n                         if( array[z-38*b]==100 && array[z-38*b-1]==100){\r\n                             array[z-38*b] = 0         \r\n                             array[z-38*b-1] = 0\r\n                         }\r\n                        }\r\n                 }\r\n             }\r\n         }\r\n    \r\n         //fullfill the slot 3\r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] == 100){\r\n                 if(k3 < remainderArraySlot1.length){\r\n                     const q = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[q]\r\n                         array[x+1] = array[q+1]\r\n                         array[q] = remainderArraySlot1[k3]\r\n                         array[q+1] = remainderArraySlot1[k3]\r\n                 }else{\r\n                     if(remainderArraySlot1[k3] != undefined){\r\n                         insertedDataElective100_Slot2_2.push(remainderArraySlot1[k3])\r\n                     }\r\n                 }\r\n                 k3++   \r\n             }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                 if(k3 < remainderArraySlot1.length){\r\n                     const q = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[q]\r\n                         array[x+1] = array[q+1]\r\n                         array[q] = remainderArraySlot1[k3]\r\n                         array[q+1] = remainderArraySlot1[k3]\r\n                 }else{\r\n                     if(remainderArraySlot1[k3] != undefined){\r\n                         insertedDataElective100_Slot2_2.push(remainderArraySlot1[k3])\r\n                     }\r\n                 }\r\n                 k3++   \r\n             }\r\n         }\r\n    \r\n    \r\n         //console.log(remainderArray);\r\n         for(let x = 0; x< array.length; x++){\r\n                 if(array[x] == 100 && array[x+1] ==100 ){\r\n                     if(k2 < remainderArray.length){\r\n                         const c = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[c]\r\n                         array[x+1] = array[c+1]\r\n                         array[c] = remainderArray[k2]\r\n                         array[c+1] = remainderArray[k2]\r\n                     }\r\n                     try{\r\n                         let slot2 = remainderArray[k2][10]\r\n                         if(slot2 == 1){\r\n                             insertedDataElective100_Slot2_1.push(remainderArray[k2])\r\n                         }\r\n                         if(slot2 == 2){\r\n                             insertedDataElective100_Slot2_2.push(remainderArray[k2])\r\n                         }\r\n                     }catch{}\r\n                 k2++   \r\n             }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                 if(k2 < remainderArray.length){\r\n                     const b = Math.floor(Math.random()*(x+1));\r\n                     array[x] = array[b]\r\n                     array[x+1] = array[b+1]\r\n                     array[b] = remainderArray[k2]\r\n                     array[b+1] = remainderArray[k2]\r\n                 }\r\n                 try{\r\n                     let slot2 = remainderArray[k2][10]\r\n                     if(slot2 == 1){\r\n                         insertedDataElective100_Slot2_1.push(remainderArray[k2])\r\n                     }\r\n                     if(slot2 == 2){\r\n                         insertedDataElective100_Slot2_2.push(remainderArray[k2])\r\n                     }\r\n                 }catch{}\r\n             k2++   \r\n         }\r\n         }\r\n    \r\n         //if there is array in -1, reslot in into the array\r\n         for(let x =0; x<array.length; x++){\r\n             if(array[x] == 0){\r\n                 array[x] = 100\r\n             }\r\n         }\r\n         if(array[-1] != undefined){\r\n             insertedDataElective100_Slot2_1.push(array[-1]);\r\n             // array[-1] = undefined\r\n         }\r\n    \r\n        return array;\r\n    }\r\n    var AntArrInsElective100 = AntAlgoInsertElective100(AntArrElective100);\r\n    \r\n    const checkAmountDataElective100B = (array) => {\r\n     let count = 0\r\n     for(let i = 0; i < array.length; i++){\r\n             if(array[i] != 100 && array[i] !=100 && array[i] != 0 && array[i] != undefined){\r\n                 count += 1\r\n             }\r\n     }\r\n     return count\r\n     }\r\n     var checkAmountB = checkAmountDataElective100B(AntArrInsElective100)\r\n    \r\n    \r\n     const slot2Equal1forElective100 = (array) => {\r\n         let k = 0;\r\n         let test2 = []\r\n         //console.log(insertedDataElective100_Slot2_1)\r\n         \r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100){\r\n                 if(k < insertedDataElective100_Slot2_1.length){\r\n                     array[x] = insertedDataElective100_Slot2_1[k]\r\n                 }\r\n             k++   \r\n             }\r\n         }\r\n         //console.log(test2)\r\n         return array;\r\n     }\r\n     slot2Equal1forElective100(AntArrElective100);\r\n    \r\n    \r\n     const slot2Equal2forElective100 = (array) => {\r\n         let k = 0;\r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k < insertedDataElective100_Slot2_2.length){\r\n                     const q = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[q]\r\n                         array[x+1] = array[q+1]\r\n                         array[q] = insertedDataElective100_Slot2_2[k]\r\n                         array[q+1] = insertedDataElective100_Slot2_2[k]\r\n                 }else{\r\n                     if(insertedDataElective100_Slot2_2[k] != undefined){\r\n                         extraDataElective100_Slot2_2.push(insertedDataElective100_Slot2_2[k])\r\n                     }\r\n                 }\r\n                 k++   \r\n             }\r\n         }\r\n    \r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k < extraDataElective100_Slot2_2.length){\r\n                     array[x] = extraDataElective100_Slot2_2[k]\r\n                     array[x+1] = extraDataElective100_Slot2_2[k]\r\n                 }\r\n             k++   \r\n             }\r\n         }\r\n         return array;\r\n    }\r\n     slot2Equal2forElective100(AntArrElective100);\r\n    \r\n    const checkAmountDataElective100 = (array) => {\r\n        let count = 0\r\n        for(let i = 0; i < array.length; i++){\r\n                if(array[i] != 100 && array[i] !=100 && array[i] != 0 && array[i] != undefined){\r\n                    count += 1\r\n                }\r\n        }\r\n        return count\r\n    }\r\n    var checkAmountElective100 = checkAmountDataElective100(AntArrInsElective100)\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 100 but less than 200\r\n\r\n    //create 1d array for dataset 200\r\n    const array1DElective200 = (data) => {\r\n        var result = []\r\n    \r\n        for(let i = 0; i< data; i++){\r\n            result[i]= 100;\r\n        }\r\n        return result;\r\n    }\r\n    var AntArrElective200 = array1DElective200(DataArrayElective200);\r\n    \r\n    let extraDataElective200_Slot2_2 = []\r\n    let extraData200Elective_Slot2_1 = []\r\n    let insertedDataElective200_Slot2_2 = []\r\n    let insertedDataElective200_Slot2_1= []\r\n    \r\n    const AntAlgoInsertElective200 = (array) => {\r\n        let test = []\r\n        let k = 0;\r\n        let k2 =0\r\n        let k3 =0\r\n    \r\n        let remainderArray = []\r\n        let remainderArraySlot1 = []\r\n    \r\n        let totalRoom = array.length / 38\r\n    \r\n        for(let x=0; x<filterDataElective200.length;x++){\r\n            test.push(filterDataElective200[x]);\r\n        }\r\n    \r\n         for(let i = array.length-1;i>0;i--){\r\n             if(k < test.length){\r\n             let hourMS = test[k][7]\r\n             let slot1 = test[k][9]\r\n             let slot2 = test[k][10]\r\n    \r\n             if(hourMS == 4){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    //slot in slot1 = 2\r\n                    if(array[i-1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        \r\n                        // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                             array[j+38*b] = 0         \r\n                             array[j+38*b-1] = 0\r\n                         }\r\n                         if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                             array[j-38*b] = 0         \r\n                             array[j-38*b-1] = 0\r\n                         }\r\n                        }\r\n                        const z = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[z];\r\n                                array[i-1] = array[z-1];\r\n                                array[i] = test[k];\r\n                                array[i-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100 ){\r\n                                 array[i] = array[z];\r\n                                 array[i+1] = array[z+1];\r\n                                 array[z] = test[k];\r\n                                 array[z+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                         }\r\n                         //revert back to 100\r\n                         for(let x =0; x<array.length; x++){\r\n                             if(array[x] == 0){\r\n                                 array[x] = 100\r\n                             }\r\n                         }\r\n                    }\r\n                    //slot in slot1 = 2\r\n                    else if(array[i+1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        \r\n                         // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                             array[j+38*b] = 0         \r\n                             array[j+38*b-1] = 0\r\n                         }\r\n                         if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                             array[j-38*b] = 0         \r\n                             array[j-38*b-1] = 0\r\n                         }\r\n                        }\r\n                        const v = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[v];\r\n                                array[i-1] = array[v-1];\r\n                                array[v] = test[k];\r\n                                array[v-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100){\r\n                                 array[i] = array[v];\r\n                                 array[i+1] = array[v+1];\r\n                                 array[v] = test[k];\r\n                                 array[v+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                         }\r\n                         //revert back to 100\r\n                         for(let x =0; x<array.length; x++){\r\n                             if(array[x] == 0){\r\n                                 array[x] = 100\r\n                             }\r\n                         }\r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                    \r\n                }\r\n             }\r\n    \r\n             else if(hourMS == 3){\r\n                 const j = Math.floor(Math.random()*(i+1));\r\n                 if(array[i] == 100){\r\n                     if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[i-1] = array[j-1];\r\n                         array[i+1] = array[j+1];\r\n                         array[j] = test[k];\r\n                         array[j-1] = test[k];\r\n                         array[j+1] = test[k];\r\n                         \r\n                     }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[i-1] = array[j-1];\r\n                         array[j] = test[k];\r\n                         array[j-1] = test[k];\r\n                         insertedDataElective200_Slot2_1.push(test[k])\r\n                         \r\n                     }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[i+1] = array[j+1];\r\n                         array[j] = test[k];\r\n                         array[j+1] = test[k];\r\n                         insertedDataElective200_Slot2_1.push(test[k])\r\n                         \r\n                     }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[j] = test[k];\r\n                         remainderArraySlot1.push(test[k])\r\n                         \r\n                     }\r\n                 }else{\r\n                     remainderArray.push(test[k]);\r\n                     \r\n                 }\r\n                 }\r\n    \r\n              else if(hourMS == 2){\r\n                 const j = Math.floor(Math.random()*(i+1));\r\n                 if(array[i] == 100){\r\n                     if(array[i-1] == 100 ){\r\n                         array[i] = array[j];\r\n                         array[i-1] = array[j-1];\r\n                         array[j] = test[k];\r\n                         array[j-1] = test[k];\r\n                         \r\n                     }else if(array[i+1] == 100){\r\n                         array[i] = array[j];\r\n                         array[i+1] = array[j+1];\r\n                         array[j] = test[k];\r\n                         array[j+1] = test[k];\r\n                         \r\n                     }\r\n                     else{\r\n                         remainderArray.push(test[k]);\r\n                         \r\n                     }\r\n                 }else{\r\n                     remainderArray.push(test[k]);\r\n                 }\r\n                 }\r\n             }\r\n             k++  \r\n         }\r\n         //console.log(remainderArraySlot1);\r\n         //for(let x = 0; x < remainderArraySlot1.length; x++){\r\n         for(let z =0; z< array.length; z++){\r\n             for(let x = 0; x < remainderArraySlot1.length; x++){\r\n                 if(array[z] == remainderArraySlot1[x]){\r\n                     for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[z+38*b]==100 && array[z+38*b-1]==100){\r\n                             array[z+38*b] = 0         \r\n                             array[z+38*b-1] = 0\r\n                         }\r\n                         if( array[z-38*b]==100 && array[z-38*b-1]==100){\r\n                             array[z-38*b] = 0         \r\n                             array[z-38*b-1] = 0\r\n                         }\r\n                        }\r\n                 }\r\n             }\r\n         }\r\n    \r\n         //fullfill the slot 3\r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] == 100){\r\n                 if(k3 < remainderArraySlot1.length){\r\n                     const q = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[q]\r\n                         array[x+1] = array[q+1]\r\n                         array[q] = remainderArraySlot1[k3]\r\n                         array[q+1] = remainderArraySlot1[k3]\r\n                 }else{\r\n                     if(remainderArraySlot1[k3] != undefined){\r\n                         insertedDataElective200_Slot2_2.push(remainderArraySlot1[k3])\r\n                     }\r\n                 }\r\n                 k3++   \r\n             }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                 if(k3 < remainderArraySlot1.length){\r\n                     const q = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[q]\r\n                         array[x+1] = array[q+1]\r\n                         array[q] = remainderArraySlot1[k3]\r\n                         array[q+1] = remainderArraySlot1[k3]\r\n                 }else{\r\n                     if(remainderArraySlot1[k3] != undefined){\r\n                         insertedDataElective200_Slot2_2.push(remainderArraySlot1[k3])\r\n                     }\r\n                 }\r\n                 k3++   \r\n             }\r\n         }\r\n    \r\n    \r\n         //console.log(remainderArray);\r\n         for(let x = 0; x< array.length; x++){\r\n                 if(array[x] == 100 && array[x+1] ==100 ){\r\n                     if(k2 < remainderArray.length){\r\n                         const c = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[c]\r\n                         array[x+1] = array[c+1]\r\n                         array[c] = remainderArray[k2]\r\n                         array[c+1] = remainderArray[k2]\r\n                     }\r\n                     try{\r\n                         let slot2 = remainderArray[k2][10]\r\n                         if(slot2 == 1){\r\n                             insertedDataElective200_Slot2_1.push(remainderArray[k2])\r\n                         }\r\n                         if(slot2 == 2){\r\n                             insertedDataElective200_Slot2_2.push(remainderArray[k2])\r\n                         }\r\n                     }catch{}\r\n                 k2++   \r\n             }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                 if(k2 < remainderArray.length){\r\n                     const b = Math.floor(Math.random()*(x+1));\r\n                     array[x] = array[b]\r\n                     array[x+1] = array[b+1]\r\n                     array[b] = remainderArray[k2]\r\n                     array[b+1] = remainderArray[k2]\r\n                 }\r\n                 try{\r\n                     let slot2 = remainderArray[k2][10]\r\n                     if(slot2 == 1){\r\n                         insertedDataElective200_Slot2_1.push(remainderArray[k2])\r\n                     }\r\n                     if(slot2 == 2){\r\n                         insertedDataElective200_Slot2_2.push(remainderArray[k2])\r\n                     }\r\n                 }catch{}\r\n             k2++   \r\n         }\r\n         }\r\n    \r\n         //if there is array in -1, reslot in into the array\r\n         for(let x =0; x<array.length; x++){\r\n             if(array[x] == 0){\r\n                 array[x] = 100\r\n             }\r\n         }\r\n         if(array[-1] != undefined){\r\n             insertedDataElective200_Slot2_1.push(array[-1]);\r\n             // array[-1] = undefined\r\n         }\r\n    \r\n        return array;\r\n    }\r\n    var AntArrInsElective200 = AntAlgoInsertElective200(AntArrElective200);\r\n    \r\n    const checkAmountDataElective200B = (array) => {\r\n     let count = 0\r\n     for(let i = 0; i < array.length; i++){\r\n             if(array[i] != 100 && array[i] !=200 && array[i] != 0 && array[i] != undefined){\r\n                 count += 1\r\n             }\r\n     }\r\n     return count\r\n     }\r\n     var checkAmountB = checkAmountDataElective200B(AntArrInsElective200)\r\n    \r\n    \r\n     const slot2Equal1forElective200 = (array) => {\r\n         let k = 0;\r\n         let test2 = []\r\n         //console.log(insertedDataElective200_Slot2_1)\r\n         \r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100){\r\n                 if(k < insertedDataElective200_Slot2_1.length){\r\n                     array[x] = insertedDataElective200_Slot2_1[k]\r\n                 }\r\n             k++   \r\n             }\r\n         }\r\n         //console.log(test2)\r\n         return array;\r\n     }\r\n     slot2Equal1forElective200(AntArrElective200);\r\n    \r\n    \r\n     const slot2Equal2forElective200 = (array) => {\r\n         let k = 0;\r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k < insertedDataElective200_Slot2_2.length){\r\n                     const q = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[q]\r\n                         array[x+1] = array[q+1]\r\n                         array[q] = insertedDataElective200_Slot2_2[k]\r\n                         array[q+1] = insertedDataElective200_Slot2_2[k]\r\n                 }else{\r\n                     if(insertedDataElective200_Slot2_2[k] != undefined){\r\n                         extraDataElective200_Slot2_2.push(insertedDataElective200_Slot2_2[k])\r\n                     }\r\n                 }\r\n                 k++   \r\n             }\r\n         }\r\n    \r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k < extraDataElective200_Slot2_2.length){\r\n                     array[x] = extraDataElective200_Slot2_2[k]\r\n                     array[x+1] = extraDataElective200_Slot2_2[k]\r\n                 }\r\n             k++   \r\n             }\r\n         }\r\n         return array;\r\n    }\r\n     slot2Equal2forElective200(AntArrElective200);\r\n    \r\n    const checkAmountDataElective200 = (array) => {\r\n        let count = 0\r\n        for(let i = 0; i < array.length; i++){\r\n                if(array[i] != 100 && array[i] !=200 && array[i] != 0 && array[i] != undefined){\r\n                    count += 1\r\n                }\r\n        }\r\n        return count\r\n    }\r\n    var checkAmountElective200 = checkAmountDataElective200(AntArrInsElective200)\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n// Data is more than or equal to 200 \r\n\r\n    //create 1d array for dataset 500\r\n    const array1DElective500 = (data) => {\r\n        var result = []\r\n    \r\n        for(let i = 0; i< data; i++){\r\n            result[i]= 100;\r\n        }\r\n        return result;\r\n    }\r\n    var AntArrElective500 = array1DElective500(DataArrayElective500);\r\n    \r\n    let extraDataElective500_Slot2_2 = []\r\n    let extraData500Elective_Slot2_1 = []\r\n    let insertedDataElective500_Slot2_2 = []\r\n    let insertedDataElective500_Slot2_1= []\r\n    \r\n    const AntAlgoInsertElective500 = (array) => {\r\n        let test = []\r\n        let k = 0;\r\n        let k2 =0\r\n        let k3 =0\r\n    \r\n        let remainderArray = []\r\n        let remainderArraySlot1 = []\r\n    \r\n        let totalRoom = array.length / 38\r\n    \r\n        for(let x=0; x<filterDataElective500.length;x++){\r\n            test.push(filterDataElective500[x]);\r\n        }\r\n    \r\n         for(let i = array.length-1;i>0;i--){\r\n             if(k < test.length){\r\n             let hourMS = test[k][7]\r\n             let slot1 = test[k][9]\r\n             let slot2 = test[k][10]\r\n    \r\n             if(hourMS == 4){\r\n                const j = Math.floor(Math.random()*(i+1));\r\n                if(array[i] == 100){\r\n                    //slot in slot1 = 2\r\n                    if(array[i-1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i-1] = array[j-1];\r\n                        array[j] = test[k];\r\n                        array[j-1] = test[k];\r\n                        \r\n                        // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                             array[j+38*b] = 0         \r\n                             array[j+38*b-1] = 0\r\n                         }\r\n                         if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                             array[j-38*b] = 0         \r\n                             array[j-38*b-1] = 0\r\n                         }\r\n                        }\r\n                        const z = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[z];\r\n                                array[i-1] = array[z-1];\r\n                                array[i] = test[k];\r\n                                array[i-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100 ){\r\n                                 array[i] = array[z];\r\n                                 array[i+1] = array[z+1];\r\n                                 array[z] = test[k];\r\n                                 array[z+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                         }\r\n                         //revert back to 100\r\n                         for(let x =0; x<array.length; x++){\r\n                             if(array[x] == 0){\r\n                                 array[x] = 100\r\n                             }\r\n                         }\r\n                    }\r\n                    //slot in slot1 = 2\r\n                    else if(array[i+1] == 100 ){\r\n                        array[i] = array[j];\r\n                        array[i+1] = array[j+1];\r\n                        array[j] = test[k];\r\n                        array[j+1] = test[k];\r\n                        \r\n                         // make stack become 0\r\n                        for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[j+38*b]==100 && array[j+38*b-1]==100){\r\n                             array[j+38*b] = 0         \r\n                             array[j+38*b-1] = 0\r\n                         }\r\n                         if( array[j-38*b]==100 && array[j-38*b-1]==100){\r\n                             array[j-38*b] = 0         \r\n                             array[j-38*b-1] = 0\r\n                         }\r\n                        }\r\n                        const v = Math.floor(Math.random()*(i+1));\r\n                        if(array[i] == 100){\r\n                            //slot in slot1 = 2\r\n                            if(array[i-1] == 100 ){\r\n                                array[i] = array[v];\r\n                                array[i-1] = array[v-1];\r\n                                array[v] = test[k];\r\n                                array[v-1] = test[k];\r\n                            }\r\n                            else if(array[i+1] == 100){\r\n                                 array[i] = array[v];\r\n                                 array[i+1] = array[v+1];\r\n                                 array[v] = test[k];\r\n                                 array[v+1] = test[k];\r\n                            }\r\n                            else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                             }\r\n                         }\r\n                         else{\r\n                             remainderArraySlot1.push(test[k]);\r\n                         }\r\n                         //revert back to 100\r\n                         for(let x =0; x<array.length; x++){\r\n                             if(array[x] == 0){\r\n                                 array[x] = 100\r\n                             }\r\n                         }\r\n                    }\r\n                    else{\r\n                        remainderArray.push(test[k]);\r\n                    }\r\n                }else{\r\n                    remainderArray.push(test[k]);\r\n                    \r\n                }\r\n             }\r\n    \r\n             else if(hourMS == 3){\r\n                 const j = Math.floor(Math.random()*(i+1));\r\n                 if(array[i] == 100){\r\n                     if(array[i-1] == 100 && array[i+1]==100){// slot 3 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[i-1] = array[j-1];\r\n                         array[i+1] = array[j+1];\r\n                         array[j] = test[k];\r\n                         array[j-1] = test[k];\r\n                         array[j+1] = test[k];\r\n                         \r\n                     }else if(array[i-1] == 100){//slot 2 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[i-1] = array[j-1];\r\n                         array[j] = test[k];\r\n                         array[j-1] = test[k];\r\n                         insertedDataElective500_Slot2_1.push(test[k])\r\n                         \r\n                     }else if(array[i+1] == 100){//slot 2 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[i+1] = array[j+1];\r\n                         array[j] = test[k];\r\n                         array[j+1] = test[k];\r\n                         insertedDataElective500_Slot2_1.push(test[k])\r\n                         \r\n                     }else if(array[i] == 100 ){//slot 1 hours in 1 go\r\n                         array[i] = array[j];\r\n                         array[j] = test[k];\r\n                         remainderArraySlot1.push(test[k])\r\n                         \r\n                     }\r\n                 }else{\r\n                     remainderArray.push(test[k]);\r\n                     \r\n                 }\r\n                 }\r\n    \r\n              else if(hourMS == 2){\r\n                 const j = Math.floor(Math.random()*(i+1));\r\n                 if(array[i] == 100){\r\n                     if(array[i-1] == 100 ){\r\n                         array[i] = array[j];\r\n                         array[i-1] = array[j-1];\r\n                         array[j] = test[k];\r\n                         array[j-1] = test[k];\r\n                         \r\n                     }else if(array[i+1] == 100){\r\n                         array[i] = array[j];\r\n                         array[i+1] = array[j+1];\r\n                         array[j] = test[k];\r\n                         array[j+1] = test[k];\r\n                         \r\n                     }\r\n                     else{\r\n                         remainderArray.push(test[k]);\r\n                         \r\n                     }\r\n                 }else{\r\n                     remainderArray.push(test[k]);\r\n                 }\r\n                 }\r\n             }\r\n             k++  \r\n         }\r\n         //console.log(remainderArraySlot1);\r\n         //for(let x = 0; x < remainderArraySlot1.length; x++){\r\n         for(let z =0; z< array.length; z++){\r\n             for(let x = 0; x < remainderArraySlot1.length; x++){\r\n                 if(array[z] == remainderArraySlot1[x]){\r\n                     for(let b = 1; b <= totalRoom; b++){\r\n                         if( array[z+38*b]==100 && array[z+38*b-1]==100){\r\n                             array[z+38*b] = 0         \r\n                             array[z+38*b-1] = 0\r\n                         }\r\n                         if( array[z-38*b]==100 && array[z-38*b-1]==100){\r\n                             array[z-38*b] = 0         \r\n                             array[z-38*b-1] = 0\r\n                         }\r\n                        }\r\n                 }\r\n             }\r\n         }\r\n    \r\n         //fullfill the slot 3\r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] == 100){\r\n                 if(k3 < remainderArraySlot1.length){\r\n                     const q = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[q]\r\n                         array[x+1] = array[q+1]\r\n                         array[q] = remainderArraySlot1[k3]\r\n                         array[q+1] = remainderArraySlot1[k3]\r\n                 }else{\r\n                     if(remainderArraySlot1[k3] != undefined){\r\n                         insertedDataElective500_Slot2_2.push(remainderArraySlot1[k3])\r\n                     }\r\n                 }\r\n                 k3++   \r\n             }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                 if(k3 < remainderArraySlot1.length){\r\n                     const q = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[q]\r\n                         array[x+1] = array[q+1]\r\n                         array[q] = remainderArraySlot1[k3]\r\n                         array[q+1] = remainderArraySlot1[k3]\r\n                 }else{\r\n                     if(remainderArraySlot1[k3] != undefined){\r\n                         insertedDataElective500_Slot2_2.push(remainderArraySlot1[k3])\r\n                     }\r\n                 }\r\n                 k3++   \r\n             }\r\n         }\r\n    \r\n    \r\n         //console.log(remainderArray);\r\n         for(let x = 0; x< array.length; x++){\r\n                 if(array[x] == 100 && array[x+1] ==100 ){\r\n                     if(k2 < remainderArray.length){\r\n                         const c = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[c]\r\n                         array[x+1] = array[c+1]\r\n                         array[c] = remainderArray[k2]\r\n                         array[c+1] = remainderArray[k2]\r\n                     }\r\n                     try{\r\n                         let slot2 = remainderArray[k2][10]\r\n                         if(slot2 == 1){\r\n                             insertedDataElective500_Slot2_1.push(remainderArray[k2])\r\n                         }\r\n                         if(slot2 == 2){\r\n                             insertedDataElective500_Slot2_2.push(remainderArray[k2])\r\n                         }\r\n                     }catch{}\r\n                 k2++   \r\n             }else if(array[x] == 100 && array[x+1] ==100 ){\r\n                 if(k2 < remainderArray.length){\r\n                     const b = Math.floor(Math.random()*(x+1));\r\n                     array[x] = array[b]\r\n                     array[x+1] = array[b+1]\r\n                     array[b] = remainderArray[k2]\r\n                     array[b+1] = remainderArray[k2]\r\n                 }\r\n                 try{\r\n                     let slot2 = remainderArray[k2][10]\r\n                     if(slot2 == 1){\r\n                         insertedDataElective500_Slot2_1.push(remainderArray[k2])\r\n                     }\r\n                     if(slot2 == 2){\r\n                         insertedDataElective500_Slot2_2.push(remainderArray[k2])\r\n                     }\r\n                 }catch{}\r\n             k2++   \r\n         }\r\n         }\r\n    \r\n         //if there is array in -1, reslot in into the array\r\n         for(let x =0; x<array.length; x++){\r\n             if(array[x] == 0){\r\n                 array[x] = 100\r\n             }\r\n         }\r\n         if(array[-1] != undefined){\r\n             insertedDataElective500_Slot2_1.push(array[-1]);\r\n             // array[-1] = undefined\r\n         }\r\n    \r\n        return array;\r\n    }\r\n    var AntArrInsElective500 = AntAlgoInsertElective500(AntArrElective500);\r\n    \r\n    const checkAmountDataElective500B = (array) => {\r\n     let count = 0\r\n     for(let i = 0; i < array.length; i++){\r\n             if(array[i] != 100 && array[i] !=500 && array[i] != 0 && array[i] != undefined){\r\n                 count += 1\r\n             }\r\n     }\r\n     return count\r\n     }\r\n     var checkAmountB = checkAmountDataElective500B(AntArrInsElective500)\r\n    \r\n    \r\n     const slot2Equal1forElective500 = (array) => {\r\n         let k = 0;\r\n         let test2 = []\r\n         //console.log(insertedDataElective500_Slot2_1)\r\n         \r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100){\r\n                 if(k < insertedDataElective500_Slot2_1.length){\r\n                     array[x] = insertedDataElective500_Slot2_1[k]\r\n                 }\r\n             k++   \r\n             }\r\n         }\r\n         //console.log(test2)\r\n         return array;\r\n     }\r\n     slot2Equal1forElective500(AntArrElective500);\r\n    \r\n    \r\n     const slot2Equal2forElective500 = (array) => {\r\n         let k = 0;\r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k < insertedDataElective500_Slot2_2.length){\r\n                     const q = Math.floor(Math.random()*(x+1));\r\n                         array[x] = array[q]\r\n                         array[x+1] = array[q+1]\r\n                         array[q] = insertedDataElective500_Slot2_2[k]\r\n                         array[q+1] = insertedDataElective500_Slot2_2[k]\r\n                 }else{\r\n                     if(insertedDataElective500_Slot2_2[k] != undefined){\r\n                         extraDataElective500_Slot2_2.push(insertedDataElective500_Slot2_2[k])\r\n                     }\r\n                 }\r\n                 k++   \r\n             }\r\n         }\r\n    \r\n         for(let x = 0; x< array.length; x++){\r\n             if(array[x] == 100 && array[x+1] ==100){\r\n                 if(k < extraDataElective500_Slot2_2.length){\r\n                     array[x] = extraDataElective500_Slot2_2[k]\r\n                     array[x+1] = extraDataElective500_Slot2_2[k]\r\n                 }\r\n             k++   \r\n             }\r\n         }\r\n         return array;\r\n    }\r\n     slot2Equal2forElective500(AntArrElective500);\r\n    \r\n    const checkAmountDataElective500 = (array) => {\r\n        let count = 0\r\n        for(let i = 0; i < array.length; i++){\r\n                if(array[i] != 100 && array[i] !=500 && array[i] != 0 && array[i] != undefined){\r\n                    count += 1\r\n                }\r\n        }\r\n        return count\r\n    }\r\n    var checkAmountElective500 = checkAmountDataElective500(AntArrInsElective500)\r\n\r\n\r\n//---------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n//---------------------------------------------------------------------------------------------------------------------------------------------\r\n//----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nlet combineData = []\r\nlet combineElectiveData = []\r\n\r\n//Combine all dataset\r\nconst combine = (data1,data2,data3,data4,data5,data6,data7,data8)  => {\r\n    for(let i = 0; i < data1.length; i++){\r\n        combineData.push(data1[i])\r\n    }\r\n    for(let i = 0; i < data2.length; i++){\r\n        combineData.push(data2[i])\r\n    }\r\n    for(let i = 0; i < data3.length; i++){\r\n        combineData.push(data3[i])\r\n    }\r\n    for(let i = 0; i < data4.length; i++){\r\n        combineData.push(data4[i])\r\n    }\r\n    // for(let i = 0; i < data5.length; i++){\r\n    //     combineData.push(data5[i])\r\n    // }\r\n    // for(let i = 0; i < data6.length; i++){\r\n    //     combineData.push(data6[i])\r\n    // }\r\n    // for(let i = 0; i < data7.length; i++){\r\n    //     combineData.push(data7[i])\r\n    // }\r\n    // for(let i = 0; i < data8.length; i++){\r\n    //     combineData.push(data8[i])\r\n    // }\r\n    return combineData;\r\n}\r\nlet dataCombine = combine(AntArr50,AntArr100,AntArr200,AntArr500)\r\n//let dataCombine = combine(AntArr50,AntArr100,AntArr200,AntArr500,AntArrElective50,AntArrElective100,AntArrElective200,AntArrElective500)\r\n\r\n//combine elective data\r\nconst combineElective = (data1,data2,data3,data4)  => {\r\n    for(let i = 0; i < data1.length; i++){\r\n        combineElectiveData.push(data1[i])\r\n    }\r\n    for(let i = 0; i < data2.length; i++){\r\n        combineElectiveData.push(data2[i])\r\n    }\r\n    for(let i = 0; i < data3.length; i++){\r\n        combineElectiveData.push(data3[i])\r\n    }\r\n    for(let i = 0; i < data4.length; i++){\r\n        combineElectiveData.push(data4[i])\r\n    }\r\n    return combineElectiveData;\r\n}\r\nlet dataCombineElective = combineElective(AntArrElective50,AntArrElective100,AntArrElective200,AntArrElective500)\r\n//console.log(dataCombine)\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n// Hard Constraint \r\n// H1: No student attend more than one class/ event at the same time\r\n// H2: The room is large enough to accomodate all of the student in attendace while also meeting the requirement \r\n// H3: At any given time, each room can onle have one course booked\r\n// H4: No student attend class during 12:00 pm -2:00 due to solat jumaat\r\n// H5: One teacher can only teach one class at one time.\r\n\r\n//Check for the H1 violation: same group attend more than 1 class at 1 time\r\n\r\nconst check1Group = (array) => {\r\n   let count =0\r\n   let indexArray = 0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       indexArray = (x * 37)\r\n   }\r\n   for(let i = 0; i<array.length ; i++){\r\n       try{\r\n           for(let x= 1 ; x <= totalRoom ; x++){\r\n               indexArray = (x * 37)\r\n               if(array[i+indexArray] != 100 && array[i+indexArray] != undefined ){\r\n                   try{\r\n                       if(array[i][6] == array[i+indexArray][6] && array[i+1][6] == array[i+indexArray+1][6] && array[i][5] == array[i+indexArray][5] && array[i+1][5] == array[i+indexArray+1][5]){\r\n                            try{\r\n                                //console.log(array[i])\r\n                                //console.log(array[i+indexArray])\r\n                                count +=1\r\n                            }catch{}\r\n                       }\r\n                   }catch{}\r\n               }   \r\n           }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n}\r\n\r\nvar checkH1_ALL = check1Group(dataCombine)\r\nvar checkH1_ALLElective = check1Group(dataCombineElective)\r\n\r\n\r\n\r\n\r\n//Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\r\n\r\nconst checkRoomQuota = (array) => {\r\n   let count = 0\r\n   return count \r\n}\r\nvar checkH2_ALL = checkRoomQuota(dataCombine)\r\nvar checkH2_ALLElective = checkRoomQuota(dataCombineElective)\r\n\r\n\r\n//Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\r\nconst checkSolatJummat = (array) => {\r\n   let count = 0\r\n   return count \r\n}\r\nvar checkH4_ALL = checkSolatJummat(dataCombine)\r\nvar checkH4_ALLElective = checkSolatJummat(dataCombineElective)\r\n\r\n//Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\r\n\r\nconst check1Teacher = (array) => {\r\n   let count =0\r\n   let indexArray = 0\r\n   let totalRoom = array.length / 38\r\n//    for(let i = 0; i< notDuplicatesLecturer.length; i++){\r\n//        for(let j =0; j<array.length; j++){\r\n//            if(notDuplicatesLecturer[i] == array[j][5]){\r\n//                 console.log(j);\r\n//            }\r\n//        }\r\n//    }\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       indexArray = (x * 38)\r\n   }\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n    indexArray = (x * 38)\r\n       try{\r\n        for(let i = 1; i<array.length ; i++){\r\n               if(array[i+indexArray] != 100 && array[i+indexArray] != undefined ){\r\n                   try{\r\n                       if(array[i][5] == array[i+indexArray][5] || array[i+1][5] == array[i+indexArray+1][5] ){\r\n                           count +=1\r\n                        //    console.log(i)\r\n                        //    console.log(i+indexArray)\r\n                        //    console.log(array[i+indexArray][5])\r\n                        //    console.log(array[i][5])\r\n                       }else if(array[i][5] == array[i+indexArray][5] && array[i-1][5] == array[i+indexArray-1][5] ){\r\n                        count +=1\r\n                        // console.log(i)\r\n                        // console.log(array[i][5])\r\n                       }\r\n                   }catch{}\r\n               }    \r\n           }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n}\r\nvar checkH5_ALL = check1Teacher(dataCombine)\r\nvar checkH5_ALLElective = check1Group(dataCombineElective)\r\n\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n// Soft Constraint \r\n// S1: A student has a class schedule toward the end of the day\r\n// S2: A student have more than two class in a row\r\n\r\n\r\n//Check for the S1 violation: student have class at the end of the day\r\nconst checkEndOfClass = (array) => {\r\n   let count =0\r\n   let totalRoom = array.length / 38\r\n   for(let x= 1 ; x <= totalRoom ; x++){\r\n       let indexArray = (x * 37)\r\n       if(array[indexArray] != 100 ){\r\n           count = 1\r\n       }\r\n   }\r\n   return count\r\n\r\n}\r\nvar checkS1_50 = checkEndOfClass(AntArr50)\r\nvar checkS1_100 = checkEndOfClass(AntArr100)\r\nvar checkS1_200 = checkEndOfClass(AntArr200)\r\nvar checkS1_500 = checkEndOfClass(AntArr500)\r\nvar checkS1_Elective50 = checkEndOfClass(AntArrElective50)\r\nvar checkS1_Elective100 = checkEndOfClass(AntArrElective100)\r\nvar checkS1_Elective200 = checkEndOfClass(AntArrElective200)\r\nvar checkS1_Elective500 = checkEndOfClass(AntArrElective500)\r\n\r\n\r\n//Check for the S2 violation: teacher have 2 class in a row\r\n\r\nconst check2ClassInARow = (array) => {\r\n   let count =0\r\n   for(let i = 0; i < array.length; i++){\r\n       try{\r\n        if(array[i][5] != undefined && array[i+3][5] != undefined && array[i+2][5] != undefined && array[i+4][5] != undefined){\r\n            if(array[i][5] == array[i+3][5] && array[i+2][5] == array[i+4][5]){\r\n                // console.log(array[i][5])\r\n                // console.log(array[i+3][5])\r\n                // console.log(array[i+2][5])\r\n                // console.log(array[i+4][5])\r\n                count = 1\r\n            }\r\n       }\r\n       }catch{}\r\n   }\r\n   return count\r\n\r\n}\r\nvar checkS2_50 = check2ClassInARow(AntArr50)\r\nvar checkS2_100 = check2ClassInARow(AntArr100)\r\nvar checkS2_200 = check2ClassInARow(AntArr200)\r\nvar checkS2_500 = check2ClassInARow(AntArr500)\r\nvar checkS2_Elective50 = check2ClassInARow(AntArrElective50)\r\nvar checkS2_Elective100 = check2ClassInARow(AntArrElective100)\r\nvar checkS2_Elective200 = check2ClassInARow(AntArrElective200)\r\nvar checkS2_Elective500 = check2ClassInARow(AntArrElective500)\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n//Check total Hard Constraint\r\n\r\nconst checkTotalHardContraint = () => {\r\n   let count =0\r\n   let totalH1 = checkH1_ALL\r\n   let totalH2 = checkH2_ALL\r\n   let totalH4 = checkH4_ALL\r\n   let totalH5 = checkH5_ALL\r\n\r\n   let totalH1_Elective = checkH1_ALLElective\r\n   let totalH2_Elective = checkH2_ALLElective\r\n   let totalH4_Elective = checkH4_ALLElective\r\n   let totalH5_Elective = checkH5_ALLElective\r\n   let totalHC = totalH1 + totalH2 + totalH4 + totalH5 + totalH1_Elective + totalH2_Elective + totalH4_Elective + totalH5_Elective\r\n   //let totalHC = totalH1 + totalH2 + totalH4 + totalH5 \r\n\r\n   if( totalHC != 0){\r\n       count +=1\r\n   }   \r\n\r\n   return count\r\n}\r\nvar checkTotalHardContraints = checkTotalHardContraint()\r\n//console.log(\"Total Hard Constraint: \"+checkTotalHardContraints)\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nconst checkTotalSoftContraint = () => {\r\n    let count =0\r\n    let totalS1 = checkS1_50 + checkS1_100 + checkS1_200 + checkS1_500 + checkS1_Elective50 + checkS1_Elective100 + checkS1_Elective200 + checkS1_Elective500\r\n    let totalS2 = checkS2_50 + checkS2_100 + checkS2_200 + checkS2_500 + checkS2_Elective50 + checkS2_Elective100 + checkS2_Elective200 + checkS2_Elective500\r\n    \r\n    if(totalS1 != 0){\r\n        count +=1\r\n    }\r\n    if(totalS2 != 0){\r\n        count +=1\r\n    }   \r\n    return count\r\n}\r\nvar checkTotalSoftContraints = checkTotalSoftContraint()\r\n//console.log(\"Total Soft Constraint: \"+checkTotalSoftContraints)\r\n//----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nconst change100ToEmpty = (data) => {\r\n    for(let i = 0; i< data.length; i++){\r\n        if(data[i] == 100){\r\n            data[i] = [];\r\n        }\r\n    }\r\n    return data;\r\n}\r\nlet finalData = change100ToEmpty(combineData)\r\n\r\nconst change100ToEmptyElective = (data) => {\r\n    for(let i = 0; i< data.length; i++){\r\n        if(data[i] == 100){\r\n            data[i] = [];\r\n        }\r\n    }\r\n    return data;\r\n}\r\nlet finalDataElective = change100ToEmptyElective(combineElectiveData)\r\n\r\n\r\nconst checkMissingData = (data50,data100,data200,data500,dataE50,dataE100,dataE200,dataE500) => {\r\n    let countData = []\r\n    for(let i = 0; i< courseData[0].length;i++){\r\n        for(let j = 0; j <courseData[0][i][7]; j++){\r\n            countData.push(courseData[0][i]);\r\n        }\r\n    }\r\n\r\n    let totalGenerateScheduleData = data50 + data100 + data200 + data500 + dataE50 + dataE100 + dataE200 + dataE500\r\n\r\n    if(countData.length == totalGenerateScheduleData){\r\n  \r\n    }else{\r\n\r\n    }\r\n}\r\ncheckMissingData(checkAmount50,checkAmount100,checkAmount200,checkAmount500,checkAmountElective50,checkAmountElective100,checkAmountElective200,checkAmountElective500)\r\n\r\n\r\ncheckTotalHardContraintsAll = checkTotalHardContraints\r\ncheckTotalSoftContraintsAll = checkTotalSoftContraints\r\nfinalDataAll.push(finalData)\r\nfinalDataAllElective.push(finalDataElective)\r\nreturn {checkTotalHardContraints,checkTotalSoftContraints,finalData,finalDataAllElective}\r\n}\r\nlet antSystemAlgo = antSystem();\r\n// -------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nlet trigger = 0\r\n\r\nconst iteration = () => {\r\n        antSystem()\r\n        let globalBestHS = checkTotalHardContraintsAll \r\n        let globalBestSS = checkTotalSoftContraintsAll\r\n        let globalBestScehdule = finalDataAll[0]\r\n        let globalBestScehduleElective = finalDataAllElective[0]\r\n    for(let i= 1; i <= 500; i++){\r\n        antSystem()\r\n        let localBestHS = checkTotalHardContraintsAll \r\n        let localBestSS = checkTotalSoftContraintsAll\r\n        let localBestScehdule = finalDataAll[0]\r\n        let localBestScehduleElective = finalDataAllElective[0]\r\n            console.log(\"iteraion: \" + i)\r\n            if(globalBestHS > localBestHS ){\r\n                globalBestHS = localBestHS\r\n                globalBestSS = localBestSS\r\n                globalBestScehdule = localBestScehdule\r\n                globalBestScehduleElective = localBestScehduleElective\r\n            }\r\n            if(localBestHS == 0){\r\n                console.log(\"iteraion: \" + i)\r\n                console.log(\"workable solution is found\")\r\n                globalBestHS = localBestHS\r\n                globalBestSS = localBestSS\r\n                globalBestScehdule = localBestScehdule\r\n                globalBestScehduleElective = localBestScehduleElective\r\n                console.log(\"Workable Gloabal best HS: \"+globalBestHS)\r\n                console.log(\"Workable Gloabal best SS: \" +globalBestSS)\r\n                //console.log(finalDataAll[0])\r\n                trigger = 1\r\n                return [finalDataAll[0], finalDataAllElective[0]]\r\n            }\r\n            else if(localBestHS == 0 && localBestSS == 0){\r\n                console.log(\"iteraion: \" + i)\r\n                console.log(\"perfect solution is found\")\r\n                globalBestHS = localBestHS\r\n                globalBestSS = localBestSS\r\n                globalBestScehdule = localBestScehdule\r\n                console.log(\"Perfect Gloabal best HS: \"+globalBestHS)\r\n                console.log(\"Perfect Gloabal best SS: \" +globalBestSS)\r\n                console.log(finalDataAll[0])\r\n                trigger = 1\r\n                return [finalDataAll[0], finalDataAllElective[0]]\r\n            }\r\n    }\r\n    return [finalDataAll[0], finalDataAllElective[0]]\r\n}\r\nlet interations = iteration()\r\n\r\nlet presentableData = []\r\nlet presentableDataElective = []\r\n\r\nif(trigger == 1){\r\n//shot course code, course name and lecturer    \r\nconst changeToPresentationData = (data) => {\r\n    for(let i= 0; i <= data[0].length; i++){\r\n        try {\r\n            presentableData.push([data[0][i][1],data[0][i][2],data[0][i][5]])\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n    for(let i= 0; i <= data[1].length; i++){\r\n        try {\r\n            presentableDataElective.push([data[1][i][1],data[1][i][2],data[1][i][5]])\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n}\r\nchangeToPresentationData(interations)\r\n\r\n\r\nlet allRoomName = []\r\nfor(let i = 0; i < roomData[0].length; i++){\r\n    allRoomName.push(roomData[0][i][0])\r\n}\r\nallRoomName.unshift(\"Room\");\r\nif(allRoomName.pop() == undefined){\r\n}\r\n\r\n\r\nlet weekday = ['Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday','Monday',\r\n'Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday','Tuesday',\r\n'Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday','Thursday',\r\n'Friday','Friday','Friday','Friday','Friday','Friday','Friday','Friday']\r\n\r\nlet wed = ['Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday']\r\n\r\n\r\nconst create2dArray = (weekdayArray,partDay,arrayAll, partAll) => {\r\n    var tmp = [];\r\n\r\n    for(var i = 0; i < weekdayArray.length; i += partDay) {\r\n        tmp.push(weekdayArray.slice(i, i + partDay));\r\n    }\r\n    for(var i = 0; i < arrayAll.length; i += partAll) {\r\n        tmp.push(arrayAll.slice(i, i + partAll));\r\n    }\r\n    return tmp;\r\n}\r\nlet dataset = create2dArray(weekday,38,presentableData,38)\r\nconsole.log(dataset);\r\n\r\nconst create2dArrayElective = (weekdayArray,partDay,arrayAll, partAll) => {\r\n    var tmp = [];\r\n\r\n    for(var i = 0; i < weekdayArray.length; i += partDay) {\r\n        tmp.push(weekdayArray.slice(i, i + partDay));\r\n    }\r\n    for(var i = 0; i < arrayAll.length; i += partAll) {\r\n        tmp.push(arrayAll.slice(i, i + partAll));\r\n    }\r\n    return tmp;\r\n}\r\nlet datasetElective = create2dArrayElective(wed,10,presentableDataElective,10);\r\nconsole.log(datasetElective)\r\n\r\n//let compileDataset = dataset.concat(datasetElective);\r\n//console.log(dataset)\r\n\r\nconst insertRoomName = (roomData,array) => {\r\n    for(let i= 0; i<array.length; i++){\r\n        array[i].unshift(roomData[i]);\r\n    }\r\n    return array;\r\n}\r\n\r\ninsertRoomName(allRoomName,dataset)\r\n\r\nconst insertRoomNameElective = (roomData,array) => {\r\n    for(let i= 0; i<array.length; i++){\r\n        array[i].unshift(roomData[i]);\r\n    }\r\n    return array;\r\n}\r\n\r\ninsertRoomName(allRoomName,datasetElective)\r\n\r\n\r\n/** Convert a 2D array into a CSV string\r\n */\r\n  function arrayToCsv(data){\r\n    //console.log(data)\r\n    return data.map(row =>\r\n      row\r\n      .map(String)  // convert every value to String\r\n      .map(v => v.replaceAll('\"', '\"\"'))  // escape double colons\r\n      .map(v => `\"${v}\"`)  // quote it\r\n      .join(',')  // comma-separated\r\n    ).join('\\r\\n');  // rows starting on new lines\r\n  }\r\n\r\nlet csv = arrayToCsv(\r\n    dataset\r\n);\r\n\r\nfunction downloadBlob(content, filename, contentType) {\r\n    // Create a blob\r\n    var blob = new Blob([content], { type: contentType });\r\n    var url = URL.createObjectURL(blob);\r\n  \r\n    // Create a link to download it\r\n    var pom = document.createElement('a');\r\n    pom.href = url;\r\n    pom.setAttribute('download', filename);\r\n    pom.click();\r\n  }\r\n\r\n  /** Convert a 2D array into a CSV string\r\n   * elective\r\n */\r\n   function arrayToCsvElective(data){\r\n    //console.log(data)\r\n    return data.map(row =>\r\n      row\r\n      .map(String)  // convert every value to String\r\n      .map(v => v.replaceAll('\"', '\"\"'))  // escape double colons\r\n      .map(v => `\"${v}\"`)  // quote it\r\n      .join(',')  // comma-separated\r\n    ).join('\\r\\n');  // rows starting on new lines\r\n  }\r\n\r\nlet csvElective = arrayToCsvElective(\r\n    datasetElective\r\n);\r\n\r\nfunction downloadBlobElective(content, filename, contentType) {\r\n    // Create a blob\r\n    var blob = new Blob([content], { type: contentType });\r\n    var url = URL.createObjectURL(blob);\r\n  \r\n    // Create a link to download it\r\n    var pom = document.createElement('a');\r\n    pom.href = url;\r\n    pom.setAttribute('download', filename);\r\n    pom.click();\r\n  }\r\n\r\n  downloadBlob(csv, 'ModifiedAntSystem_GeneratedSchedule.csv', 'text/csv;charset=utf-8;')\r\n  downloadBlobElective(csvElective, 'ModifiedAntSystemElective_GeneratedSchedule.csv', 'text/csv;charset=utf-8;')\r\n}else{\r\n    alert(\"no workable solution found, please refersh until get workable solution\")\r\n}\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n        }\r\n    return(\r\n        <React.Fragment>\r\n            <h1>\r\n                Generate Schedule Page\r\n            </h1>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default ArraySchedule;\r\n\r\n\r\n//result[i][j]=Course.splice(Math.floor(Math.random()* Course.length),1)[0] // create random placement of Course Value\r\n//const Schedule = new Array(10).fill(Array(5).fill(null));\r\n//console.log(Schedule);\r\n// const Course = [['TE1',4],['TE1',4],['TE1',4],['TE1',3],['TE1',4],['TE1',2],['TE1',4],['TE1',4],['TE1',4],['TE1',3]];\r\n//const Course = [['TE1',2],['TE2',2],['TE3',3],['TE4',4],['TE5',3],['TE6',4],['TE7',4],['TE8',2],['TE9',4]];\r\n//const Course = ['TE1','TE2','TE3','TE4','TE5','TE6','TE7','TE8','TE9'];"]},"metadata":{},"sourceType":"module"}