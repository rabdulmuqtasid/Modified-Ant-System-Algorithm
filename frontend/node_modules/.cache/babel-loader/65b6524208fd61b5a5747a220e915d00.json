{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acit\\\\Desktop\\\\FYP Code\\\\FYP Code\\\\frontend\\\\src\\\\components\\\\GetDataset\\\\getDataset.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { CSVLink } from \"react-csv\";\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\n\nconst Dataset = props => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedFile, setLoaadedFile] = useState(false);\n  console.log(\"props dataset:\" + props.test);\n  let SaveData = {\n    test\n  }; // useEffect(()=>{\n  //     const sendRequest = async () =>{\n  //         setIsLoading(true);\n  //         try{\n  //         const response = await fetch('http://localhost:5000/api/uploadFile/1');\n  //         const responsedata = await response.json();\n  //         console.log(responsedata);\n  //         if (!response.ok){\n  //             throw new Error(responsedata.message);\n  //         }\n  //         setLoaadedFile(responsedata);\n  //         setIsLoading(true);\n  //         }catch(err){\n  //             console.log(err.message);\n  //         }\n  //         setIsLoading(false);\n  //     };\n  //     sendRequest();\n  // }, []);\n  //<div className=\"upload-file\">{props.test}</div>\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 51\n    }\n  })));\n};\n\nexport default Dataset;","map":{"version":3,"sources":["C:/Users/acit/Desktop/FYP Code/FYP Code/frontend/src/components/GetDataset/getDataset.js"],"names":["React","useEffect","useState","CSVLink","LoadingSpinner","Dataset","props","isLoading","setIsLoading","loadedFile","setLoaadedFile","console","log","test","SaveData"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAyC,OAAzC;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAOC,cAAP,MAA2B,yBAA3B;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,UAAD,EAAaC,cAAb,IAA+BR,QAAQ,CAAC,KAAD,CAA7C;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAkBN,KAAK,CAACO,IAApC;AACA,MAAIC,QAAQ,GAAG;AAACD,IAAAA;AAAD,GAAf,CALuB,CAMvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,SAAS,iBAAI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAwB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CADlB,CADJ;AAKH,CAhCD;;AAkCA,eAAeF,OAAf","sourcesContent":["import React,{ useEffect,useState } from \"react\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\r\n\r\nconst Dataset = (props) => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [loadedFile, setLoaadedFile] = useState(false);\r\n    console.log(\"props dataset:\"+ props.test)\r\n    let SaveData = {test};\r\n    // useEffect(()=>{\r\n    //     const sendRequest = async () =>{\r\n    //         setIsLoading(true);\r\n    //         try{\r\n    //         const response = await fetch('http://localhost:5000/api/uploadFile/1');\r\n    //         const responsedata = await response.json();\r\n    //         console.log(responsedata);\r\n    //         if (!response.ok){\r\n    //             throw new Error(responsedata.message);\r\n    //         }\r\n    //         setLoaadedFile(responsedata);\r\n    //         setIsLoading(true);\r\n    //         }catch(err){\r\n    //             console.log(err.message);\r\n    //         }\r\n    //         setIsLoading(false);\r\n    //     };\r\n    //     sendRequest();\r\n    // }, []);\r\n    //<div className=\"upload-file\">{props.test}</div>\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isLoading && <div className=\"center\"><LoadingSpinner/></div>}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Dataset;"]},"metadata":{},"sourceType":"module"}