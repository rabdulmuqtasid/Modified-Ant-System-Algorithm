{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acit\\\\Desktop\\\\FYP Code\\\\FYP Code\\\\frontend\\\\src\\\\components\\\\GenerateSchedulePage\\\\GenerateScheduleElective.js\";\nimport { concat, create, find, forEach, indexOf } from \"lodash\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport _ from 'lodash';\nimport { CSVLink } from \"react-csv\";\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\nlet finalDataAll = [];\nlet finalDataAllElective = [];\nlet checkHardConstraintOutsite = 0;\nlet checkSoftConstraintOutsite = 0;\n\nconst ArrayScheduleElective = props => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedFile, setLoaadedFile] = useState(false);\n  const [roomData, setroomData] = useState();\n  const [courseData, setcourseData] = useState();\n  const [CsvData, setCsvData] = useState(); // const [Keys, setKeys] = useState();\n  //const [uploadedData, setUploadedData] = useState([]);\n  //console.log(\"props dataset:\"+ props.test)\n\n  const userId = useParams().userId;\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875'); //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\n        //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\n\n        const responsedata = await response.json();\n        let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset); // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\n\n        const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Room'], Dataset['Size']]); //Extract Room\n\n        setroomData([ertRoom]);\n        const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'], Dataset['Course Code'], Dataset['Course Name'], Dataset['Year'], Dataset['Semester'], Dataset['Lecturer'], Dataset['Group'], Dataset['HMS'], Dataset['Programme Code'], Dataset['Slot1'], Dataset['Slot2']]); //Extract Enrollment Quota\n\n        setcourseData([ertCourse]);\n\n        if (!response.ok) {\n          throw new Error(responsedata.message);\n        }\n\n        setLoaadedFile(stringifyData);\n        setIsLoading(true);\n      } catch (err) {\n        console.log(err.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, [userId]);\n\n  if (!isLoading && loadedFile) {\n    const testData = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const EnrollmentQuota = [];\n    const CourseCode = [];\n    const HMS = [];\n    const lecturerData = [];\n    const roomName = [];\n    const roomSize = [];\n    const filterData50 = [];\n    const filterData100 = [];\n    const filterData200 = [];\n    const filterData500 = [];\n    const filterDataElective50 = [];\n    const filterDataElective100 = [];\n    const filterDataElective200 = [];\n    const filterDataElective500 = [];\n    const room = [];\n    const totalAmountofData = [];\n    var totalAmountofDataSlottedIn = 0;\n    room.push(roomData[0]);\n    let hardConstraintViolated = 0;\n    let softConstraintViolated = 0; //console.log(courseData[0][0][1]);\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      let enrollment = [courseData[0][i][0]];\n      let code = [courseData[0][i][1]];\n      let hms = [courseData[0][i][7]];\n      let lecturer = [courseData[0][i][5]];\n      enrollment.reduce(function (results, item, index, array) {\n        results[index] = item;\n        EnrollmentQuota.push(item); //console.log(results)\n      }, {});\n      code.reduce(function (results, item, index, array) {\n        results[index] = item;\n        CourseCode.push(item); //console.log(results)\n      }, {});\n      hms.reduce(function (results, item, index, array) {\n        results[index] = item;\n        HMS.push(item); //console.log(results)\n      }, {});\n      lecturer.reduce(function (results, item, index, array) {\n        results[index] = item;\n        lecturerData.push(item); //console.log(results)\n      }, {});\n    }\n\n    for (let i = 0; i < roomData[0].length; i++) {\n      let name = [roomData[0][i][0]];\n      let size = [roomData[0][i][1]];\n      name.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomName.push(item); //console.log(results)\n      }, {});\n      size.reduce(function (results, item, index, array) {\n        results[index] = item;\n        roomSize.push(item); //console.log(results)\n      }, {});\n    }\n\n    const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\n    const notDuplicatesLecturer = lecturerData.filter((item, index) => index == lecturerData.indexOf(item));\n    notDuplicatesLecturer.pop(); //console.log(notDuplicatesLecturer)\n\n    let courseDataXElective = [];\n    let courseDataWithElective = [];\n    courseData[0].pop(); //saparate elective course with the faculty course\n\n    for (let i = 0; i < courseData[0].length; i++) {\n      //console.log(courseData[0][i][8])\n      //if(courseData[0][i][1].slice(0,3) == 'TMU' ||  courseData[0][i][1].slice(0,3) == 'TMX'){\n      if (courseData[0][i][8] == 'ELECTIVE') {\n        courseDataWithElective.push(courseData[0][i]);\n      }\n    } //insert data without faculty courses into correct room capacity\n\n\n    for (let i = 0; i < courseDataWithElective.length; i++) {\n      if (courseDataWithElective[i][0] < 50) {\n        filterDataElective50.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 50 && courseDataWithElective[i][0] < 100) {\n        filterDataElective100.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 100 && courseDataWithElective[i][0] < 200) {\n        filterDataElective200.push(courseDataWithElective[i]);\n      }\n\n      if (courseDataWithElective[i][0] >= 200 && courseDataWithElective[i][0] < 500) {\n        filterDataElective500.push(courseDataWithElective[i]);\n      }\n    } // console.log(filterDataElective50);\n    // console.log(filterDataElective100);\n    // console.log(filterDataElective200);\n    // console.log(filterDataElective500);\n\n\n    let roomUnder50 = [];\n    let roomUnder100 = [];\n    let roomUnder200 = [];\n    let roomUnder500 = [];\n\n    const checkNumberofRoom = () => {\n      for (let i = 0; i < roomData[0].length; i++) {\n        let room = roomData[0][i][1]; //console.log(roomData[0][i][1]);\n\n        if (room < 50) {\n          roomUnder50.push(room);\n        } else if (room > 50 && room < 100) {\n          roomUnder100.push(room);\n        } else if (room > 100 && room < 200) {\n          roomUnder200.push(room);\n        } else if (room > 200) {\n          roomUnder500.push(room);\n        }\n      }\n    };\n\n    checkNumberofRoom();\n\n    const createArray = data => {\n      var result = [];\n\n      for (let i = 0; i < data; i++) {\n        result[i] = [];\n      }\n\n      return result;\n    };\n\n    let DataArrayElective50 = roomUnder50.length * 10;\n    let DataArrayElective100 = roomUnder100.length * 10;\n    let DataArrayElective200 = roomUnder200.length * 10;\n    let DataArrayElective500 = roomUnder500.length * 10;\n    let combineArrayElective = DataArrayElective50 + DataArrayElective100 + DataArrayElective200 + DataArrayElective500;\n    let startIndex100 = DataArrayElective50 - 1;\n    let startIndex200 = DataArrayElective50 + DataArrayElective100 - 1;\n    let startIndex500 = DataArrayElective50 + DataArrayElective100 + DataArrayElective200 - 1;\n    let LastIndex50 = DataArrayElective50;\n    let LastIndex100 = DataArrayElective50 + DataArrayElective100;\n    let LastIndex200 = DataArrayElective50 + DataArrayElective100 + DataArrayElective200;\n    let LastIndex500 = DataArrayElective50 + DataArrayElective100 + DataArrayElective200 + DataArrayElective500; //----------------------------------------------------------------------------------------------------------------------------------------\n\n    var checkTotalHardContraintsAll = 0;\n    var checkTotalSoftContraintsAll = 0;\n\n    const antSystem = () => {\n      const checking_minus_1 = (array, array2, data) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u-1] != 100 && array[u-1][5] == data[5]){\n            if (array[u] != 100 && data[5] != array[u][5] || data[6] == array[u][6] && array[u - 1] != 100 && data[5] == array[u - 1][5] || data[6] == array[u - 1][6]) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray - 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray - 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray - 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray - 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            //if( array2[u] != 100 && array2[u][5] == data[5] && array2[u-1] != 100 && array2[u-1][5] == data[5]){\n            if (array2[u] != 100 && data[5] != array2[u][5] || data[6] == array2[u][6] && array2[u - 1] != 100 && data[5] == array2[u - 1][5] || data[6] == array2[u - 1][6]) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray2 = b * 38;\n\n                if (array2[u + indexArray2] == 100 && array2[u + indexArray2 - 1] == 100) {\n                  array2[u + indexArray2] = 0;\n                  array2[u + indexArray2 - 1] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100 && array2[u - indexArray2 - 1] == 100) {\n                  array2[u - indexArray2] = 0;\n                  array2[u - indexArray2 - 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const checking_plus_1 = (array, array2, data) => {\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\n            if (array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6] && array[u + 1] != 100 && data[5] == array[u + 1][5] || data[6] == array[u + 1][6]) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray + 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray + 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray + 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            //if( array2[u] != 100 && array2[u][5] == data[5] && array2[u+1] != 100 && array2[u+1][5] == data[5]){\n            if (array2[u] != 100 && data[5] == array2[u][5] || data[6] == array2[u][6] && array2[u + 1] != 100 && data[5] == array2[u + 1][5] || data[6] == array2[u + 1][6]) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray2 = b * 38;\n\n                if (array2[u + indexArray2] == 100 && array2[u + indexArray2 + 1] == 100) {\n                  array2[u + indexArray2] = 0;\n                  array2[u + indexArray2 + 1] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100 && array2[u - indexArray2 + 1] == 100) {\n                  array2[u - indexArray2] = 0;\n                  array2[u - indexArray2 + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const checking_3 = (array, array2, data) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u-1] != 100 && array[u-1][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\n            if (array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6] && array[u - 1] != 100 && data[5] == array[u - 1][5] && array[u + 1] != 100 && data[5] == array[u + 1][5] || data[6] == array[u - 1][6] && array[u + 1] != 100 && data[6] == array[u + 1][6]) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray - 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray - 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray - 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray - 1] = 0;\n                }\n\n                if (array[u + indexArray] == 100 && array[u + indexArray + 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray + 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray + 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            //if( array2[u] != 100 && array2[u][5] == data[5] && array2[u-1] != 100 && array2[u-1][5] == data[5] && array2[u+1] != 100 && array2[u+1][5] == data[5]){\n            if (array2[u] != 100 && data[5] == array2[u][5] || data[6] == array2[u][6] && array2[u - 1] != 100 && data[5] == array2[u - 1][5] && array2[u + 1] != 100 && data[5] == array2[u + 1][5] || data[6] == array2[u - 1][6] && array2[u + 1] != 100 && data[6] == array2[u + 1][6]) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray2 = b * 38;\n\n                if (array2[u + indexArray2] == 100 && array2[u + indexArray2 - 1] == 100) {\n                  array2[u + indexArray2] = 0;\n                  array2[u + indexArray2 - 1] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100 && array2[u - indexArray2 - 1] == 100) {\n                  array2[u - indexArray2] = 0;\n                  array2[u - indexArray2 - 1] = 0;\n                }\n\n                if (array2[u + indexArray2] == 100 && array2[u + indexArray2 + 1] == 100) {\n                  array2[u + indexArray2] = 0;\n                  array2[u + indexArray2 + 1] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100 && array2[u - indexArray2 + 1] == 100) {\n                  array2[u - indexArray2] = 0;\n                  array2[u - indexArray2 + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const checking_only_1 = (array, array2, data) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            if (array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]) {\n              for (let b = 0; b < totalRoom; b++) {\n                if (array[u + 38 * b] == 100) {\n                  array[u + 38 * b] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            if (array2[u] != 100 && data[5] == array2[u][5] || data[6] == array2[u][6]) {\n              for (let b = 0; b < totalRoom2; b++) {\n                if (array2[u + 38 * b] == 100) {\n                  array2[u + 38 * b] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const changeRowtoZero_minus_1 = (array, array2, index1, index2) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray - 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray - 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray - 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray - 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray2 = b * 38;\n\n                if (array2[u + indexArray2] == 100 && array2[u + indexArray2 - 1] == 100) {\n                  array2[u + indexArray2] = 0;\n                  array2[u + indexArray2 - 1] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100 && array2[u - indexArray2 - 1] == 100) {\n                  array2[u - indexArray2] = 0;\n                  array2[u - indexArray2 - 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const changeRowtoZero_plus_1 = (array, array2, index1, index2) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray + 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray + 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray + 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray2 = b * 38;\n\n                if (array2[u + indexArray2] == 100 && array2[u + indexArray2 + 1] == 100) {\n                  array2[u + indexArray2] = 0;\n                  array2[u + indexArray2 + 1] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100 && array2[u - indexArray2 + 1] == 100) {\n                  array2[u - indexArray2] = 0;\n                  array2[u - indexArray2 + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const changeRowtoZero_1 = (array, array2, index1) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            if (u == index1) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100) {\n                  array[u + indexArray] = 0;\n                }\n\n                if (array[u - indexArray] == 100) {\n                  array[u - indexArray] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            if (u == index1) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray2 = b * 38;\n\n                if (array2[u + indexArray2] == 100) {\n                  array2[u + indexArray2] = 0;\n                }\n\n                if (array2[u - indexArray2] == 100) {\n                  array2[u - indexArray2] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const changeRowtoZero_3_ = (array, array2, index1, index2, index3) => {\n        let k = 0;\n        let b = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2 && u + 1 == index3) {\n              for (let b = 0; b < totalRoom; b++) {\n                let indexArray = b * 38;\n\n                if (array[u + indexArray] == 100 && array[u + indexArray - 1] == 100 && array[u + indexArray + 1] == 100) {\n                  array[u + indexArray] = 0;\n                  array[u + indexArray - 1] = 0;\n                  array[u + indexArray + 1] = 0;\n                }\n\n                if (array[u - indexArray] == 100 && array[u - indexArray - 1] == 100 && array[u - indexArray + 1] == 100) {\n                  array[u - indexArray] = 0;\n                  array[u - indexArray - 1] = 0;\n                  array[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        for (let u = 0; u < array2.length; u++) {\n          try {\n            if (u == index1 && u - 1 == index2 && u + 1 == index3) {\n              for (let b = 0; b < totalRoom2; b++) {\n                let indexArray = b * 38;\n\n                if (array2[u + indexArray] == 100 && array2[u + indexArray - 1] == 100 && array2[u + indexArray + 1] == 100) {\n                  array2[u + indexArray] = 0;\n                  array2[u + indexArray - 1] = 0;\n                  array2[u + indexArray + 1] = 0;\n                }\n\n                if (array2[u - indexArray] == 100 && array2[u - indexArray - 1] == 100 && array2[u - indexArray + 1] == 100) {\n                  array2[u - indexArray] = 0;\n                  array2[u - indexArray - 1] = 0;\n                  array2[u - indexArray + 1] = 0;\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const changeToZero = array => {\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            array[i] = 100;\n          }\n        }\n\n        return array;\n      };\n\n      const checkTest = (array, array2, data1) => {\n        let count = 0;\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          let indexArray = x * 38;\n\n          try {\n            for (let i = 1; i < array.length; i++) {\n              //if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 1 && array[i+indexArray] != 0 ){\n              try {\n                if (data1 == array[i][5]) {\n                  if (array[i + indexArray] == 100) {\n                    array[i + indexArray] = 0;\n                  }\n                }\n              } catch {} //}    \n\n            }\n          } catch {}\n        }\n\n        for (let x = 1; x <= totalRoom2; x++) {\n          let indexArray2 = x * 38;\n\n          try {\n            for (let i = 1; i < array2.length; i++) {\n              //if(array2[i+indexArray2] != 100 && array2[i+indexArray2] != undefined && array2[i+indexArray2] != 1 && array2[i+indexArray2] != 0 ){\n              try {\n                if (data1 == array2[i][5]) {\n                  if (array2[i + indexArray2] == 100) {\n                    array2[i + indexArray2] = 0;\n                  }\n                }\n              } catch {} //}    \n\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const checking_1 = (array, array2, data) => {\n        let totalRoom = array.length / 38;\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\n            //if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]){\n            if (array[u] != 100) {\n              if (data[5] == array[u][5] || data[6] == array[u][6]) {\n                for (let b = 0; b < totalRoom; b++) {\n                  let indexArray = b * 38;\n\n                  if (array[u + indexArray] == 100) {\n                    array[u + indexArray] = 0; //array2[u+indexArray] = 0\n                  }\n\n                  if (array[u - indexArray] == 100) {\n                    array[u - indexArray] = 0; //array2[u-indexArray] = 0\n                  }\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array;\n      };\n\n      const checking_1_phe = (array, array2, data) => {\n        //let totalRoom = array.length / 38\n        let totalRoom2 = array2.length / 38;\n\n        for (let u = 0; u < array.length; u++) {\n          try {\n            //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\n            //if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]){\n            if (array[u] != 100) {\n              if (data[5] == array[u][5] || data[6] == array[u][6]) {\n                for (let b = 0; b < totalRoom2; b++) {\n                  let indexArray = b * 38;\n\n                  if (array2[u + indexArray] == 100) {\n                    //array[u+indexArray] = 0\n                    array2[u + indexArray] = 0;\n                  }\n\n                  if (array2[u - indexArray] == 100) {\n                    //array[u-indexArray] = 0\n                    array2[u - indexArray] = 0;\n                  }\n                }\n              }\n            }\n          } catch {}\n        }\n\n        return array2;\n      }; //___________________________________________________________________________________________________________________________________\n\n\n      const array1DElectiveCombine = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrCombine = array1DElectiveCombine(combineArrayElective);\n\n      const array1DElective50 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective50 = array1DElective50(DataArrayElective50);\n\n      const AntAlgoInsertElective50 = (array, combine) => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let hms2 = [];\n        let hms3 = [];\n        let hms4 = [];\n\n        for (let x = 0; x < filterDataElective50.length; x++) {\n          if (filterDataElective50[x][7] == 2) {\n            hms2.push(filterDataElective50[x]);\n          }\n\n          if (filterDataElective50[x][7] == 4) {\n            hms4.push(filterDataElective50[x]);\n          }\n\n          if (filterDataElective50[x][7] == 3) {\n            hms3.push(filterDataElective50[x]);\n          }\n\n          test.push(filterDataElective50[x]);\n        } //slot in  2 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < hms2.length) {\n            checking_1(combine, array, hms2[k]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j] == 100 && combine[j - 1] == 100 && j - 1 != -1) {\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j] = hms2[k];\n                combine[j - 1] = hms2[k];\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j] == 100 && combine[j + 1] == 100 && j + 1 != startIndex100) {\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j] = hms2[k];\n                combine[j + 1] = hms2[k];\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k++;\n        } // console.log(hms2.length)\n        // console.log(hms4.length)\n        //console.log(hms3.length)\n        //slot in  4 hours of meeting student course \n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k2 < hms4.length) {\n            //if(k2 < 1){\n            checking_1(combine, array, hms4[k2]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j] == 100 && combine[j - 1] == 100 && j - 1 != -1) {\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j] = hms4[k2];\n                combine[j - 1] = hms4[k2];\n                let b = 0;\n\n                while (b != 1) {\n                  const v = Math.floor(Math.random() * (i + 1)); //if(array[v] == 100 && array[v-1] == 100){\n\n                  if (combine[v] == 100 && combine[v - 1] == 100 && v - 1 != -1) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v - 1] = -1;\n                    combine[v] = hms4[k2];\n                    combine[v - 1] = hms4[k2];\n                    b = 1;\n                  } //else if(array[v] == 100 && array[v+1] == 100){\n                  else if (combine[v] == 100 && combine[v + 1] == 100 && v + 1 != startIndex100) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v + 1] = -1;\n                    combine[v] = hms4[k2];\n                    combine[v + 1] = hms4[k2];\n                    b = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j] == 100 && combine[j + 1] == 100 && j + 1 != startIndex100) {\n                //console.log(j)\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j] = hms4[k2];\n                combine[j + 1] = hms4[k2];\n                let z = 0;\n\n                while (z != 1) {\n                  const p = Math.floor(Math.random() * (i + 1)); //if(array[p] == 100 && array[p-1] == 100){\n\n                  if (combine[p] == 100 && combine[p - 1] == 100 && p - 1 != -1) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p - 1] = -1;\n                    combine[p] = hms4[k2];\n                    combine[p - 1] = hms4[k2];\n                    z = 1;\n                  } //else if(array[p] == 100 && array[p+1] == 100){\n                  else if (combine[p] == 100 && combine[p + 1] == 100 && p + 1 != startIndex100) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p + 1] = -1;\n                    combine[p] = hms4[k2];\n                    combine[p + 1] = hms4[k2];\n                    z = 1;\n                  }\n                }\n\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k2++;\n        } //slot in  3 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k3 < hms3.length) {\n            //if(k3 < 1){\n            checking_1(combine, array, hms3[k3]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\n\n              if (combine[j] == 100 && combine[j - 1] == 100 && combine[j + 1] == 100 && j - 1 != -1 && j + 1 != startIndex100) {\n                // slot in 3 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                array[j + 1] = -1;\n                combine[j] = hms3[k3];\n                combine[j - 1] = hms3[k3];\n                combine[j + 1] = hms3[k3];\n                c = 1;\n              } //else if(array[j] == 100 && array[j-1] == 100){// slot in 2 course at one time\n              else if (combine[j] == 100 && combine[j - 1] == 100 && j - 1 != -1) {\n                // slot in 2 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j] = hms3[k3];\n                combine[j - 1] = hms3[k3];\n                let b = 0;\n\n                while (b != 1) {\n                  const v = Math.floor(Math.random() * (i + 1)); //if(array[v] == 100){\n\n                  if (combine[v] == 100) {\n                    //console.log(v)\n                    array[v] = -1;\n                    combine[v] = hms3[k3];\n                    b = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){ // slot in 2 course at one time\n              else if (combine[j] == 100 && combine[j + 1] == 100 && j + 1 != startIndex100) {\n                // slot in 2 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j] = hms3[k3];\n                combine[j + 1] = hms3[k3];\n                let z = 0;\n\n                while (z != 1) {\n                  const p = Math.floor(Math.random() * (i + 1)); //if(array[p] == 100 ){\n\n                  if (combine[p] == 100) {\n                    //console.log(p)\n                    array[p] = -1;\n                    combine[p] = hms3[k3];\n                    z = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100){ // slot in 1 course at one time\n              else if (combine[j] == 100) {\n                // slot in 1 course at one time\n                array[j] = -1;\n                combine[j] = hms3[k3];\n                let m = 0;\n\n                while (m != 1) {\n                  const y = Math.floor(Math.random() * (i + 1)); //if(array[y] == 100 && array[y-1] == 100){\n\n                  if (combine[y] == 100 && combine[y - 1] == 100 && y - 1 != -1) {\n                    //console.log(y)\n                    array[y] = -1;\n                    array[y - 1] = -1;\n                    combine[y] = hms3[k3];\n                    combine[y - 1] = hms3[k3];\n                    m = 1;\n                  } //else if(array[y] == 100 && array[y+1] == 100){\n                  else if (combine[y] == 100 && combine[y + 1] == 100 && y + 1 != startIndex100) {\n                    //console.log(y)\n                    array[y] = -1;\n                    array[y + 1] = -1;\n                    combine[y] = hms3[k3];\n                    combine[y + 1] = hms3[k3];\n                    m = 1;\n                  }\n                }\n\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k3++;\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n        return array;\n      };\n\n      var AntArrInsElective50 = AntAlgoInsertElective50(AntArrElective50, AntArrCombine);\n\n      const checkAmountDataElective50_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 50 && array[i] != 0 && array[i] != undefined && array[i] != 1) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_2 = checkAmountDataElective50_2(AntArrInsElective50); // console.log(AntArrInsElective50);\n      // console.log(checkAmount_2)\n\n      const checkAmountDataElective50_0 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_0 = checkAmountDataElective50_0(AntArrElective50); //console.log(checkAmount_0)\n      //___________________________________________________________________________________________________________________________________\n      //___________________________________________________________________________________________________________________________________\n\n      const array1DElective100 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective100 = array1DElective100(DataArrayElective100);\n\n      const AntAlgoInsertElective100 = (array, combine) => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let hms2 = [];\n        let hms3 = [];\n        let hms4 = [];\n\n        for (let x = 0; x < filterDataElective100.length; x++) {\n          if (filterDataElective100[x][7] == 2) {\n            hms2.push(filterDataElective100[x]);\n          }\n\n          if (filterDataElective100[x][7] == 4) {\n            hms4.push(filterDataElective100[x]);\n          }\n\n          if (filterDataElective100[x][7] == 3) {\n            hms3.push(filterDataElective100[x]);\n          }\n\n          test.push(filterDataElective100[x]);\n        } //slot in  2 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < hms2.length) {\n            checking_1(combine, array, hms2[k]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j + startIndex100] == 100 && combine[j - 1 + startIndex100] == 100 && j - 1 != LastIndex50) {\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndex100] = hms2[k];\n                combine[j - 1 + startIndex100] = hms2[k];\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j + startIndex100] == 100 && combine[j + 1 + startIndex100] == 100 && j + 1 != startIndex200) {\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndex100] = hms2[k];\n                combine[j + 1 + startIndex100] = hms2[k];\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k++;\n        } // console.log(hms2.length)\n        // console.log(hms4.length)\n        //console.log(hms3.length)\n        //slot in  4 hours of meeting student course \n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k2 < hms4.length) {\n            //if(k2 < 1){\n            checking_1(combine, array, hms4[k2]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j + startIndex100] == 100 && combine[j - 1 + startIndex100] == 100 && j - 1 != LastIndex50) {\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndex100] = hms4[k2];\n                combine[j - 1 + startIndex100] = hms4[k2];\n                let b = 0;\n\n                while (b != 1) {\n                  const v = Math.floor(Math.random() * (i + 1)); //if(array[v] == 100 && array[v-1] == 100){\n\n                  if (combine[v + startIndex100] == 100 && combine[v - 1 + startIndex100] == 100 && v - 1 != LastIndex50) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v - 1] = -1;\n                    combine[v + startIndex100] = hms4[k2];\n                    combine[v - 1 + startIndex100] = hms4[k2];\n                    b = 1;\n                  } //else if(array[v] == 100 && array[v+1] == 100){\n                  else if (combine[v + startIndex100] == 100 && combine[v + 1 + startIndex100] == 100 && v + 1 != startIndex200) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v + 1] = -1;\n                    combine[v + startIndex100] = hms4[k2];\n                    combine[v + 1 + startIndex100] = hms4[k2];\n                    b = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j + startIndex100] == 100 && combine[j + 1 + startIndex100] == 100 && j + 1 != startIndex200) {\n                //console.log(j)\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndex100] = hms4[k2];\n                combine[j + 1 + startIndex100] = hms4[k2];\n                let z = 0;\n\n                while (z != 1) {\n                  const p = Math.floor(Math.random() * (i + 1)); //if(array[p] == 100 && array[p-1] == 100){\n\n                  if (combine[p + startIndex100] == 100 && combine[p - 1 + startIndex100] == 100 && p - 1 != LastIndex50) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p - 1] = -1;\n                    combine[p + startIndex100] = hms4[k2];\n                    combine[p - 1 + startIndex100] = hms4[k2];\n                    z = 1;\n                  } //else if(array[p] == 100 && array[p+1] == 100){\n                  else if (combine[p + startIndex100] == 100 && combine[p + 1 + startIndex100] == 100 && p + 1 != startIndex200) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p + 1] = -1;\n                    combine[p + startIndex100] = hms4[k2];\n                    combine[p + 1 + startIndex100] = hms4[k2];\n                    z = 1;\n                  }\n                }\n\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k2++;\n        } //slot in  3 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k3 < hms3.length) {\n            //if(k3 < 1){\n            checking_1(combine, array, hms3[k3]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\n\n              if (combine[j + startIndex100] == 100 && combine[j - 1 + startIndex100] == 100 && combine[j + 1 + startIndex100] == 100 && j - 1 != LastIndex50 && j + 1 != startIndex200) {\n                // slot in 3 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndex100] = hms3[k3];\n                combine[j - 1 + startIndex100] = hms3[k3];\n                combine[j + 1 + startIndex100] = hms3[k3];\n                c = 1;\n              } //else if(array[j] == 100 && array[j-1] == 100){// slot in 2 course at one time\n              else if (combine[j + startIndex100] == 100 && combine[j - 1 + startIndex100] == 100 && j - 1 != LastIndex50) {\n                // slot in 2 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndex100] = hms3[k3];\n                combine[j - 1 + startIndex100] = hms3[k3];\n                let b = 0;\n\n                while (b != 1) {\n                  const v = Math.floor(Math.random() * (i + 1)); //if(array[v] == 100){\n\n                  if (combine[v + startIndex100] == 100) {\n                    //console.log(v)\n                    array[v] = -1;\n                    combine[v + startIndex100] = hms3[k3];\n                    b = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){ // slot in 2 course at one time\n              else if (combine[j + startIndex100] == 100 && combine[j + 1 + startIndex100] == 100 && j + 1 != startIndex200) {\n                // slot in 2 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndex100] = hms3[k3];\n                combine[j + 1 + startIndex100] = hms3[k3];\n                let z = 0;\n\n                while (z != 1) {\n                  const p = Math.floor(Math.random() * (i + 1)); //if(array[p] == 100 ){\n\n                  if (combine[p + startIndex100] == 100) {\n                    //console.log(p)\n                    array[p] = -1;\n                    combine[p + startIndex100] = hms3[k3];\n                    z = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100){ // slot in 1 course at one time\n              else if (combine[j + startIndex100] == 100) {\n                // slot in 1 course at one time\n                array[j] = -1;\n                combine[j + startIndex100] = hms3[k3];\n                let m = 0;\n\n                while (m != 1) {\n                  const y = Math.floor(Math.random() * (i + 1)); //if(array[y] == 100 && array[y-1] == 100){\n\n                  if (combine[y + startIndex100] == 100 && combine[y - 1 + startIndex100] == 100 && y - 1 != LastIndex50) {\n                    //console.log(y)\n                    array[y] = -1;\n                    array[y - 1] = -1;\n                    combine[y + startIndex100] = hms3[k3];\n                    combine[y - 1 + startIndex100] = hms3[k3];\n                    m = 1;\n                  } //else if(array[y] == 100 && array[y+1] == 100){\n                  else if (combine[y + startIndex100] == 100 && combine[y + 1 + startIndex100] == 100 && y + 1 != startIndex200) {\n                    //console.log(y)\n                    array[y] = -1;\n                    array[y + 1] = -1;\n                    combine[y + startIndex100] = hms3[k3];\n                    combine[y + 1 + startIndex100] = hms3[k3];\n                    m = 1;\n                  }\n                }\n\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k3++;\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n        return array;\n      };\n\n      var AntArrInsElective100 = AntAlgoInsertElective100(AntArrElective100, AntArrCombine);\n\n      const checkAmountDataElective100_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 100 && array[i] != 0 && array[i] != undefined && array[i] != 1) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_2 = checkAmountDataElective100_2(AntArrInsElective100); // console.log(AntArrInsElective100);\n      // console.log(checkAmount_2)\n\n      const checkAmountDataElective100_0 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_0 = checkAmountDataElective100_0(AntArrElective100); //console.log(checkAmount_0)\n      //___________________________________________________________________________________________________________________________________\n      //___________________________________________________________________________________________________________________________________\n\n      const array1DElective200 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective200 = array1DElective200(DataArrayElective200);\n\n      const AntAlgoInsertElective200 = (array, combine) => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let hms2 = [];\n        let hms3 = [];\n        let hms4 = [];\n\n        for (let x = 0; x < filterDataElective200.length; x++) {\n          if (filterDataElective200[x][7] == 2) {\n            hms2.push(filterDataElective200[x]);\n          }\n\n          if (filterDataElective200[x][7] == 4) {\n            hms4.push(filterDataElective200[x]);\n          }\n\n          if (filterDataElective200[x][7] == 3) {\n            hms3.push(filterDataElective200[x]);\n          }\n\n          test.push(filterDataElective200[x]);\n        } //slot in  2 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < hms2.length) {\n            checking_1(combine, array, hms2[k]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j + startIndex200] == 100 && combine[j - 1 + startIndex200] == 100 && j - 1 != LastIndex100) {\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndex200] = hms2[k];\n                combine[j - 1 + startIndex200] = hms2[k];\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j + startIndex200] == 100 && combine[j + 1 + startIndex200] == 100 && j + 1 != startIndex500) {\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndex200] = hms2[k];\n                combine[j + 1 + startIndex200] = hms2[k];\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k++;\n        } // console.log(hms2.length)\n        // console.log(hms4.length)\n        //console.log(hms3.length)\n        //slot in  4 hours of meeting student course \n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k2 < hms4.length) {\n            //if(k2 < 1){\n            checking_1(combine, array, hms4[k2]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j + startIndex200] == 100 && combine[j - 1 + startIndex200] == 100 && j - 1 != LastIndex100) {\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndex200] = hms4[k2];\n                combine[j - 1 + startIndex200] = hms4[k2];\n                let b = 0;\n\n                while (b != 1) {\n                  const v = Math.floor(Math.random() * (i + 1)); //if(array[v] == 100 && array[v-1] == 100){\n\n                  if (combine[v + startIndex200] == 100 && combine[v - 1 + startIndex200] == 100 && v - 1 != LastIndex100) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v - 1] = -1;\n                    combine[v + startIndex200] = hms4[k2];\n                    combine[v - 1 + startIndex200] = hms4[k2];\n                    b = 1;\n                  } //else if(array[v] == 100 && array[v+1] == 100){\n                  else if (combine[v + startIndex200] == 100 && combine[v + 1 + startIndex200] == 100 && v + 1 != startIndex500) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v + 1] = -1;\n                    combine[v + startIndex200] = hms4[k2];\n                    combine[v + 1 + startIndex200] = hms4[k2];\n                    b = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j + startIndex200] == 100 && combine[j + 1 + startIndex200] == 100 && j + 1 != startIndex500) {\n                //console.log(j)\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndex200] = hms4[k2];\n                combine[j + 1 + startIndex200] = hms4[k2];\n                let z = 0;\n\n                while (z != 1) {\n                  const p = Math.floor(Math.random() * (i + 1)); //if(array[p] == 100 && array[p-1] == 100){\n\n                  if (combine[p + startIndex200] == 100 && combine[p - 1 + startIndex200] == 100 && p - 1 != LastIndex100) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p - 1] = -1;\n                    combine[p + startIndex200] = hms4[k2];\n                    combine[p - 1 + startIndex200] = hms4[k2];\n                    z = 1;\n                  } //else if(array[p] == 100 && array[p+1] == 100){\n                  else if (combine[p + startIndex200] == 100 && combine[p + 1 + startIndex200] == 100 && p + 1 != startIndex500) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p + 1] = -1;\n                    combine[p + startIndex200] = hms4[k2];\n                    combine[p + 1 + startIndex200] = hms4[k2];\n                    z = 1;\n                  }\n                }\n\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k2++;\n        } //slot in  3 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k3 < hms3.length) {\n            //if(k3 < 1){\n            checking_1(combine, array, hms3[k3]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\n\n              if (combine[j + startIndex200] == 100 && combine[j - 1 + startIndex200] == 100 && combine[j + 1 + startIndex200] == 100 && j - 1 != LastIndex100 && j + 1 != startIndex500) {\n                // slot in 3 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndex200] = hms3[k3];\n                combine[j - 1 + startIndex200] = hms3[k3];\n                combine[j + 1 + startIndex200] = hms3[k3];\n                c = 1;\n              } //else if(array[j] == 100 && array[j-1] == 100){// slot in 2 course at one time\n              else if (combine[j + startIndex200] == 100 && combine[j - 1 + startIndex200] == 100 && j - 1 != LastIndex100) {\n                // slot in 2 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndex200] = hms3[k3];\n                combine[j - 1 + startIndex200] = hms3[k3];\n                let b = 0;\n\n                while (b != 1) {\n                  const v = Math.floor(Math.random() * (i + 1)); //if(array[v] == 100){\n\n                  if (combine[v + startIndex200] == 100) {\n                    //console.log(v)\n                    array[v] = -1;\n                    combine[v + startIndex200] = hms3[k3];\n                    b = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){ // slot in 2 course at one time\n              else if (combine[j + startIndex200] == 100 && combine[j + 1 + startIndex200] == 100 && j + 1 != startIndex500) {\n                // slot in 2 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndex200] = hms3[k3];\n                combine[j + 1 + startIndex200] = hms3[k3];\n                let z = 0;\n\n                while (z != 1) {\n                  const p = Math.floor(Math.random() * (i + 1)); //if(array[p] == 100 ){\n\n                  if (combine[p + startIndex200] == 100) {\n                    //console.log(p)\n                    array[p] = -1;\n                    combine[p + startIndex200] = hms3[k3];\n                    z = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100){ // slot in 1 course at one time\n              else if (combine[j + startIndex200] == 100) {\n                // slot in 1 course at one time\n                array[j] = -1;\n                combine[j + startIndex200] = hms3[k3];\n                let m = 0;\n\n                while (m != 1) {\n                  const y = Math.floor(Math.random() * (i + 1)); //if(array[y] == 100 && array[y-1] == 100){\n\n                  if (combine[y + startIndex200] == 100 && combine[y - 1 + startIndex200] == 100 && y - 1 != LastIndex100) {\n                    //console.log(y)\n                    array[y] = -1;\n                    array[y - 1] = -1;\n                    combine[y + startIndex200] = hms3[k3];\n                    combine[y - 1 + startIndex200] = hms3[k3];\n                    m = 1;\n                  } //else if(array[y] == 100 && array[y+1] == 100){\n                  else if (combine[y + startIndex200] == 100 && combine[y + 1 + startIndex200] == 100 && y + 1 != startIndex500) {\n                    //console.log(y)\n                    array[y] = -1;\n                    array[y + 1] = -1;\n                    combine[y + startIndex200] = hms3[k3];\n                    combine[y + 1 + startIndex200] = hms3[k3];\n                    m = 1;\n                  }\n                }\n\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k3++;\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n        return array;\n      };\n\n      var AntArrInsElective200 = AntAlgoInsertElective200(AntArrElective200, AntArrCombine);\n\n      const checkAmountDataElective200_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 200 && array[i] != 0 && array[i] != undefined && array[i] != 1) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_2 = checkAmountDataElective200_2(AntArrInsElective200); // console.log(AntArrInsElective200);\n      // console.log(checkAmount_2)\n\n      const checkAmountDataElective200_0 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_0 = checkAmountDataElective200_0(AntArrElective200); //console.log(checkAmount_0)\n      //___________________________________________________________________________________________________________________________________\n      //___________________________________________________________________________________________________________________________________\n\n      const array1DElective500 = data => {\n        var result = [];\n\n        for (let i = 0; i < data; i++) {\n          result[i] = 100;\n        }\n\n        return result;\n      };\n\n      var AntArrElective500 = array1DElective500(DataArrayElective500);\n\n      const AntAlgoInsertElective500 = (array, combine) => {\n        let test = [];\n        let k = 0;\n        let k2 = 0;\n        let k3 = 0;\n        let hms2 = [];\n        let hms3 = [];\n        let hms4 = [];\n\n        for (let x = 0; x < filterDataElective500.length; x++) {\n          if (filterDataElective500[x][7] == 2) {\n            hms2.push(filterDataElective500[x]);\n          }\n\n          if (filterDataElective500[x][7] == 4) {\n            hms4.push(filterDataElective500[x]);\n          }\n\n          if (filterDataElective500[x][7] == 3) {\n            hms3.push(filterDataElective500[x]);\n          }\n\n          test.push(filterDataElective500[x]);\n        } //slot in  2 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k < hms2.length) {\n            checking_1(combine, array, hms2[k]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j + startIndex500] == 100 && combine[j - 1 + startIndex500] == 100 && j - 1 != LastIndex200) {\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndex500] = hms2[k];\n                combine[j - 1 + startIndex500] = hms2[k];\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j + startIndex500] == 100 && combine[j + 1 + startIndex500] == 100) {\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndex500] = hms2[k];\n                combine[j + 1 + startIndex500] = hms2[k];\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k++;\n        } // console.log(hms2.length)\n        // console.log(hms4.length)\n        //console.log(hms3.length)\n        //slot in  4 hours of meeting student course \n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k2 < hms4.length) {\n            //if(k2 < 1){\n            checking_1(combine, array, hms4[k2]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100){\n\n              if (combine[j + startIndex500] == 100 && combine[j - 1 + startIndex500] == 100 && j - 1 != LastIndex200) {\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndex500] = hms4[k2];\n                combine[j - 1 + startIndex500] = hms4[k2];\n                let b = 0;\n\n                while (b != 1) {\n                  const v = Math.floor(Math.random() * (i + 1)); //if(array[v] == 100 && array[v-1] == 100){\n\n                  if (combine[v + startIndex500] == 100 && combine[v - 1 + startIndex500] == 100 && v - 1 != LastIndex200) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v - 1] = -1;\n                    combine[v + startIndex500] = hms4[k2];\n                    combine[v - 1 + startIndex500] = hms4[k2];\n                    b = 1;\n                  } //else if(array[v] == 100 && array[v+1] == 100){\n                  else if (combine[v + startIndex500] == 100 && combine[v + 1 + startIndex500] == 100) {\n                    //console.log(v)\n                    array[v] = -1;\n                    array[v + 1] = -1;\n                    combine[v + startIndex500] = hms4[k2];\n                    combine[v + 1 + startIndex500] = hms4[k2];\n                    b = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){\n              else if (combine[j + startIndex500] == 100 && combine[j + 1 + startIndex500] == 100) {\n                //console.log(j)\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndex500] = hms4[k2];\n                combine[j + 1 + startIndex500] = hms4[k2];\n                let z = 0;\n\n                while (z != 1) {\n                  const p = Math.floor(Math.random() * (i + 1)); //if(array[p] == 100 && array[p-1] == 100){\n\n                  if (combine[p + startIndex500] == 100 && combine[p - 1 + startIndex500] == 100 && p - 1 != LastIndex200) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p - 1] = -1;\n                    combine[p + startIndex500] = hms4[k2];\n                    combine[p - 1 + startIndex500] = hms4[k2];\n                    z = 1;\n                  } //else if(array[p] == 100 && array[p+1] == 100){\n                  else if (combine[p + startIndex500] == 100 && combine[p + 1 + startIndex500] == 100) {\n                    //console.log(p)\n                    array[p] = -1;\n                    array[p + 1] = -1;\n                    combine[p + startIndex500] = hms4[k2];\n                    combine[p + 1 + startIndex500] = hms4[k2];\n                    z = 1;\n                  }\n                }\n\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k2++;\n        } //slot in  3 hours of meeting student course\n\n\n        for (let i = array.length - 1; i > 0; i--) {\n          if (k3 < hms3.length) {\n            //if(k3 < 1){\n            checking_1(combine, array, hms3[k3]);\n            let c = 0;\n\n            while (c != 1) {\n              const j = Math.floor(Math.random() * (i + 1)); //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\n\n              if (combine[j + startIndex500] == 100 && combine[j - 1 + startIndex500] == 100 && combine[j + 1 + startIndex500] == 100 && j - 1 != LastIndex200) {\n                // slot in 3 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndex500] = hms3[k3];\n                combine[j - 1 + startIndex500] = hms3[k3];\n                combine[j + 1 + startIndex500] = hms3[k3];\n                c = 1;\n              } //else if(array[j] == 100 && array[j-1] == 100){// slot in 2 course at one time\n              else if (combine[j + startIndex500] == 100 && combine[j - 1 + startIndex500] == 100 && j - 1 != LastIndex200) {\n                // slot in 2 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j - 1] = -1;\n                combine[j + startIndex500] = hms3[k3];\n                combine[j - 1 + startIndex500] = hms3[k3];\n                let b = 0;\n\n                while (b != 1) {\n                  const v = Math.floor(Math.random() * (i + 1)); //if(array[v] == 100){\n\n                  if (combine[v + startIndex500] == 100) {\n                    //console.log(v)\n                    array[v] = -1;\n                    combine[v + startIndex500] = hms3[k3];\n                    b = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100 && array[j+1] == 100){ // slot in 2 course at one time\n              else if (combine[j + startIndex500] == 100 && combine[j + 1 + startIndex500] == 100) {\n                // slot in 2 course at one time\n                //console.log(j)\n                array[j] = -1;\n                array[j + 1] = -1;\n                combine[j + startIndex500] = hms3[k3];\n                combine[j + 1 + startIndex500] = hms3[k3];\n                let z = 0;\n\n                while (z != 1) {\n                  const p = Math.floor(Math.random() * (i + 1)); //if(array[p] == 100 ){\n\n                  if (combine[p + startIndex500] == 100) {\n                    //console.log(p)\n                    array[p] = -1;\n                    combine[p + startIndex500] = hms3[k3];\n                    z = 1;\n                  }\n                }\n\n                c = 1;\n              } //else if(array[j] == 100){ // slot in 1 course at one time\n              else if (combine[j + startIndex500] == 100) {\n                // slot in 1 course at one time\n                array[j] = -1;\n                combine[j + startIndex500] = hms3[k3];\n                let m = 0;\n\n                while (m != 1) {\n                  const y = Math.floor(Math.random() * (i + 1)); //if(array[y] == 100 && array[y-1] == 100){\n\n                  if (combine[y + startIndex500] == 100 && combine[y - 1 + startIndex500] == 100 && y - 1 != LastIndex200) {\n                    //console.log(y)\n                    array[y] = -1;\n                    array[y - 1] = -1;\n                    combine[y + startIndex500] = hms3[k3];\n                    combine[y - 1 + startIndex500] = hms3[k3];\n                    m = 1;\n                  } //else if(array[y] == 100 && array[y+1] == 100){\n                  else if (combine[y + startIndex500] == 100 && combine[y + 1 + startIndex500] == 100) {\n                    //console.log(y)\n                    array[y] = -1;\n                    array[y + 1] = -1;\n                    combine[y + startIndex500] = hms3[k3];\n                    combine[y + 1 + startIndex500] = hms3[k3];\n                    m = 1;\n                  }\n                }\n\n                c = 1;\n              }\n            }\n          }\n\n          changeToZero(array);\n          changeToZero(combine);\n          k3++;\n        }\n\n        changeToZero(array);\n        changeToZero(combine);\n        return array;\n      };\n\n      var AntArrInsElective500 = AntAlgoInsertElective500(AntArrElective500, AntArrCombine);\n\n      const checkAmountDataElective500_2 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] != 100 && array[i] != 500 && array[i] != 0 && array[i] != undefined && array[i] != 1) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_2 = checkAmountDataElective500_2(AntArrInsElective500);\n      console.log(AntArrInsElective500); // console.log(checkAmount_2)\n\n      const checkAmountDataElective500_0 = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i] == 0) {\n            count += 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkAmount_0 = checkAmountDataElective500_0(AntArrElective500); //console.log(checkAmount_0)\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n      // Hard Constraint \n      // H1: No student attend more than one class/ event at the same time\n      // H2: The room is large enough to accomodate all of the student in attendace while also meeting the requirement \n      // H3: At any given time, each room can onle have one course booked\n      // H4: No student attend class during 12:00 pm -2:00 due to solat jumaat\n      // H5: One teacher can only teach one class at one time.\n      //Check for the H1 violation: same group attend more than 1 class at 1 time\n\n      const check1Group = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n        }\n\n        for (let x = 1; x <= totalRoom; x++) {\n          try {\n            for (let i = 0; i < array.length; i++) {\n              indexArray = x * 37;\n\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined && array[i + indexArray] != 1 && array[i + indexArray] != 0) {\n                try {\n                  if (array[i][6] == array[i + indexArray][6] && array[i][5] == array[i + indexArray][5]) {\n                    try {\n                      count += 1;\n                    } catch {}\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH1_ALL = check1Group(AntArrCombine); //Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\n\n      const checkRoomQuota = array => {\n        let count = 0;\n        return count;\n      };\n\n      var checkH2_ALLElective = checkRoomQuota(AntArrCombine); //Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\n\n      const checkSolatJummat = array => {\n        let count = 0;\n        return count;\n      };\n\n      var checkH4_ALLElective = checkSolatJummat(AntArrCombine); //Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\n\n      const check1Teacher = array => {\n        let count = 0;\n        let indexArray = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          indexArray = x * 38;\n\n          try {\n            for (let i = 1; i < array.length; i++) {\n              if (array[i + indexArray] != 100 && array[i + indexArray] != undefined && array[i + indexArray] != 1 && array[i + indexArray] != 0) {\n                try {\n                  if (array[i][5] == array[i + indexArray][5]) {\n                    count += 1;\n                  }\n                } catch {}\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkH5_ALL = check1Teacher(AntArrCombine);\n\n      const checkHC = (data1, data2) => {\n        let count = 0;\n\n        if (data1 != 0) {\n          count += 1;\n        }\n\n        if (data2 != 0) {\n          count += 1;\n        }\n\n        return count;\n      };\n\n      let checkTotalHardContraints = checkHC(checkH5_ALL, checkH1_ALL);\n      console.log(\"Total Hard Constraint: \" + checkTotalHardContraints); //----------------------------------------------------------------------------------------------------------------------------------------\n      // Soft Constraint \n      // S1: A student has a class schedule toward the end of the day\n      // S2: A student have more than two class in a row\n      //Check for the S1 violation: student have class at the end of the day\n\n      const checkEndOfClass = array => {\n        let count = 0;\n        let totalRoom = array.length / 38;\n\n        for (let x = 1; x <= totalRoom; x++) {\n          let indexArray = x * 37;\n\n          if (array[indexArray] != 100) {\n            count = 1;\n          }\n        }\n\n        return count;\n      };\n\n      var checkSC1_ALL = checkEndOfClass(AntArrCombine); //Check for the S2 violation: teacher have 2 class in a row\n\n      const check2ClassInARow = array => {\n        let count = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          try {\n            if (array[i][5] != undefined && array[i + 3][5] != undefined && array[i + 2][5] != undefined && array[i + 4][5] != undefined) {\n              if (array[i][5] == array[i + 3][5] && array[i + 2][5] == array[i + 4][5]) {\n                count = 1;\n              }\n            }\n          } catch {}\n        }\n\n        return count;\n      };\n\n      var checkSC2_ALL = checkEndOfClass(AntArrCombine); //----------------------------------------------------------------------------------------------------------------------------------------------\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n      //----------------------------------------------------------------------------------------------------------------------------------------\n      //-----------------------------------------------------------------------------------------------------------------------------------------------\n\n      const checkTotalSoftContraint = () => {\n        let count = 0;\n        let totalSC = checkSC1_ALL + checkSC2_ALL;\n\n        if (totalSC != 0) {\n          count += 1;\n        }\n\n        return count;\n      };\n\n      var checkTotalSoftContraints = checkTotalSoftContraint();\n      console.log(\"Total Soft Constraint: \" + checkTotalSoftContraints); //----------------------------------------------------------------------------------------------------------------------------------------------\n\n      const change100ToEmptyElective = data => {\n        for (let i = 0; i < data.length; i++) {\n          if (data[i] == 100) {\n            data[i] = [];\n          }\n        }\n\n        return data;\n      };\n\n      let finalDataElective = change100ToEmptyElective(AntArrCombine);\n      checkTotalHardContraintsAll = checkTotalHardContraints;\n      checkTotalSoftContraintsAll = checkTotalSoftContraints;\n      finalDataAllElective.push(finalDataElective);\n      return {\n        checkTotalHardContraints,\n        checkTotalSoftContraints,\n        finalDataAllElective\n      }; //___________________________________________________________________________________________________________________________________\n    };\n\n    let trigger = 0;\n    var t0 = performance.now();\n\n    const iteration = () => {\n      //antSystem()\n      let globalBestHS = checkTotalHardContraintsAll;\n      let globalBestSS = checkTotalSoftContraintsAll;\n      let globalBestScehdule = finalDataAllElective[0];\n\n      for (let i = 1; i <= 1; i++) {\n        antSystem();\n        let localBestHS = checkTotalHardContraintsAll;\n        let localBestSS = checkTotalSoftContraintsAll;\n        let localBestScehdule = finalDataAllElective[0];\n        console.log(\"iteraion: \" + i);\n\n        if (globalBestHS > localBestHS) {\n          globalBestHS = localBestHS;\n          globalBestSS = localBestSS;\n          globalBestScehdule = localBestScehdule;\n        }\n\n        if (localBestHS == 0) {\n          console.log(\"iteraion: \" + i);\n          console.log(\"workable solution is found\");\n          globalBestHS = localBestHS;\n          globalBestSS = localBestSS;\n          globalBestScehdule = localBestScehdule;\n          console.log(\"Workable Gloabal best HS: \" + globalBestHS);\n          console.log(\"Workable Gloabal best SS: \" + globalBestSS); //console.log(finalDataAll[0])\n\n          trigger = 1;\n          return [finalDataAllElective[0]];\n        } else if (localBestHS == 0 && localBestSS == 0) {\n          console.log(\"iteraion: \" + i);\n          console.log(\"perfect solution is found\");\n          globalBestHS = localBestHS;\n          globalBestSS = localBestSS;\n          globalBestScehdule = localBestScehdule;\n          console.log(\"Perfect Gloabal best HS: \" + globalBestHS);\n          console.log(\"Perfect Gloabal best SS: \" + globalBestSS);\n          console.log(finalDataAll[0]);\n          trigger = 1;\n          return [finalDataAllElective[0]];\n        }\n      }\n\n      return [finalDataAllElective[0]];\n    };\n\n    let interations = iteration();\n    let presentableDataElective = [];\n\n    if (trigger == 1) {\n      //shot course code, course name and lecturer\n      console.log(interations);\n\n      const changeToPresentationData = data => {\n        console.log(data);\n\n        for (let i = 0; i <= data[0].length; i++) {\n          try {\n            presentableDataElective.push([data[0][i][1], data[0][i][2], data[0][i][5]]);\n          } catch (error) {}\n        }\n      };\n\n      changeToPresentationData(interations);\n      let allRoomName = [];\n\n      for (let i = 0; i < roomData[0].length; i++) {\n        allRoomName.push(roomData[0][i][0]);\n      }\n\n      allRoomName.unshift(\"Room\");\n\n      if (allRoomName.pop() == undefined) {}\n\n      let wed = ['Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday', 'Wednesday'];\n\n      const create2dArrayElective = (weekdayArray, partDay, arrayAll, partAll) => {\n        var tmp = [];\n\n        for (var i = 0; i < weekdayArray.length; i += partDay) {\n          tmp.push(weekdayArray.slice(i, i + partDay));\n        }\n\n        for (var i = 0; i < arrayAll.length; i += partAll) {\n          tmp.push(arrayAll.slice(i, i + partAll));\n        }\n\n        return tmp;\n      };\n\n      let datasetElective = create2dArrayElective(wed, 10, presentableDataElective, 10);\n      console.log(datasetElective); //console.log(dataset)\n\n      const insertRoomNameElective = (roomData, array) => {\n        for (let i = 0; i < array.length; i++) {\n          array[i].unshift(roomData[i]);\n        }\n\n        return array;\n      };\n\n      insertRoomNameElective(allRoomName, datasetElective);\n      /** Convert a 2D array into a CSV string\r\n       * elective\r\n      */\n\n      function arrayToCsvElective(data) {\n        //console.log(data)\n        return data.map(row => row.map(String) // convert every value to String\n        .map(v => v.replaceAll('\"', '\"\"')) // escape double colons\n        .map(v => `\"${v}\"`) // quote it\n        .join(',') // comma-separated\n        ).join('\\r\\n'); // rows starting on new lines\n      }\n\n      let csvElective = arrayToCsvElective(datasetElective);\n\n      function downloadBlobElective(content, filename, contentType) {\n        // Create a blob\n        var blob = new Blob([content], {\n          type: contentType\n        });\n        var url = URL.createObjectURL(blob); // Create a link to download it\n\n        var pom = document.createElement('a');\n        pom.href = url;\n        pom.setAttribute('download', filename);\n        pom.click();\n      }\n\n      var t1 = performance.now();\n      console.log(\"Duration: \" + (t1 - t0));\n      downloadBlobElective(csvElective, 'ModifiedAntSystemElective_GeneratedSchedule.csv', 'text/csv;charset=utf-8;');\n    } else {\n      var t1 = performance.now();\n      console.log(\"Duration: \" + (t1 - t0) + \" milliseconds\");\n      alert(\"no workable solution found, please refersh until get workable solution\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2166,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2167,\n      columnNumber: 17\n    }\n  }, \"Please wait while generating elective schedule\"));\n};\n\nexport default ArrayScheduleElective;","map":{"version":3,"sources":["C:/Users/acit/Desktop/FYP Code/FYP Code/frontend/src/components/GenerateSchedulePage/GenerateScheduleElective.js"],"names":["concat","create","find","forEach","indexOf","React","useEffect","useState","useContext","useParams","_","CSVLink","LoadingSpinner","finalDataAll","finalDataAllElective","checkHardConstraintOutsite","checkSoftConstraintOutsite","ArrayScheduleElective","props","isLoading","setIsLoading","loadedFile","setLoaadedFile","roomData","setroomData","courseData","setcourseData","CsvData","setCsvData","userId","sendRequest","response","fetch","responsedata","json","stringifyData","JSON","stringify","userWithFiles","Dataset","ertRoom","map","ertCourse","ok","Error","message","err","console","log","testData","EnrollmentQuota","CourseCode","HMS","lecturerData","roomName","roomSize","filterData50","filterData100","filterData200","filterData500","filterDataElective50","filterDataElective100","filterDataElective200","filterDataElective500","room","totalAmountofData","totalAmountofDataSlottedIn","push","hardConstraintViolated","softConstraintViolated","i","length","enrollment","code","hms","lecturer","reduce","results","item","index","array","name","size","notDuplicatesRoom","filter","notDuplicatesLecturer","pop","courseDataXElective","courseDataWithElective","roomUnder50","roomUnder100","roomUnder200","roomUnder500","checkNumberofRoom","createArray","data","result","DataArrayElective50","DataArrayElective100","DataArrayElective200","DataArrayElective500","combineArrayElective","startIndex100","startIndex200","startIndex500","LastIndex50","LastIndex100","LastIndex200","LastIndex500","checkTotalHardContraintsAll","checkTotalSoftContraintsAll","antSystem","checking_minus_1","array2","k","b","totalRoom","totalRoom2","u","indexArray","indexArray2","checking_plus_1","checking_3","checking_only_1","changeRowtoZero_minus_1","index1","index2","changeRowtoZero_plus_1","changeRowtoZero_1","changeRowtoZero_3_","index3","changeToZero","checkTest","data1","count","x","checking_1","checking_1_phe","array1DElectiveCombine","AntArrCombine","array1DElective50","AntArrElective50","AntAlgoInsertElective50","combine","test","k2","k3","hms2","hms3","hms4","c","j","Math","floor","random","v","z","p","m","y","AntArrInsElective50","checkAmountDataElective50_2","undefined","checkAmount_2","checkAmountDataElective50_0","checkAmount_0","array1DElective100","AntArrElective100","AntAlgoInsertElective100","AntArrInsElective100","checkAmountDataElective100_2","checkAmountDataElective100_0","array1DElective200","AntArrElective200","AntAlgoInsertElective200","AntArrInsElective200","checkAmountDataElective200_2","checkAmountDataElective200_0","array1DElective500","AntArrElective500","AntAlgoInsertElective500","AntArrInsElective500","checkAmountDataElective500_2","checkAmountDataElective500_0","check1Group","checkH1_ALL","checkRoomQuota","checkH2_ALLElective","checkSolatJummat","checkH4_ALLElective","check1Teacher","checkH5_ALL","checkHC","data2","checkTotalHardContraints","checkEndOfClass","checkSC1_ALL","check2ClassInARow","checkSC2_ALL","checkTotalSoftContraint","totalSC","checkTotalSoftContraints","change100ToEmptyElective","finalDataElective","trigger","t0","performance","now","iteration","globalBestHS","globalBestSS","globalBestScehdule","localBestHS","localBestSS","localBestScehdule","interations","presentableDataElective","changeToPresentationData","error","allRoomName","unshift","wed","create2dArrayElective","weekdayArray","partDay","arrayAll","partAll","tmp","slice","datasetElective","insertRoomNameElective","arrayToCsvElective","row","String","replaceAll","join","csvElective","downloadBlobElective","content","filename","contentType","blob","Blob","type","url","URL","createObjectURL","pom","document","createElement","href","setAttribute","click","t1","alert"],"mappings":"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","sourcesContent":["import { concat, create, find, forEach, indexOf } from \"lodash\";\r\nimport React,{ useEffect,useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport _ from 'lodash';\r\nimport { CSVLink } from \"react-csv\";\r\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\r\n\r\n\r\nlet finalDataAll = [];\r\nlet finalDataAllElective = [];\r\nlet checkHardConstraintOutsite = 0;\r\nlet checkSoftConstraintOutsite = 0;\r\n\r\nconst ArrayScheduleElective = (props) => {\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [loadedFile, setLoaadedFile] = useState(false);\r\n    const [roomData, setroomData] = useState();\r\n    const [courseData, setcourseData] = useState();\r\n    const [CsvData, setCsvData] = useState();\r\n    // const [Keys, setKeys] = useState();\r\n    //const [uploadedData, setUploadedData] = useState([]);\r\n    //console.log(\"props dataset:\"+ props.test)\r\n\r\n    const userId = useParams().userId;\r\n    useEffect(()=>{\r\n        const sendRequest = async () =>{\r\n            setIsLoading(true);\r\n            try{\r\n            const response = await fetch('http://localhost:5000/api/files/users/6280a9b970216c2e558ac875');\r\n            //const responseRequest = await sendRequest('http://localhost:5000/api/files/users/${userId}');\r\n            //const response = await fetch('http://localhost:5000/api/files/users/${userId}');\r\n            const responsedata = await response.json();\r\n            let stringifyData = JSON.stringify(responsedata.userWithFiles.Dataset);\r\n\r\n            // const ertLocation = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset => [Dataset['Location']]); //Extract Location\r\n            const ertRoom = responsedata.userWithFiles.Dataset[0].Dataset.map(Dataset =>[Dataset['Room'],Dataset['Size']]); //Extract Room\r\n            setroomData([ertRoom]);\r\n\r\n            const ertCourse = responsedata.userWithFiles.Dataset[1].Dataset.map(Dataset => [Dataset['Enrollment Quota'],Dataset['Course Code'],Dataset['Course Name'],Dataset['Year'],Dataset['Semester'],Dataset['Lecturer'],Dataset['Group'],Dataset['HMS'],Dataset['Programme Code'],Dataset['Slot1'],Dataset['Slot2']]); //Extract Enrollment Quota\r\n            setcourseData([ertCourse]);\r\n\r\n            if (!response.ok){\r\n                throw new Error(responsedata.message);\r\n            }\r\n            setLoaadedFile(stringifyData);\r\n            setIsLoading(true);\r\n            }catch(err){\r\n                console.log(err.message);\r\n            }\r\n            setIsLoading(false);\r\n            \r\n        };\r\n        sendRequest();\r\n    },[userId]);\r\n\r\n        if(!isLoading && loadedFile){\r\n            const testData = [1,2,3,4,5,6,7,8,9];\r\n            const EnrollmentQuota = [];\r\n            const CourseCode = [];\r\n            const HMS = [];\r\n            const lecturerData = []\r\n            const roomName = [];\r\n            const roomSize = [];\r\n            const filterData50  = [];\r\n            const filterData100  = [];\r\n            const filterData200  = [];\r\n            const filterData500  = [];\r\n            const filterDataElective50  = [];\r\n            const filterDataElective100  = [];\r\n            const filterDataElective200  = [];\r\n            const filterDataElective500  = [];\r\n            const room = []\r\n            const totalAmountofData  = [];\r\n            var totalAmountofDataSlottedIn = 0;\r\n            room.push(roomData[0])\r\n            \r\n            let hardConstraintViolated = 0;\r\n            let softConstraintViolated = 0;\r\n            //console.log(courseData[0][0][1]);\r\n            for(let i = 0; i <courseData[0].length; i++){\r\n                let enrollment = [courseData[0][i][0]];\r\n                let code = [courseData[0][i][1]];\r\n                let hms = [courseData[0][i][7]];\r\n                let lecturer = [courseData[0][i][5]];\r\n                enrollment.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    EnrollmentQuota.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                code.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    CourseCode.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                hms.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    HMS.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                lecturer.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    lecturerData.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n            }\r\n\r\n            for(let i = 0; i <roomData[0].length; i++){\r\n                let name = [roomData[0][i][0]];\r\n                let size = [roomData[0][i][1]];\r\n                name.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomName.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n                size.reduce(function(results, item, index, array){\r\n                    results[index] = item;\r\n                    roomSize.push(item);\r\n                    //console.log(results)\r\n                },{});\r\n            }\r\n \r\n            \r\n            const notDuplicatesRoom = roomSize.filter((item, index) => index == roomSize.indexOf(item));\r\n\r\n            const notDuplicatesLecturer = lecturerData.filter((item, index) => index == lecturerData.indexOf(item));\r\n            notDuplicatesLecturer.pop();\r\n            //console.log(notDuplicatesLecturer)\r\n\r\n\r\n            let courseDataXElective = []\r\n            let courseDataWithElective = []\r\n            courseData[0].pop()\r\n\r\n\r\n            //saparate elective course with the faculty course\r\n            for(let i=0; i< courseData[0].length; i++){\r\n                //console.log(courseData[0][i][8])\r\n                //if(courseData[0][i][1].slice(0,3) == 'TMU' ||  courseData[0][i][1].slice(0,3) == 'TMX'){\r\n                if(courseData[0][i][8] == 'ELECTIVE'){\r\n                    courseDataWithElective.push(courseData[0][i])\r\n                }\r\n            }\r\n\r\n\r\n                //insert data without faculty courses into correct room capacity\r\n                for(let i = 0; i< courseDataWithElective.length;i++){\r\n                    if (courseDataWithElective[i][0] < 50) {\r\n                        filterDataElective50.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 50 && courseDataWithElective[i][0] < 100) {\r\n                        \r\n                        filterDataElective100.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 100 && courseDataWithElective[i][0] < 200 ) {\r\n                        filterDataElective200.push(courseDataWithElective[i]);\r\n                    }\r\n                    if (courseDataWithElective[i][0] >= 200 && courseDataWithElective[i][0] < 500) {\r\n                        filterDataElective500.push(courseDataWithElective[i]);\r\n                    }\r\n                }\r\n                // console.log(filterDataElective50);\r\n                // console.log(filterDataElective100);\r\n                // console.log(filterDataElective200);\r\n                // console.log(filterDataElective500);\r\n\r\n\r\n            let roomUnder50 = []\r\n            let roomUnder100 = []\r\n            let roomUnder200 = []\r\n            let roomUnder500 = []\r\n            const checkNumberofRoom = () => {\r\n                for(let i = 0; i < roomData[0].length; i++){\r\n                    let room = roomData[0][i][1]\r\n                    //console.log(roomData[0][i][1]);\r\n                    if(room < 50){\r\n                        roomUnder50.push(room)\r\n                    }else if(room > 50 && room < 100){\r\n                        roomUnder100.push(room)\r\n\r\n                    }else if(room > 100 && room < 200){\r\n                        roomUnder200.push(room)\r\n\r\n                    }else if(room > 200){\r\n                        roomUnder500.push(room)\r\n                    }\r\n                }\r\n            }\r\n            checkNumberofRoom();\r\n\r\n\r\n            const createArray = (data) => {\r\n                var result = []\r\n\r\n                    for(let i = 0; i<data; i++){\r\n                        result[i] = []\r\n                    }\r\n                return result;\r\n            }\r\n\r\n            let DataArrayElective50 = roomUnder50.length * 10;\r\n            let DataArrayElective100 = roomUnder100.length * 10;\r\n            let DataArrayElective200 = roomUnder200.length * 10;\r\n            let DataArrayElective500 = roomUnder500.length * 10;\r\n            let combineArrayElective = DataArrayElective50 + DataArrayElective100 + DataArrayElective200 + DataArrayElective500\r\n\r\n            let startIndex100 = DataArrayElective50-1\r\n            let startIndex200 = DataArrayElective50+ DataArrayElective100-1\r\n            let startIndex500 = DataArrayElective50 +DataArrayElective100+DataArrayElective200-1\r\n\r\n            let LastIndex50 = DataArrayElective50\r\n            let LastIndex100 = DataArrayElective50 + DataArrayElective100 \r\n            let LastIndex200 = DataArrayElective50 + DataArrayElective100 + DataArrayElective200\r\n            let LastIndex500 = DataArrayElective50 + DataArrayElective100 + DataArrayElective200 + DataArrayElective500\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nvar checkTotalHardContraintsAll = 0\r\nvar checkTotalSoftContraintsAll = 0\r\n\r\nconst antSystem = () => {\r\n\r\n    const checking_minus_1 = (array,array2,data) => {\r\n        let k =0\r\n        let b =0\r\n        let totalRoom = array.length / 38\r\n        let totalRoom2 = array2.length / 38\r\n    \r\n        for(let u = 0; u < array.length; u++){\r\n            try{\r\n                //if( array[u] != 100 && array[u][5] == data[5] && array[u-1] != 100 && array[u-1][5] == data[5]){\r\n                if(array[u] != 100 && data[5] != array[u][5] || data[6] == array[u][6] && array[u-1] != 100 && data[5] == array[u-1][5] || data[6] == array[u-1][6]){\r\n                    for(let b =0; b < totalRoom; b++){\r\n                        let indexArray = b*38\r\n                        if( array[u+indexArray] ==100 && array[u+indexArray-1] ==100){\r\n                            array[u+indexArray] = 0\r\n                            array[u+indexArray-1] = 0\r\n                        }\r\n                        if( array[u-indexArray] ==100 && array[u-indexArray-1] ==100){\r\n                            array[u-indexArray] = 0\r\n                            array[u-indexArray-1] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n    \r\n        for(let u = 0; u < array2.length; u++){\r\n            try{\r\n                //if( array2[u] != 100 && array2[u][5] == data[5] && array2[u-1] != 100 && array2[u-1][5] == data[5]){\r\n                if(array2[u] != 100 && data[5] != array2[u][5] || data[6] == array2[u][6] && array2[u-1] != 100 && data[5] == array2[u-1][5] || data[6] == array2[u-1][6]){\r\n                    for(let b =0; b < totalRoom; b++){\r\n                        let indexArray2 = b*38\r\n                        if( array2[u+indexArray2] ==100 && array2[u+indexArray2-1] ==100){\r\n                            array2[u+indexArray2] = 0\r\n                            array2[u+indexArray2-1] = 0\r\n                        }\r\n                        if( array2[u-indexArray2] ==100 && array2[u-indexArray2-1] ==100){\r\n                            array2[u-indexArray2] = 0\r\n                            array2[u-indexArray2-1] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n        return array\r\n    \r\n    \r\n    }\r\n    \r\n    const checking_plus_1 = (array,array2,data) => {\r\n    \r\n        let totalRoom = array.length / 38\r\n        let totalRoom2 = array2.length / 38\r\n    \r\n        for(let u = 0; u < array.length; u++){\r\n            try{\r\n                //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\r\n                if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6] && array[u+1] != 100 && data[5] == array[u+1][5] || data[6] == array[u+1][6]){\r\n                    for(let b =0; b < totalRoom; b++){\r\n                        let indexArray = b*38\r\n                        if( array[u+indexArray] ==100 && array[u+indexArray+1] ==100){\r\n                            array[u+indexArray] = 0\r\n                            array[u+indexArray+1] = 0\r\n                        }\r\n                        if( array[u-indexArray] ==100 && array[u-indexArray+1] ==100){\r\n                            array[u-indexArray] = 0\r\n                            array[u-indexArray+1] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n    \r\n        for(let u = 0; u < array2.length; u++){\r\n            try{\r\n                //if( array2[u] != 100 && array2[u][5] == data[5] && array2[u+1] != 100 && array2[u+1][5] == data[5]){\r\n                if( array2[u] != 100 && data[5] == array2[u][5] || data[6] == array2[u][6] && array2[u+1] != 100 && data[5] == array2[u+1][5] || data[6] == array2[u+1][6]){\r\n                    for(let b =0; b < totalRoom; b++){\r\n                        let indexArray2 = b*38\r\n                        if( array2[u+indexArray2] ==100 && array2[u+indexArray2+1] ==100){\r\n                            array2[u+indexArray2] = 0\r\n                            array2[u+indexArray2+1] = 0\r\n                        }\r\n                        if( array2[u-indexArray2] ==100 && array2[u-indexArray2+1] ==100){\r\n                            array2[u-indexArray2] = 0\r\n                            array2[u-indexArray2+1] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n        return array\r\n    }\r\n    \r\n    const checking_3 = (array,array2,data) =>{\r\n    \r\n    \r\n        let k =0\r\n        let b =0\r\n        let totalRoom = array.length / 38\r\n        let totalRoom2 = array2.length / 38\r\n    \r\n        for(let u = 0; u < array.length; u++){\r\n            try{\r\n                //if( array[u] != 100 && array[u][5] == data[5] && array[u-1] != 100 && array[u-1][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\r\n                if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]  && array[u-1] != 100 && data[5] == array[u-1][5] && array[u+1] != 100 && data[5] == array[u+1][5] || data[6] == array[u-1][6] && array[u+1] != 100 && data[6] == array[u+1][6]){\r\n                    for(let b =0; b < totalRoom; b++){\r\n                        let indexArray = b*38\r\n    \r\n                        if( array[u+indexArray] ==100 && array[u+indexArray-1] ==100){\r\n                            array[u+indexArray] = 0\r\n                            array[u+indexArray-1] = 0\r\n                        }\r\n                        if( array[u-indexArray] ==100 && array[u-indexArray-1] ==100){\r\n                            array[u-indexArray] = 0\r\n                            array[u-indexArray-1] = 0\r\n                        }\r\n                        if( array[u+indexArray] ==100 && array[u+indexArray+1] ==100){\r\n                            array[u+indexArray] = 0\r\n                            array[u+indexArray+1] = 0\r\n                        }\r\n                        if( array[u-indexArray] ==100 && array[u-indexArray+1] ==100){\r\n                            array[u-indexArray] = 0\r\n                            array[u-indexArray+1] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n    \r\n        for(let u = 0; u < array2.length; u++){\r\n            try{\r\n                //if( array2[u] != 100 && array2[u][5] == data[5] && array2[u-1] != 100 && array2[u-1][5] == data[5] && array2[u+1] != 100 && array2[u+1][5] == data[5]){\r\n                if( array2[u] != 100 && data[5] == array2[u][5] || data[6] == array2[u][6]  && array2[u-1] != 100 && data[5] == array2[u-1][5] && array2[u+1] != 100 && data[5] == array2[u+1][5] || data[6] == array2[u-1][6] && array2[u+1] != 100 && data[6] == array2[u+1][6]){\r\n                    for(let b =0; b < totalRoom2; b++){\r\n                        let indexArray2 = b*38\r\n    \r\n                        if( array2[u+indexArray2] ==100 && array2[u+indexArray2-1] ==100){\r\n                            array2[u+indexArray2] = 0\r\n                            array2[u+indexArray2-1] = 0\r\n                        }\r\n                        if( array2[u-indexArray2] ==100 && array2[u-indexArray2-1] ==100){\r\n                            array2[u-indexArray2] = 0\r\n                            array2[u-indexArray2-1] = 0\r\n                        }\r\n                        if( array2[u+indexArray2] ==100 && array2[u+indexArray2+1] ==100){\r\n                            array2[u+indexArray2] = 0\r\n                            array2[u+indexArray2+1] = 0\r\n                        }\r\n                        if( array2[u-indexArray2] ==100 && array2[u-indexArray2+1] ==100){\r\n                            array2[u-indexArray2] = 0\r\n                            array2[u-indexArray2+1] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n        return array\r\n    }\r\n    \r\n    const checking_only_1 = (array,array2,data) => {\r\n    \r\n        let k =0\r\n        let b =0\r\n        let totalRoom = array.length / 38\r\n        let totalRoom2 = array2.length / 38\r\n    \r\n        for(let u = 0; u < array.length; u++){\r\n            try{\r\n                if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]){\r\n                    for(let b =0; b < totalRoom; b++){\r\n                        if( array[u+38*b] ==100){\r\n                            array[u+38*b] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n        for(let u = 0; u < array2.length; u++){\r\n            try{\r\n                if( array2[u] != 100 && data[5] == array2[u][5] || data[6] == array2[u][6]){\r\n                    for(let b =0; b < totalRoom2; b++){\r\n                        if( array2[u+38*b] ==100){\r\n                            array2[u+38*b] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n        return array\r\n    \r\n    }\r\n    \r\n    const changeRowtoZero_minus_1 = (array,array2,index1,index2) => {\r\n        let k =0\r\n        let b =0\r\n        let totalRoom = array.length / 38\r\n        let totalRoom2 = array2.length / 38\r\n    \r\n        for(let u = 0; u < array.length; u++){\r\n            try{\r\n                if( u == index1 && u-1 == index2){\r\n                    for(let b =0; b < totalRoom; b++){\r\n                        let indexArray = b*38\r\n                        if( array[u+indexArray] ==100 && array[u+indexArray-1] ==100){\r\n                            array[u+indexArray] = 0\r\n                            array[u+indexArray-1] = 0\r\n                        }\r\n                        if( array[u-indexArray]==100 && array[u-indexArray-1] == 100){\r\n                            array[u-indexArray] = 0\r\n                            array[u-indexArray-1] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n    \r\n        for(let u = 0; u < array2.length; u++){\r\n            try{\r\n                if( u == index1 && u-1 == index2){\r\n                    for(let b =0; b < totalRoom2; b++){\r\n                        let indexArray2 = b*38\r\n                        if( array2[u+indexArray2] ==100 && array2[u+indexArray2-1] ==100){\r\n                            array2[u+indexArray2] = 0\r\n                            array2[u+indexArray2-1] = 0\r\n                        }\r\n                        if( array2[u-indexArray2]==100 && array2[u-indexArray2-1] == 100){\r\n                            array2[u-indexArray2] = 0\r\n                            array2[u-indexArray2-1] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n        return array    \r\n    }\r\n    \r\n    const changeRowtoZero_plus_1 = (array,array2,index1,index2) => {\r\n        let k =0\r\n        let b =0\r\n        let totalRoom = array.length / 38\r\n        let totalRoom2 = array2.length / 38\r\n    \r\n        for(let u = 0; u < array.length; u++){\r\n            try{\r\n                if( u == index1 && u-1 == index2){\r\n                    for(let b =0; b < totalRoom; b++){\r\n                        let indexArray = b*38\r\n                        if( array[u+indexArray] ==100 && array[u+indexArray+1] ==100){\r\n                            array[u+indexArray] = 0\r\n                            array[u+indexArray+1] = 0\r\n                        }\r\n                        if( array[u-indexArray]==100 && array[u-indexArray+1] == 100){\r\n                            array[u-indexArray] = 0\r\n                            array[u-indexArray+1] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n    \r\n        for(let u = 0; u < array2.length; u++){\r\n            try{\r\n                if( u == index1 && u-1 == index2){\r\n                    for(let b =0; b < totalRoom2; b++){\r\n                        let indexArray2 = b*38\r\n                        if( array2[u+indexArray2] ==100 && array2[u+indexArray2+1] ==100){\r\n                            array2[u+indexArray2] = 0\r\n                            array2[u+indexArray2+1] = 0\r\n                        }\r\n                        if( array2[u-indexArray2]==100 && array2[u-indexArray2+1] == 100){\r\n                            array2[u-indexArray2] = 0\r\n                            array2[u-indexArray2+1] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n        return array    \r\n    }\r\n    \r\n    const changeRowtoZero_1 = (array,array2,index1) => {\r\n        let k =0\r\n        let b =0\r\n        let totalRoom = array.length / 38\r\n        let totalRoom2 = array2.length / 38\r\n    \r\n        for(let u = 0; u < array.length; u++){\r\n            try{\r\n                if( u == index1){\r\n                    for(let b =0; b < totalRoom; b++){\r\n                        let indexArray = b*38\r\n                        if( array[u+indexArray] ==100 ){\r\n                            array[u+indexArray] = 0\r\n                        }\r\n                        if( array[u-indexArray] ==100 ){\r\n                            array[u-indexArray] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n    \r\n        for(let u = 0; u < array2.length; u++){\r\n            try{\r\n                if( u == index1){\r\n                    for(let b =0; b < totalRoom2; b++){\r\n                        let indexArray2 = b*38\r\n                        if( array2[u+indexArray2] ==100 ){\r\n                            array2[u+indexArray2] = 0\r\n                        }\r\n                        if( array2[u-indexArray2] ==100 ){\r\n                            array2[u-indexArray2] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n        return array    \r\n    }\r\n    \r\n    const changeRowtoZero_3_ = (array,array2,index1,index2,index3) => {\r\n        let k =0\r\n        let b =0\r\n        let totalRoom = array.length / 38\r\n        let totalRoom2 = array2.length / 38\r\n    \r\n        for(let u = 0; u < array.length; u++){\r\n            try{\r\n                if( u == index1 && u-1 == index2 && u+1 == index3){\r\n                    for(let b =0; b < totalRoom; b++){\r\n                        let indexArray = b*38\r\n                        if( array[u+indexArray] ==100 && array[u+indexArray-1] ==100  && array[u+indexArray+1] == 100 ){\r\n                            array[u+indexArray] = 0\r\n                            array[u+indexArray-1] = 0\r\n                            array[u+indexArray+1] = 0\r\n                        }\r\n                        if( array[u-indexArray] ==100 && array[u-indexArray-1] ==100  && array[u-indexArray+1] == 100){\r\n                            array[u-indexArray] = 0\r\n                            array[u-indexArray-1] = 0\r\n                            array[u-indexArray+1] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n    \r\n    \r\n        for(let u = 0; u < array2.length; u++){\r\n            try{\r\n                if( u == index1 && u-1 == index2 && u+1 == index3){\r\n                    for(let b =0; b < totalRoom2; b++){\r\n                        let indexArray = b*38\r\n                        if( array2[u+indexArray] ==100 && array2[u+indexArray-1] ==100  && array2[u+indexArray+1] == 100 ){\r\n                            array2[u+indexArray] = 0\r\n                            array2[u+indexArray-1] = 0\r\n                            array2[u+indexArray+1] = 0\r\n                        }\r\n                        if( array2[u-indexArray] ==100 && array2[u-indexArray-1] ==100  && array2[u-indexArray+1] == 100){\r\n                            array2[u-indexArray] = 0\r\n                            array2[u-indexArray-1] = 0\r\n                            array2[u-indexArray+1] = 0\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n        return array    \r\n    }\r\n    \r\n    const changeToZero = (array) => {\r\n        for(let i = 0; i < array.length; i++){\r\n            if(array[i] == 0){\r\n                array[i] = 100\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n    \r\n    \r\n    const checkTest = (array,array2,data1) => {\r\n        let count =0\r\n        let totalRoom = array.length / 38\r\n        let totalRoom2 = array2.length / 38\r\n    \r\n        for(let x= 1 ; x <= totalRoom ; x++){\r\n         let indexArray = (x * 38)\r\n            try{\r\n             for(let i = 1; i<array.length ; i++){\r\n                    //if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 1 && array[i+indexArray] != 0 ){\r\n                        try{\r\n                            if(data1 == array[i][5]){\r\n                                if(array[i+indexArray] == 100){\r\n                                    array[i+indexArray] = 0\r\n                                }\r\n    \r\n                             }\r\n                        }catch{}\r\n                    //}    \r\n                }\r\n            }catch{}\r\n        }\r\n    \r\n        for(let x= 1 ; x <= totalRoom2 ; x++){\r\n            let indexArray2 = (x * 38)\r\n               try{\r\n                for(let i = 1; i<array2.length ; i++){\r\n                       //if(array2[i+indexArray2] != 100 && array2[i+indexArray2] != undefined && array2[i+indexArray2] != 1 && array2[i+indexArray2] != 0 ){\r\n                           try{\r\n                               if(data1 == array2[i][5]){\r\n                                   if(array2[i+indexArray2] == 100){\r\n                                       array2[i+indexArray2] = 0\r\n                                   }\r\n       \r\n                                }\r\n                           }catch{}\r\n                       //}    \r\n                   }\r\n               }catch{}\r\n           }\r\n        return array\r\n    }\r\n\r\n    const checking_1 = (array,array2,data) => {\r\n\r\n        let totalRoom = array.length / 38\r\n        let totalRoom2 = array2.length / 38\r\n    \r\n        for(let u = 0; u < array.length; u++){\r\n            try{\r\n                //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\r\n                //if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]){\r\n                if( array[u] != 100 ){\r\n                    if(data[5] == array[u][5] || data[6] == array[u][6]){\r\n                        for(let b =0; b < totalRoom; b++){\r\n                            let indexArray = b*38\r\n                            if( array[u+indexArray] ==100){\r\n                                array[u+indexArray] = 0\r\n                                //array2[u+indexArray] = 0\r\n                            }\r\n                            if( array[u-indexArray] ==100){\r\n                                array[u-indexArray] = 0\r\n                                //array2[u-indexArray] = 0\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n        return array\r\n    }\r\n    \r\n    const checking_1_phe = (array,array2,data) => {\r\n    \r\n        //let totalRoom = array.length / 38\r\n        let totalRoom2 = array2.length / 38\r\n    \r\n        for(let u = 0; u < array.length; u++){\r\n            try{\r\n                //if( array[u] != 100 && array[u][5] == data[5] && array[u+1] != 100 && array[u+1][5] == data[5]){\r\n                //if( array[u] != 100 && data[5] == array[u][5] || data[6] == array[u][6]){\r\n                if( array[u] != 100 ){\r\n                    if(data[5] == array[u][5] || data[6] == array[u][6]){\r\n                        for(let b =0; b < totalRoom2; b++){\r\n                            let indexArray = b*38\r\n                            if( array2[u+indexArray] ==100){\r\n                                //array[u+indexArray] = 0\r\n                                array2[u+indexArray] = 0\r\n                            }\r\n                            if( array2[u-indexArray] ==100){\r\n                                //array[u-indexArray] = 0\r\n                                array2[u-indexArray] = 0\r\n                            }\r\n                        }   \r\n                    }\r\n                }\r\n            }catch{}\r\n        }\r\n        return array2\r\n    }\r\n    \r\n    //___________________________________________________________________________________________________________________________________\r\nconst array1DElectiveCombine = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrCombine = array1DElectiveCombine(combineArrayElective);\r\n\r\n\r\nconst array1DElective50 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrElective50 = array1DElective50(DataArrayElective50);\r\n\r\nconst AntAlgoInsertElective50 = (array,combine) => {\r\n\r\n\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    let hms2 = []\r\n    let hms3 = []\r\n    let hms4 = []\r\n\r\n\r\n        for(let x=0; x<filterDataElective50.length;x++){\r\n            if(filterDataElective50[x][7] == 2){\r\n                hms2.push(filterDataElective50[x])\r\n            }\r\n            if(filterDataElective50[x][7] == 4){\r\n                hms4.push(filterDataElective50[x])\r\n            }\r\n            if(filterDataElective50[x][7] == 3){\r\n                hms3.push(filterDataElective50[x])\r\n            }\r\n            test.push(filterDataElective50[x]);\r\n        }\r\n\r\n        //slot in  2 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k < hms2.length){\r\n                checking_1(combine,array,hms2[k])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j] == 100 && combine[j-1] == 100 && j-1 != -1){\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j] = hms2[k];\r\n                            combine[j-1] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j] == 100 && combine[j+1] == 100 && j+1 != startIndex100){\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j] = hms2[k];\r\n                            combine[j+1] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k++  \r\n        }\r\n\r\n        // console.log(hms2.length)\r\n        // console.log(hms4.length)\r\n         //console.log(hms3.length)\r\n\r\n        //slot in  4 hours of meeting student course \r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k2 < hms4.length){\r\n            //if(k2 < 1){\r\n                checking_1(combine,array,hms4[k2])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j] == 100 && combine[j-1] == 100 && j-1 != -1){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j] = hms4[k2];\r\n                            combine[j-1] = hms4[k2];\r\n                            let b = 0 \r\n                            while(b != 1){\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                //if(array[v] == 100 && array[v-1] == 100){\r\n                                if(combine[v] == 100 && combine[v-1] == 100 && v-1 != -1){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v-1] = -1;\r\n                                    combine[v] = hms4[k2];\r\n                                    combine[v-1] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                                //else if(array[v] == 100 && array[v+1] == 100){\r\n                                else if(combine[v] == 100 && combine[v+1] == 100 && v+1 != startIndex100){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v+1] = -1;\r\n                                    combine[v] = hms4[k2];\r\n                                    combine[v+1] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j] == 100 && combine[j+1] == 100 && j+1 != startIndex100){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j] = hms4[k2];\r\n                            combine[j+1] = hms4[k2];\r\n                            let z = 0 \r\n                            while(z != 1){\r\n                                const p = Math.floor(Math.random()*(i+1));\r\n                                //if(array[p] == 100 && array[p-1] == 100){\r\n                                if(combine[p] == 100 && combine[p-1] == 100 && p-1 != -1){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p-1] = -1;\r\n                                    combine[p] = hms4[k2];\r\n                                    combine[p-1] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                                //else if(array[p] == 100 && array[p+1] == 100){\r\n                                else if(combine[p] == 100 && combine[p+1] == 100 && p+1 != startIndex100){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p+1] = -1;\r\n                                    combine[p] = hms4[k2];\r\n                                    combine[p+1] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k2++  \r\n        }\r\n\r\n        //slot in  3 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k3 < hms3.length){\r\n            //if(k3 < 1){\r\n                checking_1(combine,array,hms3[k3])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));\r\n                    \r\n                    //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\r\n                    if(combine[j] == 100 && combine[j-1] == 100 && combine[j+1] == 100 && j-1 != -1 && j+1 != startIndex100 ){ // slot in 3 course at one time\r\n                        //console.log(j)\r\n                        array[j] = -1;\r\n                        array[j-1] = -1;\r\n                        array[j+1] = -1;\r\n                        combine[j] = hms3[k3];\r\n                        combine[j-1] = hms3[k3];\r\n                        combine[j+1] = hms3[k3];\r\n                        c = 1\r\n                    }    \r\n                    //else if(array[j] == 100 && array[j-1] == 100){// slot in 2 course at one time\r\n                    else if(combine[j] == 100 && combine[j-1] == 100 && j-1 != -1){// slot in 2 course at one time\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j] = hms3[k3];\r\n                            combine[j-1] = hms3[k3];\r\n                            let b = 0 \r\n                            while(b != 1){\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                //if(array[v] == 100){\r\n                                if(combine[v] == 100){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    combine[v] = hms3[k3];\r\n                                    b = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){ // slot in 2 course at one time\r\n                    else if(combine[j] == 100 && combine[j+1] == 100 && j+1 != startIndex100){ // slot in 2 course at one time\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j] = hms3[k3];\r\n                            combine[j+1] = hms3[k3];\r\n                            let z = 0 \r\n                            while(z != 1){\r\n                                const p = Math.floor(Math.random()*(i+1));\r\n                                //if(array[p] == 100 ){\r\n                                if(combine[p] == 100 ){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    combine[p] = hms3[k3];\r\n                                    z = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100){ // slot in 1 course at one time\r\n                    else if(combine[j] == 100){ // slot in 1 course at one time\r\n                        array[j] = -1;\r\n                        combine[j] = hms3[k3];\r\n                            let m = 0 \r\n                            while(m != 1){\r\n                                const y = Math.floor(Math.random()*(i+1));\r\n                                //if(array[y] == 100 && array[y-1] == 100){\r\n                                if(combine[y] == 100 && combine[y-1] == 100 && y-1 != -1){\r\n                                    //console.log(y)\r\n                                    array[y] = -1;\r\n                                    array[y-1] = -1;\r\n                                    combine[y] = hms3[k3];\r\n                                    combine[y-1] = hms3[k3];\r\n                                    m = 1\r\n                                }\r\n                                //else if(array[y] == 100 && array[y+1] == 100){\r\n                                else if(combine[y] == 100 && combine[y+1] == 100 && y+1 != startIndex100){\r\n                                    //console.log(y)\r\n                                    array[y] = -1;\r\n                                    array[y+1] = -1;\r\n                                    combine[y] = hms3[k3];\r\n                                    combine[y+1] = hms3[k3];\r\n                                    m = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k3++  \r\n        }\r\n\r\n        changeToZero(array)\r\n        changeToZero(combine)\r\n\r\n    return array;\r\n    \r\n}\r\nvar AntArrInsElective50 = AntAlgoInsertElective50(AntArrElective50,AntArrCombine);\r\n\r\nconst checkAmountDataElective50_2 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=50 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_2 = checkAmountDataElective50_2(AntArrInsElective50)\r\n// console.log(AntArrInsElective50);\r\n// console.log(checkAmount_2)\r\n\r\nconst checkAmountDataElective50_0 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if( array[i] == 0 ){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_0 = checkAmountDataElective50_0(AntArrElective50)\r\n//console.log(checkAmount_0)\r\n\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\nconst array1DElective100 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrElective100 = array1DElective100(DataArrayElective100);\r\n\r\n\r\nconst AntAlgoInsertElective100 = (array,combine) => {\r\n\r\n\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    let hms2 = []\r\n    let hms3 = []\r\n    let hms4 = []\r\n\r\n\r\n        for(let x=0; x<filterDataElective100.length;x++){\r\n            if(filterDataElective100[x][7] == 2){\r\n                hms2.push(filterDataElective100[x])\r\n            }\r\n            if(filterDataElective100[x][7] == 4){\r\n                hms4.push(filterDataElective100[x])\r\n            }\r\n            if(filterDataElective100[x][7] == 3){\r\n                hms3.push(filterDataElective100[x])\r\n            }\r\n            test.push(filterDataElective100[x]);\r\n        }\r\n\r\n        //slot in  2 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k < hms2.length){\r\n                checking_1(combine,array,hms2[k])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j+startIndex100] == 100 && combine[j-1+startIndex100] == 100 && j-1 != LastIndex50){\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndex100] = hms2[k];\r\n                            combine[j-1+startIndex100] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j+startIndex100] == 100 && combine[j+1+startIndex100] == 100 && j+1 != startIndex200){\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndex100] = hms2[k];\r\n                            combine[j+1+startIndex100] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k++  \r\n        }\r\n\r\n        // console.log(hms2.length)\r\n        // console.log(hms4.length)\r\n         //console.log(hms3.length)\r\n\r\n        //slot in  4 hours of meeting student course \r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k2 < hms4.length){\r\n            //if(k2 < 1){\r\n                checking_1(combine,array,hms4[k2])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j+startIndex100] == 100 && combine[j-1+startIndex100] == 100 && j-1 != LastIndex50){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndex100] = hms4[k2];\r\n                            combine[j-1+startIndex100] = hms4[k2];\r\n                            let b = 0 \r\n                            while(b != 1){\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                //if(array[v] == 100 && array[v-1] == 100){\r\n                                if(combine[v+startIndex100] == 100 && combine[v-1+startIndex100] == 100 && v-1 != LastIndex50){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v-1] = -1;\r\n                                    combine[v+startIndex100] = hms4[k2];\r\n                                    combine[v-1+startIndex100] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                                //else if(array[v] == 100 && array[v+1] == 100){\r\n                                else if(combine[v+startIndex100] == 100 && combine[v+1+startIndex100] == 100 && v+1 != startIndex200){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v+1] = -1;\r\n                                    combine[v+startIndex100] = hms4[k2];\r\n                                    combine[v+1+startIndex100] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j+startIndex100] == 100 && combine[j+1+startIndex100] == 100 && j+1 != startIndex200){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndex100] = hms4[k2];\r\n                            combine[j+1+startIndex100] = hms4[k2];\r\n                            let z = 0 \r\n                            while(z != 1){\r\n                                const p = Math.floor(Math.random()*(i+1));\r\n                                //if(array[p] == 100 && array[p-1] == 100){\r\n                                if(combine[p+startIndex100] == 100 && combine[p-1+startIndex100] == 100 && p-1 != LastIndex50){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p-1] = -1;\r\n                                    combine[p+startIndex100] = hms4[k2];\r\n                                    combine[p-1+startIndex100] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                                //else if(array[p] == 100 && array[p+1] == 100){\r\n                                else if(combine[p+startIndex100] == 100 && combine[p+1+startIndex100] == 100 && p+1 != startIndex200){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p+1] = -1;\r\n                                    combine[p+startIndex100] = hms4[k2];\r\n                                    combine[p+1+startIndex100] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k2++  \r\n        }\r\n\r\n        //slot in  3 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k3 < hms3.length){\r\n            //if(k3 < 1){\r\n                checking_1(combine,array,hms3[k3])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));\r\n                    \r\n                    //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\r\n                    if(combine[j+startIndex100] == 100 && combine[j-1+startIndex100] == 100 && combine[j+1+startIndex100] == 100 && j-1 != LastIndex50 && j+1 != startIndex200 ){ // slot in 3 course at one time\r\n                        //console.log(j)\r\n                        array[j] = -1;\r\n                        array[j-1] = -1;\r\n                        array[j+1] = -1;\r\n                        combine[j+startIndex100] = hms3[k3];\r\n                        combine[j-1+startIndex100] = hms3[k3];\r\n                        combine[j+1+startIndex100] = hms3[k3];\r\n                        c = 1\r\n                    }    \r\n                    //else if(array[j] == 100 && array[j-1] == 100){// slot in 2 course at one time\r\n                    else if(combine[j+startIndex100] == 100 && combine[j-1+startIndex100] == 100 && j-1 != LastIndex50){// slot in 2 course at one time\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndex100] = hms3[k3];\r\n                            combine[j-1+startIndex100] = hms3[k3];\r\n                            let b = 0 \r\n                            while(b != 1){\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                //if(array[v] == 100){\r\n                                if(combine[v+startIndex100] == 100){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    combine[v+startIndex100] = hms3[k3];\r\n                                    b = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){ // slot in 2 course at one time\r\n                    else if(combine[j+startIndex100] == 100 && combine[j+1+startIndex100] == 100 && j+1 != startIndex200){ // slot in 2 course at one time\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndex100] = hms3[k3];\r\n                            combine[j+1+startIndex100] = hms3[k3];\r\n                            let z = 0 \r\n                            while(z != 1){\r\n                                const p = Math.floor(Math.random()*(i+1));\r\n                                //if(array[p] == 100 ){\r\n                                if(combine[p+startIndex100] == 100 ){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    combine[p+startIndex100] = hms3[k3];\r\n                                    z = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100){ // slot in 1 course at one time\r\n                    else if(combine[j+startIndex100] == 100){ // slot in 1 course at one time\r\n                        array[j] = -1;\r\n                        combine[j+startIndex100] = hms3[k3];\r\n                            let m = 0 \r\n                            while(m != 1){\r\n                                const y = Math.floor(Math.random()*(i+1));\r\n                                //if(array[y] == 100 && array[y-1] == 100){\r\n                                if(combine[y+startIndex100] == 100 && combine[y-1+startIndex100] == 100 && y-1 != LastIndex50){\r\n                                    //console.log(y)\r\n                                    array[y] = -1;\r\n                                    array[y-1] = -1;\r\n                                    combine[y+startIndex100] = hms3[k3];\r\n                                    combine[y-1+startIndex100] = hms3[k3];\r\n                                    m = 1\r\n                                }\r\n                                //else if(array[y] == 100 && array[y+1] == 100){\r\n                                else if(combine[y+startIndex100] == 100 && combine[y+1+startIndex100] == 100 && y+1 != startIndex200){\r\n                                    //console.log(y)\r\n                                    array[y] = -1;\r\n                                    array[y+1] = -1;\r\n                                    combine[y+startIndex100] = hms3[k3];\r\n                                    combine[y+1+startIndex100] = hms3[k3];\r\n                                    m = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k3++  \r\n        }\r\n\r\n        changeToZero(array)\r\n        changeToZero(combine)\r\n\r\n    return array;\r\n    \r\n}\r\nvar AntArrInsElective100 = AntAlgoInsertElective100(AntArrElective100,AntArrCombine);\r\n\r\nconst checkAmountDataElective100_2 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=100 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_2 = checkAmountDataElective100_2(AntArrInsElective100)\r\n// console.log(AntArrInsElective100);\r\n// console.log(checkAmount_2)\r\n\r\nconst checkAmountDataElective100_0 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if( array[i] == 0 ){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_0 = checkAmountDataElective100_0(AntArrElective100)\r\n//console.log(checkAmount_0)\r\n\r\n\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\nconst array1DElective200 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrElective200 = array1DElective200(DataArrayElective200);\r\n\r\n\r\nconst AntAlgoInsertElective200 = (array,combine) => {\r\n\r\n\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    let hms2 = []\r\n    let hms3 = []\r\n    let hms4 = []\r\n\r\n\r\n        for(let x=0; x<filterDataElective200.length;x++){\r\n            if(filterDataElective200[x][7] == 2){\r\n                hms2.push(filterDataElective200[x])\r\n            }\r\n            if(filterDataElective200[x][7] == 4){\r\n                hms4.push(filterDataElective200[x])\r\n            }\r\n            if(filterDataElective200[x][7] == 3){\r\n                hms3.push(filterDataElective200[x])\r\n            }\r\n            test.push(filterDataElective200[x]);\r\n        }\r\n\r\n        //slot in  2 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k < hms2.length){\r\n                checking_1(combine,array,hms2[k])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j+startIndex200] == 100 && combine[j-1+startIndex200] == 100 && j-1 != LastIndex100){\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndex200] = hms2[k];\r\n                            combine[j-1+startIndex200] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j+startIndex200] == 100 && combine[j+1+startIndex200] == 100 && j+1 != startIndex500){\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndex200] = hms2[k];\r\n                            combine[j+1+startIndex200] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k++  \r\n        }\r\n\r\n        // console.log(hms2.length)\r\n        // console.log(hms4.length)\r\n         //console.log(hms3.length)\r\n\r\n        //slot in  4 hours of meeting student course \r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k2 < hms4.length){\r\n            //if(k2 < 1){\r\n                checking_1(combine,array,hms4[k2])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j+startIndex200] == 100 && combine[j-1+startIndex200] == 100 && j-1 != LastIndex100){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndex200] = hms4[k2];\r\n                            combine[j-1+startIndex200] = hms4[k2];\r\n                            let b = 0 \r\n                            while(b != 1){\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                //if(array[v] == 100 && array[v-1] == 100){\r\n                                if(combine[v+startIndex200] == 100 && combine[v-1+startIndex200] == 100 && v-1 != LastIndex100){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v-1] = -1;\r\n                                    combine[v+startIndex200] = hms4[k2];\r\n                                    combine[v-1+startIndex200] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                                //else if(array[v] == 100 && array[v+1] == 100){\r\n                                else if(combine[v+startIndex200] == 100 && combine[v+1+startIndex200] == 100 && v+1 != startIndex500){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v+1] = -1;\r\n                                    combine[v+startIndex200] = hms4[k2];\r\n                                    combine[v+1+startIndex200] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j+startIndex200] == 100 && combine[j+1+startIndex200] == 100 && j+1 != startIndex500){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndex200] = hms4[k2];\r\n                            combine[j+1+startIndex200] = hms4[k2];\r\n                            let z = 0 \r\n                            while(z != 1){\r\n                                const p = Math.floor(Math.random()*(i+1));\r\n                                //if(array[p] == 100 && array[p-1] == 100){\r\n                                if(combine[p+startIndex200] == 100 && combine[p-1+startIndex200] == 100 && p-1 != LastIndex100){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p-1] = -1;\r\n                                    combine[p+startIndex200] = hms4[k2];\r\n                                    combine[p-1+startIndex200] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                                //else if(array[p] == 100 && array[p+1] == 100){\r\n                                else if(combine[p+startIndex200] == 100 && combine[p+1+startIndex200] == 100 && p+1 != startIndex500){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p+1] = -1;\r\n                                    combine[p+startIndex200] = hms4[k2];\r\n                                    combine[p+1+startIndex200] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k2++  \r\n        }\r\n\r\n        //slot in  3 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k3 < hms3.length){\r\n            //if(k3 < 1){\r\n                checking_1(combine,array,hms3[k3])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));\r\n                    \r\n                    //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\r\n                    if(combine[j+startIndex200] == 100 && combine[j-1+startIndex200] == 100 && combine[j+1+startIndex200] == 100 && j-1 != LastIndex100 && j+1 != startIndex500 ){ // slot in 3 course at one time\r\n                        //console.log(j)\r\n                        array[j] = -1;\r\n                        array[j-1] = -1;\r\n                        array[j+1] = -1;\r\n                        combine[j+startIndex200] = hms3[k3];\r\n                        combine[j-1+startIndex200] = hms3[k3];\r\n                        combine[j+1+startIndex200] = hms3[k3];\r\n                        c = 1\r\n                    }    \r\n                    //else if(array[j] == 100 && array[j-1] == 100){// slot in 2 course at one time\r\n                    else if(combine[j+startIndex200] == 100 && combine[j-1+startIndex200] == 100 && j-1 != LastIndex100){// slot in 2 course at one time\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndex200] = hms3[k3];\r\n                            combine[j-1+startIndex200] = hms3[k3];\r\n                            let b = 0 \r\n                            while(b != 1){\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                //if(array[v] == 100){\r\n                                if(combine[v+startIndex200] == 100){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    combine[v+startIndex200] = hms3[k3];\r\n                                    b = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){ // slot in 2 course at one time\r\n                    else if(combine[j+startIndex200] == 100 && combine[j+1+startIndex200] == 100 && j+1 != startIndex500){ // slot in 2 course at one time\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndex200] = hms3[k3];\r\n                            combine[j+1+startIndex200] = hms3[k3];\r\n                            let z = 0 \r\n                            while(z != 1){\r\n                                const p = Math.floor(Math.random()*(i+1));\r\n                                //if(array[p] == 100 ){\r\n                                if(combine[p+startIndex200] == 100 ){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    combine[p+startIndex200] = hms3[k3];\r\n                                    z = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100){ // slot in 1 course at one time\r\n                    else if(combine[j+startIndex200] == 100){ // slot in 1 course at one time\r\n                        array[j] = -1;\r\n                        combine[j+startIndex200] = hms3[k3];\r\n                            let m = 0 \r\n                            while(m != 1){\r\n                                const y = Math.floor(Math.random()*(i+1));\r\n                                //if(array[y] == 100 && array[y-1] == 100){\r\n                                if(combine[y+startIndex200] == 100 && combine[y-1+startIndex200] == 100 && y-1 != LastIndex100){\r\n                                    //console.log(y)\r\n                                    array[y] = -1;\r\n                                    array[y-1] = -1;\r\n                                    combine[y+startIndex200] = hms3[k3];\r\n                                    combine[y-1+startIndex200] = hms3[k3];\r\n                                    m = 1\r\n                                }\r\n                                //else if(array[y] == 100 && array[y+1] == 100){\r\n                                else if(combine[y+startIndex200] == 100 && combine[y+1+startIndex200] == 100 && y+1 != startIndex500){\r\n                                    //console.log(y)\r\n                                    array[y] = -1;\r\n                                    array[y+1] = -1;\r\n                                    combine[y+startIndex200] = hms3[k3];\r\n                                    combine[y+1+startIndex200] = hms3[k3];\r\n                                    m = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k3++  \r\n        }\r\n\r\n        changeToZero(array)\r\n        changeToZero(combine)\r\n\r\n    return array;\r\n    \r\n}\r\nvar AntArrInsElective200 = AntAlgoInsertElective200(AntArrElective200,AntArrCombine);\r\n\r\nconst checkAmountDataElective200_2 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=200 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_2 = checkAmountDataElective200_2(AntArrInsElective200)\r\n// console.log(AntArrInsElective200);\r\n// console.log(checkAmount_2)\r\n\r\nconst checkAmountDataElective200_0 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if( array[i] == 0 ){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_0 = checkAmountDataElective200_0(AntArrElective200)\r\n//console.log(checkAmount_0)\r\n\r\n\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n\r\nconst array1DElective500 = (data) => {\r\n    var result = []\r\n\r\n    for(let i = 0; i< data; i++){\r\n        result[i]= 100;\r\n    }\r\n    return result;\r\n}\r\nvar AntArrElective500 = array1DElective500(DataArrayElective500);\r\n\r\n\r\nconst AntAlgoInsertElective500 = (array,combine) => {\r\n\r\n\r\n    let test = []\r\n    let k = 0;\r\n    let k2 =0\r\n    let k3 =0\r\n    let hms2 = []\r\n    let hms3 = []\r\n    let hms4 = []\r\n\r\n\r\n        for(let x=0; x<filterDataElective500.length;x++){\r\n            if(filterDataElective500[x][7] == 2){\r\n                hms2.push(filterDataElective500[x])\r\n            }\r\n            if(filterDataElective500[x][7] == 4){\r\n                hms4.push(filterDataElective500[x])\r\n            }\r\n            if(filterDataElective500[x][7] == 3){\r\n                hms3.push(filterDataElective500[x])\r\n            }\r\n            test.push(filterDataElective500[x]);\r\n        }\r\n\r\n        //slot in  2 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k < hms2.length){\r\n                checking_1(combine,array,hms2[k])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j+startIndex500] == 100 && combine[j-1+startIndex500] == 100 && j-1 != LastIndex200){\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndex500] = hms2[k];\r\n                            combine[j-1+startIndex500] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j+startIndex500] == 100 && combine[j+1+startIndex500] == 100){\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndex500] = hms2[k];\r\n                            combine[j+1+startIndex500] = hms2[k];\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k++  \r\n        }\r\n\r\n        // console.log(hms2.length)\r\n        // console.log(hms4.length)\r\n         //console.log(hms3.length)\r\n\r\n        //slot in  4 hours of meeting student course \r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k2 < hms4.length){\r\n            //if(k2 < 1){\r\n                checking_1(combine,array,hms4[k2])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));    \r\n                    //if(array[j] == 100 && array[j-1] == 100){\r\n                    if(combine[j+startIndex500] == 100 && combine[j-1+startIndex500] == 100 && j-1 != LastIndex200){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndex500] = hms4[k2];\r\n                            combine[j-1+startIndex500] = hms4[k2];\r\n                            let b = 0 \r\n                            while(b != 1){\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                //if(array[v] == 100 && array[v-1] == 100){\r\n                                if(combine[v+startIndex500] == 100 && combine[v-1+startIndex500] == 100 && v-1 != LastIndex200){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v-1] = -1;\r\n                                    combine[v+startIndex500] = hms4[k2];\r\n                                    combine[v-1+startIndex500] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                                //else if(array[v] == 100 && array[v+1] == 100){\r\n                                else if(combine[v+startIndex500] == 100 && combine[v+1+startIndex500] == 100){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    array[v+1] = -1;\r\n                                    combine[v+startIndex500] = hms4[k2];\r\n                                    combine[v+1+startIndex500] = hms4[k2];\r\n                                    b = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){\r\n                    else if(combine[j+startIndex500] == 100 && combine[j+1+startIndex500] == 100){\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndex500] = hms4[k2];\r\n                            combine[j+1+startIndex500] = hms4[k2];\r\n                            let z = 0 \r\n                            while(z != 1){\r\n                                const p = Math.floor(Math.random()*(i+1));\r\n                                //if(array[p] == 100 && array[p-1] == 100){\r\n                                if(combine[p+startIndex500] == 100 && combine[p-1+startIndex500] == 100 && p-1 != LastIndex200){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p-1] = -1;\r\n                                    combine[p+startIndex500] = hms4[k2];\r\n                                    combine[p-1+startIndex500] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                                //else if(array[p] == 100 && array[p+1] == 100){\r\n                                else if(combine[p+startIndex500] == 100 && combine[p+1+startIndex500] == 100 ){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    array[p+1] = -1;\r\n                                    combine[p+startIndex500] = hms4[k2];\r\n                                    combine[p+1+startIndex500] = hms4[k2];\r\n                                    z = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k2++  \r\n        }\r\n\r\n        //slot in  3 hours of meeting student course\r\n        for(let i = array.length-1;i>0;i--){\r\n            if(k3 < hms3.length){\r\n            //if(k3 < 1){\r\n                checking_1(combine,array,hms3[k3])\r\n                let c = 0\r\n                while(c != 1){\r\n                    const j = Math.floor(Math.random()*(i+1));\r\n                    \r\n                    //if(array[j] == 100 && array[j-1] == 100 && array[j+1] == 100 ){ // slot in 3 course at one time\r\n                    if(combine[j+startIndex500] == 100 && combine[j-1+startIndex500] == 100 && combine[j+1+startIndex500] == 100 && j-1 != LastIndex200 ){ // slot in 3 course at one time\r\n                        //console.log(j)\r\n                        array[j] = -1;\r\n                        array[j-1] = -1;\r\n                        array[j+1] = -1;\r\n                        combine[j+startIndex500] = hms3[k3];\r\n                        combine[j-1+startIndex500] = hms3[k3];\r\n                        combine[j+1+startIndex500] = hms3[k3];\r\n                        c = 1\r\n                    }    \r\n                    //else if(array[j] == 100 && array[j-1] == 100){// slot in 2 course at one time\r\n                    else if(combine[j+startIndex500] == 100 && combine[j-1+startIndex500] == 100 && j-1 != LastIndex200){// slot in 2 course at one time\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j-1] = -1;\r\n                            combine[j+startIndex500] = hms3[k3];\r\n                            combine[j-1+startIndex500] = hms3[k3];\r\n                            let b = 0 \r\n                            while(b != 1){\r\n                                const v = Math.floor(Math.random()*(i+1));\r\n                                //if(array[v] == 100){\r\n                                if(combine[v+startIndex500] == 100){\r\n                                    //console.log(v)\r\n                                    array[v] = -1;\r\n                                    combine[v+startIndex500] = hms3[k3];\r\n                                    b = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100 && array[j+1] == 100){ // slot in 2 course at one time\r\n                    else if(combine[j+startIndex500] == 100 && combine[j+1+startIndex500] == 100){ // slot in 2 course at one time\r\n                            //console.log(j)\r\n                            array[j] = -1;\r\n                            array[j+1] = -1;\r\n                            combine[j+startIndex500] = hms3[k3];\r\n                            combine[j+1+startIndex500] = hms3[k3];\r\n                            let z = 0 \r\n                            while(z != 1){\r\n                                const p = Math.floor(Math.random()*(i+1));\r\n                                //if(array[p] == 100 ){\r\n                                if(combine[p+startIndex500] == 100 ){\r\n                                    //console.log(p)\r\n                                    array[p] = -1;\r\n                                    combine[p+startIndex500] = hms3[k3];\r\n                                    z = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                    //else if(array[j] == 100){ // slot in 1 course at one time\r\n                    else if(combine[j+startIndex500] == 100){ // slot in 1 course at one time\r\n                        array[j] = -1;\r\n                        combine[j+startIndex500] = hms3[k3];\r\n                            let m = 0 \r\n                            while(m != 1){\r\n                                const y = Math.floor(Math.random()*(i+1));\r\n                                //if(array[y] == 100 && array[y-1] == 100){\r\n                                if(combine[y+startIndex500] == 100 && combine[y-1+startIndex500] == 100 && y-1 != LastIndex200){\r\n                                    //console.log(y)\r\n                                    array[y] = -1;\r\n                                    array[y-1] = -1;\r\n                                    combine[y+startIndex500] = hms3[k3];\r\n                                    combine[y-1+startIndex500] = hms3[k3];\r\n                                    m = 1\r\n                                }\r\n                                //else if(array[y] == 100 && array[y+1] == 100){\r\n                                else if(combine[y+startIndex500] == 100 && combine[y+1+startIndex500] == 100){\r\n                                    //console.log(y)\r\n                                    array[y] = -1;\r\n                                    array[y+1] = -1;\r\n                                    combine[y+startIndex500] = hms3[k3];\r\n                                    combine[y+1+startIndex500] = hms3[k3];\r\n                                    m = 1\r\n                                }\r\n                            }\r\n                            c = 1\r\n                    }\r\n                }    \r\n            }\r\n            changeToZero(array)\r\n            changeToZero(combine)\r\n            k3++  \r\n        }\r\n\r\n        changeToZero(array)\r\n        changeToZero(combine)\r\n\r\n    return array;\r\n    \r\n}\r\n\r\nvar AntArrInsElective500 = AntAlgoInsertElective500(AntArrElective500,AntArrCombine);\r\n\r\nconst checkAmountDataElective500_2 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if(array[i] != 100 && array[i] !=500 && array[i] != 0 && array[i] != undefined && array[i] != 1){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_2 = checkAmountDataElective500_2(AntArrInsElective500)\r\n console.log(AntArrInsElective500);\r\n// console.log(checkAmount_2)\r\n\r\nconst checkAmountDataElective500_0 = (array) => {\r\n    let count = 0\r\n    for(let i = 0; i < array.length; i++){\r\n            if( array[i] == 0 ){\r\n                count += 1\r\n            }\r\n    }\r\n    return count\r\n}\r\nvar checkAmount_0 = checkAmountDataElective500_0(AntArrElective500)\r\n//console.log(checkAmount_0)\r\n\r\n\r\n\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------\r\n// Hard Constraint \r\n// H1: No student attend more than one class/ event at the same time\r\n// H2: The room is large enough to accomodate all of the student in attendace while also meeting the requirement \r\n// H3: At any given time, each room can onle have one course booked\r\n// H4: No student attend class during 12:00 pm -2:00 due to solat jumaat\r\n// H5: One teacher can only teach one class at one time.\r\n\r\n//Check for the H1 violation: same group attend more than 1 class at 1 time\r\n\r\nconst check1Group = (array) => {\r\n    let count =0\r\n    let indexArray = 0\r\n    let totalRoom = array.length / 38\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n        indexArray = (x * 38)\r\n    }\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n        try{\r\n             for(let i = 0; i<array.length ; i++){\r\n                indexArray = (x * 37)\r\n                if(array[i+indexArray] != 100 && array[i+indexArray] != undefined  && array[i+indexArray] != 1 && array[i+indexArray] != 0 ){\r\n                    try{\r\n                        if(array[i][6] == array[i+indexArray][6] && array[i][5] == array[i+indexArray][5]){\r\n                             try{\r\n       \r\n                                 count +=1\r\n                             }catch{}\r\n                        }\r\n                    }catch{}\r\n                }   \r\n            }\r\n        }catch{}\r\n    }\r\n    return count\r\n \r\n }\r\n \r\n var checkH1_ALL = check1Group(AntArrCombine)\r\n\r\n \r\n \r\n \r\n \r\n //Check for the H2 violation: classsroom is large enough to accomodate number of student enroll to that class\r\n \r\n const checkRoomQuota = (array) => {\r\n    let count = 0\r\n    return count \r\n }\r\n var checkH2_ALLElective = checkRoomQuota(AntArrCombine)\r\n \r\n \r\n //Check for the H4 violation: no one attend class during 12:00 - 14:00 due to solat jumaat\r\n const checkSolatJummat = (array) => {\r\n    let count = 0\r\n    return count \r\n }\r\n var checkH4_ALLElective = checkSolatJummat(AntArrCombine)\r\n \r\n //Check for the H5 violation: each teacher can teach 1 subject at 1 room at each slot of time\r\n \r\n const check1Teacher = (array) => {\r\n    let count =0\r\n    let indexArray = 0\r\n    let totalRoom = array.length / 38\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n     indexArray = (x * 38)\r\n        try{\r\n         for(let i = 1; i<array.length ; i++){\r\n                if(array[i+indexArray] != 100 && array[i+indexArray] != undefined && array[i+indexArray] != 1 && array[i+indexArray] != 0 ){\r\n                    try{\r\n                        if(array[i][5] == array[i+indexArray][5]){\r\n                            count +=1\r\n                         }\r\n                    }catch{}\r\n                }    \r\n            }\r\n        }catch{}\r\n    }\r\n    return count\r\n \r\n \r\n }\r\n var checkH5_ALL = check1Teacher(AntArrCombine)\r\n const checkHC = (data1,data2) => {\r\n     let count =0;\r\n     if(data1 != 0){\r\n         count +=1\r\n     }\r\n     if(data2 != 0){\r\n         count +=1\r\n     }\r\n \r\n     return count;\r\n }\r\n let checkTotalHardContraints = checkHC(checkH5_ALL,checkH1_ALL)\r\n console.log(\"Total Hard Constraint: \"+checkTotalHardContraints)\r\n \r\n \r\n //----------------------------------------------------------------------------------------------------------------------------------------\r\n \r\n \r\n // Soft Constraint \r\n // S1: A student has a class schedule toward the end of the day\r\n // S2: A student have more than two class in a row\r\n \r\n \r\n //Check for the S1 violation: student have class at the end of the day\r\n const checkEndOfClass = (array) => {\r\n    let count =0\r\n    let totalRoom = array.length / 38\r\n    for(let x= 1 ; x <= totalRoom ; x++){\r\n        let indexArray = (x * 37)\r\n        if(array[indexArray] != 100 ){\r\n            count = 1\r\n        }\r\n    }\r\n    return count\r\n \r\n }\r\n  var checkSC1_ALL = checkEndOfClass(AntArrCombine)\r\n \r\n \r\n \r\n //Check for the S2 violation: teacher have 2 class in a row\r\n \r\n const check2ClassInARow = (array) => {\r\n    let count =0\r\n    for(let i = 0; i < array.length; i++){\r\n        try{\r\n         if(array[i][5] != undefined && array[i+3][5] != undefined && array[i+2][5] != undefined && array[i+4][5] != undefined){\r\n             if(array[i][5] == array[i+3][5] && array[i+2][5] == array[i+4][5]){\r\n                 count = 1\r\n             }\r\n        }\r\n        }catch{}\r\n    }\r\n    return count\r\n \r\n }\r\n var checkSC2_ALL = checkEndOfClass(AntArrCombine)\r\n \r\n \r\n //----------------------------------------------------------------------------------------------------------------------------------------------\r\n \r\n //-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n \r\n \r\n \r\n //----------------------------------------------------------------------------------------------------------------------------------------\r\n \r\n \r\n \r\n \r\n //-----------------------------------------------------------------------------------------------------------------------------------------------\r\n \r\n const checkTotalSoftContraint = () => {\r\n     let count =0\r\n     let totalSC = checkSC1_ALL + checkSC2_ALL\r\n     \r\n     if(totalSC != 0){\r\n         count +=1\r\n     }\r\n     return count\r\n }\r\n var checkTotalSoftContraints = checkTotalSoftContraint()\r\n console.log(\"Total Soft Constraint: \"+checkTotalSoftContraints)\r\n //----------------------------------------------------------------------------------------------------------------------------------------------\r\n \r\n const change100ToEmptyElective = (data) => {\r\n     for(let i = 0; i< data.length; i++){\r\n         if(data[i] == 100){\r\n             data[i] = [];\r\n         }\r\n     }\r\n     return data;\r\n }\r\n let finalDataElective = change100ToEmptyElective(AntArrCombine)\r\n \r\n \r\n checkTotalHardContraintsAll = checkTotalHardContraints\r\n checkTotalSoftContraintsAll = checkTotalSoftContraints\r\n finalDataAllElective.push(finalDataElective)\r\n return {checkTotalHardContraints,checkTotalSoftContraints,finalDataAllElective}\r\n\r\n//___________________________________________________________________________________________________________________________________\r\n}\r\n\r\nlet trigger = 0\r\nvar t0 = performance.now()\r\nconst iteration = () => {\r\n        //antSystem()\r\n        let globalBestHS = checkTotalHardContraintsAll \r\n        let globalBestSS = checkTotalSoftContraintsAll\r\n        let globalBestScehdule = finalDataAllElective[0]\r\n    for(let i= 1; i <=1; i++){\r\n        antSystem()\r\n        let localBestHS = checkTotalHardContraintsAll \r\n        let localBestSS = checkTotalSoftContraintsAll\r\n        let localBestScehdule = finalDataAllElective[0]\r\n            console.log(\"iteraion: \" + i)\r\n            if(globalBestHS > localBestHS ){\r\n                globalBestHS = localBestHS\r\n                globalBestSS = localBestSS\r\n                globalBestScehdule = localBestScehdule\r\n            }\r\n            if(localBestHS == 0){\r\n                console.log(\"iteraion: \" + i)\r\n                console.log(\"workable solution is found\")\r\n                globalBestHS = localBestHS\r\n                globalBestSS = localBestSS\r\n                globalBestScehdule = localBestScehdule\r\n                console.log(\"Workable Gloabal best HS: \"+globalBestHS)\r\n                console.log(\"Workable Gloabal best SS: \" +globalBestSS)\r\n                //console.log(finalDataAll[0])\r\n                trigger = 1\r\n                return [finalDataAllElective[0]]\r\n            }\r\n            else if(localBestHS == 0 && localBestSS == 0){\r\n                console.log(\"iteraion: \" + i)\r\n                console.log(\"perfect solution is found\")\r\n                globalBestHS = localBestHS\r\n                globalBestSS = localBestSS\r\n                globalBestScehdule = localBestScehdule\r\n                console.log(\"Perfect Gloabal best HS: \"+globalBestHS)\r\n                console.log(\"Perfect Gloabal best SS: \" +globalBestSS)\r\n                console.log(finalDataAll[0])\r\n                trigger = 1\r\n                return [finalDataAllElective[0]]\r\n            }\r\n    }\r\n    return [finalDataAllElective[0]]\r\n}\r\nlet interations = iteration()\r\n\r\nlet presentableDataElective = []\r\n\r\nif(trigger == 1){\r\n//shot course code, course name and lecturer\r\nconsole.log(interations);    \r\nconst changeToPresentationData = (data) => {\r\n    console.log(data)\r\n    for(let i= 0; i <= data[0].length; i++){\r\n        try {\r\n            presentableDataElective.push([data[0][i][1],data[0][i][2],data[0][i][5]])\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n}\r\nchangeToPresentationData(interations)\r\n\r\n\r\nlet allRoomName = []\r\nfor(let i = 0; i < roomData[0].length; i++){\r\n    allRoomName.push(roomData[0][i][0])\r\n}\r\nallRoomName.unshift(\"Room\");\r\nif(allRoomName.pop() == undefined){\r\n}\r\n\r\n\r\nlet wed = ['Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday','Wednesday']\r\n\r\nconst create2dArrayElective = (weekdayArray,partDay,arrayAll, partAll) => {\r\n    var tmp = [];\r\n\r\n    for(var i = 0; i < weekdayArray.length; i += partDay) {\r\n        tmp.push(weekdayArray.slice(i, i + partDay));\r\n    }\r\n    for(var i = 0; i < arrayAll.length; i += partAll) {\r\n        tmp.push(arrayAll.slice(i, i + partAll));\r\n    }\r\n    return tmp;\r\n}\r\nlet datasetElective = create2dArrayElective(wed,10,presentableDataElective,10);\r\nconsole.log(datasetElective)\r\n//console.log(dataset)\r\n\r\nconst insertRoomNameElective = (roomData,array) => {\r\n    for(let i= 0; i<array.length; i++){\r\n        array[i].unshift(roomData[i]);\r\n    }\r\n    return array;\r\n}\r\n\r\ninsertRoomNameElective(allRoomName,datasetElective)\r\n\r\n\r\n  /** Convert a 2D array into a CSV string\r\n   * elective\r\n */\r\n   function arrayToCsvElective(data){\r\n    //console.log(data)\r\n    return data.map(row =>\r\n      row\r\n      .map(String)  // convert every value to String\r\n      .map(v => v.replaceAll('\"', '\"\"'))  // escape double colons\r\n      .map(v => `\"${v}\"`)  // quote it\r\n      .join(',')  // comma-separated\r\n    ).join('\\r\\n');  // rows starting on new lines\r\n  }\r\n\r\nlet csvElective = arrayToCsvElective(\r\n    datasetElective\r\n);\r\n\r\nfunction downloadBlobElective(content, filename, contentType) {\r\n    // Create a blob\r\n    var blob = new Blob([content], { type: contentType });\r\n    var url = URL.createObjectURL(blob);\r\n  \r\n    // Create a link to download it\r\n    var pom = document.createElement('a');\r\n    pom.href = url;\r\n    pom.setAttribute('download', filename);\r\n    pom.click();\r\n  }\r\n\r\n    var t1 = performance.now()\r\n    console.log(\"Duration: \" + (t1-t0))\r\n  downloadBlobElective(csvElective, 'ModifiedAntSystemElective_GeneratedSchedule.csv', 'text/csv;charset=utf-8;')\r\n}else{\r\n    var t1 = performance.now()\r\n    console.log(\"Duration: \" + (t1-t0) + \" milliseconds\" )\r\n    alert(\"no workable solution found, please refersh until get workable solution\")\r\n}\r\n        }\r\n        return(\r\n            <React.Fragment>\r\n                <h1>\r\n                Please wait while generating elective schedule\r\n                </h1>\r\n        \r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    export default ArrayScheduleElective;"]},"metadata":{},"sourceType":"module"}