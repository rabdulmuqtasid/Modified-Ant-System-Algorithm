{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acit\\\\Desktop\\\\FYP Code\\\\FYP Code\\\\frontend\\\\src\\\\components\\\\GenerateSchedulePage\\\\GenerateSchedulePage.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { CSVLink } from \"react-csv\";\nimport GetDataset from '../GetDataset/getDataset';\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\nimport './GenerateSchedulePage.css';\n\nconst GenerateSch = props => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedFile, setLoaadedFile] = useState(false);\n  const [CsvData, setCsvData] = useState(); //console.log(\"props dataset:\"+ props.test)\n\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost:5000/api/files/62453d78d4c3bc106b042909');\n        const responsedata = await response.json(); //let stringifyData = JSON.stringify(responsedata.Dataset);\n\n        let stringifyData = JSON.stringify(responsedata.files.Dataset);\n        setCsvData([stringifyData]); //console.log(\"Get Data: \"+ stringifyData);\n\n        if (!response.ok) {\n          throw new Error(responsedata.message);\n        }\n\n        setLoaadedFile(responsedata);\n        setIsLoading(true);\n      } catch (err) {\n        console.log(err.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, []); //console.log(\"CSV: \" + CsvData);\n\n  let ReturnData;\n\n  if (ReturnData != undefined) {\n    ReturnData = CsvData;\n    return ReturnData;\n  }\n\n  console.log(\"Return Data: \" + ReturnData); // if(CsvData != ''){\n  //     let returnData = [CsvData];\n  //     console.log(\"Return: \" + returnData);\n  //     return returnData;\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"GenerateSch-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Generate Schedule Page\", /*#__PURE__*/React.createElement(CSVLink, {\n    data: ReturnData,\n    enclosingCharacter: `,`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Download Me\"), isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 55\n    }\n  }))));\n};\n\nexport default GenerateSch;","map":{"version":3,"sources":["C:/Users/acit/Desktop/FYP Code/FYP Code/frontend/src/components/GenerateSchedulePage/GenerateSchedulePage.js"],"names":["React","useEffect","useState","useContext","CSVLink","GetDataset","LoadingSpinner","GenerateSch","props","isLoading","setIsLoading","loadedFile","setLoaadedFile","CsvData","setCsvData","sendRequest","response","fetch","responsedata","json","stringifyData","JSON","stringify","files","Dataset","ok","Error","message","err","console","log","ReturnData","undefined"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,EAAmCC,UAAnC,QAAqD,OAArD;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AAEA,OAAO,4BAAP;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AACzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,UAAD,EAAaC,cAAb,IAA+BV,QAAQ,CAAC,KAAD,CAA7C;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,EAAtC,CAHyB,CAIzB;;AACAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMc,WAAW,GAAG,YAAW;AAC3BL,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAG;AACH,cAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,0DAAD,CAA5B;AACA,cAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B,CAFG,CAGH;;AACA,YAAIC,aAAa,GAAGC,IAAI,CAACC,SAAL,CAAeJ,YAAY,CAACK,KAAb,CAAmBC,OAAlC,CAApB;AACAV,QAAAA,UAAU,CAAC,CAACM,aAAD,CAAD,CAAV,CALG,CAMH;;AACA,YAAI,CAACJ,QAAQ,CAACS,EAAd,EAAiB;AACb,gBAAM,IAAIC,KAAJ,CAAUR,YAAY,CAACS,OAAvB,CAAN;AACH;;AACDf,QAAAA,cAAc,CAACM,YAAD,CAAd;AACAR,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACC,OAZD,CAYC,OAAMkB,GAAN,EAAU;AACPC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACD,OAAhB;AACH;;AACDjB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAlBD;;AAmBAK,IAAAA,WAAW;AACd,GArBQ,EAsBT,EAtBS,CAAT,CALyB,CA4BzB;;AACA,MAAIgB,UAAJ;;AACA,MAAGA,UAAU,IAAIC,SAAjB,EAA2B;AACvBD,IAAAA,UAAU,GAAGlB,OAAb;AACA,WAAOkB,UAAP;AACH;;AACDF,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBC,UAA9B,EAlCyB,CAoCzB;AACA;AACA;AACA;AACA;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAEI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAIA,UAAjB;AAA6B,IAAA,kBAAkB,EAAI,GAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGKtB,SAAS,iBAAI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAwB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CAHlB,CADJ,CADJ;AASH,CAlDD;;AAoDA,eAAeF,WAAf","sourcesContent":["import React,{ useEffect,useState, useContext } from \"react\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport GetDataset from '../GetDataset/getDataset';\r\nimport LoadingSpinner from \"../Modal/LoadingSpinner\";\r\n\r\nimport './GenerateSchedulePage.css';\r\n\r\nconst GenerateSch = props => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [loadedFile, setLoaadedFile] = useState(false);\r\n    const [CsvData, setCsvData] = useState();\r\n    //console.log(\"props dataset:\"+ props.test)\r\n    useEffect(()=>{\r\n        const sendRequest = async () =>{\r\n            setIsLoading(true);\r\n            try{\r\n            const response = await fetch('http://localhost:5000/api/files/62453d78d4c3bc106b042909');\r\n            const responsedata = await response.json();\r\n            //let stringifyData = JSON.stringify(responsedata.Dataset);\r\n            let stringifyData = JSON.stringify(responsedata.files.Dataset);\r\n            setCsvData([stringifyData]);\r\n            //console.log(\"Get Data: \"+ stringifyData);\r\n            if (!response.ok){\r\n                throw new Error(responsedata.message);\r\n            }\r\n            setLoaadedFile(responsedata);\r\n            setIsLoading(true);\r\n            }catch(err){\r\n                console.log(err.message);\r\n            }\r\n            setIsLoading(false);\r\n        };\r\n        sendRequest();\r\n    }, \r\n    []);\r\n    //console.log(\"CSV: \" + CsvData);\r\n    let ReturnData\r\n    if(ReturnData != undefined){\r\n        ReturnData = CsvData;\r\n        return ReturnData;\r\n    }\r\n    console.log(\"Return Data: \" + ReturnData);\r\n\r\n    // if(CsvData != ''){\r\n    //     let returnData = [CsvData];\r\n    //     console.log(\"Return: \" + returnData);\r\n    //     return returnData;\r\n    // }\r\n    return (\r\n        <div className=\"GenerateSch-section\">\r\n            <h1>\r\n                Generate Schedule Page\r\n                <CSVLink data = {ReturnData} enclosingCharacter= {`,`}>Download Me</CSVLink>\r\n                {isLoading && <div className=\"center\"><LoadingSpinner/></div>}\r\n            </h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GenerateSch;"]},"metadata":{},"sourceType":"module"}